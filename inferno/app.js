"use strict";
var main;
(function() {
var $rt_seed = 2463534242;
function $rt_nextId() {
    var x = $rt_seed;
    x ^= x << 13;
    x ^= x >> 17;
    x ^= x << 5;
    $rt_seed = x;
    return x;
}
function $rt_compare(a, b) {
    return a > b ? 1 : a < b ?  -1 : a === b ? 0 : 1;
}
function $rt_isInstance(obj, cls) {
    return obj !== null && !!obj.constructor.$meta && $rt_isAssignable(obj.constructor, cls);
}
function $rt_isAssignable(from, to) {
    if (from === to) {
        return true;
    }
    var supertypes = from.$meta.supertypes;
    for (var i = 0;i < supertypes.length;i = i + 1 | 0) {
        if ($rt_isAssignable(supertypes[i], to)) {
            return true;
        }
    }
    return false;
}
function $rt_createArray(cls, sz) {
    var data = new Array(sz);
    var arr = new $rt_array(cls, data);
    if (sz > 0) {
        var i = 0;
        do  {
            data[i] = null;
            i = i + 1 | 0;
        }while (i < sz);
    }
    return arr;
}
function $rt_wrapArray(cls, data) {
    return new $rt_array(cls, data);
}
function $rt_createUnfilledArray(cls, sz) {
    return new $rt_array(cls, new Array(sz));
}
function $rt_createLongArray(sz) {
    var data = new Array(sz);
    var arr = new $rt_array($rt_longcls(), data);
    for (var i = 0;i < sz;i = i + 1 | 0) {
        data[i] = Long_ZERO;
    }
    return arr;
}
function $rt_createNumericArray(cls, nativeArray) {
    return new $rt_array(cls, nativeArray);
}
function $rt_createCharArray(sz) {
    return $rt_createNumericArray($rt_charcls(), new Uint16Array(sz));
}
function $rt_createByteArray(sz) {
    return $rt_createNumericArray($rt_bytecls(), new Int8Array(sz));
}
function $rt_createShortArray(sz) {
    return $rt_createNumericArray($rt_shortcls(), new Int16Array(sz));
}
function $rt_createIntArray(sz) {
    return $rt_createNumericArray($rt_intcls(), new Int32Array(sz));
}
function $rt_createBooleanArray(sz) {
    return $rt_createNumericArray($rt_booleancls(), new Int8Array(sz));
}
function $rt_createFloatArray(sz) {
    return $rt_createNumericArray($rt_floatcls(), new Float32Array(sz));
}
function $rt_createDoubleArray(sz) {
    return $rt_createNumericArray($rt_doublecls(), new Float64Array(sz));
}
function $rt_arraycls(cls) {
    var result = cls.$array;
    if (result === null) {
        var arraycls = {  };
        var name = "[" + cls.$meta.binaryName;
        arraycls.$meta = { item : cls, supertypes : [$rt_objcls()], primitive : false, superclass : $rt_objcls(), name : name, binaryName : name, enum : false };
        arraycls.classObject = null;
        arraycls.$array = null;
        result = arraycls;
        cls.$array = arraycls;
    }
    return result;
}
function $rt_createcls() {
    return { $array : null, classObject : null, $meta : { supertypes : [], superclass : null } };
}
function $rt_createPrimitiveCls(name, binaryName) {
    var cls = $rt_createcls();
    cls.$meta.primitive = true;
    cls.$meta.name = name;
    cls.$meta.binaryName = binaryName;
    cls.$meta.enum = false;
    cls.$meta.item = null;
    return cls;
}
var $rt_booleanclsCache = null;
function $rt_booleancls() {
    if ($rt_booleanclsCache === null) {
        $rt_booleanclsCache = $rt_createPrimitiveCls("boolean", "Z");
    }
    return $rt_booleanclsCache;
}
var $rt_charclsCache = null;
function $rt_charcls() {
    if ($rt_charclsCache === null) {
        $rt_charclsCache = $rt_createPrimitiveCls("char", "C");
    }
    return $rt_charclsCache;
}
var $rt_byteclsCache = null;
function $rt_bytecls() {
    if ($rt_byteclsCache === null) {
        $rt_byteclsCache = $rt_createPrimitiveCls("byte", "B");
    }
    return $rt_byteclsCache;
}
var $rt_shortclsCache = null;
function $rt_shortcls() {
    if ($rt_shortclsCache === null) {
        $rt_shortclsCache = $rt_createPrimitiveCls("short", "S");
    }
    return $rt_shortclsCache;
}
var $rt_intclsCache = null;
function $rt_intcls() {
    if ($rt_intclsCache === null) {
        $rt_intclsCache = $rt_createPrimitiveCls("int", "I");
    }
    return $rt_intclsCache;
}
var $rt_longclsCache = null;
function $rt_longcls() {
    if ($rt_longclsCache === null) {
        $rt_longclsCache = $rt_createPrimitiveCls("long", "J");
    }
    return $rt_longclsCache;
}
var $rt_floatclsCache = null;
function $rt_floatcls() {
    if ($rt_floatclsCache === null) {
        $rt_floatclsCache = $rt_createPrimitiveCls("float", "F");
    }
    return $rt_floatclsCache;
}
var $rt_doubleclsCache = null;
function $rt_doublecls() {
    if ($rt_doubleclsCache === null) {
        $rt_doubleclsCache = $rt_createPrimitiveCls("double", "D");
    }
    return $rt_doubleclsCache;
}
var $rt_voidclsCache = null;
function $rt_voidcls() {
    if ($rt_voidclsCache === null) {
        $rt_voidclsCache = $rt_createPrimitiveCls("void", "V");
    }
    return $rt_voidclsCache;
}
function $rt_throw(ex) {
    throw $rt_exception(ex);
}
function $rt_exception(ex) {
    var err = ex.$jsException;
    if (!err) {
        err = new Error("Java exception thrown");
        if (typeof Error.captureStackTrace === "function") {
            Error.captureStackTrace(err);
        }
        err.$javaException = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return err;
}
function $rt_fillStack(err, ex) {
    if (typeof $rt_decodeStack === "function" && err.stack) {
        var stack = $rt_decodeStack(err.stack);
        var javaStack = $rt_createArray($rt_objcls(), stack.length);
        var elem;
        var noStack = false;
        for (var i = 0;i < stack.length;++i) {
            var element = stack[i];
            elem = $rt_createStackElement($rt_str(element.className), $rt_str(element.methodName), $rt_str(element.fileName), element.lineNumber);
            if (elem == null) {
                noStack = true;
                break;
            }
            javaStack.data[i] = elem;
        }
        if (!noStack) {
            $rt_setStack(ex, javaStack);
        }
    }
}
function $rt_createMultiArray(cls, dimensions) {
    var first = 0;
    for (var i = dimensions.length - 1;i >= 0;i = i - 1 | 0) {
        if (dimensions[i] === 0) {
            first = i;
            break;
        }
    }
    if (first > 0) {
        for (i = 0;i < first;i = i + 1 | 0) {
            cls = $rt_arraycls(cls);
        }
        if (first === dimensions.length - 1) {
            return $rt_createArray(cls, dimensions[first]);
        }
    }
    var arrays = new Array($rt_primitiveArrayCount(dimensions, first));
    var firstDim = dimensions[first] | 0;
    for (i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createArray(cls, firstDim);
    }
    return $rt_createMultiArrayImpl(cls, arrays, dimensions, first);
}
function $rt_createByteMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_bytecls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createByteArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_bytecls(), arrays, dimensions);
}
function $rt_createCharMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_charcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createCharArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_charcls(), arrays, dimensions, 0);
}
function $rt_createBooleanMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_booleancls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createBooleanArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_booleancls(), arrays, dimensions, 0);
}
function $rt_createShortMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_shortcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createShortArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_shortcls(), arrays, dimensions, 0);
}
function $rt_createIntMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_intcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createIntArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_intcls(), arrays, dimensions, 0);
}
function $rt_createLongMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_longcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createLongArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_longcls(), arrays, dimensions, 0);
}
function $rt_createFloatMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_floatcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createFloatArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_floatcls(), arrays, dimensions, 0);
}
function $rt_createDoubleMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_doublecls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createDoubleArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_doublecls(), arrays, dimensions, 0);
}
function $rt_primitiveArrayCount(dimensions, start) {
    var val = dimensions[start + 1] | 0;
    for (var i = start + 2;i < dimensions.length;i = i + 1 | 0) {
        val = val * (dimensions[i] | 0) | 0;
        if (val === 0) {
            break;
        }
    }
    return val;
}
function $rt_createMultiArrayImpl(cls, arrays, dimensions, start) {
    var limit = arrays.length;
    for (var i = start + 1 | 0;i < dimensions.length;i = i + 1 | 0) {
        cls = $rt_arraycls(cls);
        var dim = dimensions[i];
        var index = 0;
        var packedIndex = 0;
        while (index < limit) {
            var arr = $rt_createUnfilledArray(cls, dim);
            for (var j = 0;j < dim;j = j + 1 | 0) {
                arr.data[j] = arrays[index];
                index = index + 1 | 0;
            }
            arrays[packedIndex] = arr;
            packedIndex = packedIndex + 1 | 0;
        }
        limit = packedIndex;
    }
    return arrays[0];
}
function $rt_assertNotNaN(value) {
    if (typeof value === 'number' && isNaN(value)) {
        throw "NaN";
    }
    return value;
}
var $rt_stdoutBuffer = "";
var $rt_putStdout = typeof $rt_putStdoutCustom === "function" ? $rt_putStdoutCustom : function(ch) {
    if (ch === 0xA) {
        if (console) {
            console.info($rt_stdoutBuffer);
        }
        $rt_stdoutBuffer = "";
    } else {
        $rt_stdoutBuffer += String.fromCharCode(ch);
    }
};
var $rt_stderrBuffer = "";
var $rt_putStderr = typeof $rt_putStderrCustom === "function" ? $rt_putStderrCustom : function(ch) {
    if (ch === 0xA) {
        if (console) {
            console.error($rt_stderrBuffer);
        }
        $rt_stderrBuffer = "";
    } else {
        $rt_stderrBuffer += String.fromCharCode(ch);
    }
};
var $rt_packageData = null;
function $rt_packages(data) {
    var i = 0;
    var packages = new Array(data.length);
    for (var j = 0;j < data.length;++j) {
        var prefixIndex = data[i++];
        var prefix = prefixIndex >= 0 ? packages[prefixIndex] : "";
        packages[j] = prefix + data[i++] + ".";
    }
    $rt_packageData = packages;
}
function $rt_metadata(data) {
    var packages = $rt_packageData;
    var i = 0;
    while (i < data.length) {
        var cls = data[i++];
        cls.$meta = {  };
        var m = cls.$meta;
        var className = data[i++];
        m.name = className !== 0 ? className : null;
        if (m.name !== null) {
            var packageIndex = data[i++];
            if (packageIndex >= 0) {
                m.name = packages[packageIndex] + m.name;
            }
        }
        m.binaryName = "L" + m.name + ";";
        var superclass = data[i++];
        m.superclass = superclass !== 0 ? superclass : null;
        m.supertypes = data[i++];
        if (m.superclass) {
            m.supertypes.push(m.superclass);
            cls.prototype = Object.create(m.superclass.prototype);
        } else {
            cls.prototype = {  };
        }
        var flags = data[i++];
        m.enum = (flags & 8) !== 0;
        m.flags = flags;
        m.primitive = false;
        m.item = null;
        cls.prototype.constructor = cls;
        cls.classObject = null;
        m.accessLevel = data[i++];
        var clinit = data[i++];
        cls.$clinit = clinit !== 0 ? clinit : function() {
        };
        var virtualMethods = data[i++];
        if (virtualMethods !== 0) {
            for (var j = 0;j < virtualMethods.length;j += 2) {
                var name = virtualMethods[j];
                var func = virtualMethods[j + 1];
                if (typeof name === 'string') {
                    name = [name];
                }
                for (var k = 0;k < name.length;++k) {
                    cls.prototype[name[k]] = func;
                }
            }
        }
        cls.$array = null;
    }
}
function $rt_threadStarter(f) {
    return function() {
        var args = Array.prototype.slice.apply(arguments);
        $rt_startThread(function() {
            f.apply(this, args);
        });
    };
}
function $rt_mainStarter(f) {
    return function(args, callback) {
        if (!args) {
            args = [];
        }
        var javaArgs = $rt_createArray($rt_objcls(), args.length);
        for (var i = 0;i < args.length;++i) {
            javaArgs.data[i] = $rt_str(args[i]);
        }
        $rt_startThread(function() {
            f.call(null, javaArgs);
        }, callback);
    };
}
var $rt_stringPool_instance;
function $rt_stringPool(strings) {
    $rt_stringPool_instance = new Array(strings.length);
    for (var i = 0;i < strings.length;++i) {
        $rt_stringPool_instance[i] = $rt_intern($rt_str(strings[i]));
    }
}
function $rt_s(index) {
    return $rt_stringPool_instance[index];
}
function $rt_eraseClinit(target) {
    return target.$clinit = function() {
    };
}
var $rt_numberConversionView = new DataView(new ArrayBuffer(8));
function $rt_doubleToLongBits(n) {
    $rt_numberConversionView.setFloat64(0, n, true);
    return new Long($rt_numberConversionView.getInt32(0, true), $rt_numberConversionView.getInt32(4, true));
}
function $rt_longBitsToDouble(n) {
    $rt_numberConversionView.setInt32(0, n.lo, true);
    $rt_numberConversionView.setInt32(4, n.hi, true);
    return $rt_numberConversionView.getFloat64(0, true);
}
function $rt_floatToIntBits(n) {
    $rt_numberConversionView.setFloat32(0, n);
    return $rt_numberConversionView.getInt32(0);
}
function $rt_intBitsToFloat(n) {
    $rt_numberConversionView.setInt32(0, n);
    return $rt_numberConversionView.getFloat32(0);
}
function $rt_javaException(e) {
    return e instanceof Error && typeof e.$javaException === 'object' ? e.$javaException : null;
}
function $rt_jsException(e) {
    return typeof e.$jsException === 'object' ? e.$jsException : null;
}
function $rt_wrapException(err) {
    var ex = err.$javaException;
    if (!ex) {
        ex = $rt_createException($rt_str("(JavaScript) " + err.toString()));
        err.$javaException = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return ex;
}
function $dbg_class(obj) {
    var cls = obj.constructor;
    var arrayDegree = 0;
    while (cls.$meta && cls.$meta.item) {
        ++arrayDegree;
        cls = cls.$meta.item;
    }
    var clsName = "";
    if (cls === $rt_booleancls()) {
        clsName = "boolean";
    } else if (cls === $rt_bytecls()) {
        clsName = "byte";
    } else if (cls === $rt_shortcls()) {
        clsName = "short";
    } else if (cls === $rt_charcls()) {
        clsName = "char";
    } else if (cls === $rt_intcls()) {
        clsName = "int";
    } else if (cls === $rt_longcls()) {
        clsName = "long";
    } else if (cls === $rt_floatcls()) {
        clsName = "float";
    } else if (cls === $rt_doublecls()) {
        clsName = "double";
    } else {
        clsName = cls.$meta ? cls.$meta.name || "a/" + cls.name : "@" + cls.name;
    }
    while (arrayDegree-- > 0) {
        clsName += "[]";
    }
    return clsName;
}
function Long(lo, hi) {
    this.lo = lo | 0;
    this.hi = hi | 0;
}
Long.prototype.__teavm_class__ = function() {
    return "long";
};
Long.prototype.toString = function() {
    var result = [];
    var n = this;
    var positive = Long_isPositive(n);
    if (!positive) {
        n = Long_neg(n);
    }
    var radix = new Long(10, 0);
    do  {
        var divRem = Long_divRem(n, radix);
        result.push(String.fromCharCode(48 + divRem[1].lo));
        n = divRem[0];
    }while (n.lo !== 0 || n.hi !== 0);
    result = (result.reverse()).join('');
    return positive ? result : "-" + result;
};
Long.prototype.valueOf = function() {
    return Long_toNumber(this);
};
var Long_ZERO = new Long(0, 0);
var Long_MAX_NORMAL = 1 << 18;
function Long_fromInt(val) {
    return val >= 0 ? new Long(val, 0) : new Long(val,  -1);
}
function Long_fromNumber(val) {
    if (val >= 0) {
        return new Long(val | 0, val / 0x100000000 | 0);
    } else {
        return Long_neg(new Long( -val | 0,  -val / 0x100000000 | 0));
    }
}
function Long_toNumber(val) {
    var lo = val.lo;
    var hi = val.hi;
    if (lo < 0) {
        lo += 0x100000000;
    }
    return 0x100000000 * hi + lo;
}
var $rt_imul = Math.imul || function(a, b) {
    var ah = a >>> 16 & 0xFFFF;
    var al = a & 0xFFFF;
    var bh = b >>> 16 & 0xFFFF;
    var bl = b & 0xFFFF;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
};
var $rt_udiv = function(a, b) {
    if (a < 0) {
        a += 0x100000000;
    }
    if (b < 0) {
        b += 0x100000000;
    }
    return a / b | 0;
};
var $rt_umod = function(a, b) {
    if (a < 0) {
        a += 0x100000000;
    }
    if (b < 0) {
        b += 0x100000000;
    }
    return a % b | 0;
};
function $rt_setCloneMethod(target, f) {
    target.$clone = f;
}
function $rt_cls(cls) {
    return jl_Class_getClass(cls);
}
function $rt_str(str) {
    if (str === null) {
        return null;
    }
    var characters = $rt_createCharArray(str.length);
    var charsBuffer = characters.data;
    for (var i = 0; i < str.length; i = (i + 1) | 0) {
        charsBuffer[i] = str.charCodeAt(i) & 0xFFFF;
    }
    return jl_String__init_(characters);
}
function $rt_ustr(str) {
    if (str === null) {
        return null;
    }
    var data = str.$characters.data;
    var result = "";
    for (var i = 0; i < data.length; i = (i + 1) | 0) {
        result += String.fromCharCode(data[i]);
    }
    return result;
}
function $rt_objcls() { return jl_Object; }
function $rt_nullCheck(val) {
    if (val === null) {
        $rt_throw(jl_NullPointerException__init_());
    }
    return val;
}
function $rt_intern(str) {
    return str;
}
function $rt_getThread() {
    return jl_Thread_currentThread();
}
function $rt_setThread(t) {
    return jl_Thread_setCurrentThread(t);
}
function $rt_createException(message) {
    return jl_RuntimeException__init_(message);
}
function $rt_createStackElement(className, methodName, fileName, lineNumber) {
    return null;
}
function $rt_setStack(e, stack) {
}
var $java = Object.create(null);
function jl_Object() {
    this.$monitor = null;
    this.$id$ = 0;
}
function jl_Object__init_() {
    var var_0 = new jl_Object();
    jl_Object__init_0(var_0);
    return var_0;
}
function jl_Object_monitorEnterSync($o) {
    var var$2;
    if ($o.$monitor === null)
        jl_Object_createMonitor($o);
    if ($o.$monitor.$owner === null)
        $o.$monitor.$owner = jl_Thread_currentThread();
    else if ($o.$monitor.$owner !== jl_Thread_currentThread())
        $rt_throw(jl_IllegalStateException__init_($rt_s(0)));
    var$2 = $o.$monitor;
    var$2.$count = var$2.$count + 1 | 0;
}
function jl_Object_monitorExitSync($o) {
    var var$2, var$3;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === jl_Thread_currentThread()) {
        var$2 = $o.$monitor;
        var$3 = var$2.$count - 1 | 0;
        var$2.$count = var$3;
        if (!var$3)
            $o.$monitor.$owner = null;
        jl_Object_isEmptyMonitor($o);
        return;
    }
    $rt_throw(jl_IllegalMonitorStateException__init_());
}
function jl_Object_monitorEnter($o) {
    jl_Object_monitorEnter0($o, 1);
}
function jl_Object_monitorEnter0($o, $count) {
    var var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();$count = $thread.pop();$o = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($o.$monitor === null)
            jl_Object_createMonitor($o);
        if ($o.$monitor.$owner === null)
            $o.$monitor.$owner = jl_Thread_currentThread();
        if ($o.$monitor.$owner === jl_Thread_currentThread()) {
            var$3 = $o.$monitor;
            var$3.$count = var$3.$count + $count | 0;
            return;
        }
        $ptr = 1;
    case 1:
        jl_Object_monitorEnterWait($o, $count);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($o, $count, var$3, $ptr);
}
function jl_Object_createMonitor($o) {
    $o.$monitor = jl_Object$Monitor__init_();
}
function jl_Object_monitorEnterWait(var$1, var$2) {
    var thread = $rt_nativeThread();
    var javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        var result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    var callback = function() {};
    callback.$complete = function(val) {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error = function(e) {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    return thread.suspend(function() {
        try {
            jl_Object_monitorEnterWait0(var$1, var$2, callback);
        } catch($e) {
            callback.$error($rt_exception($e));
        }
    });
}
function jl_Object_monitorEnterWait0($o, $count, $callback) {
    var $thread, var$5, $monitor;
    $thread = jl_Thread_currentThread();
    if ($o.$monitor === null) {
        jl_Object_createMonitor($o);
        jl_Thread_setCurrentThread($thread);
        var$5 = $o.$monitor;
        var$5.$count = var$5.$count + $count | 0;
        $callback.$complete(null);
        return;
    }
    if ($o.$monitor.$owner === null) {
        $o.$monitor.$owner = $thread;
        jl_Thread_setCurrentThread($thread);
        var$5 = $o.$monitor;
        var$5.$count = var$5.$count + $count | 0;
        $callback.$complete(null);
        return;
    }
    $monitor = $o.$monitor;
    if ($monitor.$enteringThreads === null)
        $monitor.$enteringThreads = otp_Platform_createQueue();
    otp_PlatformQueue_add$static($monitor.$enteringThreads, jl_Object$monitorEnterWait$lambda$_6_0__init_($thread, $o, $count, $callback));
}
function jl_Object_monitorExit($o) {
    jl_Object_monitorExit0($o, 1);
}
function jl_Object_monitorExit0($o, $count) {
    var $monitor;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === jl_Thread_currentThread()) {
        $monitor = $o.$monitor;
        $monitor.$count = $monitor.$count - $count | 0;
        if ($monitor.$count > 0)
            return;
        $monitor.$owner = null;
        if ($monitor.$enteringThreads !== null && !otp_PlatformQueue_isEmpty$static($monitor.$enteringThreads))
            otp_Platform_postpone(jl_Object$monitorExit$lambda$_8_0__init_($o));
        else
            jl_Object_isEmptyMonitor($o);
        return;
    }
    $rt_throw(jl_IllegalMonitorStateException__init_());
}
function jl_Object_waitForOtherThreads($o) {
    var $monitor, $enteringThreads, $r;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === null) {
        $monitor = $o.$monitor;
        if ($monitor.$enteringThreads !== null && !otp_PlatformQueue_isEmpty$static($monitor.$enteringThreads)) {
            $enteringThreads = $monitor.$enteringThreads;
            $r = otp_PlatformQueue_remove$static($enteringThreads);
            if ($enteringThreads === null)
                $monitor.$enteringThreads = null;
            $r.$run();
        }
        return;
    }
}
function jl_Object_isEmptyMonitor($this) {
    var $monitor, var$2;
    $monitor = $this.$monitor;
    if ($monitor === null)
        return 1;
    a: {
        b: {
            if ($monitor.$owner === null) {
                if ($monitor.$enteringThreads !== null) {
                    var$2 = $monitor.$enteringThreads;
                    if (!otp_PlatformQueue_isEmpty$static(var$2))
                        break b;
                }
                if ($monitor.$notifyListeners === null)
                    break a;
                var$2 = $monitor.$notifyListeners;
                if (otp_PlatformQueue_isEmpty$static(var$2))
                    break a;
            }
        }
        return 0;
    }
    jl_Object_deleteMonitor($this);
    return 1;
}
function jl_Object_deleteMonitor($this) {
    $this.$monitor = null;
}
function jl_Object__init_0($this) {
    return;
}
function jl_Object_getClass($this) {
    return jl_Class_getClass($this.constructor);
}
function jl_Object_hashCode($this) {
    return jl_Object_identity($this);
}
function jl_Object_equals($this, $other) {
    return $this !== $other ? 0 : 1;
}
function jl_Object_toString($this) {
    return jl_StringBuilder__init_().$append(jl_Object_getClass($this).$getName()).$append($rt_s(1)).$append(jl_Integer_toHexString(jl_Object_identity($this))).$toString();
}
function jl_Object_identity($this) {
    var $platformThis, var$2;
    $platformThis = $this;
    if (!$platformThis.$id$) {
        var$2 = $rt_nextId();
        $platformThis.$id$ = var$2;
    }
    return $this.$id$;
}
function jl_Object_clone($this) {
    var var$1, $result, var$3;
    if (!$rt_isInstance($this, jl_Cloneable)) {
        var$1 = $this;
        if (var$1.constructor.$meta.item === null)
            $rt_throw(jl_CloneNotSupportedException__init_());
    }
    $result = otp_Platform_clone($this);
    var$1 = $result;
    var$3 = $rt_nextId();
    var$1.$id$ = var$3;
    return $result;
}
function jl_Object_lambda$monitorExit$2($o) {
    jl_Object_waitForOtherThreads($o);
}
function jl_Object_lambda$monitorEnterWait$0($thread, $o, $count, $callback) {
    var var$5;
    jl_Thread_setCurrentThread($thread);
    $o.$monitor.$owner = $thread;
    var$5 = $o.$monitor;
    var$5.$count = var$5.$count + $count | 0;
    $callback.$complete(null);
}
function jur_AbstractCharClass$LazyCharClass() {
    var a = this; jl_Object.call(a);
    a.$posValue = null;
    a.$negValue = null;
}
function jur_AbstractCharClass$LazyCharClass__init_() {
    var var_0 = new jur_AbstractCharClass$LazyCharClass();
    jur_AbstractCharClass$LazyCharClass__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyCharClass__init_0($this) {
    jl_Object__init_0($this);
}
function jur_AbstractCharClass$LazyCharClass_getValue($this, $negative) {
    if (!$negative && $this.$posValue === null)
        $this.$posValue = $this.$computeValue();
    else if ($negative && $this.$negValue === null)
        $this.$negValue = $this.$computeValue().$setNegative(1);
    if ($negative)
        return $this.$negValue;
    return $this.$posValue;
}
function jur_AbstractCharClass$LazyBlank() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyBlank__init_() {
    var var_0 = new jur_AbstractCharClass$LazyBlank();
    jur_AbstractCharClass$LazyBlank__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyBlank__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyBlank_computeValue($this) {
    return jur_CharClass__init_().$add(32).$add(9);
}
function jur_AbstractCharClass$LazyCntrl() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyCntrl__init_() {
    var var_0 = new jur_AbstractCharClass$LazyCntrl();
    jur_AbstractCharClass$LazyCntrl__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyCntrl__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyCntrl_computeValue($this) {
    return jur_CharClass__init_().$add0(0, 31).$add(127);
}
function iaasu_Layout() {
}
function iaas_Element() {
    var a = this; jl_Object.call(a);
    a.$color = null;
    a.$listeners = null;
    a.$captureListeners = null;
    a.$actions = null;
    a.$x = 0.0;
    a.$y = 0.0;
    a.$width = 0.0;
    a.$height = 0.0;
    a.$parentAlpha = 0.0;
    a.$translation = null;
    a.$parent = null;
    a.$originX = 0.0;
    a.$originY = 0.0;
    a.$scaleX = 0.0;
    a.$scaleY = 0.0;
    a.$rotation = 0.0;
    a.$stage = null;
    a.$name = null;
    a.$touchable = null;
    a.$visible = 0;
    a.$needsLayout = 0;
    a.$fillParent = 0;
    a.$layoutEnabled = 0;
    a.$visibility = null;
    a.$update = null;
    a.$touchableSupplier = null;
}
function iaas_Element__init_() {
    var var_0 = new iaas_Element();
    iaas_Element__init_0(var_0);
    return var_0;
}
function iaas_Element__init_0($this) {
    jl_Object__init_0($this);
    $this.$color = iaag_Color__init_(1.0, 1.0, 1.0, 1.0);
    $this.$listeners = iaac_DelayedRemovalArray__init_(0);
    $this.$captureListeners = iaac_DelayedRemovalArray__init_(0);
    $this.$actions = iaac_Array__init_(0);
    $this.$parentAlpha = 1.0;
    $this.$translation = iaamg_Vector2__init_(0.0, 0.0);
    $this.$scaleX = 1.0;
    $this.$scaleY = 1.0;
    iaase_Touchable_$callClinit();
    $this.$touchable = iaase_Touchable_enabled;
    $this.$visible = 1;
    $this.$needsLayout = 1;
    $this.$layoutEnabled = 1;
    $this.$touchableSupplier = null;
}
function iaas_Element_act($this, $delta) {
    var $actions, $i, $action, $current, $actionIndex;
    a: {
        $actions = $this.$actions;
        if ($actions.$size > 0) {
            if ($this.$stage !== null && $this.$stage.$getActionsRequestRendering()) {
                iaa_Core_$callClinit();
                iaa_Core_graphics.$requestRendering();
            }
            $i = 0;
            while (true) {
                if ($i >= $actions.$size)
                    break a;
                $action = $actions.$get($i);
                if ($action.$act($delta) && $i < $actions.$size) {
                    $current = $actions.$get($i);
                    $actionIndex = $current === $action ? $i : $actions.$indexOf($action, 1);
                    if ($actionIndex != (-1)) {
                        $actions.$remove($actionIndex);
                        $action.$setActor(null);
                        $i = $i + (-1) | 0;
                    }
                }
                $i = $i + 1 | 0;
            }
        }
    }
    if ($this.$touchableSupplier !== null)
        $this.$touchable0($this.$touchableSupplier.$get0());
    if ($this.$update !== null)
        $this.$update.$run();
}
function iaas_Element_updateVisibility($this) {
    if ($this.$visibility !== null)
        $this.$visible0($this.$visibility.$get1());
}
function iaas_Element_fire($this, $event) {
    var $ancestors, $parent, $ancestorsArray, $i, var$6, $currentTarget, var$8, $n, $$je;
    $event.$targetActor = $this;
    $ancestors = iaaup_Pools_obtain($rt_cls(iaac_Array), iaas_Element$fire$lambda$_9_0__init_());
    $parent = $this.$parent;
    while ($parent !== null) {
        $ancestors.$add1($parent);
        $parent = $parent.$parent;
    }
    a: {
        b: {
            try {
                $ancestorsArray = $ancestors.$items;
                $i = $ancestors.$size - 1 | 0;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$6 = $$je;
                break b;

            }
            c: {
                try {
                    while (true) {
                        if ($i < 0)
                            break c;
                        $currentTarget = $ancestorsArray.data[$i];
                        $currentTarget.$notify($event, 1);
                        if ($event.$stopped)
                            break;
                        $i = $i + (-1) | 0;
                    }
                    var$8 = $event.$cancelled;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$6 = $$je;
                    break b;

                }
                $ancestors.$clear();
                iaaup_Pools_free($ancestors);
                return var$8;
            }
            d: {
                try {
                    $this.$notify($event, 1);
                    if (!$event.$stopped)
                        break d;
                    var$8 = $event.$cancelled;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$6 = $$je;
                    break b;

                }
                $ancestors.$clear();
                iaaup_Pools_free($ancestors);
                return var$8;
            }
            e: {
                try {
                    $this.$notify($event, 0);
                    if ($event.$bubbles)
                        break e;
                    var$8 = $event.$cancelled;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$6 = $$je;
                    break b;

                }
                $ancestors.$clear();
                iaaup_Pools_free($ancestors);
                return var$8;
            }
            f: {
                try {
                    if (!$event.$stopped)
                        break f;
                    var$8 = $event.$cancelled;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$6 = $$je;
                    break b;

                }
                $ancestors.$clear();
                iaaup_Pools_free($ancestors);
                return var$8;
            }
            try {
                $i = 0;
                $n = $ancestors.$size;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$6 = $$je;
                break b;

            }
            g: {
                try {
                    while ($i < $n) {
                        $ancestorsArray.data[$i].$notify($event, 0);
                        if ($event.$stopped)
                            break g;
                        $i = $i + 1 | 0;
                    }
                    var$8 = $event.$cancelled;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$6 = $$je;
                    break b;

                }
                $ancestors.$clear();
                iaaup_Pools_free($ancestors);
                return var$8;
            }
            try {
                var$8 = $event.$cancelled;
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$6 = $$je;

            }
        }
        $ancestors.$clear();
        iaaup_Pools_free($ancestors);
        $rt_throw(var$6);
    }
    $ancestors.$clear();
    iaaup_Pools_free($ancestors);
    return var$8;
}
function iaas_Element_notify($this, $event, $capture) {
    var $listeners, $i, $n, $listener, $inputEvent, var$8;
    if ($event.$targetActor === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(2)));
    $listeners = !$capture ? $this.$listeners : $this.$captureListeners;
    if (!$listeners.$size)
        return $event.$cancelled;
    $event.$listenerActor = $this;
    $event.$capture = $capture;
    $listeners.$begin();
    $i = 0;
    $n = $listeners.$size;
    while ($i < $n) {
        $listener = $listeners.$get($i);
        if ($listener.$handle($event)) {
            $event.$handle0();
            if ($event instanceof iaase_InputEvent) {
                $inputEvent = $event;
                var$8 = $inputEvent.$type;
                iaase_InputEvent$Type_$callClinit();
                if (var$8 === iaase_InputEvent$Type_touchDown)
                    $this.$getScene().$addTouchFocus($listener, $this, $inputEvent.$targetActor, $inputEvent.$pointer, $inputEvent.$keyCode);
            }
        }
        $i = $i + 1 | 0;
    }
    $listeners.$end();
    return $event.$cancelled;
}
function iaas_Element_hit($this, $x, $y, $touchable) {
    var var$4;
    if ($touchable) {
        var$4 = $this.$touchable;
        iaase_Touchable_$callClinit();
        if (var$4 !== iaase_Touchable_enabled)
            return null;
    }
    if (!($x >= $this.$translation.$x0 && $x < $this.$width + $this.$translation.$x0 && $y >= $this.$translation.$y0 && $y < $this.$height + $this.$translation.$y0))
        $this = null;
    return $this;
}
function iaas_Element_getScene($this) {
    return $this.$stage;
}
function iaas_Element_setScene($this, $stage) {
    $this.$stage = $stage;
}
function iaas_Element_getParent($this) {
    return $this.$parent;
}
function iaas_Element_setParent($this, $parent) {
    $this.$parent = $parent;
}
function iaas_Element_getTouchable($this) {
    return $this.$touchable;
}
function iaas_Element_touchable($this, $touchable) {
    $this.$touchable = $touchable;
}
function iaas_Element_isVisible($this) {
    return $this.$visible;
}
function iaas_Element_visible($this, $visible) {
    $this.$visible = $visible;
}
function iaas_Element_getX($this) {
    return $this.$x;
}
function iaas_Element_getY($this) {
    return $this.$y;
}
function iaas_Element_getWidth($this) {
    return $this.$width;
}
function iaas_Element_setWidth($this, $width) {
    if ($this.$width !== $width) {
        $this.$width = $width;
        $this.$sizeChanged();
    }
}
function iaas_Element_getHeight($this) {
    return $this.$height;
}
function iaas_Element_setHeight($this, $height) {
    if ($this.$height !== $height) {
        $this.$height = $height;
        $this.$sizeChanged();
    }
}
function iaas_Element_positionChanged($this) {
    return;
}
function iaas_Element_sizeChanged($this) {
    $this.$invalidate();
}
function iaas_Element_setSize($this, $width, $height) {
    if (!($this.$width === $width && $this.$height === $height)) {
        $this.$width = $width;
        $this.$height = $height;
        $this.$sizeChanged();
    }
}
function iaas_Element_setBounds($this, $x, $y, $width, $height) {
    if (!($this.$x === $x && $this.$y === $y)) {
        $this.$x = $x;
        $this.$y = $y;
        $this.$positionChanged();
    }
    if (!($this.$width === $width && $this.$height === $height)) {
        $this.$width = $width;
        $this.$height = $height;
        $this.$sizeChanged();
    }
}
function iaas_Element_getOriginX($this) {
    return $this.$originX;
}
function iaas_Element_getOriginY($this) {
    return $this.$originY;
}
function iaas_Element_getScaleX($this) {
    return $this.$scaleX;
}
function iaas_Element_getScaleY($this) {
    return $this.$scaleY;
}
function iaas_Element_getRotation($this) {
    return $this.$rotation;
}
function iaas_Element_getColor($this) {
    return $this.$color;
}
function iaas_Element_setColor($this, $color) {
    $this.$color.$set($color);
}
function iaas_Element_clipBegin($this, $x, $y, $width, $height) {
    var $tableBounds, $stage, $scissorBounds;
    if ($width > 0.0 && $height > 0.0) {
        iaamg_Rectangle_$callClinit();
        $tableBounds = iaamg_Rectangle_tmp;
        $tableBounds.$x1 = $x;
        $tableBounds.$y1 = $y;
        $tableBounds.$width0 = $width;
        $tableBounds.$height0 = $height;
        $stage = $this.$stage;
        $scissorBounds = iaaup_Pools_obtain($rt_cls(iaamg_Rectangle), iaas_Element$clipBegin$lambda$_93_0__init_());
        $stage.$calculateScissors($tableBounds, $scissorBounds);
        if (iaagg_ScissorStack_pushScissors($scissorBounds))
            return 1;
        iaaup_Pools_free($scissorBounds);
        return 0;
    }
    return 0;
}
function iaas_Element_clipEnd($this) {
    iaaup_Pools_free(iaagg_ScissorStack_popScissors());
}
function iaas_Element_parentToLocalCoordinates($this, $parentCoords) {
    var $rotation, $scaleX, $scaleY, $childX, $childY, var$7, $cos, $sin, $originX, $originY, $tox, $toy;
    $rotation = $this.$rotation;
    $scaleX = $this.$scaleX;
    $scaleY = $this.$scaleY;
    $childX = $this.$x + $this.$translation.$x0;
    $childY = $this.$y + $this.$translation.$y0;
    if ($rotation !== 0.0) {
        var$7 = $rotation * 0.01745329238474369;
        $cos = jl_Math_cos(var$7);
        $sin = jl_Math_sin(var$7);
        $originX = $this.$originX;
        $originY = $this.$originY;
        $tox = $parentCoords.$x0 - $childX - $originX;
        $toy = $parentCoords.$y0 - $childY - $originY;
        $parentCoords.$x0 = ($tox * $cos + $toy * $sin) / $scaleX + $originX;
        $parentCoords.$y0 = ($tox *  -$sin + $toy * $cos) / $scaleY + $originY;
    } else if ($scaleX === 1.0 && $scaleY === 1.0) {
        $parentCoords.$x0 = $parentCoords.$x0 - $childX;
        $parentCoords.$y0 = $parentCoords.$y0 - $childY;
    } else {
        $originX = $this.$originX;
        $originY = $this.$originY;
        $parentCoords.$x0 = ($parentCoords.$x0 - $childX - $originX) / $scaleX + $originX;
        $parentCoords.$y0 = ($parentCoords.$y0 - $childY - $originY) / $scaleY + $originY;
    }
    return $parentCoords;
}
function iaas_Element_getMinWidth($this) {
    return $this.$getPrefWidth();
}
function iaas_Element_getMinHeight($this) {
    return $this.$getPrefHeight();
}
function iaas_Element_getPrefWidth($this) {
    return 0.0;
}
function iaas_Element_getPrefHeight($this) {
    return 0.0;
}
function iaas_Element_getMaxWidth($this) {
    return 0.0;
}
function iaas_Element_getMaxHeight($this) {
    return 0.0;
}
function iaas_Element_validate($this) {
    var $parent, $stage, $parentWidth, $parentHeight;
    if (!$this.$layoutEnabled)
        return;
    $parent = $this.$getParent();
    if ($this.$fillParent && $parent !== null) {
        $stage = $this.$getScene();
        if ($stage !== null && $parent === $stage.$root) {
            $parentWidth = $stage.$getWidth();
            $parentHeight = $stage.$getHeight();
        } else {
            $parentWidth = $parent.$getWidth();
            $parentHeight = $parent.$getHeight();
        }
        $this.$setSize($parentWidth, $parentHeight);
    }
    if (!$this.$needsLayout)
        return;
    $this.$needsLayout = 0;
    $this.$layout();
}
function iaas_Element_invalidate($this) {
    $this.$needsLayout = 1;
}
function iaas_Element_invalidateHierarchy($this) {
    var $parent;
    if (!$this.$layoutEnabled)
        return;
    $this.$invalidate();
    $parent = $this.$getParent();
    if ($parent !== null)
        $parent.$invalidateHierarchy();
}
function iaas_Element_layout($this) {
    return;
}
function iaas_Element_getTranslation($this) {
    return $this.$translation;
}
function iaas_Element_update($this, $r) {
    $this.$update = $r;
    return $this;
}
function iaas_Element_visible0($this, $vis) {
    $this.$visibility = $vis;
    return $this;
}
function iaas_Element_toString($this) {
    var $name, $dotIndex;
    $name = $this.$name;
    if ($name === null) {
        $name = jl_Object_toString($this).$split($rt_s(1)).data[0];
        $dotIndex = $name.$lastIndexOf(46);
        if ($dotIndex != (-1))
            $name = $name.$substring($dotIndex + 1 | 0);
    }
    return $name;
}
function iaasu_Cullable() {
}
function iaas_Group() {
    var a = this; iaas_Element.call(a);
    a.$children = null;
    a.$worldTransform = null;
    a.$computedTransform = null;
    a.$oldTransform = null;
    a.$transform = 0;
    a.$cullingArea = null;
}
var iaas_Group_tmp = null;
function iaas_Group_$callClinit() {
    iaas_Group_$callClinit = $rt_eraseClinit(iaas_Group);
    iaas_Group__clinit_();
}
function iaas_Group__init_() {
    var var_0 = new iaas_Group();
    iaas_Group__init_0(var_0);
    return var_0;
}
function iaas_Group__init_0($this) {
    iaas_Group_$callClinit();
    iaas_Element__init_0($this);
    $this.$children = iaac_SnapshotArray__init_(1, 4, $rt_cls(iaas_Element));
    $this.$worldTransform = iaam_Affine2__init_();
    $this.$computedTransform = iaam_Matrix3__init_();
    $this.$oldTransform = iaam_Matrix3__init_();
    $this.$transform = 0;
}
function iaas_Group_act($this, $delta) {
    var $actors, $i, $n, var$5;
    iaas_Element_act($this, $delta);
    $actors = $this.$children.$begin0();
    $i = 0;
    $n = $this.$children.$size;
    while ($i < $n) {
        var$5 = $actors.data;
        if (var$5[$i].$isVisible())
            var$5[$i].$act0($delta);
        var$5[$i].$updateVisibility();
        $i = $i + 1 | 0;
    }
    $this.$children.$end();
}
function iaas_Group_draw($this) {
    if ($this.$transform)
        $this.$applyTransform($this.$computeTransform());
    $this.$drawChildren();
    if ($this.$transform)
        $this.$resetTransform();
}
function iaas_Group_drawChildren($this) {
    var $children, $actors, $cullingArea, $i, $n, $child, $offsetX, $offsetY, $cx, $cy, $cullLeft, $cullRight, $cullBottom, $cullTop;
    $this.$parentAlpha = $this.$parentAlpha * $this.$color.$a;
    $children = $this.$children;
    $actors = $children.$begin0();
    $cullingArea = $this.$cullingArea;
    if ($cullingArea === null) {
        if ($this.$transform) {
            $i = 0;
            $n = $children.$size;
            while ($i < $n) {
                $child = $actors.data[$i];
                $child.$parentAlpha = $this.$parentAlpha;
                if ($child.$isVisible()) {
                    $child.$x = $child.$x + $child.$translation.$x0;
                    $child.$y = $child.$y + $child.$translation.$y0;
                    $child.$draw();
                    $child.$x = $child.$x - $child.$translation.$x0;
                    $child.$y = $child.$y - $child.$translation.$y0;
                }
                $i = $i + 1 | 0;
            }
        } else {
            $offsetX = $this.$x;
            $offsetY = $this.$y;
            $this.$x = 0.0;
            $this.$y = 0.0;
            $i = 0;
            $n = $children.$size;
            while ($i < $n) {
                $child = $actors.data[$i];
                $child.$parentAlpha = $this.$parentAlpha;
                if ($child.$isVisible()) {
                    $cx = $child.$x;
                    $cy = $child.$y;
                    $child.$x = $cx + $offsetX + $child.$getTranslation().$x0;
                    $child.$y = $cy + $offsetY + $child.$getTranslation().$y0;
                    $child.$draw();
                    $child.$x = $cx;
                    $child.$y = $cy;
                }
                $i = $i + 1 | 0;
            }
            $this.$x = $offsetX;
            $this.$y = $offsetY;
        }
    } else {
        $cullLeft = $cullingArea.$x1;
        $cullRight = $cullLeft + $cullingArea.$width0;
        $cullBottom = $cullingArea.$y1;
        $cullTop = $cullBottom + $cullingArea.$height0;
        if (!$this.$transform) {
            $offsetX = $this.$x;
            $offsetY = $this.$y;
            $this.$x = 0.0;
            $this.$y = 0.0;
            $i = 0;
            $n = $children.$size;
            while ($i < $n) {
                $child = $actors.data[$i];
                $child.$parentAlpha = $this.$parentAlpha;
                if ($child.$isVisible()) {
                    $cx = $child.$x;
                    $cy = $child.$y;
                    if ($cx <= $cullRight && $cy <= $cullTop && $cx + $child.$width >= $cullLeft && $cy + $child.$height >= $cullBottom) {
                        $child.$x = $cx + $offsetX + $child.$getTranslation().$x0;
                        $child.$y = $cy + $offsetY + $child.$getTranslation().$y0;
                        $child.$draw();
                        $child.$x = $cx;
                        $child.$y = $cy;
                    }
                }
                $i = $i + 1 | 0;
            }
            $this.$x = $offsetX;
            $this.$y = $offsetY;
        } else {
            $i = 0;
            $n = $children.$size;
            while ($i < $n) {
                $child = $actors.data[$i];
                $child.$parentAlpha = $this.$parentAlpha;
                if ($child.$isVisible()) {
                    $cx = $child.$x;
                    $cy = $child.$y;
                    $child.$x = $child.$x + $child.$translation.$x0;
                    $child.$y = $child.$y + $child.$translation.$y0;
                    if ($cx <= $cullRight && $cy <= $cullTop && $cx + $child.$width >= $cullLeft && $cy + $child.$height >= $cullBottom)
                        $child.$draw();
                    $child.$x = $child.$x - $child.$translation.$x0;
                    $child.$y = $child.$y - $child.$translation.$y0;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    $children.$end();
}
function iaas_Group_computeTransform($this) {
    var $worldTransform, $originX, $originY, $parentGroup;
    $worldTransform = $this.$worldTransform;
    $originX = $this.$originX;
    $originY = $this.$originY;
    iaam_Affine2_setToTrnRotScl($worldTransform, $this.$x + $originX, $this.$y + $originY, $this.$rotation, $this.$scaleX, $this.$scaleY);
    if (!($originX === 0.0 && $originY === 0.0))
        iaam_Affine2_translate($worldTransform,  -$originX,  -$originY);
    $parentGroup = $this.$parent;
    a: {
        while (true) {
            if ($parentGroup === null)
                break a;
            if ($parentGroup.$transform)
                break;
            $parentGroup = $parentGroup.$parent;
        }
    }
    if ($parentGroup !== null)
        iaam_Affine2_preMul($worldTransform, $parentGroup.$worldTransform);
    $this.$computedTransform.$set0($worldTransform);
    return $this.$computedTransform;
}
function iaas_Group_applyTransform($this, $transform) {
    $this.$oldTransform.$set1(iaagg_Draw_trans());
    iaagg_Draw_trans0($transform);
}
function iaas_Group_resetTransform($this) {
    iaagg_Draw_trans0($this.$oldTransform);
}
function iaas_Group_hit($this, $x, $y, $touchable) {
    var var$4, $point, $childrenArray, $i, $child, $hit;
    if ($touchable) {
        var$4 = $this.$getTouchable();
        iaase_Touchable_$callClinit();
        if (var$4 === iaase_Touchable_disabled)
            return null;
    }
    $point = iaas_Group_tmp;
    $childrenArray = $this.$children.$items;
    $i = $this.$children.$size - 1 | 0;
    while (true) {
        if ($i < 0)
            return iaas_Element_hit($this, $x, $y, $touchable);
        $child = $childrenArray.data[$i];
        if ($child.$isVisible()) {
            $child.$parentToLocalCoordinates($point.$set2($x, $y));
            $hit = $child.$hit($point.$x0, $point.$y0, $touchable);
            if ($hit !== null)
                break;
        }
        $i = $i + (-1) | 0;
    }
    return $hit;
}
function iaas_Group_childrenChanged($this) {
    return;
}
function iaas_Group_addChild($this, $actor) {
    if ($actor.$parent !== null) {
        if ($actor.$parent === $this)
            return;
        $actor.$parent.$removeChild($actor, 0);
    }
    $this.$children.$add1($actor);
    $actor.$setParent($this);
    $actor.$setScene($this.$getScene());
    $this.$childrenChanged();
}
function iaas_Group_removeChild($this, $actor, $unfocus) {
    var $stage;
    if (!$this.$children.$removeValue($actor, 1))
        return 0;
    if ($unfocus) {
        $stage = $this.$getScene();
        if ($stage !== null)
            $stage.$unfocus($actor);
    }
    $actor.$setParent(null);
    $actor.$setScene(null);
    $this.$childrenChanged();
    return 1;
}
function iaas_Group_setScene($this, $stage) {
    var $childrenArray, $i, $n;
    iaas_Element_setScene($this, $stage);
    $childrenArray = $this.$children.$items;
    $i = 0;
    $n = $this.$children.$size;
    while ($i < $n) {
        $childrenArray.data[$i].$setScene($stage);
        $i = $i + 1 | 0;
    }
}
function iaas_Group_getChildren($this) {
    return $this.$children;
}
function iaas_Group_isTransform($this) {
    return $this.$transform;
}
function iaas_Group_setTransform($this, $transform) {
    $this.$transform = $transform;
}
function iaas_Group_toString($this) {
    var $buffer;
    $buffer = jl_StringBuilder__init_0(128);
    $this.$toString0($buffer, 1);
    $buffer.$setLength($buffer.$length() - 1 | 0);
    return $buffer.$toString();
}
function iaas_Group_toString0($this, $buffer, $indent) {
    var $actors, $i, $n, $ii, $actor;
    $buffer.$append(iaas_Element_toString($this));
    $buffer.$append0(10);
    $actors = $this.$children.$begin0();
    $i = 0;
    $n = $this.$children.$size;
    while ($i < $n) {
        $ii = 0;
        while ($ii < $indent) {
            $buffer.$append($rt_s(3));
            $ii = $ii + 1 | 0;
        }
        $actor = $actors.data[$i];
        if (!($actor instanceof iaas_Group)) {
            $buffer.$append1($actor);
            $buffer.$append0(10);
        } else
            $actor.$toString0($buffer, $indent + 1 | 0);
        $i = $i + 1 | 0;
    }
    $this.$children.$end();
}
function iaas_Group__clinit_() {
    iaas_Group_tmp = iaamg_Vector2__init_0();
}
function iaasul_WidgetGroup() {
    var a = this; iaas_Group.call(a);
    a.$needsLayout0 = 0;
    a.$fillParent0 = 0;
    a.$layoutEnabled0 = 0;
}
function iaasul_WidgetGroup__init_() {
    var var_0 = new iaasul_WidgetGroup();
    iaasul_WidgetGroup__init_0(var_0);
    return var_0;
}
function iaasul_WidgetGroup__init_0($this) {
    iaas_Group__init_0($this);
    $this.$needsLayout0 = 1;
    $this.$layoutEnabled0 = 1;
}
function iaasul_WidgetGroup_validate($this) {
    var $parent, $stage, $parentWidth, $parentHeight;
    if (!$this.$layoutEnabled0)
        return;
    $parent = $this.$getParent();
    if ($this.$fillParent0 && $parent !== null) {
        $stage = $this.$getScene();
        if ($stage !== null && $parent === $stage.$root) {
            $parentWidth = $stage.$getWidth();
            $parentHeight = $stage.$getHeight();
        } else {
            $parentWidth = $parent.$getWidth();
            $parentHeight = $parent.$getHeight();
        }
        if (!($this.$getWidth() === $parentWidth && $this.$getHeight() === $parentHeight)) {
            $this.$setWidth($parentWidth);
            $this.$setHeight($parentHeight);
            $this.$invalidate();
        }
    }
    if (!$this.$needsLayout0)
        return;
    $this.$needsLayout0 = 0;
    $this.$layout();
}
function iaasul_WidgetGroup_invalidate($this) {
    $this.$needsLayout0 = 1;
}
function iaasul_WidgetGroup_invalidateHierarchy($this) {
    var $parent;
    $this.$invalidate();
    $parent = $this.$getParent();
    if ($parent !== null)
        $parent.$invalidateHierarchy();
}
function iaasul_WidgetGroup_childrenChanged($this) {
    $this.$invalidateHierarchy();
}
function iaasul_WidgetGroup_sizeChanged($this) {
    $this.$invalidate();
}
function iaasul_WidgetGroup_setFillParent($this, $fillParent) {
    $this.$fillParent0 = $fillParent;
}
function iaasul_WidgetGroup_draw($this) {
    $this.$validate();
    iaas_Group_draw($this);
}
function jl_Runnable() {
}
function it_Phases$lambda$null$26$lambda$_41_0() {
    var a = this; jl_Object.call(a);
    a.$_0 = 0;
    a.$_1 = 0.0;
}
function it_Phases$lambda$null$26$lambda$_41_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$lambda$null$26$lambda$_41_0();
    it_Phases$lambda$null$26$lambda$_41_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$lambda$null$26$lambda$_41_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_0 = var$1;
    var$0.$_1 = var$2;
}
function it_Phases$lambda$null$26$lambda$_41_0_run(var$0) {
    it_Phases_lambda$null$25(var$0.$_0, var$0.$_1);
}
function iaabt_TeaFileLoader$TaskHandler() {
}
function jl_AutoCloseable() {
}
function ji_Closeable() {
}
function ji_InputStream() {
    jl_Object.call(this);
}
function ji_InputStream__init_() {
    var var_0 = new ji_InputStream();
    ji_InputStream__init_0(var_0);
    return var_0;
}
function ji_InputStream__init_0($this) {
    jl_Object__init_0($this);
}
function ji_InputStream_read($this, $b) {
    return $this.$read($b, 0, $b.data.length);
}
function ji_FilterInputStream() {
    ji_InputStream.call(this);
    this.$in = null;
}
function ji_FilterInputStream__init_(var_0) {
    var var_1 = new ji_FilterInputStream();
    ji_FilterInputStream__init_0(var_1, var_0);
    return var_1;
}
function ji_FilterInputStream__init_0($this, $in) {
    ji_InputStream__init_0($this);
    $this.$in = $in;
}
function ji_FilterInputStream_read($this, $buffer) {
    return $this.$read($buffer, 0, $buffer.data.length);
}
function ji_BufferedInputStream() {
    var a = this; ji_FilterInputStream.call(a);
    a.$buf = null;
    a.$count0 = 0;
    a.$marklimit = 0;
    a.$markpos = 0;
    a.$pos = 0;
}
function ji_BufferedInputStream__init_(var_0) {
    var var_1 = new ji_BufferedInputStream();
    ji_BufferedInputStream__init_0(var_1, var_0);
    return var_1;
}
function ji_BufferedInputStream__init_0($this, $in) {
    ji_FilterInputStream__init_0($this, $in);
    $this.$markpos = (-1);
    $this.$buf = $rt_createByteArray(8192);
}
function ji_BufferedInputStream_available($this) {
    var $localIn;
    $localIn = $this.$in;
    if ($this.$buf !== null && $localIn !== null)
        return ($this.$count0 - $this.$pos | 0) + $localIn.$available() | 0;
    $rt_throw(ji_IOException__init_($rt_s(4)));
}
function ji_BufferedInputStream_fillbuf($this, $localIn, $localBuf) {
    var var$3, var$4, var$5, $newLength, $newbuf, $bytesread, $result;
    if ($this.$markpos != (-1) && ($this.$pos - $this.$markpos | 0) < $this.$marklimit) {
        a: {
            if (!$this.$markpos) {
                var$3 = $localBuf.data;
                var$4 = $this.$marklimit;
                var$5 = var$3.length;
                if (var$4 > var$5) {
                    $newLength = var$5 * 2 | 0;
                    if ($newLength > $this.$marklimit)
                        $newLength = $this.$marklimit;
                    $newbuf = $rt_createByteArray($newLength);
                    jl_System_arraycopy($localBuf, 0, $newbuf, 0, var$5);
                    $this.$buf = $newbuf;
                    $localBuf = $this.$buf;
                    break a;
                }
            }
            if ($this.$markpos > 0) {
                var$3 = $localBuf.data;
                jl_System_arraycopy($localBuf, $this.$markpos, $localBuf, 0, var$3.length - $this.$markpos | 0);
            }
        }
        var$3 = $localBuf.data;
        $this.$pos = $this.$pos - $this.$markpos | 0;
        $this.$count0 = 0;
        $this.$markpos = 0;
        $bytesread = $localIn.$read($localBuf, $this.$pos, var$3.length - $this.$pos | 0);
        $this.$count0 = $bytesread <= 0 ? $this.$pos : $this.$pos + $bytesread | 0;
        return $bytesread;
    }
    $result = $localIn.$read0($localBuf);
    if ($result > 0) {
        $this.$markpos = (-1);
        $this.$pos = 0;
        $this.$count0 = $result;
    }
    return $result;
}
function ji_BufferedInputStream_read($this) {
    var $localBuf, $localIn, var$3, var$4;
    jl_Object_monitorEnterSync($this);
    try {
        $localBuf = $this.$buf;
        $localIn = $this.$in;
        if ($localBuf !== null && $localIn !== null) {
            if ($this.$pos >= $this.$count0 && ji_BufferedInputStream_fillbuf($this, $localIn, $localBuf) == (-1))
                return (-1);
            if ($localBuf !== $this.$buf) {
                $localBuf = $this.$buf;
                if ($localBuf === null)
                    $rt_throw(ji_IOException__init_($rt_s(4)));
            }
            if (($this.$count0 - $this.$pos | 0) <= 0)
                return (-1);
            var$3 = $localBuf.data;
            var$4 = $this.$pos;
            $this.$pos = var$4 + 1 | 0;
            return var$3[var$4] & 255;
        }
        $rt_throw(ji_IOException__init_($rt_s(4)));
    } finally {
        jl_Object_monitorExitSync($this);
    }
}
function ji_BufferedInputStream_read0($this, $buffer, $offset, $length) {
    var $localBuf, $localIn, $required, $copylength, $read;
    jl_Object_monitorEnterSync($this);
    try {
        $localBuf = $this.$buf;
        if ($localBuf === null)
            $rt_throw(ji_IOException__init_($rt_s(4)));
        if ($offset <= ($buffer.data.length - $length | 0) && $offset >= 0 && $length >= 0) {
            if (!$length)
                return 0;
            $localIn = $this.$in;
            if ($localIn === null)
                $rt_throw(ji_IOException__init_($rt_s(4)));
            if ($this.$pos >= $this.$count0)
                $required = $length;
            else {
                $copylength = ($this.$count0 - $this.$pos | 0) >= $length ? $length : $this.$count0 - $this.$pos | 0;
                jl_System_arraycopy($localBuf, $this.$pos, $buffer, $offset, $copylength);
                $this.$pos = $this.$pos + $copylength | 0;
                if ($copylength != $length && $localIn.$available()) {
                    $offset = $offset + $copylength | 0;
                    $required = $length - $copylength | 0;
                } else
                    return $copylength;
            }
            while (true) {
                if ($this.$markpos == (-1) && $required >= $localBuf.data.length) {
                    $read = $localIn.$read($buffer, $offset, $required);
                    if ($read == (-1))
                        return $required != $length ? $length - $required | 0 : (-1);
                } else {
                    if (ji_BufferedInputStream_fillbuf($this, $localIn, $localBuf) == (-1))
                        return $required != $length ? $length - $required | 0 : (-1);
                    if ($localBuf !== $this.$buf) {
                        $localBuf = $this.$buf;
                        if ($localBuf === null)
                            $rt_throw(ji_IOException__init_($rt_s(4)));
                    }
                    $read = ($this.$count0 - $this.$pos | 0) >= $required ? $required : $this.$count0 - $this.$pos | 0;
                    jl_System_arraycopy($localBuf, $this.$pos, $buffer, $offset, $read);
                    $this.$pos = $this.$pos + $read | 0;
                }
                $required = $required - $read | 0;
                if (!$required)
                    break;
                if (!$localIn.$available())
                    return $length - $required | 0;
                $offset = $offset + $read | 0;
            }
            return $length;
        }
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    } finally {
        jl_Object_monitorExitSync($this);
    }
}
function cjj_Inflate() {
    var a = this; jl_Object.call(a);
    a.$mode = 0;
    a.$method = 0;
    a.$was = Long_ZERO;
    a.$need = Long_ZERO;
    a.$marker = 0;
    a.$wrap = 0;
    a.$wbits = 0;
    a.$blocks = null;
    a.$z = null;
    a.$flags = 0;
    a.$need_bytes = 0;
    a.$crcbuf = null;
    a.$gheader = null;
    a.$tmp_string = null;
}
var cjj_Inflate_mark = null;
function cjj_Inflate_$callClinit() {
    cjj_Inflate_$callClinit = $rt_eraseClinit(cjj_Inflate);
    cjj_Inflate__clinit_();
}
function cjj_Inflate__init_(var_0) {
    var var_1 = new cjj_Inflate();
    cjj_Inflate__init_0(var_1, var_0);
    return var_1;
}
function cjj_Inflate_inflateReset($this) {
    var var$1;
    if ($this.$z === null)
        return (-2);
    var$1 = $this.$z;
    $this.$z.$total_out = Long_ZERO;
    var$1.$total_in = Long_ZERO;
    $this.$z.$msg = null;
    $this.$mode = 14;
    $this.$need_bytes = (-1);
    cjj_InfBlocks_reset($this.$blocks);
    return 0;
}
function cjj_Inflate_inflateEnd($this) {
    if ($this.$blocks !== null)
        cjj_InfBlocks_free($this.$blocks);
    return 0;
}
function cjj_Inflate__init_0($this, $z) {
    cjj_Inflate_$callClinit();
    jl_Object__init_0($this);
    $this.$was = Long_fromInt(-1);
    $this.$need_bytes = (-1);
    $this.$crcbuf = $rt_createByteArray(4);
    $this.$gheader = null;
    $this.$tmp_string = null;
    $this.$z = $z;
}
function cjj_Inflate_inflateInit($this, $w) {
    $this.$z.$msg = null;
    $this.$blocks = null;
    $this.$wrap = 0;
    if ($w < 0)
        $w =  -$w;
    else if ($w & 1073741824) {
        $this.$wrap = 4;
        $w = $w & (-1073741825);
        if ($w < 48)
            $w = $w & 15;
    } else if ($w & (-32)) {
        $this.$wrap = 4;
        $w = $w & 15;
    } else {
        $this.$wrap = ($w >> 4) + 1 | 0;
        if ($w < 48)
            $w = $w & 15;
    }
    if ($w >= 8 && $w <= 15) {
        if ($this.$blocks !== null && $this.$wbits != $w) {
            cjj_InfBlocks_free($this.$blocks);
            $this.$blocks = null;
        }
        $this.$wbits = $w;
        $this.$blocks = cjj_InfBlocks__init_($this.$z, 1 << $w);
        cjj_Inflate_inflateReset($this);
        return 0;
    }
    cjj_Inflate_inflateEnd($this);
    return (-2);
}
function cjj_Inflate_inflate($this, $f) {
    var var$2, $r, $e, var$5, var$6, var$7, var$8, $b, $foo, var$11, $$je;
    if ($this.$z !== null && $this.$z.$next_in !== null) {
        var$2 = $f != 4 ? 0 : (-5);
        $r = (-5);
        a: {
            b: {
                c: {
                    d: {
                        e: {
                            f: {
                                g: {
                                    h: {
                                        i: while (true) {
                                            j: {
                                                k: {
                                                    l: {
                                                        m: {
                                                            n: {
                                                                o: {
                                                                    p: {
                                                                        q: {
                                                                            r: {
                                                                                s: {
                                                                                    t: {
                                                                                        u: {
                                                                                            v: {
                                                                                                w: {
                                                                                                    switch ($this.$mode) {
                                                                                                        case 6:
                                                                                                            $this.$mode = 13;
                                                                                                            $this.$z.$msg = $rt_s(5);
                                                                                                            $this.$marker = 0;
                                                                                                            return (-2);
                                                                                                        case 7:
                                                                                                            $r = cjj_InfBlocks_proc($this.$blocks, $r);
                                                                                                            if ($r == (-3)) {
                                                                                                                $this.$mode = 13;
                                                                                                                $this.$marker = 0;
                                                                                                                continue i;
                                                                                                            }
                                                                                                            if (!$r)
                                                                                                                $r = var$2;
                                                                                                            if ($r != 1)
                                                                                                                break i;
                                                                                                            $this.$was = $this.$z.$adler.$getValue();
                                                                                                            cjj_InfBlocks_reset($this.$blocks);
                                                                                                            if (!$this.$wrap) {
                                                                                                                $this.$mode = 12;
                                                                                                                $r = var$2;
                                                                                                                continue i;
                                                                                                            }
                                                                                                            $this.$mode = 8;
                                                                                                            $r = var$2;
                                                                                                            break w;
                                                                                                        case 12:
                                                                                                            break e;
                                                                                                        case 13:
                                                                                                            return (-3);
                                                                                                        case 14:
                                                                                                            break r;
                                                                                                        case 23:
                                                                                                            try {
                                                                                                                $r = cjj_Inflate_readBytes($this, 2, $r, var$2);
                                                                                                            } catch ($$e) {
                                                                                                                $$je = $rt_wrapException($$e);
                                                                                                                if ($$je instanceof cjj_Inflate$Return) {
                                                                                                                    $e = $$je;
                                                                                                                    return $e.$r;
                                                                                                                } else {
                                                                                                                    throw $$e;
                                                                                                                }
                                                                                                            }
                                                                                                            $this.$flags = $this.$need.lo & 65535;
                                                                                                            if (($this.$flags & 255) != 8) {
                                                                                                                $this.$z.$msg = $rt_s(6);
                                                                                                                $this.$mode = 13;
                                                                                                                continue i;
                                                                                                            }
                                                                                                            if ($this.$flags & 57344) {
                                                                                                                $this.$z.$msg = $rt_s(7);
                                                                                                                $this.$mode = 13;
                                                                                                                continue i;
                                                                                                            }
                                                                                                            if ($this.$flags & 512)
                                                                                                                cjj_Inflate_checksum($this, 2, $this.$need);
                                                                                                            $this.$mode = 16;
                                                                                                            break p;
                                                                                                        case 2:
                                                                                                            break d;
                                                                                                        case 3:
                                                                                                            break c;
                                                                                                        case 4:
                                                                                                            break b;
                                                                                                        case 5:
                                                                                                            var$2 = $r;
                                                                                                            break a;
                                                                                                        case 8:
                                                                                                            break w;
                                                                                                        case 9:
                                                                                                            break v;
                                                                                                        case 10:
                                                                                                            break u;
                                                                                                        case 11:
                                                                                                            break t;
                                                                                                        case 15:
                                                                                                            break s;
                                                                                                        case 16:
                                                                                                            break p;
                                                                                                        case 17:
                                                                                                            break o;
                                                                                                        case 18:
                                                                                                            break n;
                                                                                                        case 19:
                                                                                                            break q;
                                                                                                        case 20:
                                                                                                            break l;
                                                                                                        case 21:
                                                                                                            break k;
                                                                                                        case 22:
                                                                                                            break;
                                                                                                        default:
                                                                                                            return (-2);
                                                                                                    }
                                                                                                    break j;
                                                                                                }
                                                                                                if (!$this.$z.$avail_in)
                                                                                                    return $r;
                                                                                                var$5 = $this.$z;
                                                                                                var$5.$avail_in = var$5.$avail_in - 1 | 0;
                                                                                                var$5 = $this.$z;
                                                                                                var$5.$total_in = Long_add(var$5.$total_in, Long_fromInt(1));
                                                                                                var$6 = $this.$z.$next_in.data;
                                                                                                var$5 = $this.$z;
                                                                                                var$7 = var$5.$next_in_index;
                                                                                                var$5.$next_in_index = var$7 + 1 | 0;
                                                                                                $this.$need = Long_and(Long_fromInt((var$6[var$7] & 255) << 24), new Long(4278190080, 0));
                                                                                                $this.$mode = 9;
                                                                                                $r = var$2;
                                                                                            }
                                                                                            if (!$this.$z.$avail_in)
                                                                                                return $r;
                                                                                            var$5 = $this.$z;
                                                                                            var$5.$avail_in = var$5.$avail_in - 1 | 0;
                                                                                            var$5 = $this.$z;
                                                                                            var$5.$total_in = Long_add(var$5.$total_in, Long_fromInt(1));
                                                                                            var$8 = $this.$need;
                                                                                            var$6 = $this.$z.$next_in.data;
                                                                                            var$5 = $this.$z;
                                                                                            var$7 = var$5.$next_in_index;
                                                                                            var$5.$next_in_index = var$7 + 1 | 0;
                                                                                            $this.$need = Long_add(var$8, Long_and(Long_fromInt((var$6[var$7] & 255) << 16), Long_fromInt(16711680)));
                                                                                            $this.$mode = 10;
                                                                                            $r = var$2;
                                                                                        }
                                                                                        if (!$this.$z.$avail_in)
                                                                                            return $r;
                                                                                        var$5 = $this.$z;
                                                                                        var$5.$avail_in = var$5.$avail_in - 1 | 0;
                                                                                        var$5 = $this.$z;
                                                                                        var$5.$total_in = Long_add(var$5.$total_in, Long_fromInt(1));
                                                                                        var$8 = $this.$need;
                                                                                        var$6 = $this.$z.$next_in.data;
                                                                                        var$5 = $this.$z;
                                                                                        var$7 = var$5.$next_in_index;
                                                                                        var$5.$next_in_index = var$7 + 1 | 0;
                                                                                        $this.$need = Long_add(var$8, Long_and(Long_fromInt((var$6[var$7] & 255) << 8), Long_fromInt(65280)));
                                                                                        $this.$mode = 11;
                                                                                        $r = var$2;
                                                                                    }
                                                                                    if (!$this.$z.$avail_in)
                                                                                        return $r;
                                                                                    var$5 = $this.$z;
                                                                                    var$5.$avail_in = var$5.$avail_in - 1 | 0;
                                                                                    var$5 = $this.$z;
                                                                                    var$5.$total_in = Long_add(var$5.$total_in, Long_fromInt(1));
                                                                                    var$8 = $this.$need;
                                                                                    var$6 = $this.$z.$next_in.data;
                                                                                    var$5 = $this.$z;
                                                                                    var$7 = var$5.$next_in_index;
                                                                                    var$5.$next_in_index = var$7 + 1 | 0;
                                                                                    $this.$need = Long_add(var$8, Long_and(Long_fromInt(var$6[var$7]), Long_fromInt(255)));
                                                                                    if ($this.$flags)
                                                                                        $this.$need = Long_and(Long_or(Long_or(Long_or(Long_shr(Long_and($this.$need, Long_fromInt(-16777216)), 24), Long_shr(Long_and($this.$need, Long_fromInt(16711680)), 8)), Long_shl(Long_and($this.$need, Long_fromInt(65280)), 8)), Long_shl(Long_and($this.$need, Long_fromInt(65535)), 24)), new Long(4294967295, 0));
                                                                                    if ($this.$was.lo != $this.$need.lo)
                                                                                        $this.$z.$msg = $rt_s(8);
                                                                                    else if ($this.$flags && $this.$gheader !== null)
                                                                                        $this.$gheader.$crc = $this.$need;
                                                                                    $this.$mode = 15;
                                                                                    $r = var$2;
                                                                                }
                                                                                if (!($this.$wrap && $this.$flags)) {
                                                                                    if ($this.$z.$msg === null)
                                                                                        break f;
                                                                                    if (!$this.$z.$msg.$equals($rt_s(8)))
                                                                                        break f;
                                                                                    $this.$mode = 13;
                                                                                    $this.$marker = 5;
                                                                                    continue i;
                                                                                }
                                                                                try {
                                                                                    $r = cjj_Inflate_readBytes($this, 4, $r, var$2);
                                                                                } catch ($$e) {
                                                                                    $$je = $rt_wrapException($$e);
                                                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                                                        $e = $$je;
                                                                                        return $e.$r;
                                                                                    } else {
                                                                                        throw $$e;
                                                                                    }
                                                                                }
                                                                                if ($this.$z.$msg !== null && $this.$z.$msg.$equals($rt_s(8))) {
                                                                                    $this.$mode = 13;
                                                                                    $this.$marker = 5;
                                                                                    continue i;
                                                                                }
                                                                                if (Long_eq($this.$need, Long_and($this.$z.$total_out, new Long(4294967295, 0)))) {
                                                                                    $this.$z.$msg = null;
                                                                                    break f;
                                                                                }
                                                                                $this.$z.$msg = $rt_s(9);
                                                                                $this.$mode = 13;
                                                                                continue i;
                                                                            }
                                                                            if (!$this.$wrap) {
                                                                                $this.$mode = 7;
                                                                                continue i;
                                                                            }
                                                                            try {
                                                                                $r = cjj_Inflate_readBytes($this, 2, $r, var$2);
                                                                            } catch ($$e) {
                                                                                $$je = $rt_wrapException($$e);
                                                                                if ($$je instanceof cjj_Inflate$Return) {
                                                                                    $e = $$je;
                                                                                    return $e.$r;
                                                                                } else {
                                                                                    throw $$e;
                                                                                }
                                                                            }
                                                                            if (!($this.$wrap != 4 && !($this.$wrap & 2)) && Long_eq($this.$need, Long_fromInt(35615))) {
                                                                                if ($this.$wrap == 4)
                                                                                    $this.$wrap = 2;
                                                                                $this.$z.$adler = cjj_CRC32__init_();
                                                                                cjj_Inflate_checksum($this, 2, $this.$need);
                                                                                if ($this.$gheader === null)
                                                                                    $this.$gheader = cjj_GZIPHeader__init_();
                                                                                $this.$mode = 23;
                                                                                continue i;
                                                                            }
                                                                            if ($this.$wrap & 2) {
                                                                                $this.$mode = 13;
                                                                                $this.$z.$msg = $rt_s(10);
                                                                                continue i;
                                                                            }
                                                                            $this.$flags = 0;
                                                                            $this.$method = $this.$need.lo & 255;
                                                                            $b = Long_shr($this.$need, 8).lo & 255;
                                                                            if (!($this.$wrap & 1 && !((($this.$method << 8) + $b | 0) % 31 | 0)) && ($this.$method & 15) != 8) {
                                                                                if ($this.$wrap != 4) {
                                                                                    $this.$mode = 13;
                                                                                    $this.$z.$msg = $rt_s(10);
                                                                                    continue i;
                                                                                }
                                                                                var$5 = $this.$z;
                                                                                var$5.$next_in_index = var$5.$next_in_index - 2 | 0;
                                                                                var$5 = $this.$z;
                                                                                var$5.$avail_in = var$5.$avail_in + 2 | 0;
                                                                                var$5 = $this.$z;
                                                                                var$5.$total_in = Long_sub(var$5.$total_in, Long_fromInt(2));
                                                                                $this.$wrap = 0;
                                                                                $this.$mode = 7;
                                                                                continue i;
                                                                            }
                                                                            if (($this.$method & 15) != 8) {
                                                                                $this.$mode = 13;
                                                                                $this.$z.$msg = $rt_s(6);
                                                                                continue i;
                                                                            }
                                                                            if ($this.$wrap == 4)
                                                                                $this.$wrap = 1;
                                                                            if ((($this.$method >> 4) + 8 | 0) > $this.$wbits) {
                                                                                $this.$mode = 13;
                                                                                $this.$z.$msg = $rt_s(11);
                                                                                continue i;
                                                                            }
                                                                            $this.$z.$adler = cjj_Adler32__init_();
                                                                            if ($b & 32) {
                                                                                $this.$mode = 2;
                                                                                break d;
                                                                            }
                                                                            $this.$mode = 7;
                                                                            continue i;
                                                                        }
                                                                        break m;
                                                                    }
                                                                    try {
                                                                        $r = cjj_Inflate_readBytes($this, 4, $r, var$2);
                                                                    } catch ($$e) {
                                                                        $$je = $rt_wrapException($$e);
                                                                        if ($$je instanceof cjj_Inflate$Return) {
                                                                            $e = $$je;
                                                                            return $e.$r;
                                                                        } else {
                                                                            throw $$e;
                                                                        }
                                                                    }
                                                                    if ($this.$gheader !== null)
                                                                        $this.$gheader.$time = $this.$need;
                                                                    if ($this.$flags & 512)
                                                                        cjj_Inflate_checksum($this, 4, $this.$need);
                                                                    $this.$mode = 17;
                                                                }
                                                                try {
                                                                    $r = cjj_Inflate_readBytes($this, 2, $r, var$2);
                                                                } catch ($$e) {
                                                                    $$je = $rt_wrapException($$e);
                                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                                        $e = $$je;
                                                                        return $e.$r;
                                                                    } else {
                                                                        throw $$e;
                                                                    }
                                                                }
                                                                if ($this.$gheader !== null) {
                                                                    $this.$gheader.$xflags = $this.$need.lo & 255;
                                                                    $this.$gheader.$os = $this.$need.lo >> 8 & 255;
                                                                }
                                                                if ($this.$flags & 512)
                                                                    cjj_Inflate_checksum($this, 2, $this.$need);
                                                                $this.$mode = 18;
                                                            }
                                                            if ($this.$flags & 1024) {
                                                                try {
                                                                    $r = cjj_Inflate_readBytes($this, 2, $r, var$2);
                                                                } catch ($$e) {
                                                                    $$je = $rt_wrapException($$e);
                                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                                        $e = $$je;
                                                                        return $e.$r;
                                                                    } else {
                                                                        throw $$e;
                                                                    }
                                                                }
                                                                if ($this.$gheader !== null)
                                                                    $this.$gheader.$extra = $rt_createByteArray($this.$need.lo & 65535);
                                                                if ($this.$flags & 512)
                                                                    cjj_Inflate_checksum($this, 2, $this.$need);
                                                            } else if ($this.$gheader !== null)
                                                                $this.$gheader.$extra = null;
                                                            $this.$mode = 19;
                                                        }
                                                        if ($this.$flags & 1024)
                                                            x: {
                                                                try {
                                                                    $r = cjj_Inflate_readBytes0($this, $r, var$2);
                                                                    if ($this.$gheader === null)
                                                                        break x;
                                                                    $foo = $this.$tmp_string.$toByteArray();
                                                                    var$6 = $foo.data;
                                                                    $this.$tmp_string = null;
                                                                    var$7 = var$6.length;
                                                                    if (var$7 != $this.$gheader.$extra.data.length) {
                                                                        $this.$z.$msg = $rt_s(12);
                                                                        $this.$mode = 13;
                                                                        continue i;
                                                                    }
                                                                    jl_System_arraycopy($foo, 0, $this.$gheader.$extra, 0, var$7);
                                                                    break x;
                                                                } catch ($$e) {
                                                                    $$je = $rt_wrapException($$e);
                                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                                        $e = $$je;
                                                                        return $e.$r;
                                                                    } else {
                                                                        throw $$e;
                                                                    }
                                                                }
                                                            }
                                                        else if ($this.$gheader !== null)
                                                            $this.$gheader.$extra = null;
                                                        $this.$mode = 20;
                                                    }
                                                    y: {
                                                        if ($this.$flags & 2048) {
                                                            z: {
                                                                try {
                                                                    $r = cjj_Inflate_readString($this, $r, var$2);
                                                                    if ($this.$gheader === null)
                                                                        break z;
                                                                    $this.$gheader.$name0 = $this.$tmp_string.$toByteArray();
                                                                    break z;
                                                                } catch ($$e) {
                                                                    $$je = $rt_wrapException($$e);
                                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                                        $e = $$je;
                                                                        break h;
                                                                    } else {
                                                                        throw $$e;
                                                                    }
                                                                }
                                                            }
                                                            try {
                                                                $this.$tmp_string = null;
                                                                break y;
                                                            } catch ($$e) {
                                                                $$je = $rt_wrapException($$e);
                                                                if ($$je instanceof cjj_Inflate$Return) {
                                                                    $e = $$je;
                                                                    break h;
                                                                } else {
                                                                    throw $$e;
                                                                }
                                                            }
                                                        } else if ($this.$gheader !== null)
                                                            $this.$gheader.$name0 = null;
                                                    }
                                                    $this.$mode = 21;
                                                }
                                                ba: {
                                                    if ($this.$flags & 4096) {
                                                        bb: {
                                                            try {
                                                                $r = cjj_Inflate_readString($this, $r, var$2);
                                                                if ($this.$gheader === null)
                                                                    break bb;
                                                                $this.$gheader.$comment = $this.$tmp_string.$toByteArray();
                                                                break bb;
                                                            } catch ($$e) {
                                                                $$je = $rt_wrapException($$e);
                                                                if ($$je instanceof cjj_Inflate$Return) {
                                                                    $e = $$je;
                                                                    break g;
                                                                } else {
                                                                    throw $$e;
                                                                }
                                                            }
                                                        }
                                                        try {
                                                            $this.$tmp_string = null;
                                                            break ba;
                                                        } catch ($$e) {
                                                            $$je = $rt_wrapException($$e);
                                                            if ($$je instanceof cjj_Inflate$Return) {
                                                                $e = $$je;
                                                                break g;
                                                            } else {
                                                                throw $$e;
                                                            }
                                                        }
                                                    } else if ($this.$gheader !== null)
                                                        $this.$gheader.$comment = null;
                                                }
                                                $this.$mode = 22;
                                            }
                                            if ($this.$flags & 512) {
                                                try {
                                                    $r = cjj_Inflate_readBytes($this, 2, $r, var$2);
                                                } catch ($$e) {
                                                    $$je = $rt_wrapException($$e);
                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                        $e = $$je;
                                                        return $e.$r;
                                                    } else {
                                                        throw $$e;
                                                    }
                                                }
                                                if ($this.$gheader !== null)
                                                    $this.$gheader.$hcrc = Long_and($this.$need, Long_fromInt(65535)).lo;
                                                if (Long_ne($this.$need, Long_and($this.$z.$adler.$getValue(), Long_fromInt(65535)))) {
                                                    $this.$mode = 13;
                                                    $this.$z.$msg = $rt_s(13);
                                                    $this.$marker = 5;
                                                    continue;
                                                }
                                            }
                                            $this.$z.$adler = cjj_CRC32__init_();
                                            $this.$mode = 7;
                                        }
                                        return $r;
                                    }
                                    return $e.$r;
                                }
                                return $e.$r;
                            }
                            $this.$mode = 12;
                        }
                        return 1;
                    }
                    if (!$this.$z.$avail_in)
                        return $r;
                    var$5 = $this.$z;
                    var$5.$avail_in = var$5.$avail_in - 1 | 0;
                    var$5 = $this.$z;
                    var$5.$total_in = Long_add(var$5.$total_in, Long_fromInt(1));
                    var$6 = $this.$z.$next_in.data;
                    var$5 = $this.$z;
                    var$11 = var$5.$next_in_index;
                    var$5.$next_in_index = var$11 + 1 | 0;
                    $this.$need = Long_and(Long_fromInt((var$6[var$11] & 255) << 24), new Long(4278190080, 0));
                    $this.$mode = 3;
                    $r = var$2;
                }
                if (!$this.$z.$avail_in)
                    return $r;
                var$5 = $this.$z;
                var$5.$avail_in = var$5.$avail_in - 1 | 0;
                var$5 = $this.$z;
                var$5.$total_in = Long_add(var$5.$total_in, Long_fromInt(1));
                var$8 = $this.$need;
                var$6 = $this.$z.$next_in.data;
                var$5 = $this.$z;
                var$11 = var$5.$next_in_index;
                var$5.$next_in_index = var$11 + 1 | 0;
                $this.$need = Long_add(var$8, Long_and(Long_fromInt((var$6[var$11] & 255) << 16), Long_fromInt(16711680)));
                $this.$mode = 4;
                $r = var$2;
            }
            if (!$this.$z.$avail_in)
                return $r;
            var$5 = $this.$z;
            var$5.$avail_in = var$5.$avail_in - 1 | 0;
            var$5 = $this.$z;
            var$5.$total_in = Long_add(var$5.$total_in, Long_fromInt(1));
            var$8 = $this.$need;
            var$6 = $this.$z.$next_in.data;
            var$5 = $this.$z;
            var$7 = var$5.$next_in_index;
            var$5.$next_in_index = var$7 + 1 | 0;
            $this.$need = Long_add(var$8, Long_and(Long_fromInt((var$6[var$7] & 255) << 8), Long_fromInt(65280)));
            $this.$mode = 5;
        }
        if (!$this.$z.$avail_in)
            return var$2;
        var$5 = $this.$z;
        var$5.$avail_in = var$5.$avail_in - 1 | 0;
        var$5 = $this.$z;
        var$5.$total_in = Long_add(var$5.$total_in, Long_fromInt(1));
        var$8 = $this.$need;
        var$6 = $this.$z.$next_in.data;
        var$5 = $this.$z;
        var$7 = var$5.$next_in_index;
        var$5.$next_in_index = var$7 + 1 | 0;
        $this.$need = Long_add(var$8, Long_and(Long_fromInt(var$6[var$7]), Long_fromInt(255)));
        $this.$z.$adler.$reset0($this.$need);
        $this.$mode = 6;
        return 2;
    }
    if ($f == 4 && $this.$mode == 14)
        return 0;
    return (-2);
}
function cjj_Inflate_readBytes($this, $n, $r, $f) {
    var var$4, var$5, var$6, var$7;
    if ($this.$need_bytes == (-1)) {
        $this.$need_bytes = $n;
        $this.$need = Long_ZERO;
    }
    while (true) {
        if ($this.$need_bytes <= 0) {
            if ($n == 2)
                $this.$need = Long_and($this.$need, Long_fromInt(65535));
            else if ($n == 4)
                $this.$need = Long_and($this.$need, new Long(4294967295, 0));
            $this.$need_bytes = (-1);
            return $r;
        }
        if (!$this.$z.$avail_in)
            break;
        var$4 = $this.$z;
        var$4.$avail_in = var$4.$avail_in - 1 | 0;
        var$4 = $this.$z;
        var$4.$total_in = Long_add(var$4.$total_in, Long_fromInt(1));
        var$5 = $this.$need;
        var$6 = $this.$z.$next_in.data;
        var$4 = $this.$z;
        var$7 = var$4.$next_in_index;
        var$4.$next_in_index = var$7 + 1 | 0;
        $this.$need = Long_or(var$5, Long_fromInt((var$6[var$7] & 255) << (($n - $this.$need_bytes | 0) * 8 | 0)));
        $this.$need_bytes = $this.$need_bytes - 1 | 0;
        $r = $f;
    }
    $rt_throw(cjj_Inflate$Return__init_($this, $r));
}
function cjj_Inflate_readString($this, $r, $f) {
    var var$3, var$4;
    if ($this.$tmp_string === null)
        $this.$tmp_string = ji_ByteArrayOutputStream__init_();
    while (true) {
        if (!$this.$z.$avail_in)
            $rt_throw(cjj_Inflate$Return__init_($this, $r));
        var$3 = $this.$z;
        var$3.$avail_in = var$3.$avail_in - 1 | 0;
        var$3 = $this.$z;
        var$3.$total_in = Long_add(var$3.$total_in, Long_fromInt(1));
        var$4 = $this.$z.$next_in.data[$this.$z.$next_in_index];
        if (var$4)
            $this.$tmp_string.$write($this.$z.$next_in, $this.$z.$next_in_index, 1);
        $this.$z.$adler.$update0($this.$z.$next_in, $this.$z.$next_in_index, 1);
        var$3 = $this.$z;
        var$3.$next_in_index = var$3.$next_in_index + 1 | 0;
        if (!var$4)
            break;
        $r = $f;
    }
    return $f;
}
function cjj_Inflate_readBytes0($this, $r, $f) {
    var var$3;
    if ($this.$tmp_string === null)
        $this.$tmp_string = ji_ByteArrayOutputStream__init_();
    while (Long_gt($this.$need, Long_ZERO)) {
        if (!$this.$z.$avail_in)
            $rt_throw(cjj_Inflate$Return__init_($this, $r));
        var$3 = $this.$z;
        var$3.$avail_in = var$3.$avail_in - 1 | 0;
        var$3 = $this.$z;
        var$3.$total_in = Long_add(var$3.$total_in, Long_fromInt(1));
        $this.$tmp_string.$write($this.$z.$next_in, $this.$z.$next_in_index, 1);
        $this.$z.$adler.$update0($this.$z.$next_in, $this.$z.$next_in_index, 1);
        var$3 = $this.$z;
        var$3.$next_in_index = var$3.$next_in_index + 1 | 0;
        $this.$need = Long_sub($this.$need, Long_fromInt(1));
        $r = $f;
    }
    return $r;
}
function cjj_Inflate_checksum($this, $n, $v) {
    var $i;
    $i = 0;
    while ($i < $n) {
        $this.$crcbuf.data[$i] = Long_and($v, Long_fromInt(255)).lo << 24 >> 24;
        $v = Long_shr($v, 8);
        $i = $i + 1 | 0;
    }
    $this.$z.$adler.$update0($this.$crcbuf, 0, $n);
}
function cjj_Inflate__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createByteArray(4);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 0;
    var$2[2] = (-1);
    var$2[3] = (-1);
    cjj_Inflate_mark = var$1;
}
function it_Phases$lambda$null$20$lambda$_47_0() {
    var a = this; jl_Object.call(a);
    a.$_00 = 0.0;
    a.$_10 = 0;
}
function it_Phases$lambda$null$20$lambda$_47_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$lambda$null$20$lambda$_47_0();
    it_Phases$lambda$null$20$lambda$_47_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$lambda$null$20$lambda$_47_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_00 = var$1;
    var$0.$_10 = var$2;
}
function it_Phases$lambda$null$20$lambda$_47_0_run(var$0) {
    it_Phases_lambda$null$19(var$0.$_00, var$0.$_10);
}
function iaaf_Floatc() {
}
function it_Phases$lambda$null$22$lambda$_45_0() {
    jl_Object.call(this);
    this.$_01 = null;
}
function it_Phases$lambda$null$22$lambda$_45_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$null$22$lambda$_45_0();
    it_Phases$lambda$null$22$lambda$_45_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$null$22$lambda$_45_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_01 = var$1;
}
function it_Phases$lambda$null$22$lambda$_45_0_get(var$0, var$1) {
    var$0.$_01.$shoot(var$1);
}
function iaau_Disposable() {
}
function iaagg_VertexData() {
}
function iaagg_VertexArray() {
    var a = this; jl_Object.call(a);
    a.$attributes = null;
    a.$buffer = null;
    a.$bufferHandle = 0;
    a.$isStatic = 0;
    a.$usage = 0;
    a.$isDirty = 0;
    a.$isBound = 0;
}
function iaagg_VertexArray__init_(var_0, var_1) {
    var var_2 = new iaagg_VertexArray();
    iaagg_VertexArray__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaagg_VertexArray__init_1(var_0, var_1, var_2) {
    var var_3 = new iaagg_VertexArray();
    iaagg_VertexArray__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaagg_VertexArray__init_0($this, $numVertices, $attributes) {
    iaagg_VertexArray__init_2($this, 0, $numVertices, $attributes);
}
function iaagg_VertexArray__init_2($this, $isStatic, $numVertices, $attributes) {
    jl_Object__init_0($this);
    $this.$isDirty = 0;
    $this.$isBound = 0;
    $this.$isStatic = $isStatic;
    $this.$attributes = $attributes;
    $this.$buffer = iaau_BufferUtils_newFloatBuffer($rt_imul($this.$attributes.$vertexSize / 4 | 0, $numVertices));
    $this.$buffer.$flip();
    iaa_Core_$callClinit();
    $this.$bufferHandle = iaa_Core_gl20.$glGenBuffer();
    $this.$usage = !$isStatic ? 35048 : 35044;
}
function iaagg_VertexArray_getNumVertices($this) {
    return jn_Buffer_limit($this.$buffer) / ($this.$attributes.$vertexSize / 4 | 0) | 0;
}
function iaagg_VertexArray_getBuffer($this) {
    $this.$isDirty = 1;
    return $this.$buffer;
}
function iaagg_VertexArray_bufferChanged($this) {
    if ($this.$isBound) {
        iaa_Core_$callClinit();
        iaa_Core_gl20.$glBufferData(34962, jn_Buffer_limit($this.$buffer), $this.$buffer, $this.$usage);
        $this.$isDirty = 0;
    }
}
function iaagg_VertexArray_setVertices($this, $vertices, $offset, $count) {
    $this.$isDirty = 1;
    iaau_BufferUtils_copy($vertices, $this.$buffer, $count, $offset);
    $this.$buffer.$position(0);
    $this.$buffer.$limit0($count);
    iaagg_VertexArray_bufferChanged($this);
}
function iaagg_VertexArray_bind($this, $shader, $locations) {
    var $gl, $numAttributes, $i, var$6, $attribute, $location;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    $gl.$glBindBuffer(34962, $this.$bufferHandle);
    if ($this.$isDirty) {
        $gl.$glBufferData(34962, jn_Buffer_limit($this.$buffer), $this.$buffer, $this.$usage);
        $this.$isDirty = 0;
    }
    a: {
        $numAttributes = iaag_VertexAttributes_size($this.$attributes);
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                var$6 = $locations.data;
                $attribute = iaag_VertexAttributes_get($this.$attributes, $i);
                $location = var$6[$i];
                if ($location >= 0) {
                    $shader.$enableVertexAttribute($location);
                    if ($attribute.$usage0 != 4)
                        $shader.$setVertexAttribute($location, $attribute.$numComponents, 5126, 0, $this.$attributes.$vertexSize, $attribute.$offset);
                    else
                        $shader.$setVertexAttribute($location, $attribute.$numComponents, 5121, 1, $this.$attributes.$vertexSize, $attribute.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < $numAttributes) {
            $attribute = iaag_VertexAttributes_get($this.$attributes, $i);
            $location = $shader.$getAttributeLocation($attribute.$alias);
            if ($location >= 0) {
                $shader.$enableVertexAttribute($location);
                if ($attribute.$usage0 != 4)
                    $shader.$setVertexAttribute($location, $attribute.$numComponents, 5126, 0, $this.$attributes.$vertexSize, $attribute.$offset);
                else
                    $shader.$setVertexAttribute($location, $attribute.$numComponents, 5121, 1, $this.$attributes.$vertexSize, $attribute.$offset);
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$isBound = 1;
}
function iaagg_VertexArray_unbind($this, $shader, $locations) {
    var $gl, $numAttributes, $i, $location;
    a: {
        iaa_Core_$callClinit();
        $gl = iaa_Core_gl20;
        $numAttributes = iaag_VertexAttributes_size($this.$attributes);
        if ($locations === null) {
            $i = 0;
            while ($i < $numAttributes) {
                $shader.$disableVertexAttribute(iaag_VertexAttributes_get($this.$attributes, $i).$alias);
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                $location = $locations.data[$i];
                if ($location >= 0)
                    $shader.$disableVertexAttribute0($location);
                $i = $i + 1 | 0;
            }
        }
    }
    $gl.$glBindBuffer(34962, 0);
    $this.$isBound = 0;
}
function iaagg_VertexArray_dispose($this) {
    var $gl;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    $gl.$glBindBuffer(34962, 0);
    $gl.$glDeleteBuffer($this.$bufferHandle);
    $this.$bufferHandle = 0;
}
function jnci_BufferedEncoder$Controller() {
    var a = this; jl_Object.call(a);
    a.$in0 = null;
    a.$out = null;
    a.$inPosition = 0;
    a.$outPosition = 0;
}
function jnci_BufferedEncoder$Controller__init_(var_0, var_1) {
    var var_2 = new jnci_BufferedEncoder$Controller();
    jnci_BufferedEncoder$Controller__init_0(var_2, var_0, var_1);
    return var_2;
}
function jnci_BufferedEncoder$Controller__init_0($this, $in, $out) {
    jl_Object__init_0($this);
    $this.$in0 = $in;
    $this.$out = $out;
}
function jnci_BufferedEncoder$Controller_hasMoreInput($this) {
    return jn_Buffer_hasRemaining($this.$in0);
}
function jnci_BufferedEncoder$Controller_hasMoreOutput($this, $sz) {
    return jn_Buffer_remaining($this.$out) < $sz ? 0 : 1;
}
function jnci_BufferedEncoder$Controller_setInPosition($this, $inPosition) {
    $this.$inPosition = $inPosition;
}
function jnci_BufferedEncoder$Controller_setOutPosition($this, $outPosition) {
    $this.$outPosition = $outPosition;
}
function it_Phases$lambda$null$17$lambda$_50_0() {
    var a = this; jl_Object.call(a);
    a.$_02 = 0.0;
    a.$_11 = 0;
}
function it_Phases$lambda$null$17$lambda$_50_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$lambda$null$17$lambda$_50_0();
    it_Phases$lambda$null$17$lambda$_50_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$lambda$null$17$lambda$_50_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_02 = var$1;
    var$0.$_11 = var$2;
}
function it_Phases$lambda$null$17$lambda$_50_0_run(var$0) {
    it_Phases_lambda$null$16(var$0.$_02, var$0.$_11);
}
function it_Phases$lambda$null$37$lambda$_30_0() {
    var a = this; jl_Object.call(a);
    a.$_03 = 0.0;
    a.$_12 = 0;
}
function it_Phases$lambda$null$37$lambda$_30_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$lambda$null$37$lambda$_30_0();
    it_Phases$lambda$null$37$lambda$_30_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$lambda$null$37$lambda$_30_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_03 = var$1;
    var$0.$_12 = var$2;
}
function it_Phases$lambda$null$37$lambda$_30_0_run(var$0) {
    it_Phases_lambda$null$36(var$0.$_03, var$0.$_12);
}
function iaabt_TeaFileLoader$Task() {
}
function otj_JSObject() {
}
function otj_JSObject_cast$static($this) {
    return $this;
}
function otjde_EventListener() {
}
function iaabt_TeaFileLoader$LoadImageTask() {
    var a = this; jl_Object.call(a);
    a.$entry = null;
    a.$path = null;
    a.$handler = null;
}
function iaabt_TeaFileLoader$LoadImageTask__init_(var_0, var_1) {
    var var_2 = new iaabt_TeaFileLoader$LoadImageTask();
    iaabt_TeaFileLoader$LoadImageTask__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaabt_TeaFileLoader$LoadImageTask__init_0($this, $entry, $path) {
    jl_Object__init_0($this);
    $this.$entry = $entry;
    $this.$path = $path;
}
function iaabt_TeaFileLoader$LoadImageTask_run($this, $handler) {
    var $image, var$3;
    $this.$handler = $handler;
    $image = iaabt_TeaFileLoader_access$100().document.createElement("img");
    iaabt_TeaFileLoader_access$100().document.body.appendChild($image);
    $image.style.setProperty("display", "none");
    var$3 = $rt_ustr($this.$path);
    $image.src = var$3;
    $image.addEventListener("load", otji_JS_function($this, "handleEvent"));
    $this.$entry.$imageElem = $image;
}
function iaabt_TeaFileLoader$LoadImageTask_handleEvent($this, $evt) {
    $this.$handler.$complete0();
}
function iaabt_TeaFileLoader$LoadImageTask_handleEvent$exported$0(var$0, var$1) {
    var$0.$handleEvent(var$1);
}
function ji_Serializable() {
}
function jl_Number() {
    jl_Object.call(this);
}
function jl_Number__init_() {
    var var_0 = new jl_Number();
    jl_Number__init_0(var_0);
    return var_0;
}
function jl_Number__init_0($this) {
    jl_Object__init_0($this);
}
function jl_Comparable() {
}
function jl_Integer() {
    jl_Number.call(this);
    this.$value = 0;
}
var jl_Integer_TYPE = null;
var jl_Integer_integerCache = null;
function jl_Integer_$callClinit() {
    jl_Integer_$callClinit = $rt_eraseClinit(jl_Integer);
    jl_Integer__clinit_();
}
function jl_Integer__init_(var_0) {
    var var_1 = new jl_Integer();
    jl_Integer__init_0(var_1, var_0);
    return var_1;
}
function jl_Integer__init_0($this, $value) {
    jl_Integer_$callClinit();
    jl_Number__init_0($this);
    $this.$value = $value;
}
function jl_Integer_toString($i, $radix) {
    jl_Integer_$callClinit();
    if (!($radix >= 2 && $radix <= 36))
        $radix = 10;
    return jl_AbstractStringBuilder__init_(20).$append2($i, $radix).$toString();
}
function jl_Integer_toHexString($i) {
    jl_Integer_$callClinit();
    return otci_IntegerUtil_toUnsignedLogRadixString($i, 4);
}
function jl_Integer_toString0($i) {
    jl_Integer_$callClinit();
    return jl_Integer_toString($i, 10);
}
function jl_Integer_parseInt($s, $radix) {
    var $negative, $index, $value, var$6, $digit;
    jl_Integer_$callClinit();
    if ($radix >= 2 && $radix <= 36) {
        if ($s !== null && !$s.$isEmpty()) {
            a: {
                $negative = 0;
                $index = 0;
                switch ($s.$charAt(0)) {
                    case 43:
                        $index = 1;
                        break a;
                    case 45:
                        $negative = 1;
                        $index = 1;
                        break a;
                    default:
                }
            }
            $value = 0;
            if ($index == $s.$length())
                $rt_throw(jl_NumberFormatException__init_());
            while ($index < $s.$length()) {
                var$6 = $index + 1 | 0;
                $digit = jl_Character_getNumericValue($s.$charAt($index));
                if ($digit < 0)
                    $rt_throw(jl_NumberFormatException__init_0(jl_StringBuilder__init_().$append($rt_s(14)).$append($s).$toString()));
                if ($digit >= $radix)
                    $rt_throw(jl_NumberFormatException__init_0(jl_StringBuilder__init_().$append($rt_s(15)).$append3($radix).$append($rt_s(16)).$append($s).$toString()));
                $value = $rt_imul($radix, $value) + $digit | 0;
                if ($value < 0) {
                    if (var$6 == $s.$length() && $value == (-2147483648) && $negative)
                        return (-2147483648);
                    $rt_throw(jl_NumberFormatException__init_0(jl_StringBuilder__init_().$append($rt_s(17)).$append($s).$toString()));
                }
                $index = var$6;
            }
            if ($negative)
                $value =  -$value;
            return $value;
        }
        $rt_throw(jl_NumberFormatException__init_0($rt_s(18)));
    }
    $rt_throw(jl_NumberFormatException__init_0(jl_StringBuilder__init_().$append($rt_s(19)).$append3($radix).$toString()));
}
function jl_Integer_parseInt0($s) {
    jl_Integer_$callClinit();
    return jl_Integer_parseInt($s, 10);
}
function jl_Integer_valueOf($s, $radix) {
    jl_Integer_$callClinit();
    return jl_Integer_valueOf0(jl_Integer_parseInt($s, $radix));
}
function jl_Integer_valueOf1($s) {
    jl_Integer_$callClinit();
    return jl_Integer_valueOf($s, 10);
}
function jl_Integer_valueOf0($i) {
    jl_Integer_$callClinit();
    if ($i >= (-128) && $i <= 127) {
        jl_Integer_ensureIntegerCache();
        return jl_Integer_integerCache.data[$i + 128 | 0];
    }
    return jl_Integer__init_($i);
}
function jl_Integer_ensureIntegerCache() {
    var $j;
    jl_Integer_$callClinit();
    a: {
        if (jl_Integer_integerCache === null) {
            jl_Integer_integerCache = $rt_createArray(jl_Integer, 256);
            $j = 0;
            while (true) {
                if ($j >= jl_Integer_integerCache.data.length)
                    break a;
                jl_Integer_integerCache.data[$j] = jl_Integer__init_($j - 128 | 0);
                $j = $j + 1 | 0;
            }
        }
    }
}
function jl_Integer_intValue($this) {
    return $this.$value;
}
function jl_Integer_toString1($this) {
    return jl_Integer_toString0($this.$value);
}
function jl_Integer_hashCode($this) {
    return $this.$value >>> 4 ^ $this.$value << 28 ^ $this.$value << 8 ^ $this.$value >>> 24;
}
function jl_Integer_equals($this, $other) {
    if ($this === $other)
        return 1;
    return $other instanceof jl_Integer && $other.$value == $this.$value ? 1 : 0;
}
function jl_Integer_compare(var$1, var$2) {
    jl_Integer_$callClinit();
    return $rt_compare(var$1, var$2);
}
function jl_Integer_numberOfLeadingZeros($i) {
    var $n, var$3, var$4;
    jl_Integer_$callClinit();
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i >>> 16;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    var$4 = var$3 >>> 8;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 8;
    var$3 = var$4 >>> 4;
    if (!var$3)
        var$3 = var$4;
    else
        $n = $n | 4;
    var$4 = var$3 >>> 2;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 2;
    if (var$4 >>> 1)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
}
function jl_Integer_numberOfTrailingZeros($i) {
    var $n, var$3, var$4;
    jl_Integer_$callClinit();
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i << 16;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    var$4 = var$3 << 8;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 8;
    var$3 = var$4 << 4;
    if (!var$3)
        var$3 = var$4;
    else
        $n = $n | 4;
    var$4 = var$3 << 2;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 2;
    if (var$4 << 1)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
}
function jl_Integer_rotateLeft($i, $distance) {
    var var$3;
    jl_Integer_$callClinit();
    var$3 = $distance & 31;
    return $i << var$3 | $i >>> (32 - var$3 | 0);
}
function jl_Integer__clinit_() {
    jl_Integer_TYPE = $rt_cls($rt_intcls());
}
function iaagg_GLFrameBuffer$GLFrameBufferBuilder() {
    var a = this; jl_Object.call(a);
    a.$width1 = 0;
    a.$height1 = 0;
    a.$textureAttachmentSpecs = null;
    a.$stencilRenderBufferSpec = null;
    a.$depthRenderBufferSpec = null;
    a.$packedStencilDepthRenderBufferSpec = null;
    a.$hasStencilRenderBuffer = 0;
    a.$hasDepthRenderBuffer = 0;
    a.$hasPackedStencilDepthRenderBuffer = 0;
}
function iaagg_GLFrameBuffer$GLFrameBufferBuilder__init_(var_0, var_1) {
    var var_2 = new iaagg_GLFrameBuffer$GLFrameBufferBuilder();
    iaagg_GLFrameBuffer$GLFrameBufferBuilder__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaagg_GLFrameBuffer$GLFrameBufferBuilder__init_0($this, $width, $height) {
    jl_Object__init_0($this);
    $this.$textureAttachmentSpecs = iaac_Array__init_0();
    $this.$width1 = $width;
    $this.$height1 = $height;
}
function iaagg_GLFrameBuffer$GLFrameBufferBuilder_addColorTextureAttachment($this, $internalFormat, $format, $type) {
    $this.$textureAttachmentSpecs.$add1(iaagg_GLFrameBuffer$FrameBufferTextureAttachmentSpec__init_($internalFormat, $format, $type));
    return $this;
}
function iaagg_GLFrameBuffer$GLFrameBufferBuilder_addBasicColorTextureAttachment($this, $format) {
    var $glFormat, $glType;
    $glFormat = iaag_Pixmap$Format_toGlFormat($format);
    $glType = iaag_Pixmap$Format_toGlType($format);
    return $this.$addColorTextureAttachment($glFormat, $glFormat, $glType);
}
function iaagg_GLFrameBuffer$GLFrameBufferBuilder_addDepthRenderBuffer($this, $internalFormat) {
    $this.$depthRenderBufferSpec = iaagg_GLFrameBuffer$FrameBufferRenderBufferAttachmentSpec__init_($internalFormat);
    $this.$hasDepthRenderBuffer = 1;
    return $this;
}
function iaagg_GLFrameBuffer$GLFrameBufferBuilder_addStencilRenderBuffer($this, $internalFormat) {
    $this.$stencilRenderBufferSpec = iaagg_GLFrameBuffer$FrameBufferRenderBufferAttachmentSpec__init_($internalFormat);
    $this.$hasStencilRenderBuffer = 1;
    return $this;
}
function iaagg_GLFrameBuffer$GLFrameBufferBuilder_addBasicDepthRenderBuffer($this) {
    return $this.$addDepthRenderBuffer(33189);
}
function iaagg_GLFrameBuffer$GLFrameBufferBuilder_addBasicStencilRenderBuffer($this) {
    return $this.$addStencilRenderBuffer(36168);
}
function iaamg_Geometry() {
    jl_Object.call(this);
}
var iaamg_Geometry_d4 = null;
var iaamg_Geometry_d8 = null;
var iaamg_Geometry_d8edge = null;
var iaamg_Geometry_tmp1 = null;
var iaamg_Geometry_tmp2 = null;
var iaamg_Geometry_tmp3 = null;
function iaamg_Geometry_$callClinit() {
    iaamg_Geometry_$callClinit = $rt_eraseClinit(iaamg_Geometry);
    iaamg_Geometry__clinit_();
}
function iaamg_Geometry_raycast($x0f, $y0f, $x1, $y1, $cons) {
    var $dx, $dy, $sx, $sy, $err, $e2;
    iaamg_Geometry_$callClinit();
    $dx = jl_Math_abs($x1 - $x0f | 0);
    $dy = jl_Math_abs($y1 - $y0f | 0);
    $sx = $x0f >= $x1 ? (-1) : 1;
    $sy = $y0f >= $y1 ? (-1) : 1;
    $err = $dx - $dy | 0;
    while (!$cons.$accept($x0f, $y0f)) {
        if ($x0f == $x1 && $y0f == $y1)
            return 0;
        $e2 = 2 * $err | 0;
        if ($e2 >  -$dy) {
            $err = $err - $dy | 0;
            $x0f = $x0f + $sx | 0;
        }
        if ($e2 >= $dx)
            continue;
        $err = $err + $dx | 0;
        $y0f = $y0f + $sy | 0;
    }
    return 1;
}
function iaamg_Geometry_overlap($a, $b, $x) {
    var $penetration, $ax, $bx, $ay, $by, $nx, $ny, $aex, $bex, $xoverlap, $aey, $bey, $yoverlap, $percent, $slop, $m, $cx, $cy;
    iaamg_Geometry_$callClinit();
    $penetration = 0.0;
    $ax = $a.$x1 + $a.$width0 / 2.0;
    $bx = $b.$x1 + $b.$width0 / 2.0;
    $ay = $a.$y1 + $a.$height0 / 2.0;
    $by = $b.$y1 + $b.$height0 / 2.0;
    $nx = $ax - $bx;
    $ny = $ay - $by;
    $aex = $a.$width0 / 2.0;
    $bex = $b.$width0 / 2.0;
    $xoverlap = $aex + $bex - jl_Math_abs0($nx);
    if (jl_Math_abs0($xoverlap) <= 0.0)
        $xoverlap = $penetration;
    else {
        $aey = $a.$height0 / 2.0;
        $bey = $b.$height0 / 2.0;
        $yoverlap = $aey + $bey - jl_Math_abs0($ny);
        if (jl_Math_abs0($yoverlap) <= 0.0)
            $xoverlap = $penetration;
        else if (jl_Math_abs0($xoverlap) >= jl_Math_abs0($yoverlap)) {
            iaamg_Geometry_tmp1.$x0 = 0.0;
            iaamg_Geometry_tmp1.$y0 = $ny >= 0.0 ? (-1.0) : 1.0;
            $xoverlap = $yoverlap;
        } else {
            iaamg_Geometry_tmp1.$x0 = $nx >= 0.0 ? (-1.0) : 1.0;
            iaamg_Geometry_tmp1.$y0 = 0.0;
        }
    }
    $percent = 1.0;
    $slop = 0.0;
    $m = jl_Math_max($xoverlap - $slop, 0.0);
    $cx = $m * iaamg_Geometry_tmp1.$x0 * $percent;
    $cy = $m * iaamg_Geometry_tmp1.$y0 * $percent;
    iaamg_Geometry_tmp1.$x0 =  -$cx;
    iaamg_Geometry_tmp1.$y0 =  -$cy;
    return iaamg_Geometry_tmp1;
}
function iaamg_Geometry__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createArray(iaamg_Point2, 4);
    var$2 = var$1.data;
    var$2[0] = iaamg_Point2__init_(1, 0);
    var$2[1] = iaamg_Point2__init_(0, 1);
    var$2[2] = iaamg_Point2__init_((-1), 0);
    var$2[3] = iaamg_Point2__init_(0, (-1));
    iaamg_Geometry_d4 = var$1;
    var$1 = $rt_createArray(iaamg_Point2, 8);
    var$2 = var$1.data;
    var$2[0] = iaamg_Point2__init_(1, 0);
    var$2[1] = iaamg_Point2__init_(1, 1);
    var$2[2] = iaamg_Point2__init_(0, 1);
    var$2[3] = iaamg_Point2__init_((-1), 1);
    var$2[4] = iaamg_Point2__init_((-1), 0);
    var$2[5] = iaamg_Point2__init_((-1), (-1));
    var$2[6] = iaamg_Point2__init_(0, (-1));
    var$2[7] = iaamg_Point2__init_(1, (-1));
    iaamg_Geometry_d8 = var$1;
    var$1 = $rt_createArray(iaamg_Point2, 4);
    var$2 = var$1.data;
    var$2[0] = iaamg_Point2__init_(1, 1);
    var$2[1] = iaamg_Point2__init_((-1), 1);
    var$2[2] = iaamg_Point2__init_((-1), (-1));
    var$2[3] = iaamg_Point2__init_(1, (-1));
    iaamg_Geometry_d8edge = var$1;
    iaamg_Geometry_tmp1 = iaamg_Vector2__init_0();
    iaamg_Geometry_tmp2 = iaamg_Vector2__init_0();
    iaamg_Geometry_tmp3 = iaamg_Vector2__init_0();
}
function it_Phases$1$lambda$$18$lambda$_6_0() {
    jl_Object.call(this);
}
function it_Phases$1$lambda$$18$lambda$_6_0__init_() {
    var var_0 = new it_Phases$1$lambda$$18$lambda$_6_0();
    it_Phases$1$lambda$$18$lambda$_6_0__init_0(var_0);
    return var_0;
}
function it_Phases$1$lambda$$18$lambda$_6_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$1$lambda$$18$lambda$_6_0_run(var$0) {
    it_Phases$1_lambda$null$17();
}
function it_Phases$lambda$null$46$lambda$_21_0() {
    var a = this; jl_Object.call(a);
    a.$_04 = 0.0;
    a.$_13 = 0.0;
}
function it_Phases$lambda$null$46$lambda$_21_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$lambda$null$46$lambda$_21_0();
    it_Phases$lambda$null$46$lambda$_21_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$lambda$null$46$lambda$_21_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_04 = var$1;
    var$0.$_13 = var$2;
}
function it_Phases$lambda$null$46$lambda$_21_0_run(var$0) {
    it_Phases_lambda$null$45(var$0.$_04, var$0.$_13);
}
function it_Phases$5$lambda$null$2$lambda$_20_0() {
    var a = this; jl_Object.call(a);
    a.$_05 = 0;
    a.$_14 = null;
}
function it_Phases$5$lambda$null$2$lambda$_20_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$5$lambda$null$2$lambda$_20_0();
    it_Phases$5$lambda$null$2$lambda$_20_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$5$lambda$null$2$lambda$_20_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_05 = var$1;
    var$0.$_14 = var$2;
}
function it_Phases$5$lambda$null$2$lambda$_20_0_run(var$0) {
    it_Phases$5_lambda$null$1(var$0.$_05, var$0.$_14);
}
function jur_AbstractCharClass$LazyAlpha() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyAlpha__init_() {
    var var_0 = new jur_AbstractCharClass$LazyAlpha();
    jur_AbstractCharClass$LazyAlpha__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyAlpha__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyAlpha_computeValue($this) {
    return jur_CharClass__init_().$add0(97, 122).$add0(65, 90);
}
function iaaf_Prov() {
}
function iaasul_Table$_clinit_$lambda$_113_0() {
    jl_Object.call(this);
}
function iaasul_Table$_clinit_$lambda$_113_0__init_() {
    var var_0 = new iaasul_Table$_clinit_$lambda$_113_0();
    iaasul_Table$_clinit_$lambda$_113_0__init_0(var_0);
    return var_0;
}
function iaasul_Table$_clinit_$lambda$_113_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaasul_Table$_clinit_$lambda$_113_0_get(var$0) {
    return iaasul_Table$_clinit_$lambda$_113_0_get0(var$0);
}
function iaasul_Table$_clinit_$lambda$_113_0_get0(var$0) {
    return iaasul_Cell__init_();
}
function it_Phases$lambda$null$57$lambda$_10_0() {
    jl_Object.call(this);
}
function it_Phases$lambda$null$57$lambda$_10_0__init_() {
    var var_0 = new it_Phases$lambda$null$57$lambda$_10_0();
    it_Phases$lambda$null$57$lambda$_10_0__init_0(var_0);
    return var_0;
}
function it_Phases$lambda$null$57$lambda$_10_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$lambda$null$57$lambda$_10_0_get(var$0, var$1) {
    it_Phases_lambda$null$56(var$1);
}
function jur_AbstractCharClass$LazyWord() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyWord__init_() {
    var var_0 = new jur_AbstractCharClass$LazyWord();
    jur_AbstractCharClass$LazyWord__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyWord__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyWord_computeValue($this) {
    return jur_CharClass__init_().$add0(97, 122).$add0(65, 90).$add0(48, 57).$add(95);
}
function jur_AbstractCharClass$LazyNonWord() {
    jur_AbstractCharClass$LazyWord.call(this);
}
function jur_AbstractCharClass$LazyNonWord__init_() {
    var var_0 = new jur_AbstractCharClass$LazyNonWord();
    jur_AbstractCharClass$LazyNonWord__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonWord__init_0($this) {
    jur_AbstractCharClass$LazyWord__init_0($this);
}
function jur_AbstractCharClass$LazyNonWord_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyWord_computeValue($this).$setNegative(1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function it_Phases$3$lambda$null$22$lambda$_10_0() {
    jl_Object.call(this);
}
function it_Phases$3$lambda$null$22$lambda$_10_0__init_() {
    var var_0 = new it_Phases$3$lambda$null$22$lambda$_10_0();
    it_Phases$3$lambda$null$22$lambda$_10_0__init_0(var_0);
    return var_0;
}
function it_Phases$3$lambda$null$22$lambda$_10_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$3$lambda$null$22$lambda$_10_0_get(var$0, var$1) {
    it_Phases$3_lambda$null$21(var$1);
}
function it_Phases$3$lambda$null$20$lambda$_12_0() {
    jl_Object.call(this);
    this.$_06 = null;
}
function it_Phases$3$lambda$null$20$lambda$_12_0__init_(var_0) {
    var var_1 = new it_Phases$3$lambda$null$20$lambda$_12_0();
    it_Phases$3$lambda$null$20$lambda$_12_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$3$lambda$null$20$lambda$_12_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_06 = var$1;
}
function it_Phases$3$lambda$null$20$lambda$_12_0_get(var$0, var$1) {
    var$0.$_06.$shoot(var$1);
}
function jur_AbstractSet() {
    var a = this; jl_Object.call(a);
    a.$next = null;
    a.$isSecondPassVisited = 0;
    a.$index = null;
    a.$type0 = 0;
}
var jur_AbstractSet_counter = 0;
function jur_AbstractSet_$callClinit() {
    jur_AbstractSet_$callClinit = $rt_eraseClinit(jur_AbstractSet);
    jur_AbstractSet__clinit_();
}
function jur_AbstractSet__init_() {
    var var_0 = new jur_AbstractSet();
    jur_AbstractSet__init_0(var_0);
    return var_0;
}
function jur_AbstractSet__init_1(var_0) {
    var var_1 = new jur_AbstractSet();
    jur_AbstractSet__init_2(var_1, var_0);
    return var_1;
}
function jur_AbstractSet__init_0($this) {
    var var$1, var$2;
    jur_AbstractSet_$callClinit();
    jl_Object__init_0($this);
    var$1 = new jl_Integer;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    jl_Integer__init_0(var$1, var$2);
    $this.$index = var$1.$toString();
}
function jur_AbstractSet__init_2($this, $n) {
    var var$2, var$3;
    jur_AbstractSet_$callClinit();
    jl_Object__init_0($this);
    var$2 = new jl_Integer;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    jl_Integer__init_0(var$2, var$3);
    $this.$index = var$2.$toString();
    $this.$next = $n;
}
function jur_AbstractSet_find($this, $stringIndex, $testString, $matchResult) {
    var $length;
    $length = $matchResult.$getRightBound();
    while (true) {
        if ($stringIndex > $length)
            return (-1);
        if ($this.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
}
function jur_AbstractSet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($this.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
}
function jur_AbstractSet_setType($this, $type) {
    $this.$type0 = $type;
}
function jur_AbstractSet_getType($this) {
    return $this.$type0;
}
function jur_AbstractSet_getQualifiedName($this) {
    return jl_StringBuilder__init_().$append($rt_s(20)).$append($this.$index).$append($rt_s(21)).$append($this.$getName()).$append($rt_s(22)).$toString();
}
function jur_AbstractSet_toString($this) {
    return $this.$getQualifiedName();
}
function jur_AbstractSet_getNext($this) {
    return $this.$next;
}
function jur_AbstractSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_AbstractSet_first($this, $set) {
    return 1;
}
function jur_AbstractSet_processBackRefReplacement($this) {
    return null;
}
function jur_AbstractSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$next !== null) {
        if (!$this.$next.$isSecondPassVisited) {
            $set = $this.$next.$processBackRefReplacement();
            if ($set !== null) {
                $this.$next.$isSecondPassVisited = 1;
                $this.$next = $set;
            }
            $this.$next.$processSecondPass();
        } else if ($this.$next instanceof jur_SingleSet && $this.$next.$fSet.$isBackReferenced)
            $this.$next = $this.$next.$next;
    }
}
function jur_AbstractSet__clinit_() {
    jur_AbstractSet_counter = 1;
}
function jur_LeafSet() {
    jur_AbstractSet.call(this);
    this.$charCount = 0;
}
function jur_LeafSet__init_(var_0) {
    var var_1 = new jur_LeafSet();
    jur_LeafSet__init_0(var_1, var_0);
    return var_1;
}
function jur_LeafSet__init_1() {
    var var_0 = new jur_LeafSet();
    jur_LeafSet__init_2(var_0);
    return var_0;
}
function jur_LeafSet__init_0($this, $next) {
    jur_AbstractSet__init_2($this, $next);
    $this.$charCount = 1;
    $this.$setType(1);
}
function jur_LeafSet__init_2($this) {
    jur_AbstractSet__init_0($this);
    $this.$charCount = 1;
}
function jur_LeafSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    if (($stringIndex + $this.$charCount0() | 0) > $matchResult.$getRightBound()) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $shift = $this.$accepts($stringIndex, $testString);
    if ($shift < 0)
        return (-1);
    return $this.$next.$matches($stringIndex + $shift | 0, $testString, $matchResult);
}
function jur_LeafSet_charCount($this) {
    return $this.$charCount;
}
function jur_LeafSet_hasConsumed($this, $mr) {
    return 1;
}
function jur_CISequenceSet() {
    jur_LeafSet.call(this);
    this.$string = null;
}
function jur_CISequenceSet__init_(var_0) {
    var var_1 = new jur_CISequenceSet();
    jur_CISequenceSet__init_0(var_1, var_0);
    return var_1;
}
function jur_CISequenceSet__init_0($this, $substring) {
    jur_LeafSet__init_2($this);
    $this.$string = $substring.$toString();
    $this.$charCount = $substring.$length();
}
function jur_CISequenceSet_accepts($this, $strIndex, $testString) {
    var $i, var$4, var$5, var$6;
    $i = 0;
    while (true) {
        if ($i >= $this.$string.$length())
            return $this.$string.$length();
        var$4 = $this.$string.$charAt($i);
        var$5 = $strIndex + $i | 0;
        if (var$4 != $testString.$charAt(var$5)) {
            var$6 = $this.$string;
            if (jur_Pattern_getSupplement(var$6.$charAt($i)) != $testString.$charAt(var$5))
                break;
        }
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_CISequenceSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(23)).$append($this.$string).$toString();
}
function iaag_Color() {
    var a = this; jl_Object.call(a);
    a.$r0 = 0.0;
    a.$g = 0.0;
    a.$b = 0.0;
    a.$a = 0.0;
}
var iaag_Color_white = null;
var iaag_Color_lightGray = null;
var iaag_Color_gray = null;
var iaag_Color_darkGray = null;
var iaag_Color_black = null;
var iaag_Color_clear = null;
var iaag_Color_whiteFloatBits = 0.0;
var iaag_Color_clearFloatBits = 0.0;
var iaag_Color_blue = null;
var iaag_Color_navy = null;
var iaag_Color_royal = null;
var iaag_Color_slate = null;
var iaag_Color_sky = null;
var iaag_Color_cyan = null;
var iaag_Color_teal = null;
var iaag_Color_green = null;
var iaag_Color_acid = null;
var iaag_Color_lime = null;
var iaag_Color_forest = null;
var iaag_Color_olive = null;
var iaag_Color_yellow = null;
var iaag_Color_gold = null;
var iaag_Color_goldenrod = null;
var iaag_Color_orange = null;
var iaag_Color_brown = null;
var iaag_Color_tan = null;
var iaag_Color_brick = null;
var iaag_Color_red = null;
var iaag_Color_scarlet = null;
var iaag_Color_coral = null;
var iaag_Color_salmon = null;
var iaag_Color_pink = null;
var iaag_Color_magenta = null;
var iaag_Color_purple = null;
var iaag_Color_violet = null;
var iaag_Color_maroon = null;
var iaag_Color_tmpHSV = null;
function iaag_Color_$callClinit() {
    iaag_Color_$callClinit = $rt_eraseClinit(iaag_Color);
    iaag_Color__clinit_();
}
function iaag_Color__init_0() {
    var var_0 = new iaag_Color();
    iaag_Color__init_1(var_0);
    return var_0;
}
function iaag_Color__init_2(var_0) {
    var var_1 = new iaag_Color();
    iaag_Color__init_3(var_1, var_0);
    return var_1;
}
function iaag_Color__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new iaag_Color();
    iaag_Color__init_4(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaag_Color__init_5(var_0, var_1, var_2) {
    var var_3 = new iaag_Color();
    iaag_Color__init_6(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaag_Color__init_7(var_0) {
    var var_1 = new iaag_Color();
    iaag_Color__init_8(var_1, var_0);
    return var_1;
}
function iaag_Color__init_1($this) {
    iaag_Color_$callClinit();
    jl_Object__init_0($this);
}
function iaag_Color__init_3($this, $rgba8888) {
    iaag_Color_$callClinit();
    jl_Object__init_0($this);
    iaag_Color_rgba8888ToColor($this, $rgba8888);
}
function iaag_Color__init_4($this, $r, $g, $b, $a) {
    iaag_Color_$callClinit();
    jl_Object__init_0($this);
    $this.$r0 = $r;
    $this.$g = $g;
    $this.$b = $b;
    $this.$a = $a;
    $this.$clamp();
}
function iaag_Color__init_6($this, $r, $g, $b) {
    iaag_Color_$callClinit();
    iaag_Color__init_4($this, $r, $g, $b, 1.0);
}
function iaag_Color__init_8($this, $color) {
    iaag_Color_$callClinit();
    jl_Object__init_0($this);
    $this.$set($color);
}
function iaag_Color_valueOf($hex) {
    iaag_Color_$callClinit();
    return iaag_Color_valueOf0(iaag_Color__init_0(), $hex);
}
function iaag_Color_valueOf0($color, $hex) {
    var $offset, var$4, $r, var$6, $g, var$8, $b, $a;
    iaag_Color_$callClinit();
    $offset = $hex.$charAt(0) != 35 ? 0 : 1;
    var$4 = $offset + 2 | 0;
    $r = iaag_Color_parseHex($hex, $offset, var$4);
    var$6 = $offset + 4 | 0;
    $g = iaag_Color_parseHex($hex, var$4, var$6);
    var$8 = $offset + 6 | 0;
    $b = iaag_Color_parseHex($hex, var$6, var$8);
    $a = ($hex.$length() - $offset | 0) != 8 ? 255 : iaag_Color_parseHex($hex, var$8, $offset + 8 | 0);
    return $color.$set3($r / 255.0, $g / 255.0, $b / 255.0, $a / 255.0);
}
function iaag_Color_parseHex($string, $from, $to) {
    var $total, $i, $c;
    iaag_Color_$callClinit();
    $total = 0;
    $i = $from;
    while ($i < $to) {
        $c = $string.$charAt($i);
        $total = $total + $rt_imul(jl_Character_digit($c, 16), $i != $from ? 1 : 16) | 0;
        $i = $i + 1 | 0;
    }
    return $total;
}
function iaag_Color_rgba8888ToColor($color, $value) {
    iaag_Color_$callClinit();
    $color.$r0 = (($value & (-16777216)) >>> 24) / 255.0;
    $color.$g = (($value & 16711680) >>> 16) / 255.0;
    $color.$b = (($value & 65280) >>> 8) / 255.0;
    $color.$a = ($value & 255) / 255.0;
}
function iaag_Color_abgr8888ToColor($color, $value) {
    var $c;
    iaag_Color_$callClinit();
    $c = iaag_Color_floatToIntColor($value);
    $color.$a = (($c & (-16777216)) >>> 24) / 255.0;
    $color.$b = (($c & 16711680) >>> 16) / 255.0;
    $color.$g = (($c & 65280) >>> 8) / 255.0;
    $color.$r0 = ($c & 255) / 255.0;
}
function iaag_Color_floatToIntColor($value) {
    var $intBits, var$3;
    iaag_Color_$callClinit();
    $intBits = jl_Float_floatToRawIntBits($value);
    var$3 = $intBits | (($intBits >>> 24) * 1.003937005996704 | 0) << 24;
    return var$3;
}
function iaag_Color_intToFloatColor($value) {
    iaag_Color_$callClinit();
    return $rt_intBitsToFloat($value & (-16777217));
}
function iaag_Color_set($this, $color) {
    $this.$r0 = $color.$r0;
    $this.$g = $color.$g;
    $this.$b = $color.$b;
    $this.$a = $color.$a;
    return $this;
}
function iaag_Color_mul($this, $color) {
    $this.$r0 = $this.$r0 * $color.$r0;
    $this.$g = $this.$g * $color.$g;
    $this.$b = $this.$b * $color.$b;
    $this.$a = $this.$a * $color.$a;
    return $this.$clamp();
}
function iaag_Color_mul0($this, $value) {
    $this.$r0 = $this.$r0 * $value;
    $this.$g = $this.$g * $value;
    $this.$b = $this.$b * $value;
    return $this.$clamp();
}
function iaag_Color_clamp($this) {
    if ($this.$r0 < 0.0)
        $this.$r0 = 0.0;
    else if ($this.$r0 > 1.0)
        $this.$r0 = 1.0;
    if ($this.$g < 0.0)
        $this.$g = 0.0;
    else if ($this.$g > 1.0)
        $this.$g = 1.0;
    if ($this.$b < 0.0)
        $this.$b = 0.0;
    else if ($this.$b > 1.0)
        $this.$b = 1.0;
    if ($this.$a < 0.0)
        $this.$a = 0.0;
    else if ($this.$a > 1.0)
        $this.$a = 1.0;
    return $this;
}
function iaag_Color_set0($this, $r, $g, $b, $a) {
    $this.$r0 = $r;
    $this.$g = $g;
    $this.$b = $b;
    $this.$a = $a;
    return $this.$clamp();
}
function iaag_Color_mul1($this, $r, $g, $b, $a) {
    $this.$r0 = $this.$r0 * $r;
    $this.$g = $this.$g * $g;
    $this.$b = $this.$b * $b;
    $this.$a = $this.$a * $a;
    return $this.$clamp();
}
function iaag_Color_lerp($this, $target, $t) {
    $this.$r0 = $this.$r0 + $t * ($target.$r0 - $this.$r0);
    $this.$g = $this.$g + $t * ($target.$g - $this.$g);
    $this.$b = $this.$b + $t * ($target.$b - $this.$b);
    $this.$a = $this.$a + $t * ($target.$a - $this.$a);
    return $this.$clamp();
}
function iaag_Color_shiftHue($this, $amount) {
    var var$2;
    $this.$toHsv(iaag_Color_tmpHSV);
    var$2 = iaag_Color_tmpHSV.data;
    var$2[0] = var$2[0] + $amount;
    $this.$fromHsv(iaag_Color_tmpHSV);
    return $this;
}
function iaag_Color_equals($this, $o) {
    var $color;
    if ($this === $o)
        return 1;
    if ($o !== null && jl_Object_getClass($this) === jl_Object_getClass($o)) {
        $color = $o;
        return $this.$toIntBits() != $color.$toIntBits() ? 0 : 1;
    }
    return 0;
}
function iaag_Color_toFloatBits($this) {
    var $color;
    $color = (255.0 * $this.$a | 0) << 24 | (255.0 * $this.$b | 0) << 16 | (255.0 * $this.$g | 0) << 8 | 255.0 * $this.$r0 | 0;
    return iaag_Color_intToFloatColor($color);
}
function iaag_Color_toIntBits($this) {
    return (255.0 * $this.$a | 0) << 24 | (255.0 * $this.$b | 0) << 16 | (255.0 * $this.$g | 0) << 8 | 255.0 * $this.$r0 | 0;
}
function iaag_Color_toString($this) {
    var $value;
    $value = jl_StringBuilder__init_();
    $this.$toString3($value);
    return $value.$toString();
}
function iaag_Color_toString0($this, $builder) {
    $builder.$append(jl_Integer_toHexString((255.0 * $this.$r0 | 0) << 24 | (255.0 * $this.$g | 0) << 16 | (255.0 * $this.$b | 0) << 8 | 255.0 * $this.$a | 0));
    while ($builder.$length() < 8) {
        $builder.$insert(0, $rt_s(24));
    }
}
function iaag_Color_fromHsv($this, $h, $s, $v) {
    var $x, $i, $f, $p, $q, $t;
    a: {
        $x = ($h / 60.0 + 6.0) % 6.0;
        $i = $x | 0;
        $f = $x - $i;
        $p = $v * (1.0 - $s);
        $q = $v * (1.0 - $s * $f);
        $t = $v * (1.0 - $s * (1.0 - $f));
        switch ($i) {
            case 0:
                break;
            case 1:
                $this.$r0 = $q;
                $this.$g = $v;
                $this.$b = $p;
                break a;
            case 2:
                $this.$r0 = $p;
                $this.$g = $v;
                $this.$b = $t;
                break a;
            case 3:
                $this.$r0 = $p;
                $this.$g = $q;
                $this.$b = $v;
                break a;
            case 4:
                $this.$r0 = $t;
                $this.$g = $p;
                $this.$b = $v;
                break a;
            default:
                $this.$r0 = $v;
                $this.$g = $p;
                $this.$b = $q;
                break a;
        }
        $this.$r0 = $v;
        $this.$g = $t;
        $this.$b = $p;
    }
    return $this.$clamp();
}
function iaag_Color_fromHsv0($this, $hsv) {
    var var$2;
    var$2 = $hsv.data;
    return $this.$fromHsv0(var$2[0], var$2[1], var$2[2]);
}
function iaag_Color_toHsv($this, $hsv) {
    var $max, $min, $range;
    $max = jl_Math_max(jl_Math_max($this.$r0, $this.$g), $this.$b);
    $min = jl_Math_min(jl_Math_min($this.$r0, $this.$g), $this.$b);
    $range = $max - $min;
    if ($range === 0.0)
        $hsv.data[0] = 0.0;
    else if ($max === $this.$r0)
        $hsv.data[0] = (60.0 * ($this.$g - $this.$b) / $range + 360.0) % 360.0;
    else if ($max !== $this.$g)
        $hsv.data[0] = 60.0 * ($this.$r0 - $this.$g) / $range + 240.0;
    else
        $hsv.data[0] = 60.0 * ($this.$b - $this.$r0) / $range + 120.0;
    if ($max <= 0.0)
        $hsv.data[1] = 0.0;
    else
        $hsv.data[1] = 1.0 - $min / $max;
    $hsv.data[2] = $max;
    return $hsv;
}
function iaag_Color_HSVtoRGB($h, $s, $v, $targetColor) {
    var var$5, var$6, var$7, $i, $f, $p, $q, $t, $r, $g, $b;
    iaag_Color_$callClinit();
    if ($h === 360.0)
        $h = 359.0;
    a: {
        var$5 = jl_Math_max0(0.0, jl_Math_min0(360.0, $h));
        var$6 = jl_Math_max0(0.0, jl_Math_min0(100.0, $s));
        var$7 = jl_Math_max0(0.0, jl_Math_min0(100.0, $v));
        var$6 = var$6 / 100.0;
        var$7 = var$7 / 100.0;
        var$5 = var$5 / 60.0;
        $i = iaam_Mathf_floor(var$5);
        $f = var$5 - $i;
        $p = var$7 * (1.0 - var$6);
        $q = var$7 * (1.0 - var$6 * $f);
        $t = var$7 * (1.0 - var$6 * (1.0 - $f));
        switch ($i) {
            case 0:
                $r = iaam_Mathf_round(255.0 * var$7);
                $g = iaam_Mathf_round(255.0 * $t);
                $b = iaam_Mathf_round(255.0 * $p);
                break a;
            case 1:
                $r = iaam_Mathf_round(255.0 * $q);
                $g = iaam_Mathf_round(255.0 * var$7);
                $b = iaam_Mathf_round(255.0 * $p);
                break a;
            case 2:
                $r = iaam_Mathf_round(255.0 * $p);
                $g = iaam_Mathf_round(255.0 * var$7);
                $b = iaam_Mathf_round(255.0 * $t);
                break a;
            case 3:
                $r = iaam_Mathf_round(255.0 * $p);
                $g = iaam_Mathf_round(255.0 * $q);
                $b = iaam_Mathf_round(255.0 * var$7);
                break a;
            case 4:
                $r = iaam_Mathf_round(255.0 * $t);
                $g = iaam_Mathf_round(255.0 * $p);
                $b = iaam_Mathf_round(255.0 * var$7);
                break a;
            default:
        }
        $r = iaam_Mathf_round(255.0 * var$7);
        $g = iaam_Mathf_round(255.0 * $p);
        $b = iaam_Mathf_round(255.0 * $q);
    }
    $targetColor.$set3($r / 255.0, $g / 255.0, $b / 255.0, $targetColor.$a);
    return $targetColor;
}
function iaag_Color_cpy($this) {
    return iaag_Color__init_7($this);
}
function iaag_Color__clinit_() {
    iaag_Color_white = iaag_Color__init_(1.0, 1.0, 1.0, 1.0);
    iaag_Color_lightGray = iaag_Color__init_2((-1077952513));
    iaag_Color_gray = iaag_Color__init_2(2139062271);
    iaag_Color_darkGray = iaag_Color__init_2(1061109759);
    iaag_Color_black = iaag_Color__init_(0.0, 0.0, 0.0, 1.0);
    iaag_Color_clear = iaag_Color__init_(0.0, 0.0, 0.0, 0.0);
    iaag_Color_whiteFloatBits = iaag_Color_white.$toFloatBits();
    iaag_Color_clearFloatBits = iaag_Color_clear.$toFloatBits();
    iaag_Color_blue = iaag_Color__init_(0.0, 0.0, 1.0, 1.0);
    iaag_Color_navy = iaag_Color__init_(0.0, 0.0, 0.5, 1.0);
    iaag_Color_royal = iaag_Color__init_2(1097458175);
    iaag_Color_slate = iaag_Color__init_2(1887473919);
    iaag_Color_sky = iaag_Color__init_2((-2016482305));
    iaag_Color_cyan = iaag_Color__init_(0.0, 1.0, 1.0, 1.0);
    iaag_Color_teal = iaag_Color__init_(0.0, 0.5, 0.5, 1.0);
    iaag_Color_green = iaag_Color__init_2(16711935);
    iaag_Color_acid = iaag_Color__init_2(2147418367);
    iaag_Color_lime = iaag_Color__init_2(852308735);
    iaag_Color_forest = iaag_Color__init_2(579543807);
    iaag_Color_olive = iaag_Color__init_2(1804477439);
    iaag_Color_yellow = iaag_Color__init_2((-65281));
    iaag_Color_gold = iaag_Color__init_2((-2686721));
    iaag_Color_goldenrod = iaag_Color__init_2((-626712321));
    iaag_Color_orange = iaag_Color__init_2((-5963521));
    iaag_Color_brown = iaag_Color__init_2((-1958407169));
    iaag_Color_tan = iaag_Color__init_2((-759919361));
    iaag_Color_brick = iaag_Color__init_2((-1306385665));
    iaag_Color_red = iaag_Color__init_2((-16776961));
    iaag_Color_scarlet = iaag_Color__init_2((-13361921));
    iaag_Color_coral = iaag_Color__init_2((-8433409));
    iaag_Color_salmon = iaag_Color__init_2((-92245249));
    iaag_Color_pink = iaag_Color__init_2((-9849601));
    iaag_Color_magenta = iaag_Color__init_(1.0, 0.0, 1.0, 1.0);
    iaag_Color_purple = iaag_Color__init_2((-1608453889));
    iaag_Color_violet = iaag_Color__init_2((-293409025));
    iaag_Color_maroon = iaag_Color__init_2((-1339006721));
    iaag_Color_tmpHSV = $rt_createFloatArray(3);
}
function jl_CharSequence() {
}
function jl_Throwable() {
    var a = this; jl_Object.call(a);
    a.$message = null;
    a.$cause = null;
    a.$suppressionEnabled = 0;
    a.$writableStackTrace = 0;
}
function jl_Throwable__init_() {
    var var_0 = new jl_Throwable();
    jl_Throwable__init_0(var_0);
    return var_0;
}
function jl_Throwable__init_1(var_0) {
    var var_1 = new jl_Throwable();
    jl_Throwable__init_2(var_1, var_0);
    return var_1;
}
function jl_Throwable__init_3(var_0, var_1) {
    var var_2 = new jl_Throwable();
    jl_Throwable__init_4(var_2, var_0, var_1);
    return var_2;
}
function jl_Throwable__init_5(var_0) {
    var var_1 = new jl_Throwable();
    jl_Throwable__init_6(var_1, var_0);
    return var_1;
}
function jl_Throwable__init_0($this) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
}
function jl_Throwable__init_2($this, $message) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$message = $message;
}
function jl_Throwable__init_4($this, $message, $cause) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$message = $message;
    $this.$cause = $cause;
}
function jl_Throwable__init_6($this, $cause) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$cause = $cause;
}
function jl_Throwable_fillInStackTrace($this) {
    return $this;
}
function jl_Throwable_getMessage($this) {
    return $this.$message;
}
function jl_Error() {
    jl_Throwable.call(this);
}
function jl_Error__init_(var_0, var_1) {
    var var_2 = new jl_Error();
    jl_Error__init_0(var_2, var_0, var_1);
    return var_2;
}
function jl_Error__init_1(var_0) {
    var var_1 = new jl_Error();
    jl_Error__init_2(var_1, var_0);
    return var_1;
}
function jl_Error__init_3(var_0) {
    var var_1 = new jl_Error();
    jl_Error__init_4(var_1, var_0);
    return var_1;
}
function jl_Error__init_0($this, $message, $cause) {
    jl_Throwable__init_4($this, $message, $cause);
}
function jl_Error__init_2($this, $message) {
    jl_Throwable__init_2($this, $message);
}
function jl_Error__init_4($this, $cause) {
    jl_Throwable__init_6($this, $cause);
}
function jl_LinkageError() {
    jl_Error.call(this);
}
function jl_LinkageError__init_(var_0) {
    var var_1 = new jl_LinkageError();
    jl_LinkageError__init_0(var_1, var_0);
    return var_1;
}
function jl_LinkageError__init_0($this, $message) {
    jl_Error__init_2($this, $message);
}
function iaau_Strings() {
    jl_Object.call(this);
}
var iaau_Strings_utf8 = null;
function iaau_Strings_$callClinit() {
    iaau_Strings_$callClinit = $rt_eraseClinit(iaau_Strings);
    iaau_Strings__clinit_();
}
function iaau_Strings_format($text, $args) {
    var $i, var$4;
    iaau_Strings_$callClinit();
    $i = 0;
    while (true) {
        var$4 = $args.data;
        if ($i >= var$4.length)
            break;
        $text = $text.$replace(jl_StringBuilder__init_().$append($rt_s(25)).$append3($i).$append($rt_s(26)).$toString(), jl_String_valueOf(var$4[$i]));
        $i = $i + 1 | 0;
    }
    return $text;
}
function iaau_Strings_join($separator, $strings) {
    var var$3, $builder, var$5, var$6, $s;
    iaau_Strings_$callClinit();
    var$3 = $strings.data;
    $builder = jl_StringBuilder__init_();
    var$5 = var$3.length;
    var$6 = 0;
    while (var$6 < var$5) {
        $s = var$3[var$6];
        $builder.$append($s);
        $builder.$append($separator);
        var$6 = var$6 + 1 | 0;
    }
    $builder.$setLength($builder.$length() - $separator.$length() | 0);
    return $builder.$toString();
}
function iaau_Strings__clinit_() {
    iaau_Strings_utf8 = jnc_Charset_forName($rt_s(27));
}
function iaaf_Floatc2() {
}
function it_Fx$lambda$static$1$lambda$_30_0() {
    jl_Object.call(this);
    this.$_07 = null;
}
function it_Fx$lambda$static$1$lambda$_30_0__init_(var_0) {
    var var_1 = new it_Fx$lambda$static$1$lambda$_30_0();
    it_Fx$lambda$static$1$lambda$_30_0__init_0(var_1, var_0);
    return var_1;
}
function it_Fx$lambda$static$1$lambda$_30_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_07 = var$1;
}
function it_Fx$lambda$static$1$lambda$_30_0_get(var$0, var$1, var$2) {
    it_Fx_lambda$null$0(var$0.$_07, var$1, var$2);
}
function jur_AbstractCharClass$LazyCategory() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category = 0;
    a.$mayContainSupplCodepoints0 = 0;
    a.$containsAllSurrogates = 0;
}
function jur_AbstractCharClass$LazyCategory__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyCategory__init_1(var_0, var_1, var_2) {
    var var_3 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AbstractCharClass$LazyCategory__init_0($this, $cat, $mayContainSupplCodepoints) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
    $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
    $this.$category = $cat;
}
function jur_AbstractCharClass$LazyCategory__init_2($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
    $this.$containsAllSurrogates = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
    $this.$category = $cat;
}
function jur_AbstractCharClass$LazyCategory_computeValue($this) {
    var $chCl;
    $chCl = jur_UnicodeCategory__init_($this.$category);
    if ($this.$containsAllSurrogates)
        $chCl.$lowHighSurrogates.$set4(0, 2048);
    $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints0;
    return $chCl;
}
function iaac_LongArray() {
    var a = this; jl_Object.call(a);
    a.$items0 = null;
    a.$ordered = 0;
}
function iaac_LongArray__init_() {
    var var_0 = new iaac_LongArray();
    iaac_LongArray__init_0(var_0);
    return var_0;
}
function iaac_LongArray__init_1(var_0, var_1) {
    var var_2 = new iaac_LongArray();
    iaac_LongArray__init_2(var_2, var_0, var_1);
    return var_2;
}
function iaac_LongArray__init_0($this) {
    iaac_LongArray__init_2($this, 1, 16);
}
function iaac_LongArray__init_2($this, $ordered, $capacity) {
    jl_Object__init_0($this);
    $this.$ordered = $ordered;
    $this.$items0 = $rt_createLongArray($capacity);
}
function it_Player$onDeath$lambda$_4_0() {
    jl_Object.call(this);
}
function it_Player$onDeath$lambda$_4_0__init_() {
    var var_0 = new it_Player$onDeath$lambda$_4_0();
    it_Player$onDeath$lambda$_4_0__init_0(var_0);
    return var_0;
}
function it_Player$onDeath$lambda$_4_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Player$onDeath$lambda$_4_0_run(var$0) {
    it_Player_lambda$onDeath$0();
}
function it_Phases$lambda$null$40$lambda$_27_0() {
    var a = this; jl_Object.call(a);
    a.$_08 = 0;
    a.$_15 = 0.0;
}
function it_Phases$lambda$null$40$lambda$_27_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$lambda$null$40$lambda$_27_0();
    it_Phases$lambda$null$40$lambda$_27_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$lambda$null$40$lambda$_27_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_08 = var$1;
    var$0.$_15 = var$2;
}
function it_Phases$lambda$null$40$lambda$_27_0_run(var$0) {
    it_Phases_lambda$null$39(var$0.$_08, var$0.$_15);
}
function iaat_TypingListener() {
}
function iaat_TypingListener_end($this) {
    return;
}
function iaat_TypingListener_replaceVariable($this, $variable) {
    return $variable;
}
function iaat_TypingListener_onChar($this, $ch) {
    return;
}
function iaai_InputDevice() {
    jl_Object.call(this);
}
function iaai_InputDevice__init_() {
    var var_0 = new iaai_InputDevice();
    iaai_InputDevice__init_0(var_0);
    return var_0;
}
function iaai_InputDevice__init_0($this) {
    jl_Object__init_0($this);
}
function jur_FSet() {
    var a = this; jur_AbstractSet.call(a);
    a.$isBackReferenced = 0;
    a.$groupIndex = 0;
}
var jur_FSet_posFSet = null;
function jur_FSet_$callClinit() {
    jur_FSet_$callClinit = $rt_eraseClinit(jur_FSet);
    jur_FSet__clinit_();
}
function jur_FSet__init_(var_0) {
    var var_1 = new jur_FSet();
    jur_FSet__init_0(var_1, var_0);
    return var_1;
}
function jur_FSet__init_0($this, $groupIndex) {
    jur_FSet_$callClinit();
    jur_AbstractSet__init_0($this);
    $this.$groupIndex = $groupIndex;
}
function jur_FSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $end, $shift;
    $end = $matchResult.$getEnd($this.$groupIndex);
    $matchResult.$setEnd($this.$groupIndex, $stringIndex);
    $shift = $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $matchResult.$setEnd($this.$groupIndex, $end);
    return $shift;
}
function jur_FSet_getGroupIndex($this) {
    return $this.$groupIndex;
}
function jur_FSet_getName($this) {
    return $rt_s(28);
}
function jur_FSet_hasConsumed($this, $mr) {
    return 0;
}
function jur_FSet__clinit_() {
    jur_FSet_posFSet = jur_FSet$PossessiveFSet__init_();
}
function jur_BehindFSet() {
    jur_FSet.call(this);
}
function jur_BehindFSet__init_(var_0) {
    var var_1 = new jur_BehindFSet();
    jur_BehindFSet__init_0(var_1, var_0);
    return var_1;
}
function jur_BehindFSet__init_0($this, $groupIndex) {
    jur_FSet__init_0($this, $groupIndex);
}
function jur_BehindFSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $gr, $rightBound;
    $gr = $this.$getGroupIndex();
    $rightBound = $matchResult.$getConsumed($gr);
    if ($rightBound != $stringIndex)
        $stringIndex = (-1);
    return $stringIndex;
}
function jur_BehindFSet_getName($this) {
    return $rt_s(29);
}
function it_Phases$1$lambda$null$17$lambda$_7_2() {
    jl_Object.call(this);
}
function it_Phases$1$lambda$null$17$lambda$_7_2__init_() {
    var var_0 = new it_Phases$1$lambda$null$17$lambda$_7_2();
    it_Phases$1$lambda$null$17$lambda$_7_2__init_0(var_0);
    return var_0;
}
function it_Phases$1$lambda$null$17$lambda$_7_2__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$1$lambda$null$17$lambda$_7_2_run(var$0) {
    it_Phases$1_lambda$null$16();
}
function it_Phases$3$lambda$null$11$lambda$_21_0() {
    jl_Object.call(this);
    this.$_09 = 0.0;
}
function it_Phases$3$lambda$null$11$lambda$_21_0__init_(var_0) {
    var var_1 = new it_Phases$3$lambda$null$11$lambda$_21_0();
    it_Phases$3$lambda$null$11$lambda$_21_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$3$lambda$null$11$lambda$_21_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_09 = var$1;
}
function it_Phases$3$lambda$null$11$lambda$_21_0_get(var$0, var$1) {
    it_Phases$3_lambda$null$10(var$0.$_09, var$1);
}
function it_Phases$lambda$null$33$lambda$_34_0() {
    var a = this; jl_Object.call(a);
    a.$_010 = 0.0;
    a.$_16 = 0;
}
function it_Phases$lambda$null$33$lambda$_34_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$lambda$null$33$lambda$_34_0();
    it_Phases$lambda$null$33$lambda$_34_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$lambda$null$33$lambda$_34_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_010 = var$1;
    var$0.$_16 = var$2;
}
function it_Phases$lambda$null$33$lambda$_34_0_run(var$0) {
    it_Phases_lambda$null$32(var$0.$_010, var$0.$_16);
}
function it_Phases$1$lambda$null$17$lambda$_7_1() {
    jl_Object.call(this);
}
function it_Phases$1$lambda$null$17$lambda$_7_1__init_() {
    var var_0 = new it_Phases$1$lambda$null$17$lambda$_7_1();
    it_Phases$1$lambda$null$17$lambda$_7_1__init_0(var_0);
    return var_0;
}
function it_Phases$1$lambda$null$17$lambda$_7_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$1$lambda$null$17$lambda$_7_1_get(var$0, var$1) {
    it_Phases$1_lambda$null$14(var$1);
}
function it_Phases$Phase() {
    var a = this; jl_Object.call(a);
    a.$time0 = null;
    a.$startText = null;
    a.$currentAttack = null;
}
var it_Phases$Phase_special = 0;
function it_Phases$Phase_$callClinit() {
    it_Phases$Phase_$callClinit = $rt_eraseClinit(it_Phases$Phase);
    it_Phases$Phase__clinit_();
}
function it_Phases$Phase__init_(var_0) {
    var var_1 = new it_Phases$Phase();
    it_Phases$Phase__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$Phase__init_0($this, $text) {
    it_Phases$Phase_$callClinit();
    jl_Object__init_0($this);
    $this.$time0 = iaau_Interval__init_(10);
    $this.$currentAttack = null;
    $this.$startText = $text;
}
function it_Phases$Phase_begin($this) {
    return;
}
function it_Phases$Phase_teleport($this) {
    var $x, $y;
    if ($this.$time0.$get4(2, 140.0) && !i_Inferno_boss.$seesPlayer()) {
        it_Fx_$callClinit();
        it_Fx_wave.$at(i_Inferno_boss.$x2, i_Inferno_boss.$y2);
        $x = i_Inferno_player.$x2;
        $y = i_Inferno_player.$y2;
        it_Fx_tpwave.$at($x, $y);
        iaau_Time_run(it_Fx_tpwave.$lifetime, it_Phases$Phase$teleport$lambda$_3_0__init_($x, $y));
    }
}
function it_Phases$Phase_reset($this) {
    it_Phases$Phase_special = 0;
    $this.$currentAttack = null;
    $this.$time0.$clear();
    ju_Arrays_fill($this.$time0.$getTimes(), iaau_Time_time());
}
function it_Phases$Phase_lambda$teleport$0($x, $y) {
    it_Phases$Phase_$callClinit();
    it_Phases_access$600().$run();
    i_Inferno_boss.$set5($x, $y);
    it_Fx_$callClinit();
    it_Fx_wave.$at(i_Inferno_boss.$x2, i_Inferno_boss.$y2);
    i_Inferno_renderer.$shake(4.0, 4.0);
}
function it_Phases$Phase__clinit_() {
    it_Phases$Phase_special = 0;
}
function it_Phases$1$lambda$null$17$lambda$_7_0() {
    var a = this; jl_Object.call(a);
    a.$_011 = 0;
    a.$_17 = 0.0;
    a.$_2 = 0.0;
}
function it_Phases$1$lambda$null$17$lambda$_7_0__init_(var_0, var_1, var_2) {
    var var_3 = new it_Phases$1$lambda$null$17$lambda$_7_0();
    it_Phases$1$lambda$null$17$lambda$_7_0__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function it_Phases$1$lambda$null$17$lambda$_7_0__init_0(var$0, var$1, var$2, var$3) {
    jl_Object__init_0(var$0);
    var$0.$_011 = var$1;
    var$0.$_17 = var$2;
    var$0.$_2 = var$3;
}
function it_Phases$1$lambda$null$17$lambda$_7_0_run(var$0) {
    it_Phases$1_lambda$null$13(var$0.$_011, var$0.$_17, var$0.$_2);
}
function iaamg_QuadTree() {
    var a = this; jl_Object.call(a);
    a.$bounds = null;
    a.$objects = null;
    a.$children0 = null;
}
var iaamg_QuadTree_tmp = null;
function iaamg_QuadTree_$callClinit() {
    iaamg_QuadTree_$callClinit = $rt_eraseClinit(iaamg_QuadTree);
    iaamg_QuadTree__clinit_();
}
function iaamg_QuadTree__init_(var_0) {
    var var_1 = new iaamg_QuadTree();
    iaamg_QuadTree__init_0(var_1, var_0);
    return var_1;
}
function iaamg_QuadTree__init_0($this, $bounds) {
    iaamg_QuadTree_$callClinit();
    jl_Object__init_0($this);
    $this.$objects = iaac_Array__init_0();
    $this.$bounds = $bounds;
}
function iaamg_QuadTree_split($this) {
    var $subW, $subH, $iterator, $obj, $child;
    if ($this.$children0 !== null)
        return;
    $subW = $this.$bounds.$width0 / 2.0;
    $subH = $this.$bounds.$height0 / 2.0;
    $this.$children0 = $rt_createArray(iaamg_QuadTree, 4);
    $this.$children0.data[0] = iaamg_QuadTree__init_(iaamg_Rectangle__init_($this.$bounds.$x1, $this.$bounds.$y1, $subW, $subH));
    $this.$children0.data[1] = iaamg_QuadTree__init_(iaamg_Rectangle__init_($this.$bounds.$x1 + $subW, $this.$bounds.$y1, $subW, $subH));
    $this.$children0.data[3] = iaamg_QuadTree__init_(iaamg_Rectangle__init_($this.$bounds.$x1, $this.$bounds.$y1 + $subH, $subW, $subH));
    $this.$children0.data[2] = iaamg_QuadTree__init_(iaamg_Rectangle__init_($this.$bounds.$x1 + $subW, $this.$bounds.$y1 + $subH, $subW, $subH));
    $iterator = $this.$objects.$iterator();
    while ($iterator.$hasNext()) {
        $obj = $iterator.$next0();
        $obj.$hitbox(iaamg_QuadTree_tmp);
        $child = iaamg_QuadTree_getFittingChild($this, iaamg_QuadTree_tmp);
        if ($child !== null) {
            $child.$insert0($obj);
            $iterator.$remove0();
        }
    }
}
function iaamg_QuadTree_insert($this, $obj) {
    var $child;
    $obj.$hitbox(iaamg_QuadTree_tmp);
    if (!$this.$bounds.$overlaps(iaamg_QuadTree_tmp))
        return;
    if ($this.$children0 === null && ($this.$objects.$size + 1 | 0) > 5)
        iaamg_QuadTree_split($this);
    if ($this.$children0 === null)
        $this.$objects.$add1($obj);
    else {
        $obj.$hitbox(iaamg_QuadTree_tmp);
        $child = iaamg_QuadTree_getFittingChild($this, iaamg_QuadTree_tmp);
        if ($child !== null)
            $child.$insert0($obj);
        else
            $this.$objects.$add1($obj);
    }
}
function iaamg_QuadTree_clear($this) {
    var $i;
    a: {
        $this.$objects.$clear();
        if ($this.$children0 !== null) {
            $i = 0;
            while (true) {
                if ($i >= 4)
                    break a;
                $this.$children0.data[$i].$clear();
                $i = $i + 1 | 0;
            }
        }
    }
}
function iaamg_QuadTree_getFittingChild($this, $boundingBox) {
    var $verticalMidpoint, $horizontalMidpoint, $topQuadrant, $bottomQuadrant;
    $verticalMidpoint = $this.$bounds.$x1 + $this.$bounds.$width0 / 2.0;
    $horizontalMidpoint = $this.$bounds.$y1 + $this.$bounds.$height0 / 2.0;
    $topQuadrant = $boundingBox.$y1 <= $horizontalMidpoint ? 0 : 1;
    $bottomQuadrant = $boundingBox.$y1 < $horizontalMidpoint && $boundingBox.$y1 + $boundingBox.$height0 < $horizontalMidpoint ? 1 : 0;
    a: {
        if ($boundingBox.$x1 < $verticalMidpoint && $boundingBox.$x1 + $boundingBox.$width0 < $verticalMidpoint) {
            if ($topQuadrant)
                return $this.$children0.data[3];
            if (!$bottomQuadrant)
                break a;
            return $this.$children0.data[0];
        }
        if ($boundingBox.$x1 > $verticalMidpoint) {
            if ($topQuadrant)
                return $this.$children0.data[2];
            if ($bottomQuadrant)
                return $this.$children0.data[1];
        }
    }
    return null;
}
function iaamg_QuadTree_getIntersect($this, $out, $x, $y, $width, $height) {
    var $i;
    a: {
        if ($this.$children0 !== null) {
            $i = 0;
            while (true) {
                if ($i >= 4)
                    break a;
                if ($this.$children0.data[$i].$bounds.$overlaps0($x, $y, $width, $height))
                    $this.$children0.data[$i].$getIntersect($out, $x, $y, $width, $height);
                $i = $i + 1 | 0;
            }
        }
    }
    $i = 0;
    while ($i < $this.$objects.$size) {
        $this.$objects.$get($i).$hitbox(iaamg_QuadTree_tmp);
        if (iaamg_QuadTree_tmp.$overlaps0($x, $y, $width, $height))
            $out.$get5($this.$objects.$get($i));
        $i = $i + 1 | 0;
    }
}
function iaamg_QuadTree_getIntersect0($this, $out, $toCheck) {
    var $i;
    a: {
        if ($this.$children0 !== null) {
            $i = 0;
            while (true) {
                if ($i >= 4)
                    break a;
                if ($this.$children0.data[$i].$bounds.$overlaps($toCheck))
                    $this.$children0.data[$i].$getIntersect0($out, $toCheck);
                $i = $i + 1 | 0;
            }
        }
    }
    $out.$addAll($this.$objects);
}
function iaamg_QuadTree__clinit_() {
    iaamg_QuadTree_tmp = iaamg_Rectangle__init_0();
}
function ji_Flushable() {
}
function ji_OutputStream() {
    jl_Object.call(this);
}
function ji_OutputStream__init_() {
    var var_0 = new ji_OutputStream();
    ji_OutputStream__init_0(var_0);
    return var_0;
}
function ji_OutputStream__init_0($this) {
    jl_Object__init_0($this);
}
function ji_OutputStream_write($this, $b, $off, $len) {
    var $i, var$5, var$6;
    $i = 0;
    while ($i < $len) {
        var$5 = $b.data;
        var$6 = $off + 1 | 0;
        $this.$write0(var$5[$off]);
        $i = $i + 1 | 0;
        $off = var$6;
    }
}
function ji_ByteArrayOutputStream() {
    var a = this; ji_OutputStream.call(a);
    a.$buf0 = null;
    a.$count1 = 0;
}
function ji_ByteArrayOutputStream__init_() {
    var var_0 = new ji_ByteArrayOutputStream();
    ji_ByteArrayOutputStream__init_0(var_0);
    return var_0;
}
function ji_ByteArrayOutputStream__init_1(var_0) {
    var var_1 = new ji_ByteArrayOutputStream();
    ji_ByteArrayOutputStream__init_2(var_1, var_0);
    return var_1;
}
function ji_ByteArrayOutputStream__init_0($this) {
    ji_ByteArrayOutputStream__init_2($this, 32);
}
function ji_ByteArrayOutputStream__init_2($this, $size) {
    ji_OutputStream__init_0($this);
    $this.$buf0 = $rt_createByteArray($size);
}
function ji_ByteArrayOutputStream_write($this, $b) {
    var var$2, var$3;
    ji_ByteArrayOutputStream_ensureCapacity($this, $this.$count1 + 1 | 0);
    var$2 = $this.$buf0.data;
    var$3 = $this.$count1;
    $this.$count1 = var$3 + 1 | 0;
    var$2[var$3] = $b << 24 >> 24;
}
function ji_ByteArrayOutputStream_write0($this, $b, $off, $len) {
    var $i, var$5, var$6, var$7, var$8;
    ji_ByteArrayOutputStream_ensureCapacity($this, $this.$count1 + $len | 0);
    $i = 0;
    while ($i < $len) {
        var$5 = $b.data;
        var$6 = $this.$buf0.data;
        var$7 = $this.$count1;
        $this.$count1 = var$7 + 1 | 0;
        var$8 = $off + 1 | 0;
        var$6[var$7] = var$5[$off];
        $i = $i + 1 | 0;
        $off = var$8;
    }
}
function ji_ByteArrayOutputStream_ensureCapacity($this, $capacity) {
    var var$2;
    if ($this.$buf0.data.length < $capacity) {
        var$2 = jl_Math_max1($capacity, ($this.$buf0.data.length * 3 | 0) / 2 | 0);
        $this.$buf0 = ju_Arrays_copyOf($this.$buf0, var$2);
    }
}
function ji_ByteArrayOutputStream_toByteArray($this) {
    return ju_Arrays_copyOf($this.$buf0, $this.$count1);
}
function jur_JointSet() {
    var a = this; jur_AbstractSet.call(a);
    a.$children1 = null;
    a.$fSet = null;
    a.$groupIndex0 = 0;
}
function jur_JointSet__init_() {
    var var_0 = new jur_JointSet();
    jur_JointSet__init_0(var_0);
    return var_0;
}
function jur_JointSet__init_1(var_0, var_1) {
    var var_2 = new jur_JointSet();
    jur_JointSet__init_2(var_2, var_0, var_1);
    return var_2;
}
function jur_JointSet__init_0($this) {
    jur_AbstractSet__init_0($this);
}
function jur_JointSet__init_2($this, $children, $fSet) {
    jur_AbstractSet__init_0($this);
    $this.$children1 = $children;
    $this.$fSet = $fSet;
    $this.$groupIndex0 = $fSet.$getGroupIndex();
}
function jur_JointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $size, $i, $e, $shift;
    if ($this.$children1 === null)
        return (-1);
    $start = $matchResult.$getStart($this.$groupIndex0);
    $matchResult.$setStart($this.$groupIndex0, $stringIndex);
    $size = $this.$children1.$size0();
    $i = 0;
    while (true) {
        if ($i >= $size) {
            $matchResult.$setStart($this.$groupIndex0, $start);
            return (-1);
        }
        $e = $this.$children1.$get($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
}
function jur_JointSet_setNext($this, $next) {
    $this.$fSet.$setNext($next);
}
function jur_JointSet_getName($this) {
    return $rt_s(30);
}
function jur_JointSet_first($this, $set) {
    var $i;
    a: {
        if ($this.$children1 !== null) {
            $i = $this.$children1.$iterator();
            while (true) {
                if (!$i.$hasNext())
                    break a;
                if (!$i.$next0().$first($set))
                    continue;
                else
                    return 1;
            }
        }
    }
    return 0;
}
function jur_JointSet_hasConsumed($this, $matchResult) {
    var var$2, var$3;
    a: {
        if ($matchResult.$getEnd($this.$groupIndex0) >= 0) {
            var$2 = $matchResult.$getStart($this.$groupIndex0);
            var$3 = $this.$groupIndex0;
            if (var$2 == $matchResult.$getEnd(var$3)) {
                var$2 = 0;
                break a;
            }
        }
        var$2 = 1;
    }
    return var$2;
}
function jur_JointSet_processSecondPass($this) {
    var $childrenSize, $i, $child, $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$fSet !== null && !$this.$fSet.$isSecondPassVisited)
        $this.$fSet.$processSecondPass();
    a: {
        if ($this.$children1 !== null) {
            $childrenSize = $this.$children1.$size0();
            $i = 0;
            while (true) {
                if ($i >= $childrenSize)
                    break a;
                $child = $this.$children1.$get($i);
                $set = $child.$processBackRefReplacement();
                if ($set === null)
                    $set = $child;
                else {
                    $child.$isSecondPassVisited = 1;
                    $this.$children1.$remove($i);
                    $this.$children1.$add2($i, $set);
                }
                if (!$set.$isSecondPassVisited)
                    $set.$processSecondPass();
                $i = $i + 1 | 0;
            }
        }
    }
    if ($this.$next !== null)
        jur_AbstractSet_processSecondPass($this);
}
function jur_LowHighSurrogateRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$surrChars = null;
    a.$alt = 0;
}
function jur_LowHighSurrogateRangeSet__init_(var_0) {
    var var_1 = new jur_LowHighSurrogateRangeSet();
    jur_LowHighSurrogateRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_LowHighSurrogateRangeSet__init_0($this, $surrChars) {
    jur_JointSet__init_0($this);
    $this.$surrChars = $surrChars.$getInstance();
    $this.$alt = $surrChars.$alt0;
}
function jur_LowHighSurrogateRangeSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_LowHighSurrogateRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $startStr, $strLength, var$6, var$7, $ch, $low, $high;
    $startStr = $matchResult.$getLeftBound();
    $strLength = $matchResult.$getRightBound();
    var$6 = $stringIndex + 1 | 0;
    var$7 = $rt_compare(var$6, $strLength);
    if (var$7 > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $ch = $testString.$charAt($stringIndex);
    if (!$this.$surrChars.$contains($ch))
        return (-1);
    if (jl_Character_isHighSurrogate($ch)) {
        if (var$7 < 0) {
            $low = $testString.$charAt(var$6);
            if (jl_Character_isLowSurrogate($low))
                return (-1);
        }
    } else if (jl_Character_isLowSurrogate($ch) && $stringIndex > $startStr) {
        $high = $testString.$charAt($stringIndex - 1 | 0);
        if (jl_Character_isHighSurrogate($high))
            return (-1);
    }
    return $this.$next.$matches(var$6, $testString, $matchResult);
}
function jur_LowHighSurrogateRangeSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(31)).$append(!$this.$alt ? $rt_s(32) : $rt_s(33)).$append($this.$surrChars.$toString()).$toString();
}
function iaaf_Intc() {
}
function it_Phases$4$lambda$null$6$lambda$_11_0() {
    var a = this; jl_Object.call(a);
    a.$_012 = 0.0;
    a.$_18 = 0.0;
    a.$_20 = 0.0;
    a.$_3 = 0.0;
}
function it_Phases$4$lambda$null$6$lambda$_11_0__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new it_Phases$4$lambda$null$6$lambda$_11_0();
    it_Phases$4$lambda$null$6$lambda$_11_0__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function it_Phases$4$lambda$null$6$lambda$_11_0__init_0(var$0, var$1, var$2, var$3, var$4) {
    jl_Object__init_0(var$0);
    var$0.$_012 = var$1;
    var$0.$_18 = var$2;
    var$0.$_20 = var$3;
    var$0.$_3 = var$4;
}
function it_Phases$4$lambda$null$6$lambda$_11_0_get(var$0, var$1) {
    it_Phases$4_lambda$null$5(var$0.$_012, var$0.$_18, var$0.$_20, var$0.$_3, var$1);
}
function jlr_AnnotatedElement() {
}
function jlr_AccessibleObject() {
    jl_Object.call(this);
}
function jlr_AccessibleObject__init_() {
    var var_0 = new jlr_AccessibleObject();
    jlr_AccessibleObject__init_0(var_0);
    return var_0;
}
function jlr_AccessibleObject__init_0($this) {
    jl_Object__init_0($this);
}
function jlr_Member() {
}
function jlr_Constructor() {
    var a = this; jlr_AccessibleObject.call(a);
    a.$declaringClass = null;
    a.$name1 = null;
    a.$modifiers = 0;
    a.$accessLevel = 0;
    a.$parameterTypes = null;
    a.$callable = null;
}
function jlr_Constructor__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jlr_Constructor();
    jlr_Constructor__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jlr_Constructor__init_0($this, $declaringClass, $name, $modifiers, $accessLevel, $parameterTypes, $callable) {
    jlr_AccessibleObject__init_0($this);
    $this.$declaringClass = $declaringClass;
    $this.$name1 = $name;
    $this.$modifiers = $modifiers;
    $this.$accessLevel = $accessLevel;
    $this.$parameterTypes = $parameterTypes;
    $this.$callable = $callable;
}
function jlr_Constructor_getModifiers($this) {
    return otcir_Flags_getModifiers($this.$modifiers, $this.$accessLevel);
}
function jlr_Constructor_getParameterTypes($this) {
    return $this.$parameterTypes.$clone();
}
function jlr_Constructor_toString($this) {
    var $sb, $parameterTypes, $i, var$4;
    $sb = jl_StringBuilder__init_();
    $sb.$append(jlr_Modifier_toString($this.$getModifiers0()));
    if ($sb.$length() > 0)
        $sb.$append0(32);
    $sb.$append($this.$declaringClass.$getName().$toString()).$append0(40);
    $parameterTypes = $this.$getParameterTypes();
    $i = 0;
    while (true) {
        var$4 = $parameterTypes.data;
        if ($i >= var$4.length)
            break;
        if ($i > 0)
            $sb.$append0(44);
        $sb.$append(var$4[$i].$getName());
        $i = $i + 1 | 0;
    }
    return $sb.$append0(41).$toString();
}
function jlr_Constructor_newInstance($this, $initargs) {
    var var$2, var$3, $i, $jsArgs, $instance, var$7, var$8;
    if ($this.$modifiers & 1)
        $rt_throw(jl_InstantiationException__init_());
    if ($this.$callable === null)
        $rt_throw(jl_IllegalAccessException__init_());
    var$2 = $initargs.data;
    var$3 = var$2.length;
    if (var$3 != $this.$parameterTypes.data.length)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $i = 0;
    while (true) {
        if ($i >= var$3) {
            $jsArgs = $initargs.data;
            $instance = new $this.$declaringClass.$platformClass();
            $this.$callable.call($instance, $jsArgs);
            return $instance;
        }
        if (!$this.$parameterTypes.data[$i].$isPrimitive() && var$2[$i] !== null) {
            var$7 = $this.$parameterTypes.data[$i];
            var$8 = var$2[$i];
            if (!var$7.$isInstance(var$8))
                $rt_throw(jl_IllegalArgumentException__init_0());
        }
        if ($this.$parameterTypes.data[$i].$isPrimitive() && var$2[$i] === null)
            break;
        $i = $i + 1 | 0;
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
}
function iaagg_GLFrameBuffer$FrameBufferTextureAttachmentSpec() {
    var a = this; jl_Object.call(a);
    a.$internalFormat = 0;
    a.$format = 0;
    a.$type1 = 0;
    a.$isFloat = 0;
    a.$isDepth = 0;
    a.$isStencil = 0;
}
function iaagg_GLFrameBuffer$FrameBufferTextureAttachmentSpec__init_(var_0, var_1, var_2) {
    var var_3 = new iaagg_GLFrameBuffer$FrameBufferTextureAttachmentSpec();
    iaagg_GLFrameBuffer$FrameBufferTextureAttachmentSpec__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaagg_GLFrameBuffer$FrameBufferTextureAttachmentSpec__init_0($this, $internalformat, $format, $type) {
    jl_Object__init_0($this);
    $this.$internalFormat = $internalformat;
    $this.$format = $format;
    $this.$type1 = $type;
}
function iaagg_GLFrameBuffer$FrameBufferTextureAttachmentSpec_isColorTexture($this) {
    return !$this.$isDepth && !$this.$isStencil ? 1 : 0;
}
function iaa_Settings() {
    var a = this; jl_Object.call(a);
    a.$appName = null;
    a.$defaults = null;
    a.$values = null;
    a.$errorHandler = null;
    a.$hasErrored = 0;
    a.$byteStream = null;
    a.$byteInputStream = null;
    a.$dataOutput = null;
    a.$dataInput = null;
    a.$serializers = null;
    a.$ureader = null;
    a.$json = null;
}
function iaa_Settings__init_() {
    var var_0 = new iaa_Settings();
    iaa_Settings__init_0(var_0);
    return var_0;
}
function iaa_Settings__init_0($this) {
    jl_Object__init_0($this);
    $this.$defaults = iaac_ObjectMap__init_();
    $this.$values = iaac_ObjectMap__init_();
    $this.$byteStream = iaaui_Streams$OptimizedByteArrayOutputStream__init_(16);
    $this.$byteInputStream = iaaui_ReusableByteInStream__init_();
    $this.$dataOutput = ji_DataOutputStream__init_($this.$byteStream);
    $this.$dataInput = ji_DataInputStream__init_($this.$byteInputStream);
    $this.$serializers = iaac_ObjectMap__init_();
    $this.$ureader = iaaus_UBJsonReader__init_();
    $this.$json = iaaus_Json__init_();
    iaaui_DefaultSerializers_register($this);
}
function iaa_Settings_setSerializer($this, $type, $ser) {
    $this.$serializers.$put($type, $ser);
}
function iaa_Settings_setAppName($this, $name) {
    $this.$appName = $name;
}
function iaa_Settings_load($this) {
    var $error, $$je;
    a: {
        try {
            $this.$loadValues();
            iaa_Core_$callClinit();
            iaa_Core_keybinds.$load();
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
                $error = $$je;
            } else {
                throw $$e;
            }
        }
        if ($this.$errorHandler === null)
            $rt_throw($error);
        if (!$this.$hasErrored)
            $this.$errorHandler.$get5($error);
        $this.$hasErrored = 1;
    }
}
function iaa_Settings_getInt($this, $name, $def) {
    return $this.$values.$get6($name, jl_Integer_valueOf0($def)).$intValue();
}
function iaa_Settings_getBool($this, $name, $def) {
    return $this.$values.$get6($name, jl_Boolean_valueOf($def)).$booleanValue();
}
function iaabt_TeaSettings() {
    iaa_Settings.call(this);
    this.$prefix = null;
}
function iaabt_TeaSettings__init_() {
    var var_0 = new iaabt_TeaSettings();
    iaabt_TeaSettings__init_0(var_0);
    return var_0;
}
function iaabt_TeaSettings__init_0($this) {
    iaa_Settings__init_0($this);
}
function iaabt_TeaSettings_setAppName($this, $name) {
    iaa_Settings_setAppName($this, $name);
    $this.$prefix = jl_StringBuilder__init_().$append($name).$append($rt_s(21)).$toString();
}
function iaabt_TeaSettings_loadValues($this) {
    var $i, $key, $value, $$je;
    a: {
        try {
            $i = 0;
            while (true) {
                iaabt_TeaFiles_$callClinit();
                if ($i >= iaabt_TeaFiles_localStorage.length)
                    break;
                $key = $rt_str(iaabt_TeaFiles_localStorage.key($i));
                if ($key.$startsWith($this.$prefix)) {
                    $value = $rt_str(iaabt_TeaFiles_localStorage.getItem($rt_ustr($key)));
                    $this.$values.$put($key.$substring0($this.$prefix.$length(), $key.$length() - 1 | 0), iaabt_TeaSettings_toObject($this, $key, $value));
                }
                $i = $i + 1 | 0;
            }
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
            } else {
                throw $$e;
            }
        }
        $this.$values.$clear();
    }
}
function iaabt_TeaSettings_toObject($this, $key, $value) {
    if ($key.$endsWith($rt_s(34)))
        return jl_Boolean_valueOf(jl_Boolean_parseBoolean($value));
    if ($key.$endsWith($rt_s(35)))
        return jl_Integer_valueOf0(jl_Integer_parseInt0($value));
    if ($key.$endsWith($rt_s(36)))
        return jl_Long_valueOf(jl_Long_parseLong($value));
    if (!$key.$endsWith($rt_s(37)))
        return $value;
    return jl_Float_valueOf(jl_Float_parseFloat($value));
}
function jur_QuantifierSet() {
    jur_AbstractSet.call(this);
    this.$innerSet = null;
}
function jur_QuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_QuantifierSet();
    jur_QuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_QuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_AbstractSet__init_2($this, $next);
    $this.$innerSet = $innerSet;
    $this.$setType($type);
}
function jur_QuantifierSet_getInnerSet($this) {
    return $this.$innerSet;
}
function jur_QuantifierSet_first($this, $set) {
    return !$this.$innerSet.$first($set) && !$this.$next.$first($set) ? 0 : 1;
}
function jur_QuantifierSet_hasConsumed($this, $mr) {
    return 1;
}
function jur_QuantifierSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$next !== null && !$this.$next.$isSecondPassVisited) {
        $set = $this.$next.$processBackRefReplacement();
        if ($set !== null) {
            $this.$next.$isSecondPassVisited = 1;
            $this.$next = $set;
        }
        $this.$next.$processSecondPass();
    }
    if ($this.$innerSet !== null) {
        if (!$this.$innerSet.$isSecondPassVisited) {
            $set = $this.$innerSet.$processBackRefReplacement();
            if ($set !== null) {
                $this.$innerSet.$isSecondPassVisited = 1;
                $this.$innerSet = $set;
            }
            $this.$innerSet.$processSecondPass();
        } else if ($this.$innerSet instanceof jur_SingleSet && $this.$innerSet.$fSet.$isBackReferenced)
            $this.$innerSet = $this.$innerSet.$next;
    }
}
function jur_GroupQuantifierSet() {
    jur_QuantifierSet.call(this);
}
function jur_GroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_GroupQuantifierSet();
    jur_GroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_QuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_GroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_GroupQuantifierSet_getName($this) {
    return $rt_s(38);
}
function jur_PosPlusGroupQuantifierSet() {
    jur_GroupQuantifierSet.call(this);
}
function jur_PosPlusGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PosPlusGroupQuantifierSet();
    jur_PosPlusGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PosPlusGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
}
function jur_PosPlusGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex, var$5;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        return (-1);
    if ($nextIndex > $stringIndex) {
        while (true) {
            var$5 = $this.$innerSet.$matches($nextIndex, $testString, $matchResult);
            if (var$5 <= $nextIndex)
                break;
            $nextIndex = var$5;
        }
        $stringIndex = $nextIndex;
    }
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function iaaus_XmlReader() {
    var a = this; jl_Object.call(a);
    a.$elements = null;
    a.$textBuffer = null;
    a.$root0 = null;
    a.$current = null;
}
var iaaus_XmlReader__xml_actions = null;
var iaaus_XmlReader__xml_key_offsets = null;
var iaaus_XmlReader__xml_trans_keys = null;
var iaaus_XmlReader__xml_single_lengths = null;
var iaaus_XmlReader__xml_range_lengths = null;
var iaaus_XmlReader__xml_index_offsets = null;
var iaaus_XmlReader__xml_indicies = null;
var iaaus_XmlReader__xml_trans_targs = null;
var iaaus_XmlReader__xml_trans_actions = null;
function iaaus_XmlReader_$callClinit() {
    iaaus_XmlReader_$callClinit = $rt_eraseClinit(iaaus_XmlReader);
    iaaus_XmlReader__clinit_();
}
function iaaus_XmlReader__init_() {
    var var_0 = new iaaus_XmlReader();
    iaaus_XmlReader__init_0(var_0);
    return var_0;
}
function iaaus_XmlReader__init_0($this) {
    iaaus_XmlReader_$callClinit();
    jl_Object__init_0($this);
    $this.$elements = iaac_Array__init_(8);
    $this.$textBuffer = jl_StringBuilder__init_0(64);
}
function iaaus_XmlReader_init__xml_actions_0() {
    var var$1, var$2;
    iaaus_XmlReader_$callClinit();
    var$1 = $rt_createByteArray(26);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 1;
    var$2[2] = 0;
    var$2[3] = 1;
    var$2[4] = 1;
    var$2[5] = 1;
    var$2[6] = 2;
    var$2[7] = 1;
    var$2[8] = 3;
    var$2[9] = 1;
    var$2[10] = 4;
    var$2[11] = 1;
    var$2[12] = 5;
    var$2[13] = 1;
    var$2[14] = 6;
    var$2[15] = 1;
    var$2[16] = 7;
    var$2[17] = 2;
    var$2[18] = 0;
    var$2[19] = 6;
    var$2[20] = 2;
    var$2[21] = 1;
    var$2[22] = 4;
    var$2[23] = 2;
    var$2[24] = 2;
    var$2[25] = 4;
    return var$1;
}
function iaaus_XmlReader_init__xml_key_offsets_0() {
    var var$1, var$2;
    iaaus_XmlReader_$callClinit();
    var$1 = $rt_createByteArray(36);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 0;
    var$2[2] = 4;
    var$2[3] = 9;
    var$2[4] = 14;
    var$2[5] = 20;
    var$2[6] = 26;
    var$2[7] = 30;
    var$2[8] = 35;
    var$2[9] = 36;
    var$2[10] = 37;
    var$2[11] = 42;
    var$2[12] = 46;
    var$2[13] = 50;
    var$2[14] = 51;
    var$2[15] = 52;
    var$2[16] = 56;
    var$2[17] = 57;
    var$2[18] = 62;
    var$2[19] = 67;
    var$2[20] = 73;
    var$2[21] = 79;
    var$2[22] = 83;
    var$2[23] = 88;
    var$2[24] = 89;
    var$2[25] = 90;
    var$2[26] = 95;
    var$2[27] = 99;
    var$2[28] = 103;
    var$2[29] = 104;
    var$2[30] = 108;
    var$2[31] = 109;
    var$2[32] = 110;
    var$2[33] = 111;
    var$2[34] = 112;
    var$2[35] = 115;
    return var$1;
}
function iaaus_XmlReader_init__xml_trans_keys_0() {
    var var$1, var$2;
    iaaus_XmlReader_$callClinit();
    var$1 = $rt_createCharArray(116);
    var$2 = var$1.data;
    var$2[0] = 32;
    var$2[1] = 60;
    var$2[2] = 9;
    var$2[3] = 13;
    var$2[4] = 32;
    var$2[5] = 47;
    var$2[6] = 62;
    var$2[7] = 9;
    var$2[8] = 13;
    var$2[9] = 32;
    var$2[10] = 47;
    var$2[11] = 62;
    var$2[12] = 9;
    var$2[13] = 13;
    var$2[14] = 32;
    var$2[15] = 47;
    var$2[16] = 61;
    var$2[17] = 62;
    var$2[18] = 9;
    var$2[19] = 13;
    var$2[20] = 32;
    var$2[21] = 47;
    var$2[22] = 61;
    var$2[23] = 62;
    var$2[24] = 9;
    var$2[25] = 13;
    var$2[26] = 32;
    var$2[27] = 61;
    var$2[28] = 9;
    var$2[29] = 13;
    var$2[30] = 32;
    var$2[31] = 34;
    var$2[32] = 39;
    var$2[33] = 9;
    var$2[34] = 13;
    var$2[35] = 34;
    var$2[36] = 34;
    var$2[37] = 32;
    var$2[38] = 47;
    var$2[39] = 62;
    var$2[40] = 9;
    var$2[41] = 13;
    var$2[42] = 32;
    var$2[43] = 62;
    var$2[44] = 9;
    var$2[45] = 13;
    var$2[46] = 32;
    var$2[47] = 62;
    var$2[48] = 9;
    var$2[49] = 13;
    var$2[50] = 39;
    var$2[51] = 39;
    var$2[52] = 32;
    var$2[53] = 60;
    var$2[54] = 9;
    var$2[55] = 13;
    var$2[56] = 60;
    var$2[57] = 32;
    var$2[58] = 47;
    var$2[59] = 62;
    var$2[60] = 9;
    var$2[61] = 13;
    var$2[62] = 32;
    var$2[63] = 47;
    var$2[64] = 62;
    var$2[65] = 9;
    var$2[66] = 13;
    var$2[67] = 32;
    var$2[68] = 47;
    var$2[69] = 61;
    var$2[70] = 62;
    var$2[71] = 9;
    var$2[72] = 13;
    var$2[73] = 32;
    var$2[74] = 47;
    var$2[75] = 61;
    var$2[76] = 62;
    var$2[77] = 9;
    var$2[78] = 13;
    var$2[79] = 32;
    var$2[80] = 61;
    var$2[81] = 9;
    var$2[82] = 13;
    var$2[83] = 32;
    var$2[84] = 34;
    var$2[85] = 39;
    var$2[86] = 9;
    var$2[87] = 13;
    var$2[88] = 34;
    var$2[89] = 34;
    var$2[90] = 32;
    var$2[91] = 47;
    var$2[92] = 62;
    var$2[93] = 9;
    var$2[94] = 13;
    var$2[95] = 32;
    var$2[96] = 62;
    var$2[97] = 9;
    var$2[98] = 13;
    var$2[99] = 32;
    var$2[100] = 62;
    var$2[101] = 9;
    var$2[102] = 13;
    var$2[103] = 60;
    var$2[104] = 32;
    var$2[105] = 47;
    var$2[106] = 9;
    var$2[107] = 13;
    var$2[108] = 62;
    var$2[109] = 62;
    var$2[110] = 39;
    var$2[111] = 39;
    var$2[112] = 32;
    var$2[113] = 9;
    var$2[114] = 13;
    var$2[115] = 0;
    return var$1;
}
function iaaus_XmlReader_init__xml_single_lengths_0() {
    var var$1, var$2;
    iaaus_XmlReader_$callClinit();
    var$1 = $rt_createByteArray(36);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 2;
    var$2[2] = 3;
    var$2[3] = 3;
    var$2[4] = 4;
    var$2[5] = 4;
    var$2[6] = 2;
    var$2[7] = 3;
    var$2[8] = 1;
    var$2[9] = 1;
    var$2[10] = 3;
    var$2[11] = 2;
    var$2[12] = 2;
    var$2[13] = 1;
    var$2[14] = 1;
    var$2[15] = 2;
    var$2[16] = 1;
    var$2[17] = 3;
    var$2[18] = 3;
    var$2[19] = 4;
    var$2[20] = 4;
    var$2[21] = 2;
    var$2[22] = 3;
    var$2[23] = 1;
    var$2[24] = 1;
    var$2[25] = 3;
    var$2[26] = 2;
    var$2[27] = 2;
    var$2[28] = 1;
    var$2[29] = 2;
    var$2[30] = 1;
    var$2[31] = 1;
    var$2[32] = 1;
    var$2[33] = 1;
    var$2[34] = 1;
    var$2[35] = 0;
    return var$1;
}
function iaaus_XmlReader_init__xml_range_lengths_0() {
    var var$1, var$2;
    iaaus_XmlReader_$callClinit();
    var$1 = $rt_createByteArray(36);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 1;
    var$2[2] = 1;
    var$2[3] = 1;
    var$2[4] = 1;
    var$2[5] = 1;
    var$2[6] = 1;
    var$2[7] = 1;
    var$2[8] = 0;
    var$2[9] = 0;
    var$2[10] = 1;
    var$2[11] = 1;
    var$2[12] = 1;
    var$2[13] = 0;
    var$2[14] = 0;
    var$2[15] = 1;
    var$2[16] = 0;
    var$2[17] = 1;
    var$2[18] = 1;
    var$2[19] = 1;
    var$2[20] = 1;
    var$2[21] = 1;
    var$2[22] = 1;
    var$2[23] = 0;
    var$2[24] = 0;
    var$2[25] = 1;
    var$2[26] = 1;
    var$2[27] = 1;
    var$2[28] = 0;
    var$2[29] = 1;
    var$2[30] = 0;
    var$2[31] = 0;
    var$2[32] = 0;
    var$2[33] = 0;
    var$2[34] = 1;
    var$2[35] = 0;
    return var$1;
}
function iaaus_XmlReader_init__xml_index_offsets_0() {
    var var$1, var$2;
    iaaus_XmlReader_$callClinit();
    var$1 = $rt_createShortArray(36);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 0;
    var$2[2] = 4;
    var$2[3] = 9;
    var$2[4] = 14;
    var$2[5] = 20;
    var$2[6] = 26;
    var$2[7] = 30;
    var$2[8] = 35;
    var$2[9] = 37;
    var$2[10] = 39;
    var$2[11] = 44;
    var$2[12] = 48;
    var$2[13] = 52;
    var$2[14] = 54;
    var$2[15] = 56;
    var$2[16] = 60;
    var$2[17] = 62;
    var$2[18] = 67;
    var$2[19] = 72;
    var$2[20] = 78;
    var$2[21] = 84;
    var$2[22] = 88;
    var$2[23] = 93;
    var$2[24] = 95;
    var$2[25] = 97;
    var$2[26] = 102;
    var$2[27] = 106;
    var$2[28] = 110;
    var$2[29] = 112;
    var$2[30] = 116;
    var$2[31] = 118;
    var$2[32] = 120;
    var$2[33] = 122;
    var$2[34] = 124;
    var$2[35] = 127;
    return var$1;
}
function iaaus_XmlReader_init__xml_indicies_0() {
    var var$1, var$2;
    iaaus_XmlReader_$callClinit();
    var$1 = $rt_createByteArray(129);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 2;
    var$2[2] = 0;
    var$2[3] = 1;
    var$2[4] = 2;
    var$2[5] = 1;
    var$2[6] = 1;
    var$2[7] = 2;
    var$2[8] = 3;
    var$2[9] = 5;
    var$2[10] = 6;
    var$2[11] = 7;
    var$2[12] = 5;
    var$2[13] = 4;
    var$2[14] = 9;
    var$2[15] = 10;
    var$2[16] = 1;
    var$2[17] = 11;
    var$2[18] = 9;
    var$2[19] = 8;
    var$2[20] = 13;
    var$2[21] = 1;
    var$2[22] = 14;
    var$2[23] = 1;
    var$2[24] = 13;
    var$2[25] = 12;
    var$2[26] = 15;
    var$2[27] = 16;
    var$2[28] = 15;
    var$2[29] = 1;
    var$2[30] = 16;
    var$2[31] = 17;
    var$2[32] = 18;
    var$2[33] = 16;
    var$2[34] = 1;
    var$2[35] = 20;
    var$2[36] = 19;
    var$2[37] = 22;
    var$2[38] = 21;
    var$2[39] = 9;
    var$2[40] = 10;
    var$2[41] = 11;
    var$2[42] = 9;
    var$2[43] = 1;
    var$2[44] = 23;
    var$2[45] = 24;
    var$2[46] = 23;
    var$2[47] = 1;
    var$2[48] = 25;
    var$2[49] = 11;
    var$2[50] = 25;
    var$2[51] = 1;
    var$2[52] = 20;
    var$2[53] = 26;
    var$2[54] = 22;
    var$2[55] = 27;
    var$2[56] = 29;
    var$2[57] = 30;
    var$2[58] = 29;
    var$2[59] = 28;
    var$2[60] = 32;
    var$2[61] = 31;
    var$2[62] = 30;
    var$2[63] = 34;
    var$2[64] = 1;
    var$2[65] = 30;
    var$2[66] = 33;
    var$2[67] = 36;
    var$2[68] = 37;
    var$2[69] = 38;
    var$2[70] = 36;
    var$2[71] = 35;
    var$2[72] = 40;
    var$2[73] = 41;
    var$2[74] = 1;
    var$2[75] = 42;
    var$2[76] = 40;
    var$2[77] = 39;
    var$2[78] = 44;
    var$2[79] = 1;
    var$2[80] = 45;
    var$2[81] = 1;
    var$2[82] = 44;
    var$2[83] = 43;
    var$2[84] = 46;
    var$2[85] = 47;
    var$2[86] = 46;
    var$2[87] = 1;
    var$2[88] = 47;
    var$2[89] = 48;
    var$2[90] = 49;
    var$2[91] = 47;
    var$2[92] = 1;
    var$2[93] = 51;
    var$2[94] = 50;
    var$2[95] = 53;
    var$2[96] = 52;
    var$2[97] = 40;
    var$2[98] = 41;
    var$2[99] = 42;
    var$2[100] = 40;
    var$2[101] = 1;
    var$2[102] = 54;
    var$2[103] = 55;
    var$2[104] = 54;
    var$2[105] = 1;
    var$2[106] = 56;
    var$2[107] = 42;
    var$2[108] = 56;
    var$2[109] = 1;
    var$2[110] = 57;
    var$2[111] = 1;
    var$2[112] = 57;
    var$2[113] = 34;
    var$2[114] = 57;
    var$2[115] = 1;
    var$2[116] = 1;
    var$2[117] = 58;
    var$2[118] = 59;
    var$2[119] = 58;
    var$2[120] = 51;
    var$2[121] = 60;
    var$2[122] = 53;
    var$2[123] = 61;
    var$2[124] = 62;
    var$2[125] = 62;
    var$2[126] = 1;
    var$2[127] = 1;
    var$2[128] = 0;
    return var$1;
}
function iaaus_XmlReader_init__xml_trans_targs_0() {
    var var$1, var$2;
    iaaus_XmlReader_$callClinit();
    var$1 = $rt_createByteArray(63);
    var$2 = var$1.data;
    var$2[0] = 1;
    var$2[1] = 0;
    var$2[2] = 2;
    var$2[3] = 3;
    var$2[4] = 3;
    var$2[5] = 4;
    var$2[6] = 11;
    var$2[7] = 34;
    var$2[8] = 5;
    var$2[9] = 4;
    var$2[10] = 11;
    var$2[11] = 34;
    var$2[12] = 5;
    var$2[13] = 6;
    var$2[14] = 7;
    var$2[15] = 6;
    var$2[16] = 7;
    var$2[17] = 8;
    var$2[18] = 13;
    var$2[19] = 9;
    var$2[20] = 10;
    var$2[21] = 9;
    var$2[22] = 10;
    var$2[23] = 12;
    var$2[24] = 34;
    var$2[25] = 12;
    var$2[26] = 14;
    var$2[27] = 14;
    var$2[28] = 16;
    var$2[29] = 15;
    var$2[30] = 17;
    var$2[31] = 16;
    var$2[32] = 17;
    var$2[33] = 18;
    var$2[34] = 30;
    var$2[35] = 18;
    var$2[36] = 19;
    var$2[37] = 26;
    var$2[38] = 28;
    var$2[39] = 20;
    var$2[40] = 19;
    var$2[41] = 26;
    var$2[42] = 28;
    var$2[43] = 20;
    var$2[44] = 21;
    var$2[45] = 22;
    var$2[46] = 21;
    var$2[47] = 22;
    var$2[48] = 23;
    var$2[49] = 32;
    var$2[50] = 24;
    var$2[51] = 25;
    var$2[52] = 24;
    var$2[53] = 25;
    var$2[54] = 27;
    var$2[55] = 28;
    var$2[56] = 27;
    var$2[57] = 29;
    var$2[58] = 31;
    var$2[59] = 35;
    var$2[60] = 33;
    var$2[61] = 33;
    var$2[62] = 34;
    return var$1;
}
function iaaus_XmlReader_init__xml_trans_actions_0() {
    var var$1, var$2;
    iaaus_XmlReader_$callClinit();
    var$1 = $rt_createByteArray(63);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 0;
    var$2[2] = 0;
    var$2[3] = 1;
    var$2[4] = 0;
    var$2[5] = 3;
    var$2[6] = 3;
    var$2[7] = 20;
    var$2[8] = 1;
    var$2[9] = 0;
    var$2[10] = 0;
    var$2[11] = 9;
    var$2[12] = 0;
    var$2[13] = 11;
    var$2[14] = 11;
    var$2[15] = 0;
    var$2[16] = 0;
    var$2[17] = 0;
    var$2[18] = 0;
    var$2[19] = 1;
    var$2[20] = 17;
    var$2[21] = 0;
    var$2[22] = 13;
    var$2[23] = 5;
    var$2[24] = 23;
    var$2[25] = 0;
    var$2[26] = 1;
    var$2[27] = 0;
    var$2[28] = 1;
    var$2[29] = 0;
    var$2[30] = 0;
    var$2[31] = 0;
    var$2[32] = 15;
    var$2[33] = 1;
    var$2[34] = 0;
    var$2[35] = 0;
    var$2[36] = 3;
    var$2[37] = 3;
    var$2[38] = 20;
    var$2[39] = 1;
    var$2[40] = 0;
    var$2[41] = 0;
    var$2[42] = 9;
    var$2[43] = 0;
    var$2[44] = 11;
    var$2[45] = 11;
    var$2[46] = 0;
    var$2[47] = 0;
    var$2[48] = 0;
    var$2[49] = 0;
    var$2[50] = 1;
    var$2[51] = 17;
    var$2[52] = 0;
    var$2[53] = 13;
    var$2[54] = 5;
    var$2[55] = 23;
    var$2[56] = 0;
    var$2[57] = 0;
    var$2[58] = 0;
    var$2[59] = 7;
    var$2[60] = 1;
    var$2[61] = 0;
    var$2[62] = 0;
    return var$1;
}
function iaaus_XmlReader_parse($this, $reader) {
    var $data, $offset, var$4, $length, $newData, var$7, $ex, $$je;
    a: {
        b: {
            try {
                $data = $rt_createCharArray(1024);
                $offset = 0;
                while (true) {
                    var$4 = $data.data.length;
                    $length = $reader.$read1($data, $offset, var$4 - $offset | 0);
                    if ($length == (-1))
                        break;
                    if ($length)
                        $offset = $offset + $length | 0;
                    else {
                        $newData = $rt_createCharArray(var$4 * 2 | 0);
                        jl_System_arraycopy($data, 0, $newData, 0, var$4);
                        $data = $newData;
                    }
                }
                var$7 = $this.$parse($data, 0, $offset);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    $ex = $$je;
                    break b;
                } else{
                    var$7 = $$je;
                    break a;
                }
            }
            iaaui_Streams_closeQuietly($reader);
            return var$7;
        }
        try {
            $rt_throw(iaaus_SerializationException__init_($ex));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$7 = $$je;

        }
    }
    iaaui_Streams_closeQuietly($reader);
    $rt_throw(var$7);
}
function iaaus_XmlReader_parse0($this, $file) {
    var var$2, $ex, $$je;
    a: {
        try {
            var$2 = $this.$parse0($file.$reader($rt_s(27)));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $ex = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$2;
    }
    $rt_throw(iaaus_SerializationException__init_0(jl_StringBuilder__init_().$append($rt_s(39)).$append1($file).$toString(), $ex));
}
function iaaus_XmlReader_parse1($this, $data, $offset, $length) {
    var $s, $attributeName, $hasBody, $cs, $_goto_targ, $_keys, var$10, $_klen, var$12, $_upper, var$14, var$15, $_mid, var$17, var$18, $_acts, $_nacts, $_nacts_0, $c, $end, $entityFound, $name, $value, var$27, $root, $element, $lineNumber, $i, var$32, var$33;
    $s = 0;
    $attributeName = null;
    $hasBody = 0;
    $cs = 1;
    $_goto_targ = 0;
    a: {
        b: while (true) {
            c: {
                d: {
                    e: {
                        switch ($_goto_targ) {
                            case 0:
                                if ($offset == $length) {
                                    $_goto_targ = 4;
                                    continue b;
                                }
                                if ($cs)
                                    break e;
                                $_goto_targ = 5;
                                continue b;
                            case 1:
                                break e;
                            case 2:
                                break;
                            case 3:
                            case 4:
                            case 5:
                                break b;
                            default:
                                break b;
                        }
                        break d;
                    }
                    f: {
                        g: {
                            $_keys = iaaus_XmlReader__xml_key_offsets.data[$cs];
                            var$10 = iaaus_XmlReader__xml_index_offsets.data[$cs];
                            $_klen = iaaus_XmlReader__xml_single_lengths.data[$cs];
                            if ($_klen <= 0)
                                var$12 = $_keys;
                            else {
                                var$12 = $_keys + $_klen | 0;
                                $_upper = var$12 - 1 | 0;
                                var$14 = $_keys;
                                while (true) {
                                    if ($_upper < var$14) {
                                        var$10 = var$10 + $_klen | 0;
                                        break g;
                                    }
                                    var$15 = $data.data;
                                    $_mid = var$14 + (($_upper - var$14 | 0) >> 1) | 0;
                                    if (var$15[$offset] < iaaus_XmlReader__xml_trans_keys.data[$_mid]) {
                                        $_upper = $_mid - 1 | 0;
                                        continue;
                                    }
                                    if (var$15[$offset] <= iaaus_XmlReader__xml_trans_keys.data[$_mid])
                                        break;
                                    var$14 = $_mid + 1 | 0;
                                }
                                var$10 = var$10 + ($_mid - $_keys | 0) | 0;
                                break f;
                            }
                        }
                        var$17 = iaaus_XmlReader__xml_range_lengths.data[$cs];
                        if (var$17 > 0) {
                            $_upper = (var$12 + (var$17 << 1) | 0) - 2 | 0;
                            var$18 = var$12;
                            while ($_upper >= var$18) {
                                var$15 = $data.data;
                                $_mid = var$18 + (($_upper - var$18 | 0) >> 1 & (-2)) | 0;
                                if (var$15[$offset] < iaaus_XmlReader__xml_trans_keys.data[$_mid]) {
                                    $_upper = $_mid - 2 | 0;
                                    continue;
                                }
                                if (var$15[$offset] <= iaaus_XmlReader__xml_trans_keys.data[$_mid + 1 | 0]) {
                                    var$10 = var$10 + (($_mid - var$12 | 0) >> 1) | 0;
                                    break f;
                                }
                                var$18 = $_mid + 2 | 0;
                            }
                            var$10 = var$10 + var$17 | 0;
                        }
                    }
                    var$14 = iaaus_XmlReader__xml_indicies.data[var$10];
                    $cs = iaaus_XmlReader__xml_trans_targs.data[var$14];
                    if (iaaus_XmlReader__xml_trans_actions.data[var$14]) {
                        $_acts = iaaus_XmlReader__xml_trans_actions.data[var$14];
                        var$15 = iaaus_XmlReader__xml_actions.data;
                        var$14 = $_acts + 1 | 0;
                        $_nacts = var$15[$_acts];
                        h: while (true) {
                            $_nacts_0 = $_nacts + (-1) | 0;
                            if ($_nacts <= 0)
                                break d;
                            i: {
                                j: {
                                    var$15 = iaaus_XmlReader__xml_actions.data;
                                    var$17 = var$14 + 1 | 0;
                                    switch (var$15[var$14]) {
                                        case 0:
                                            $s = $offset;
                                            break i;
                                        case 1:
                                            var$15 = $data.data;
                                            $c = var$15[$s];
                                            if ($c == 63)
                                                break c;
                                            if ($c == 33)
                                                break c;
                                            $hasBody = 1;
                                            $this.$open(jl_String__init_0($data, $s, $offset - $s | 0));
                                            break i;
                                        case 2:
                                            $hasBody = 0;
                                            $this.$close();
                                            $cs = 15;
                                            $_goto_targ = 2;
                                            continue b;
                                        case 3:
                                            $this.$close();
                                            $cs = 15;
                                            $_goto_targ = 2;
                                            continue b;
                                        case 4:
                                            if ($hasBody)
                                                break h;
                                            break i;
                                        case 5:
                                            $attributeName = jl_String__init_0($data, $s, $offset - $s | 0);
                                            break i;
                                        case 6:
                                            $this.$attribute($attributeName, jl_String__init_0($data, $s, $offset - $s | 0));
                                            break i;
                                        case 7:
                                            break j;
                                        default:
                                    }
                                    break i;
                                }
                                $end = $offset;
                                k: {
                                    l: while (true) {
                                        if ($end == $s)
                                            break k;
                                        switch ($data.data[$end - 1 | 0]) {
                                            case 9:
                                            case 10:
                                            case 13:
                                            case 32:
                                                break;
                                            default:
                                                break l;
                                        }
                                        $end = $end + (-1) | 0;
                                    }
                                }
                                $entityFound = 0;
                                var$14 = $s;
                                while (var$14 != $end) {
                                    var$15 = $data.data;
                                    var$18 = var$14 + 1 | 0;
                                    if (var$15[var$14] != 38) {
                                        var$14 = var$18;
                                        continue;
                                    }
                                    var$14 = var$18;
                                    m: {
                                        while (var$14 != $end) {
                                            var$10 = var$14 + 1 | 0;
                                            if (var$15[var$14] == 59) {
                                                $this.$textBuffer.$append4($data, $s, (var$18 - $s | 0) - 1 | 0);
                                                $name = jl_String__init_0($data, var$18, (var$10 - var$18 | 0) - 1 | 0);
                                                $value = $this.$entity($name);
                                                var$27 = $this.$textBuffer;
                                                if ($value !== null)
                                                    $name = $value;
                                                var$27.$append($name);
                                                $entityFound = 1;
                                                var$14 = var$10;
                                                $s = var$10;
                                                break m;
                                            }
                                            var$14 = var$10;
                                        }
                                    }
                                }
                                if (!$entityFound)
                                    $this.$text(jl_String__init_0($data, $s, $end - $s | 0));
                                else {
                                    if ($s < $end)
                                        $this.$textBuffer.$append4($data, $s, $end - $s | 0);
                                    $this.$text($this.$textBuffer.$toString());
                                    $this.$textBuffer.$setLength(0);
                                }
                            }
                            $_nacts = $_nacts_0;
                            var$14 = var$17;
                        }
                        $cs = 15;
                        $_goto_targ = 2;
                        continue b;
                    }
                }
                if (!$cs) {
                    $_goto_targ = 5;
                    continue b;
                }
                $offset = $offset + 1 | 0;
                if ($offset == $length)
                    break a;
                $_goto_targ = 1;
                continue b;
            }
            var$18 = $s + 1 | 0;
            if (var$15[var$18] == 91 && var$15[$s + 2 | 0] == 67 && var$15[$s + 3 | 0] == 68 && var$15[$s + 4 | 0] == 65 && var$15[$s + 5 | 0] == 84 && var$15[$s + 6 | 0] == 65 && var$15[$s + 7 | 0] == 91) {
                $s = $s + 8 | 0;
                $offset = $s + 2 | 0;
                while (!(var$15[$offset - 2 | 0] == 93 && var$15[$offset - 1 | 0] == 93 && var$15[$offset] == 62)) {
                    $offset = $offset + 1 | 0;
                }
                $this.$text(jl_String__init_0($data, $s, ($offset - $s | 0) - 2 | 0));
            } else if ($c == 33 && var$15[var$18] == 45 && var$15[$s + 2 | 0] == 45) {
                var$17 = $s + 3 | 0;
                while (true) {
                    if (var$15[var$17] == 45 && var$15[var$17 + 1 | 0] == 45) {
                        $offset = var$17 + 2 | 0;
                        if (var$15[$offset] == 62)
                            break;
                    }
                    var$17 = var$17 + 1 | 0;
                }
            } else
                while (var$15[$offset] != 62) {
                    $offset = $offset + 1 | 0;
                }
            $cs = 15;
            $_goto_targ = 2;
        }
    }
    if ($offset >= $length) {
        if (!$this.$elements.$size) {
            $root = $this.$root0;
            $this.$root0 = null;
            return $root;
        }
        $element = $this.$elements.$peek();
        $this.$elements.$clear();
        $rt_throw(iaaus_SerializationException__init_1(jl_StringBuilder__init_().$append($rt_s(40)).$append($element.$getName()).$toString()));
    }
    $lineNumber = 1;
    $i = 0;
    while ($i < $offset) {
        if ($data.data[$i] == 10)
            $lineNumber = $lineNumber + 1 | 0;
        $i = $i + 1 | 0;
    }
    var$27 = new iaaus_SerializationException;
    var$32 = jl_StringBuilder__init_().$append($rt_s(41)).$append3($lineNumber).$append($rt_s(42));
    var$33 = new jl_String;
    var$17 = $length - $offset | 0;
    jl_String__init_1(var$33, $data, $offset, jl_Math_min1(32, var$17));
    iaaus_SerializationException__init_2(var$27, var$32.$append(var$33).$toString());
    $rt_throw(var$27);
}
function iaaus_XmlReader_open($this, $name) {
    var $child, $parent;
    $child = iaaus_XmlReader$Element__init_($name, $this.$current);
    $parent = $this.$current;
    if ($parent !== null)
        $parent.$addChild($child);
    $this.$elements.$add1($child);
    $this.$current = $child;
}
function iaaus_XmlReader_attribute($this, $name, $value) {
    $this.$current.$setAttribute($name, $value);
}
function iaaus_XmlReader_entity($this, $name) {
    if ($name.$equals($rt_s(43)))
        return $rt_s(20);
    if ($name.$equals($rt_s(44)))
        return $rt_s(22);
    if ($name.$equals($rt_s(45)))
        return $rt_s(46);
    if ($name.$equals($rt_s(47)))
        return $rt_s(48);
    if ($name.$equals($rt_s(49)))
        return $rt_s(50);
    if (!$name.$startsWith($rt_s(51)))
        return null;
    return jl_Character_toString(jl_Integer_parseInt($name.$substring(2), 16) & 65535);
}
function iaaus_XmlReader_text($this, $text) {
    var $existing, var$3;
    $existing = $this.$current.$getText();
    var$3 = $this.$current;
    if ($existing !== null)
        $text = jl_StringBuilder__init_().$append($existing).$append($text).$toString();
    var$3.$setText($text);
}
function iaaus_XmlReader_close($this) {
    $this.$root0 = $this.$elements.$pop();
    $this.$current = $this.$elements.$size <= 0 ? null : $this.$elements.$peek();
}
function iaaus_XmlReader__clinit_() {
    iaaus_XmlReader__xml_actions = iaaus_XmlReader_init__xml_actions_0();
    iaaus_XmlReader__xml_key_offsets = iaaus_XmlReader_init__xml_key_offsets_0();
    iaaus_XmlReader__xml_trans_keys = iaaus_XmlReader_init__xml_trans_keys_0();
    iaaus_XmlReader__xml_single_lengths = iaaus_XmlReader_init__xml_single_lengths_0();
    iaaus_XmlReader__xml_range_lengths = iaaus_XmlReader_init__xml_range_lengths_0();
    iaaus_XmlReader__xml_index_offsets = iaaus_XmlReader_init__xml_index_offsets_0();
    iaaus_XmlReader__xml_indicies = iaaus_XmlReader_init__xml_indicies_0();
    iaaus_XmlReader__xml_trans_targs = iaaus_XmlReader_init__xml_trans_targs_0();
    iaaus_XmlReader__xml_trans_actions = iaaus_XmlReader_init__xml_trans_actions_0();
}
function it_Phases$2$lambda$null$11$lambda$_13_0() {
    jl_Object.call(this);
    this.$_013 = null;
}
function it_Phases$2$lambda$null$11$lambda$_13_0__init_(var_0) {
    var var_1 = new it_Phases$2$lambda$null$11$lambda$_13_0();
    it_Phases$2$lambda$null$11$lambda$_13_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$2$lambda$null$11$lambda$_13_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_013 = var$1;
}
function it_Phases$2$lambda$null$11$lambda$_13_0_get(var$0, var$1) {
    var$0.$_013.$shootf(var$1);
}
function jl_AbstractStringBuilder() {
    var a = this; jl_Object.call(a);
    a.$buffer0 = null;
    a.$length0 = 0;
}
function jl_AbstractStringBuilder__init_0() {
    var var_0 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_1(var_0);
    return var_0;
}
function jl_AbstractStringBuilder__init_(var_0) {
    var var_1 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_2(var_1, var_0);
    return var_1;
}
function jl_AbstractStringBuilder__init_1($this) {
    jl_AbstractStringBuilder__init_2($this, 16);
}
function jl_AbstractStringBuilder__init_2($this, $capacity) {
    jl_Object__init_0($this);
    $this.$buffer0 = $rt_createCharArray($capacity);
}
function jl_AbstractStringBuilder_append($this, $string) {
    return $this.$insert1($this.$length0, $string);
}
function jl_AbstractStringBuilder_insert($this, $index, $string) {
    var $i, var$4, var$5;
    if ($index >= 0 && $index <= $this.$length0) {
        if ($string === null)
            $string = $rt_s(52);
        else if ($string.$isEmpty())
            return $this;
        $this.$ensureCapacity($this.$length0 + $string.$length() | 0);
        $i = $this.$length0 - 1 | 0;
        while ($i >= $index) {
            $this.$buffer0.data[$i + $string.$length() | 0] = $this.$buffer0.data[$i];
            $i = $i + (-1) | 0;
        }
        $this.$length0 = $this.$length0 + $string.$length() | 0;
        $i = 0;
        while ($i < $string.$length()) {
            var$4 = $this.$buffer0.data;
            var$5 = $index + 1 | 0;
            var$4[$index] = $string.$charAt($i);
            $i = $i + 1 | 0;
            $index = var$5;
        }
        return $this;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_append0($this, $value) {
    return $this.$append2($value, 10);
}
function jl_AbstractStringBuilder_append1($this, $value, $radix) {
    return $this.$insert2($this.$length0, $value, $radix);
}
function jl_AbstractStringBuilder_insert0($this, $target, $value, $radix) {
    var $positive, var$5, var$6, $pos, $sz, $posLimit, var$10, var$11;
    $positive = 1;
    if ($value < 0) {
        $positive = 0;
        $value =  -$value;
    }
    a: {
        if ($value < $radix) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$5 = $this.$buffer0.data;
                var$6 = $target + 1 | 0;
                var$5[$target] = 45;
                $target = var$6;
            }
            $this.$buffer0.data[$target] = jl_Character_forDigit($value, $radix);
        } else {
            $pos = 1;
            $sz = 1;
            $posLimit = 2147483647 / $radix | 0;
            b: {
                while (true) {
                    var$10 = $rt_imul($pos, $radix);
                    if (var$10 > $value) {
                        var$10 = $pos;
                        break b;
                    }
                    $sz = $sz + 1 | 0;
                    if (var$10 > $posLimit)
                        break;
                    $pos = var$10;
                }
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                var$11 = $target;
            else {
                var$5 = $this.$buffer0.data;
                var$11 = $target + 1 | 0;
                var$5[$target] = 45;
            }
            while (true) {
                if (var$10 <= 0)
                    break a;
                var$5 = $this.$buffer0.data;
                var$6 = var$11 + 1 | 0;
                var$5[var$11] = jl_Character_forDigit($value / var$10 | 0, $radix);
                $value = $value % var$10 | 0;
                var$10 = var$10 / $radix | 0;
                var$11 = var$6;
            }
        }
    }
    return $this;
}
function jl_AbstractStringBuilder_append2($this, $value) {
    return $this.$insert3($this.$length0, $value);
}
function jl_AbstractStringBuilder_insert1($this, $target, $value) {
    var var$3, var$4, var$5, $number, $mantissa, $exp, $negative, $intPart, $sz, $digits, $zeros, $pos, $i, $intDigit, var$17;
    var$3 = $rt_compare($value, 0.0);
    if (!var$3) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer0.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 48;
        var$4 = $this.$buffer0.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 46;
        $this.$buffer0.data[var$5] = 48;
        return $this;
    }
    if (!var$3) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
        var$4 = $this.$buffer0.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 45;
        var$4 = $this.$buffer0.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 48;
        var$4 = $this.$buffer0.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 46;
        $this.$buffer0.data[var$3] = 48;
        return $this;
    }
    if (isNaN($value) ? 1 : 0) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer0.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 78;
        var$4 = $this.$buffer0.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 97;
        $this.$buffer0.data[var$5] = 78;
        return $this;
    }
    if (!isFinite($value) ? 1 : 0) {
        if (var$3 > 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
            var$3 = $target;
        } else {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
            var$4 = $this.$buffer0.data;
            var$3 = $target + 1 | 0;
            var$4[$target] = 45;
        }
        var$4 = $this.$buffer0.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 73;
        var$4 = $this.$buffer0.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 110;
        var$4 = $this.$buffer0.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 102;
        var$4 = $this.$buffer0.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer0.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 110;
        var$4 = $this.$buffer0.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer0.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 116;
        $this.$buffer0.data[var$5] = 121;
        return $this;
    }
    jl_AbstractStringBuilder$Constants_$callClinit();
    $number = jl_AbstractStringBuilder$Constants_floatAnalysisResult;
    otcit_FloatAnalyzer_analyze($value, $number);
    $mantissa = $number.$mantissa;
    $exp = $number.$exponent;
    $negative = $number.$sign;
    $intPart = 1;
    $sz = 1;
    if ($negative) {
        $negative = 1;
        $sz = 2;
    }
    $digits = 9;
    $zeros = jl_AbstractStringBuilder_trailingDecimalZeros($mantissa);
    if ($zeros > 0)
        $digits = $digits - $zeros | 0;
    if ($exp < 7 && $exp >= (-3)) {
        if ($exp >= 0) {
            $intPart = $exp + 1 | 0;
            $digits = jl_Math_max1($digits, $intPart + 1 | 0);
            $exp = 0;
        } else if ($exp < 0) {
            $mantissa = $mantissa / jl_AbstractStringBuilder$Constants_intPowersOfTen.data[ -$exp] | 0;
            $digits = $digits - $exp | 0;
            $exp = 0;
        }
    }
    if ($exp) {
        $sz = $sz + 2 | 0;
        if (!($exp > (-10) && $exp < 10))
            $sz = $sz + 1 | 0;
        if ($exp < 0)
            $sz = $sz + 1 | 0;
    }
    if ($exp && $digits == $intPart)
        $digits = $digits + 1 | 0;
    var$3 = $sz + $digits | 0;
    jl_AbstractStringBuilder_insertSpace($this, $target, $target + var$3 | 0);
    if (!$negative)
        var$5 = $target;
    else {
        var$4 = $this.$buffer0.data;
        var$5 = $target + 1 | 0;
        var$4[$target] = 45;
    }
    $pos = 100000000;
    $i = 0;
    while ($i < $digits) {
        if ($pos <= 0)
            $intDigit = 0;
        else {
            $intDigit = $mantissa / $pos | 0;
            $mantissa = $mantissa % $pos | 0;
        }
        var$4 = $this.$buffer0.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = (48 + $intDigit | 0) & 65535;
        $intPart = $intPart + (-1) | 0;
        if ($intPart)
            var$5 = var$3;
        else {
            var$4 = $this.$buffer0.data;
            var$5 = var$3 + 1 | 0;
            var$4[var$3] = 46;
        }
        $pos = $pos / 10 | 0;
        $i = $i + 1 | 0;
    }
    if ($exp) {
        var$4 = $this.$buffer0.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 69;
        if ($exp >= 0)
            var$5 = var$3;
        else {
            $exp =  -$exp;
            var$4 = $this.$buffer0.data;
            var$5 = var$3 + 1 | 0;
            var$4[var$3] = 45;
        }
        if ($exp < 10)
            var$17 = var$5;
        else {
            var$4 = $this.$buffer0.data;
            var$17 = var$5 + 1 | 0;
            var$4[var$5] = (48 + ($exp / 10 | 0) | 0) & 65535;
        }
        $this.$buffer0.data[var$17] = (48 + ($exp % 10 | 0) | 0) & 65535;
    }
    return $this;
}
function jl_AbstractStringBuilder_trailingDecimalZeros($n) {
    var $result, $zeros, var$4, var$5;
    if (!($n % 1000000000 | 0))
        return 9;
    $result = 0;
    $zeros = 1;
    if (!($n % 100000000 | 0)) {
        $result = 8;
        $zeros = 100000000;
    }
    var$4 = $zeros * 10000 | 0;
    if ($n % var$4 | 0)
        var$4 = $zeros;
    else
        $result = $result | 4;
    var$5 = var$4 * 100 | 0;
    if ($n % var$5 | 0)
        var$5 = var$4;
    else
        $result = $result | 2;
    if (!($n % (var$5 * 10 | 0) | 0))
        $result = $result | 1;
    return $result;
}
function jl_AbstractStringBuilder_append3($this, $c) {
    return $this.$insert4($this.$length0, $c);
}
function jl_AbstractStringBuilder_insert2($this, $index, $c) {
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + 1 | 0);
    $this.$buffer0.data[$index] = $c;
    return $this;
}
function jl_AbstractStringBuilder_append4($this, $obj) {
    return $this.$insert5($this.$length0, $obj);
}
function jl_AbstractStringBuilder_insert3($this, $index, $obj) {
    return $this.$insert1($index, $obj === null ? $rt_s(52) : $obj.$toString());
}
function jl_AbstractStringBuilder_ensureCapacity($this, $capacity) {
    var $newLength, var$3;
    if ($this.$buffer0.data.length >= $capacity)
        return;
    if ($this.$buffer0.data.length >= 1073741823)
        $newLength = 2147483647;
    else {
        var$3 = $this.$buffer0.data.length * 2 | 0;
        $newLength = jl_Math_max1($capacity, jl_Math_max1(var$3, 5));
    }
    $this.$buffer0 = ju_Arrays_copyOf0($this.$buffer0, $newLength);
}
function jl_AbstractStringBuilder_trimToSize($this) {
    if ($this.$buffer0.data.length > $this.$length0)
        $this.$buffer0 = ju_Arrays_copyOf0($this.$buffer0, $this.$length0);
}
function jl_AbstractStringBuilder_toString($this) {
    return jl_String__init_0($this.$buffer0, 0, $this.$length0);
}
function jl_AbstractStringBuilder_length($this) {
    return $this.$length0;
}
function jl_AbstractStringBuilder_charAt($this, $index) {
    if ($index >= 0 && $index < $this.$length0)
        return $this.$buffer0.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_append5($this, $s, $start, $end) {
    return $this.$insert6($this.$length0, $s, $start, $end);
}
function jl_AbstractStringBuilder_insert4($this, $index, $s, $i, $end) {
    var var$5, var$6;
    if ($i <= $end && $end <= $s.$length() && $i >= 0) {
        jl_AbstractStringBuilder_insertSpace($this, $index, ($index + $end | 0) - $i | 0);
        while ($i < $end) {
            var$5 = $this.$buffer0.data;
            var$6 = $index + 1 | 0;
            var$5[$index] = $s.$charAt($i);
            $i = $i + 1 | 0;
            $index = var$6;
        }
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_append6($this, $s) {
    return $this.$append5($s, 0, $s.$length());
}
function jl_AbstractStringBuilder_insert5($this, $index, $s) {
    return $this.$insert6($index, $s, 0, $s.$length());
}
function jl_AbstractStringBuilder_append7($this, $chars, $offset, $len) {
    return $this.$insert7($this.$length0, $chars, $offset, $len);
}
function jl_AbstractStringBuilder_insert6($this, $index, $chars, $offset, $len) {
    var var$5, var$6, var$7, var$8, var$9;
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + $len | 0);
    var$5 = $len + $offset | 0;
    while ($offset < var$5) {
        var$6 = $chars.data;
        var$7 = $this.$buffer0.data;
        var$8 = $index + 1 | 0;
        var$9 = $offset + 1 | 0;
        var$7[$index] = var$6[$offset];
        $index = var$8;
        $offset = var$9;
    }
    return $this;
}
function jl_AbstractStringBuilder_append8($this, $chars) {
    return $this.$append6($chars, 0, $chars.data.length);
}
function jl_AbstractStringBuilder_subSequence($this, $start, $end) {
    return $this.$substring0($start, $end);
}
function jl_AbstractStringBuilder_getChars($this, $srcBegin, $srcEnd, $dst, $dstBegin) {
    var var$5, var$6, var$7, var$8;
    if ($srcBegin > $srcEnd)
        $rt_throw(jl_IndexOutOfBoundsException__init_0($rt_s(53)));
    while ($srcBegin < $srcEnd) {
        var$5 = $dst.data;
        var$6 = $dstBegin + 1 | 0;
        var$7 = $this.$buffer0.data;
        var$8 = $srcBegin + 1 | 0;
        var$5[$dstBegin] = var$7[$srcBegin];
        $dstBegin = var$6;
        $srcBegin = var$8;
    }
}
function jl_AbstractStringBuilder_setLength($this, $newLength) {
    $this.$length0 = $newLength;
}
function jl_AbstractStringBuilder_deleteCharAt($this, $i) {
    var var$2, var$3, $i_0;
    if ($i >= 0 && $i < $this.$length0) {
        $this.$length0 = $this.$length0 - 1 | 0;
        while ($i < $this.$length0) {
            var$2 = $this.$buffer0.data;
            var$3 = $this.$buffer0.data;
            $i_0 = $i + 1 | 0;
            var$2[$i] = var$3[$i_0];
            $i = $i_0;
        }
        return $this;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_delete($this, $start, $end) {
    var var$3, $sz, $i, var$6, var$7, var$8;
    var$3 = $rt_compare($start, $end);
    if (var$3 <= 0 && $start <= $this.$length0) {
        if (!var$3)
            return $this;
        $sz = $this.$length0 - $end | 0;
        $this.$length0 = $this.$length0 - ($end - $start | 0) | 0;
        $i = 0;
        while ($i < $sz) {
            var$6 = $this.$buffer0.data;
            var$3 = $start + 1 | 0;
            var$7 = $this.$buffer0.data;
            var$8 = $end + 1 | 0;
            var$6[$start] = var$7[$end];
            $i = $i + 1 | 0;
            $start = var$3;
            $end = var$8;
        }
        return $this;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_insertSpace($this, $start, $end) {
    var $sz, $i;
    $sz = $this.$length0 - $start | 0;
    $this.$ensureCapacity(($this.$length0 + $end | 0) - $start | 0);
    $i = $sz - 1 | 0;
    while ($i >= 0) {
        $this.$buffer0.data[$end + $i | 0] = $this.$buffer0.data[$start + $i | 0];
        $i = $i + (-1) | 0;
    }
    $this.$length0 = $this.$length0 + ($end - $start | 0) | 0;
}
function jl_AbstractStringBuilder_indexOf($this, $str) {
    return $this.$indexOf0($str, 0);
}
function jl_AbstractStringBuilder_indexOf0($this, $str, $i) {
    var $sz, $j;
    $sz = $this.$length0 - $str.$length() | 0;
    a: while (true) {
        if ($i >= $sz)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= $str.$length())
                break a;
            if ($this.$buffer0.data[$i + $j | 0] != $str.$charAt($j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    return $i;
}
function jl_AbstractStringBuilder_substring($this, $from, $to) {
    if ($from <= $to && $from >= 0 && $to <= $this.$length0)
        return jl_String__init_0($this.$buffer0, $from, $to - $from | 0);
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function jl_Appendable() {
}
function jl_StringBuffer() {
    jl_AbstractStringBuilder.call(this);
}
function jl_StringBuffer__init_() {
    var var_0 = new jl_StringBuffer();
    jl_StringBuffer__init_0(var_0);
    return var_0;
}
function jl_StringBuffer__init_0($this) {
    jl_AbstractStringBuilder__init_1($this);
}
function jl_StringBuffer_append($this, $string) {
    jl_AbstractStringBuilder_append($this, $string);
    return $this;
}
function jl_StringBuffer_append0($this, $c) {
    jl_AbstractStringBuilder_append3($this, $c);
    return $this;
}
function jl_StringBuffer_append1($this, $chars, $offset, $len) {
    jl_AbstractStringBuilder_append7($this, $chars, $offset, $len);
    return $this;
}
function jl_StringBuffer_append2($this, $chars) {
    jl_AbstractStringBuilder_append8($this, $chars);
    return $this;
}
function jl_StringBuffer_append3($this, $s, $start, $end) {
    jl_AbstractStringBuilder_append5($this, $s, $start, $end);
    return $this;
}
function jl_StringBuffer_append4($this, $s) {
    jl_AbstractStringBuilder_append6($this, $s);
    return $this;
}
function jl_StringBuffer_insert($this, $index, $s, $start, $end) {
    jl_AbstractStringBuilder_insert4($this, $index, $s, $start, $end);
    return $this;
}
function jl_StringBuffer_insert0($this, $index, $chars, $offset, $len) {
    jl_AbstractStringBuilder_insert6($this, $index, $chars, $offset, $len);
    return $this;
}
function jl_StringBuffer_insert1($this, $index, $c) {
    jl_AbstractStringBuilder_insert2($this, $index, $c);
    return $this;
}
function jl_StringBuffer_insert2($this, $index, $string) {
    jl_AbstractStringBuilder_insert($this, $index, $string);
    return $this;
}
function jl_StringBuffer_insert3($this, var$1, var$2, var$3, var$4) {
    return $this.$insert8(var$1, var$2, var$3, var$4);
}
function jl_StringBuffer_append5($this, var$1, var$2, var$3) {
    return $this.$append11(var$1, var$2, var$3);
}
function jl_StringBuffer_insert4($this, var$1, var$2, var$3, var$4) {
    return $this.$insert9(var$1, var$2, var$3, var$4);
}
function jl_StringBuffer_append6($this, var$1, var$2, var$3) {
    return $this.$append12(var$1, var$2, var$3);
}
function jl_StringBuffer_charAt($this, var$1) {
    return jl_AbstractStringBuilder_charAt($this, var$1);
}
function jl_StringBuffer_length($this) {
    return jl_AbstractStringBuilder_length($this);
}
function jl_StringBuffer_toString($this) {
    return jl_AbstractStringBuilder_toString($this);
}
function jl_StringBuffer_ensureCapacity($this, var$1) {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
}
function jl_StringBuffer_insert5($this, var$1, var$2) {
    return $this.$insert10(var$1, var$2);
}
function jl_StringBuffer_insert6($this, var$1, var$2) {
    return $this.$insert11(var$1, var$2);
}
function jn_Buffer() {
    var a = this; jl_Object.call(a);
    a.$capacity = 0;
    a.$position0 = 0;
    a.$limit1 = 0;
    a.$mark = 0;
}
function jn_Buffer__init_(var_0) {
    var var_1 = new jn_Buffer();
    jn_Buffer__init_0(var_1, var_0);
    return var_1;
}
function jn_Buffer__init_0($this, $capacity) {
    jl_Object__init_0($this);
    $this.$mark = (-1);
    $this.$capacity = $capacity;
    $this.$limit1 = $capacity;
}
function jn_Buffer_capacity($this) {
    return $this.$capacity;
}
function jn_Buffer_position($this) {
    return $this.$position0;
}
function jn_Buffer_position0($this, $newPosition) {
    if ($newPosition >= 0 && $newPosition <= $this.$limit1) {
        $this.$position0 = $newPosition;
        if ($newPosition < $this.$mark)
            $this.$mark = 0;
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(54)).$append3($newPosition).$append($rt_s(55)).$append3($this.$limit1).$append($rt_s(56)).$toString()));
}
function jn_Buffer_limit($this) {
    return $this.$limit1;
}
function jn_Buffer_limit0($this, $newLimit) {
    if ($newLimit >= 0 && $newLimit <= $this.$capacity) {
        if ($this.$mark > $newLimit)
            $this.$mark = (-1);
        $this.$limit1 = $newLimit;
        if ($this.$position0 > $this.$limit1)
            $this.$position0 = $this.$limit1;
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(57)).$append3($newLimit).$append($rt_s(55)).$append3($this.$capacity).$append($rt_s(56)).$toString()));
}
function jn_Buffer_clear($this) {
    $this.$position0 = 0;
    $this.$limit1 = $this.$capacity;
    $this.$mark = (-1);
    return $this;
}
function jn_Buffer_flip($this) {
    $this.$limit1 = $this.$position0;
    $this.$position0 = 0;
    $this.$mark = (-1);
    return $this;
}
function jn_Buffer_remaining($this) {
    return $this.$limit1 - $this.$position0 | 0;
}
function jn_Buffer_hasRemaining($this) {
    return $this.$position0 >= $this.$limit1 ? 0 : 1;
}
function jur_SpecialToken() {
    jl_Object.call(this);
}
function jur_SpecialToken__init_() {
    var var_0 = new jur_SpecialToken();
    jur_SpecialToken__init_0(var_0);
    return var_0;
}
function jur_SpecialToken__init_0($this) {
    jl_Object__init_0($this);
}
function jur_AbstractCharClass() {
    var a = this; jur_SpecialToken.call(a);
    a.$alt0 = 0;
    a.$altSurrogates = 0;
    a.$lowHighSurrogates = null;
    a.$charClassWithoutSurrogates = null;
    a.$charClassWithSurrogates = null;
    a.$mayContainSupplCodepoints = 0;
}
var jur_AbstractCharClass_charClasses = null;
function jur_AbstractCharClass_$callClinit() {
    jur_AbstractCharClass_$callClinit = $rt_eraseClinit(jur_AbstractCharClass);
    jur_AbstractCharClass__clinit_();
}
function jur_AbstractCharClass__init_() {
    var var_0 = new jur_AbstractCharClass();
    jur_AbstractCharClass__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass__init_0($this) {
    jur_AbstractCharClass_$callClinit();
    jur_SpecialToken__init_0($this);
    $this.$lowHighSurrogates = ju_BitSet__init_(2048);
}
function jur_AbstractCharClass_getBits($this) {
    return null;
}
function jur_AbstractCharClass_getLowHighSurrogates($this) {
    return $this.$lowHighSurrogates;
}
function jur_AbstractCharClass_hasLowHighSurrogates($this) {
    var var$1, var$2;
    if (!$this.$altSurrogates) {
        var$1 = $this.$lowHighSurrogates;
        var$2 = var$1.$nextSetBit(0) >= 2048 ? 0 : 1;
    } else
        var$2 = $this.$lowHighSurrogates.$nextClearBit(0) >= 2048 ? 0 : 1;
    return var$2;
}
function jur_AbstractCharClass_mayContainSupplCodepoints($this) {
    return $this.$mayContainSupplCodepoints;
}
function jur_AbstractCharClass_getInstance($this) {
    return $this;
}
function jur_AbstractCharClass_getSurrogates($this) {
    var $lHS;
    if ($this.$charClassWithSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        $this.$charClassWithSurrogates = jur_AbstractCharClass$1__init_($this, $lHS);
        $this.$charClassWithSurrogates.$setNegative($this.$altSurrogates);
    }
    return $this.$charClassWithSurrogates;
}
function jur_AbstractCharClass_getWithoutSurrogates($this) {
    var $lHS;
    if ($this.$charClassWithoutSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        $this.$charClassWithoutSurrogates = jur_AbstractCharClass$2__init_($this, $lHS, $this);
        $this.$charClassWithoutSurrogates.$setNegative($this.$isNegative());
        $this.$charClassWithoutSurrogates.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints;
    }
    return $this.$charClassWithoutSurrogates;
}
function jur_AbstractCharClass_hasUCI($this) {
    return 0;
}
function jur_AbstractCharClass_setNegative($this, $value) {
    if ($this.$alt0 ^ $value) {
        $this.$alt0 = $this.$alt0 ? 0 : 1;
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
    }
    if (!$this.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    return $this;
}
function jur_AbstractCharClass_isNegative($this) {
    return $this.$alt0;
}
function jur_AbstractCharClass_intersects($cc, $ch) {
    jur_AbstractCharClass_$callClinit();
    return $cc.$contains($ch);
}
function jur_AbstractCharClass_intersects0($cc1, $cc2) {
    jur_AbstractCharClass_$callClinit();
    if ($cc1.$getBits() !== null && $cc2.$getBits() !== null)
        return $cc1.$getBits().$intersects($cc2.$getBits());
    return 1;
}
function jur_AbstractCharClass_getPredefinedClass($name, $negative) {
    jur_AbstractCharClass_$callClinit();
    return jur_AbstractCharClass$PredefinedCharacterClasses_getObject(jur_AbstractCharClass_charClasses, $name).$getValue0($negative);
}
function jur_AbstractCharClass__clinit_() {
    jur_AbstractCharClass_charClasses = jur_AbstractCharClass$PredefinedCharacterClasses__init_();
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$0 = null;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_0($this, $this$0) {
    $this.$this$0 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains($this, $ch) {
    return jl_Character_isUnicodeIdentifierPart($ch);
}
function jur_AbstractCharClass$PredefinedCharacterClasses() {
    jl_Object.call(this);
}
var jur_AbstractCharClass$PredefinedCharacterClasses_space = null;
var jur_AbstractCharClass$PredefinedCharacterClasses_digit = null;
var jur_AbstractCharClass$PredefinedCharacterClasses_contents = null;
function jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit() {
    jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit = $rt_eraseClinit(jur_AbstractCharClass$PredefinedCharacterClasses);
    jur_AbstractCharClass$PredefinedCharacterClasses__clinit_();
}
function jur_AbstractCharClass$PredefinedCharacterClasses__init_() {
    var var_0 = new jur_AbstractCharClass$PredefinedCharacterClasses();
    jur_AbstractCharClass$PredefinedCharacterClasses__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$PredefinedCharacterClasses__init_0($this) {
    jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit();
    jl_Object__init_0($this);
}
function jur_AbstractCharClass$PredefinedCharacterClasses_getObject($this, $name) {
    var $i, $row, var$4;
    $i = 0;
    while (true) {
        if ($i >= jur_AbstractCharClass$PredefinedCharacterClasses_contents.data.length)
            $rt_throw(ju_MissingResourceException__init_($rt_s(58), $rt_s(58), $name));
        $row = jur_AbstractCharClass$PredefinedCharacterClasses_contents.data[$i];
        var$4 = $row.data;
        if ($name.$equals(var$4[0]))
            break;
        $i = $i + 1 | 0;
    }
    return var$4[1];
}
function jur_AbstractCharClass$PredefinedCharacterClasses__clinit_() {
    var var$1, var$2, var$3, var$4;
    jur_AbstractCharClass$PredefinedCharacterClasses_space = jur_AbstractCharClass$LazySpace__init_();
    jur_AbstractCharClass$PredefinedCharacterClasses_digit = jur_AbstractCharClass$LazyDigit__init_();
    var$1 = $rt_createArray($rt_arraycls(jl_Object), 194);
    var$2 = var$1.data;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(59);
    var$4[1] = jur_AbstractCharClass$LazyLower__init_();
    var$2[0] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(60);
    var$4[1] = jur_AbstractCharClass$LazyUpper__init_();
    var$2[1] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(61);
    var$4[1] = jur_AbstractCharClass$LazyASCII__init_();
    var$2[2] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(62);
    var$4[1] = jur_AbstractCharClass$LazyAlpha__init_();
    var$2[3] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(63);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_digit;
    var$2[4] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(64);
    var$4[1] = jur_AbstractCharClass$LazyAlnum__init_();
    var$2[5] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(65);
    var$4[1] = jur_AbstractCharClass$LazyPunct__init_();
    var$2[6] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(66);
    var$4[1] = jur_AbstractCharClass$LazyGraph__init_();
    var$2[7] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(67);
    var$4[1] = jur_AbstractCharClass$LazyPrint__init_();
    var$2[8] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(68);
    var$4[1] = jur_AbstractCharClass$LazyBlank__init_();
    var$2[9] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(69);
    var$4[1] = jur_AbstractCharClass$LazyCntrl__init_();
    var$2[10] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(70);
    var$4[1] = jur_AbstractCharClass$LazyXDigit__init_();
    var$2[11] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(71);
    var$4[1] = jur_AbstractCharClass$LazyJavaLowerCase__init_();
    var$2[12] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(72);
    var$4[1] = jur_AbstractCharClass$LazyJavaUpperCase__init_();
    var$2[13] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(73);
    var$4[1] = jur_AbstractCharClass$LazyJavaWhitespace__init_();
    var$2[14] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(74);
    var$4[1] = jur_AbstractCharClass$LazyJavaMirrored__init_();
    var$2[15] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(75);
    var$4[1] = jur_AbstractCharClass$LazyJavaDefined__init_();
    var$2[16] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(76);
    var$4[1] = jur_AbstractCharClass$LazyJavaDigit__init_();
    var$2[17] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(77);
    var$4[1] = jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_();
    var$2[18] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(78);
    var$4[1] = jur_AbstractCharClass$LazyJavaISOControl__init_();
    var$2[19] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(79);
    var$4[1] = jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_();
    var$2[20] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(80);
    var$4[1] = jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_();
    var$2[21] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(81);
    var$4[1] = jur_AbstractCharClass$LazyJavaLetter__init_();
    var$2[22] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(82);
    var$4[1] = jur_AbstractCharClass$LazyJavaLetterOrDigit__init_();
    var$2[23] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(83);
    var$4[1] = jur_AbstractCharClass$LazyJavaSpaceChar__init_();
    var$2[24] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(84);
    var$4[1] = jur_AbstractCharClass$LazyJavaTitleCase__init_();
    var$2[25] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(85);
    var$4[1] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_();
    var$2[26] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(86);
    var$4[1] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_();
    var$2[27] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(87);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_space;
    var$2[28] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(88);
    var$4[1] = jur_AbstractCharClass$LazyWord__init_();
    var$2[29] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(89);
    var$4[1] = jur_AbstractCharClass$LazyNonWord__init_();
    var$2[30] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(90);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_space;
    var$2[31] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(91);
    var$4[1] = jur_AbstractCharClass$LazyNonSpace__init_();
    var$2[32] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(92);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_digit;
    var$2[33] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(93);
    var$4[1] = jur_AbstractCharClass$LazyNonDigit__init_();
    var$2[34] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(94);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(0, 127);
    var$2[35] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(95);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(128, 255);
    var$2[36] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(96);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(256, 383);
    var$2[37] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(97);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(384, 591);
    var$2[38] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(98);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(592, 687);
    var$2[39] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(99);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(688, 767);
    var$2[40] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(100);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(768, 879);
    var$2[41] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(101);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(880, 1023);
    var$2[42] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(102);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1024, 1279);
    var$2[43] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(103);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1280, 1327);
    var$2[44] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(104);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1328, 1423);
    var$2[45] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(105);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1424, 1535);
    var$2[46] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(106);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1536, 1791);
    var$2[47] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(107);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1792, 1871);
    var$2[48] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(108);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1872, 1919);
    var$2[49] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(109);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1920, 1983);
    var$2[50] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(110);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2304, 2431);
    var$2[51] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(111);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2432, 2559);
    var$2[52] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(112);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2560, 2687);
    var$2[53] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(113);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2688, 2815);
    var$2[54] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(114);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2816, 2943);
    var$2[55] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(115);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2944, 3071);
    var$2[56] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(116);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3072, 3199);
    var$2[57] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(117);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3200, 3327);
    var$2[58] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(118);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3328, 3455);
    var$2[59] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(119);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3456, 3583);
    var$2[60] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(120);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3584, 3711);
    var$2[61] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(121);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3712, 3839);
    var$2[62] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(122);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3840, 4095);
    var$2[63] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(123);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4096, 4255);
    var$2[64] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(124);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4256, 4351);
    var$2[65] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(125);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4352, 4607);
    var$2[66] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(126);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4608, 4991);
    var$2[67] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(127);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4992, 5023);
    var$2[68] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(128);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5024, 5119);
    var$2[69] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(129);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5120, 5759);
    var$2[70] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(130);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5760, 5791);
    var$2[71] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(131);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5792, 5887);
    var$2[72] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(132);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5888, 5919);
    var$2[73] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(133);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5920, 5951);
    var$2[74] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(134);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5952, 5983);
    var$2[75] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(135);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5984, 6015);
    var$2[76] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(136);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6016, 6143);
    var$2[77] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(137);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6144, 6319);
    var$2[78] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(138);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6400, 6479);
    var$2[79] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(139);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6480, 6527);
    var$2[80] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(140);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6528, 6623);
    var$2[81] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(141);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6624, 6655);
    var$2[82] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(142);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6656, 6687);
    var$2[83] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(143);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7424, 7551);
    var$2[84] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(144);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7552, 7615);
    var$2[85] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(145);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7616, 7679);
    var$2[86] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(146);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7680, 7935);
    var$2[87] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(147);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7936, 8191);
    var$2[88] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(148);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8192, 8303);
    var$2[89] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(149);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8304, 8351);
    var$2[90] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(150);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8352, 8399);
    var$2[91] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(151);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8400, 8447);
    var$2[92] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(152);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8448, 8527);
    var$2[93] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(153);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8528, 8591);
    var$2[94] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(154);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8592, 8703);
    var$2[95] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(155);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8704, 8959);
    var$2[96] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(156);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8960, 9215);
    var$2[97] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(157);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9216, 9279);
    var$2[98] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(158);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9280, 9311);
    var$2[99] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(159);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9312, 9471);
    var$2[100] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(160);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9472, 9599);
    var$2[101] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(161);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9600, 9631);
    var$2[102] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(162);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9632, 9727);
    var$2[103] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(163);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9728, 9983);
    var$2[104] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(164);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9984, 10175);
    var$2[105] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(165);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10176, 10223);
    var$2[106] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(166);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10224, 10239);
    var$2[107] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(167);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10240, 10495);
    var$2[108] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(168);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10496, 10623);
    var$2[109] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(169);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10624, 10751);
    var$2[110] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(170);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10752, 11007);
    var$2[111] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(171);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11008, 11263);
    var$2[112] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(172);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11264, 11359);
    var$2[113] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(173);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11392, 11519);
    var$2[114] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(174);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11520, 11567);
    var$2[115] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(175);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11568, 11647);
    var$2[116] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(176);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11648, 11743);
    var$2[117] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(177);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11776, 11903);
    var$2[118] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(178);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11904, 12031);
    var$2[119] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(179);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12032, 12255);
    var$2[120] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(180);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12272, 12287);
    var$2[121] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(181);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12288, 12351);
    var$2[122] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(182);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12352, 12447);
    var$2[123] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(183);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12448, 12543);
    var$2[124] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(184);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12544, 12591);
    var$2[125] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(185);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12592, 12687);
    var$2[126] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(186);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12688, 12703);
    var$2[127] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(187);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12704, 12735);
    var$2[128] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(188);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12736, 12783);
    var$2[129] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(189);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12784, 12799);
    var$2[130] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(190);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12800, 13055);
    var$2[131] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(191);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(13056, 13311);
    var$2[132] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(192);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(13312, 19893);
    var$2[133] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(193);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(19904, 19967);
    var$2[134] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(194);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(19968, 40959);
    var$2[135] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(195);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(40960, 42127);
    var$2[136] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(196);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(42128, 42191);
    var$2[137] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(197);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(42752, 42783);
    var$2[138] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(198);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(43008, 43055);
    var$2[139] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(199);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(44032, 55203);
    var$2[140] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(200);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(55296, 56191);
    var$2[141] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(201);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(56192, 56319);
    var$2[142] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(202);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(56320, 57343);
    var$2[143] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(203);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(57344, 63743);
    var$2[144] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(204);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(63744, 64255);
    var$2[145] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(205);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(64256, 64335);
    var$2[146] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(206);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(64336, 65023);
    var$2[147] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(207);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65024, 65039);
    var$2[148] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(208);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65040, 65055);
    var$2[149] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(209);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65056, 65071);
    var$2[150] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(210);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65072, 65103);
    var$2[151] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(211);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65104, 65135);
    var$2[152] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(212);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65136, 65279);
    var$2[153] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(213);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65280, 65519);
    var$2[154] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(214);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(0, 1114111);
    var$2[155] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(215);
    var$4[1] = jur_AbstractCharClass$LazySpecialsBlock__init_();
    var$2[156] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(216);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(0, 1);
    var$2[157] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(217);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(62, 1);
    var$2[158] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(218);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(1, 1);
    var$2[159] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(219);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(2, 1);
    var$2[160] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(220);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(3, 0);
    var$2[161] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(221);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(4, 0);
    var$2[162] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(222);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(5, 1);
    var$2[163] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(223);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(448, 1);
    var$2[164] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(224);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(6, 1);
    var$2[165] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(225);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(7, 0);
    var$2[166] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(226);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(8, 1);
    var$2[167] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(227);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(3584, 1);
    var$2[168] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(228);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(9, 1);
    var$2[169] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(229);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(10, 1);
    var$2[170] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(230);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(11, 1);
    var$2[171] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(231);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(28672, 0);
    var$2[172] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(232);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(12, 0);
    var$2[173] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(233);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(13, 0);
    var$2[174] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(234);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(14, 0);
    var$2[175] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(235);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_0(983040, 1, 1);
    var$2[176] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(236);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(15, 0);
    var$2[177] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(237);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(16, 1);
    var$2[178] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(238);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(18, 1);
    var$2[179] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(239);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_1(19, 0, 1);
    var$2[180] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(240);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(1643118592, 1);
    var$2[181] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(241);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(20, 0);
    var$2[182] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(242);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(21, 0);
    var$2[183] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(243);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(22, 0);
    var$2[184] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(244);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(23, 0);
    var$2[185] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(245);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(24, 1);
    var$2[186] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(246);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(2113929216, 1);
    var$2[187] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(247);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(25, 1);
    var$2[188] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(248);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(26, 0);
    var$2[189] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(249);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(27, 0);
    var$2[190] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(250);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(28, 1);
    var$2[191] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(251);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(29, 0);
    var$2[192] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(252);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(30, 0);
    var$2[193] = var$3;
    jur_AbstractCharClass$PredefinedCharacterClasses_contents = var$1;
}
function it_Bullet$Mover() {
}
function it_Phases$2$lambda$null$1$lambda$_23_0() {
    jl_Object.call(this);
    this.$_014 = 0;
}
function it_Phases$2$lambda$null$1$lambda$_23_0__init_(var_0) {
    var var_1 = new it_Phases$2$lambda$null$1$lambda$_23_0();
    it_Phases$2$lambda$null$1$lambda$_23_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$2$lambda$null$1$lambda$_23_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_014 = var$1;
}
function it_Phases$2$lambda$null$1$lambda$_23_0_move(var$0, var$1) {
    return it_Phases$2_lambda$null$0(var$0.$_014, var$1);
}
function jur_AbstractCharClass$LazyDigit() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyDigit();
    jur_AbstractCharClass$LazyDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyDigit__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyDigit_computeValue($this) {
    return jur_CharClass__init_().$add0(48, 57);
}
function jur_AbstractCharClass$LazyJavaLetter() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaLetter__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLetter();
    jur_AbstractCharClass$LazyJavaLetter__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLetter__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaLetter_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLetter$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function iaaal_AssetLoader() {
    jl_Object.call(this);
    this.$resolver = null;
}
function iaaal_AssetLoader__init_(var_0) {
    var var_1 = new iaaal_AssetLoader();
    iaaal_AssetLoader__init_0(var_1, var_0);
    return var_1;
}
function iaaal_AssetLoader__init_0($this, $resolver) {
    jl_Object__init_0($this);
    $this.$resolver = $resolver;
}
function iaaal_AssetLoader_resolve($this, $fileName) {
    return $this.$resolver.$resolve($fileName);
}
function it_Phases$5$lambda$$17$lambda$_5_0() {
    jl_Object.call(this);
}
function it_Phases$5$lambda$$17$lambda$_5_0__init_() {
    var var_0 = new it_Phases$5$lambda$$17$lambda$_5_0();
    it_Phases$5$lambda$$17$lambda$_5_0__init_0(var_0);
    return var_0;
}
function it_Phases$5$lambda$$17$lambda$_5_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$5$lambda$$17$lambda$_5_0_run(var$0) {
    it_Phases$5_lambda$null$16();
}
function iaaui_Streams$OptimizedByteArrayOutputStream() {
    ji_ByteArrayOutputStream.call(this);
}
function iaaui_Streams$OptimizedByteArrayOutputStream__init_(var_0) {
    var var_1 = new iaaui_Streams$OptimizedByteArrayOutputStream();
    iaaui_Streams$OptimizedByteArrayOutputStream__init_0(var_1, var_0);
    return var_1;
}
function iaaui_Streams$OptimizedByteArrayOutputStream__init_0($this, $initialSize) {
    ji_ByteArrayOutputStream__init_2($this, $initialSize);
}
function jl_Enum() {
    var a = this; jl_Object.call(a);
    a.$name2 = null;
    a.$ordinal = 0;
}
function jl_Enum__init_(var_0, var_1) {
    var var_2 = new jl_Enum();
    jl_Enum__init_0(var_2, var_0, var_1);
    return var_2;
}
function jl_Enum__init_0($this, $name, $ordinal) {
    jl_Object__init_0($this);
    $this.$name2 = $name;
    $this.$ordinal = $ordinal;
}
function jl_Enum_name($this) {
    return $this.$name2;
}
function jl_Enum_ordinal($this) {
    return $this.$ordinal;
}
function jl_Enum_toString($this) {
    return $this.$name2.$toString();
}
function jl_Enum_equals($this, $other) {
    return $this !== $other ? 0 : 1;
}
function jl_Enum_hashCode($this) {
    return jl_Object_hashCode($this);
}
function jl_Enum_getDeclaringClass($this) {
    var $result;
    $result = jl_Object_getClass($this);
    if (!$result.$getSuperclass().$equals($rt_cls(jl_Enum)))
        $result = $result.$getSuperclass();
    return $result;
}
function jl_Enum_compareTo($this, $o) {
    var var$2, var$3;
    if (jl_Enum_getDeclaringClass($o) === jl_Enum_getDeclaringClass($this))
        return jl_Integer_compare($this.$ordinal, jl_Enum_ordinal($o));
    var$2 = new jl_IllegalArgumentException;
    var$3 = jl_StringBuilder__init_().$append($rt_s(253));
    jl_IllegalArgumentException__init_1(var$2, var$3.$append(jl_Enum_getDeclaringClass($this).$getName()).$append($rt_s(254)).$append(jl_Enum_getDeclaringClass($o).$getName()).$toString());
    $rt_throw(var$2);
}
function jl_Enum_valueOf($enumType, $name) {
    var $constants, var$4, var$5, var$6, $constant;
    $constants = $enumType.$getEnumConstants();
    if ($constants === null)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(255)).$append($enumType.$getName()).$toString()));
    var$4 = $constants.data;
    var$5 = var$4.length;
    var$6 = 0;
    while (true) {
        if (var$6 >= var$5)
            $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(256)).$append($enumType.$getName()).$append($rt_s(257)).$append1($name).$append($rt_s(258)).$toString()));
        $constant = var$4[var$6];
        if (jl_Enum_name($constant).$equals($name))
            break;
        var$6 = var$6 + 1 | 0;
    }
    return $constant;
}
function jl_Enum_compareTo0($this, var$1) {
    return jl_Enum_compareTo($this, var$1);
}
function it_Direction() {
    var a = this; jl_Enum.call(a);
    a.$flipped = 0;
    a.$name4 = null;
    a.$frames = null;
    a.$region = null;
}
var it_Direction_left = null;
var it_Direction_up = null;
var it_Direction_right = null;
var it_Direction_down = null;
var it_Direction_$VALUES = null;
function it_Direction_$callClinit() {
    it_Direction_$callClinit = $rt_eraseClinit(it_Direction);
    it_Direction__clinit_();
}
function it_Direction__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new it_Direction();
    it_Direction__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function it_Direction_values() {
    it_Direction_$callClinit();
    return it_Direction_$VALUES.$clone();
}
function it_Direction__init_0($this, var$1, var$2, $name, $flipped, $seq) {
    var var$6, $i;
    it_Direction_$callClinit();
    var$6 = $seq.data;
    jl_Enum__init_0($this, var$1, var$2);
    $this.$flipped = $flipped;
    $this.$name4 = $name;
    iaa_Core_$callClinit();
    $this.$region = iaa_Core_atlas.$find(jl_StringBuilder__init_().$append($rt_s(259)).$append($name).$toString());
    var$2 = var$6.length;
    $this.$frames = $rt_createArray(iaagg_TextureRegion, var$2);
    $i = 0;
    while ($i < var$2) {
        $this.$frames.data[$i] = iaa_Core_atlas.$find(jl_StringBuilder__init_().$append($rt_s(259)).$append($name).$append($rt_s(260)).$append3(var$6[$i]).$toString());
        $i = $i + 1 | 0;
    }
}
function it_Direction_fromAngle($angle) {
    var var$2;
    it_Direction_$callClinit();
    var$2 = $rt_compare($angle, 45.0);
    if (var$2 >= 0 && $angle < 315.0) {
        if (var$2 >= 0 && $angle < 135.0)
            return it_Direction_up;
        if ($angle >= 135.0 && $angle < 225.0)
            return it_Direction_left;
        return it_Direction_down;
    }
    return it_Direction_right;
}
function it_Direction__clinit_() {
    var var$1, var$2, var$3;
    var$1 = new it_Direction;
    var$2 = $rt_createIntArray(4);
    var$3 = var$2.data;
    var$3[0] = 2;
    var$3[1] = 1;
    var$3[2] = 0;
    var$3[3] = 1;
    it_Direction__init_0(var$1, $rt_s(261), 0, $rt_s(262), 1, var$2);
    it_Direction_left = var$1;
    var$1 = new it_Direction;
    var$2 = $rt_createIntArray(4);
    var$3 = var$2.data;
    var$3[0] = 0;
    var$3[1] = 1;
    var$3[2] = 0;
    var$3[3] = 2;
    it_Direction__init_0(var$1, $rt_s(263), 1, $rt_s(264), 0, var$2);
    it_Direction_up = var$1;
    var$1 = new it_Direction;
    var$2 = $rt_createIntArray(4);
    var$3 = var$2.data;
    var$3[0] = 2;
    var$3[1] = 1;
    var$3[2] = 0;
    var$3[3] = 1;
    it_Direction__init_0(var$1, $rt_s(265), 2, $rt_s(262), 0, var$2);
    it_Direction_right = var$1;
    var$1 = new it_Direction;
    var$2 = $rt_createIntArray(4);
    var$3 = var$2.data;
    var$3[0] = 0;
    var$3[1] = 1;
    var$3[2] = 0;
    var$3[3] = 2;
    it_Direction__init_0(var$1, $rt_s(266), 3, $rt_s(267), 0, var$2);
    it_Direction_down = var$1;
    var$2 = $rt_createArray(it_Direction, 4);
    var$3 = var$2.data;
    var$3[0] = it_Direction_left;
    var$3[1] = it_Direction_up;
    var$3[2] = it_Direction_right;
    var$3[3] = it_Direction_down;
    it_Direction_$VALUES = var$2;
}
function it_Phases$4$lambda$null$11$lambda$_6_0() {
    var a = this; jl_Object.call(a);
    a.$_015 = 0.0;
    a.$_19 = 0;
}
function it_Phases$4$lambda$null$11$lambda$_6_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$4$lambda$null$11$lambda$_6_0();
    it_Phases$4$lambda$null$11$lambda$_6_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$4$lambda$null$11$lambda$_6_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_015 = var$1;
    var$0.$_19 = var$2;
}
function it_Phases$4$lambda$null$11$lambda$_6_0_get(var$0, var$1) {
    it_Phases$4_lambda$null$10(var$0.$_015, var$0.$_19, var$1);
}
function iaas_Scene$touchDown$lambda$_20_0() {
    jl_Object.call(this);
}
function iaas_Scene$touchDown$lambda$_20_0__init_() {
    var var_0 = new iaas_Scene$touchDown$lambda$_20_0();
    iaas_Scene$touchDown$lambda$_20_0__init_0(var_0);
    return var_0;
}
function iaas_Scene$touchDown$lambda$_20_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaas_Scene$touchDown$lambda$_20_0_get(var$0) {
    return iaas_Scene$touchDown$lambda$_20_0_get0(var$0);
}
function iaas_Scene$touchDown$lambda$_20_0_get0(var$0) {
    return iaase_InputEvent__init_();
}
function iaagg_TextureAtlas$TextureAtlasData() {
    var a = this; jl_Object.call(a);
    a.$pages = null;
    a.$regions = null;
}
function iaagg_TextureAtlas$TextureAtlasData__init_(var_0, var_1, var_2) {
    var var_3 = new iaagg_TextureAtlas$TextureAtlasData();
    iaagg_TextureAtlas$TextureAtlasData__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaagg_TextureAtlas$TextureAtlasData__init_0($this, $packFile, $imagesDir, $flip) {
    var $reader, $pageImage, $line, $rotate, $left, $top, $width, $height, $region, var$13, var$14, var$15, var$16, $file, $width_0, $height_0, $format, $min, $max, $direction, $repeatX, $repeatY, $ex, $$je;
    jl_Object__init_0($this);
    $this.$pages = iaac_Array__init_0();
    $this.$regions = iaac_Array__init_0();
    $reader = ji_BufferedReader__init_(ji_InputStreamReader__init_($packFile.$read2()), 64);
    a: {
        b: {
            try {
                $pageImage = null;
                while (true) {
                    $line = $reader.$readLine();
                    if ($line === null)
                        break;
                    if (!$line.$trim().$length())
                        $pageImage = null;
                    else if ($pageImage !== null) {
                        $rotate = jl_Boolean_valueOf0(iaagg_TextureAtlas_readValue($reader)).$booleanValue();
                        iaagg_TextureAtlas_readTuple($reader);
                        $left = jl_Integer_parseInt0(iaagg_TextureAtlas_tuple.data[0]);
                        $top = jl_Integer_parseInt0(iaagg_TextureAtlas_tuple.data[1]);
                        iaagg_TextureAtlas_readTuple($reader);
                        $width = jl_Integer_parseInt0(iaagg_TextureAtlas_tuple.data[0]);
                        $height = jl_Integer_parseInt0(iaagg_TextureAtlas_tuple.data[1]);
                        $region = iaagg_TextureAtlas$TextureAtlasData$Region__init_();
                        $region.$page = $pageImage;
                        $region.$left = $left;
                        $region.$top = $top;
                        $region.$width2 = $width;
                        $region.$height2 = $height;
                        $region.$name5 = $line;
                        $region.$rotate = $rotate;
                        if (iaagg_TextureAtlas_readTuple($reader) == 4) {
                            var$13 = $rt_createIntArray(4);
                            var$14 = var$13.data;
                            var$14[0] = jl_Integer_parseInt0(iaagg_TextureAtlas_tuple.data[0]);
                            var$14[1] = jl_Integer_parseInt0(iaagg_TextureAtlas_tuple.data[1]);
                            var$15 = iaagg_TextureAtlas_tuple.data[2];
                            var$14[2] = jl_Integer_parseInt0(var$15);
                            var$14[3] = jl_Integer_parseInt0(iaagg_TextureAtlas_tuple.data[3]);
                            $region.$splits = var$13;
                            if (iaagg_TextureAtlas_readTuple($reader) == 4) {
                                var$16 = $rt_createIntArray(4);
                                var$14 = var$16.data;
                                var$14[0] = jl_Integer_parseInt0(iaagg_TextureAtlas_tuple.data[0]);
                                var$14[1] = jl_Integer_parseInt0(iaagg_TextureAtlas_tuple.data[1]);
                                var$15 = iaagg_TextureAtlas_tuple.data[2];
                                var$14[2] = jl_Integer_parseInt0(var$15);
                                var$14[3] = jl_Integer_parseInt0(iaagg_TextureAtlas_tuple.data[3]);
                                $region.$pads = var$16;
                                iaagg_TextureAtlas_readTuple($reader);
                            }
                        }
                        $region.$originalWidth = jl_Integer_parseInt0(iaagg_TextureAtlas_tuple.data[0]);
                        $region.$originalHeight = jl_Integer_parseInt0(iaagg_TextureAtlas_tuple.data[1]);
                        iaagg_TextureAtlas_readTuple($reader);
                        $region.$offsetX = jl_Integer_parseInt0(iaagg_TextureAtlas_tuple.data[0]);
                        $region.$offsetY = jl_Integer_parseInt0(iaagg_TextureAtlas_tuple.data[1]);
                        $region.$index0 = jl_Integer_parseInt0(iaagg_TextureAtlas_readValue($reader));
                        if ($flip)
                            $region.$flip0 = 1;
                        $this.$regions.$add1($region);
                    } else {
                        $file = $imagesDir.$child($line);
                        $width_0 = 0.0;
                        $height_0 = 0.0;
                        if (iaagg_TextureAtlas_readTuple($reader) == 2) {
                            $width_0 = jl_Integer_parseInt0(iaagg_TextureAtlas_tuple.data[0]);
                            $height_0 = jl_Integer_parseInt0(iaagg_TextureAtlas_tuple.data[1]);
                            iaagg_TextureAtlas_readTuple($reader);
                        }
                        $format = iaag_Pixmap$Format_valueOf(iaagg_TextureAtlas_tuple.data[0]);
                        iaagg_TextureAtlas_readTuple($reader);
                        $min = iaag_Texture$TextureFilter_valueOf(iaagg_TextureAtlas_tuple.data[0]);
                        $max = iaag_Texture$TextureFilter_valueOf(iaagg_TextureAtlas_tuple.data[1]);
                        $direction = iaagg_TextureAtlas_readValue($reader);
                        iaag_Texture$TextureWrap_$callClinit();
                        $repeatX = iaag_Texture$TextureWrap_ClampToEdge;
                        $repeatY = iaag_Texture$TextureWrap_ClampToEdge;
                        if ($direction.$equals($rt_s(268)))
                            $repeatX = iaag_Texture$TextureWrap_Repeat;
                        else if ($direction.$equals($rt_s(269)))
                            $repeatY = iaag_Texture$TextureWrap_Repeat;
                        else if ($direction.$equals($rt_s(270))) {
                            $repeatX = iaag_Texture$TextureWrap_Repeat;
                            $repeatY = iaag_Texture$TextureWrap_Repeat;
                        }
                        $pageImage = iaagg_TextureAtlas$TextureAtlasData$Page__init_($file, $width_0, $height_0, iaag_Texture$TextureFilter_isMipMap($min), $format, $min, $max, $repeatX, $repeatY);
                        $this.$pages.$add1($pageImage);
                    }
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $ex = $$je;
                    break b;
                } else{
                    var$15 = $$je;
                    break a;
                }
            }
            iaaui_Streams_closeQuietly($reader);
            var$15 = $this.$regions;
            iaagg_TextureAtlas_$callClinit();
            var$15.$sort(iaagg_TextureAtlas_indexComparator);
            return;
        }
        try {
            $rt_throw(iaau_ArcRuntimeException__init_(jl_StringBuilder__init_().$append($rt_s(271)).$append1($packFile).$toString(), $ex));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$15 = $$je;

        }
    }
    iaaui_Streams_closeQuietly($reader);
    $rt_throw(var$15);
}
function jur_AheadFSet() {
    jur_FSet.call(this);
}
function jur_AheadFSet__init_() {
    var var_0 = new jur_AheadFSet();
    jur_AheadFSet__init_0(var_0);
    return var_0;
}
function jur_AheadFSet__init_0($this) {
    jur_FSet__init_0($this, (-1));
}
function jur_AheadFSet_matches($this, $stringIndex, $testString, $matchResult) {
    return $stringIndex;
}
function jur_AheadFSet_getName($this) {
    return $rt_s(272);
}
function iaasu_Label$_init_$lambda$_0_0() {
    var a = this; jl_Object.call(a);
    a.$_016 = null;
    a.$_110 = null;
}
function iaasu_Label$_init_$lambda$_0_0__init_(var_0, var_1) {
    var var_2 = new iaasu_Label$_init_$lambda$_0_0();
    iaasu_Label$_init_$lambda$_0_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaasu_Label$_init_$lambda$_0_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_016 = var$1;
    var$0.$_110 = var$2;
}
function iaasu_Label$_init_$lambda$_0_0_run(var$0) {
    iaasu_Label_lambda$new$0(var$0.$_016, var$0.$_110);
}
function iaac_IntMap$MapIterator() {
    var a = this; jl_Object.call(a);
    a.$map = null;
    a.$hasNext0 = 0;
    a.$nextIndex = 0;
    a.$currentIndex = 0;
    a.$valid = 0;
}
function iaac_IntMap$MapIterator__init_(var_0) {
    var var_1 = new iaac_IntMap$MapIterator();
    iaac_IntMap$MapIterator__init_0(var_1, var_0);
    return var_1;
}
function iaac_IntMap$MapIterator__init_0($this, $map) {
    jl_Object__init_0($this);
    $this.$valid = 1;
    $this.$map = $map;
    $this.$reset();
}
function iaac_IntMap$MapIterator_reset($this) {
    $this.$currentIndex = (-2);
    $this.$nextIndex = (-1);
    if (!$this.$map.$hasZeroValue)
        $this.$findNextIndex();
    else
        $this.$hasNext0 = 1;
}
function iaac_IntMap$MapIterator_findNextIndex($this) {
    var $keyTable, $n, var$3;
    $this.$hasNext0 = 0;
    $keyTable = $this.$map.$keyTable;
    $n = $this.$map.$capacity0 + $this.$map.$stashSize | 0;
    a: {
        while (true) {
            var$3 = $this.$nextIndex + 1 | 0;
            $this.$nextIndex = var$3;
            if (var$3 >= $n)
                break a;
            if (!$keyTable.data[$this.$nextIndex])
                continue;
            else
                break;
        }
        $this.$hasNext0 = 1;
    }
}
function iaag_VertexAttribute() {
    var a = this; jl_Object.call(a);
    a.$usage0 = 0;
    a.$numComponents = 0;
    a.$normalized = 0;
    a.$type2 = 0;
    a.$usageIndex = 0;
    a.$offset = 0;
    a.$alias = null;
    a.$unit = 0;
}
function iaag_VertexAttribute__init_(var_0, var_1, var_2) {
    var var_3 = new iaag_VertexAttribute();
    iaag_VertexAttribute__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaag_VertexAttribute__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new iaag_VertexAttribute();
    iaag_VertexAttribute__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaag_VertexAttribute__init_3(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new iaag_VertexAttribute();
    iaag_VertexAttribute__init_4(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function iaag_VertexAttribute__init_0($this, $usage, $numComponents, $alias) {
    iaag_VertexAttribute__init_2($this, $usage, $numComponents, $alias, 0);
}
function iaag_VertexAttribute__init_2($this, $usage, $numComponents, $alias, $unit) {
    var var$5;
    var$5 = $rt_compare($usage, 4);
    iaag_VertexAttribute__init_4($this, $usage, $numComponents, var$5 ? 5126 : 5121, var$5 ? 0 : 1, $alias, $unit);
}
function iaag_VertexAttribute__init_4($this, $usage, $numComponents, $type, $normalized, $alias, $unit) {
    jl_Object__init_0($this);
    $this.$usage0 = $usage;
    $this.$numComponents = $numComponents;
    $this.$type2 = $type;
    $this.$normalized = $normalized;
    $this.$alias = $alias;
    $this.$unit = $unit;
    $this.$usageIndex = jl_Integer_numberOfTrailingZeros($usage);
}
function iaag_VertexAttribute_equals($this, $obj) {
    if (!($obj instanceof iaag_VertexAttribute))
        return 0;
    return iaag_VertexAttribute_equals0($this, $obj);
}
function iaag_VertexAttribute_equals0($this, $other) {
    var var$2, var$3, var$4;
    a: {
        if ($other !== null && $this.$usage0 == $other.$usage0 && $this.$numComponents == $other.$numComponents && $this.$type2 == $other.$type2 && $this.$normalized == $other.$normalized) {
            var$2 = $this.$alias;
            var$3 = $other.$alias;
            if (var$2.$equals(var$3) && $this.$unit == $other.$unit) {
                var$4 = 1;
                break a;
            }
        }
        var$4 = 0;
    }
    return var$4;
}
function iaag_VertexAttribute_getSizeInBytes($this) {
    a: {
        switch ($this.$type2) {
            case 5120:
            case 5121:
                break;
            case 5122:
            case 5123:
                return 2 * $this.$numComponents | 0;
            case 5124:
            case 5125:
            case 5127:
            case 5128:
            case 5129:
            case 5130:
            case 5131:
                break a;
            case 5126:
            case 5132:
                return 4 * $this.$numComponents | 0;
            default:
                break a;
        }
        return $this.$numComponents;
    }
    return 0;
}
function iaag_Mesh$VertexDataType() {
    jl_Enum.call(this);
}
var iaag_Mesh$VertexDataType_VertexArray = null;
var iaag_Mesh$VertexDataType_VertexBufferObject = null;
var iaag_Mesh$VertexDataType_VertexBufferObjectSubData = null;
var iaag_Mesh$VertexDataType_VertexBufferObjectWithVAO = null;
var iaag_Mesh$VertexDataType_$VALUES = null;
function iaag_Mesh$VertexDataType_$callClinit() {
    iaag_Mesh$VertexDataType_$callClinit = $rt_eraseClinit(iaag_Mesh$VertexDataType);
    iaag_Mesh$VertexDataType__clinit_();
}
function iaag_Mesh$VertexDataType__init_(var_0, var_1) {
    var var_2 = new iaag_Mesh$VertexDataType();
    iaag_Mesh$VertexDataType__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaag_Mesh$VertexDataType_values() {
    iaag_Mesh$VertexDataType_$callClinit();
    return iaag_Mesh$VertexDataType_$VALUES.$clone();
}
function iaag_Mesh$VertexDataType__init_0($this, var$1, var$2) {
    iaag_Mesh$VertexDataType_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaag_Mesh$VertexDataType__clinit_() {
    var var$1, var$2;
    iaag_Mesh$VertexDataType_VertexArray = iaag_Mesh$VertexDataType__init_($rt_s(273), 0);
    iaag_Mesh$VertexDataType_VertexBufferObject = iaag_Mesh$VertexDataType__init_($rt_s(274), 1);
    iaag_Mesh$VertexDataType_VertexBufferObjectSubData = iaag_Mesh$VertexDataType__init_($rt_s(275), 2);
    iaag_Mesh$VertexDataType_VertexBufferObjectWithVAO = iaag_Mesh$VertexDataType__init_($rt_s(276), 3);
    var$1 = $rt_createArray(iaag_Mesh$VertexDataType, 4);
    var$2 = var$1.data;
    var$2[0] = iaag_Mesh$VertexDataType_VertexArray;
    var$2[1] = iaag_Mesh$VertexDataType_VertexBufferObject;
    var$2[2] = iaag_Mesh$VertexDataType_VertexBufferObjectSubData;
    var$2[3] = iaag_Mesh$VertexDataType_VertexBufferObjectWithVAO;
    iaag_Mesh$VertexDataType_$VALUES = var$1;
}
function jur_NonCapJointSet() {
    jur_JointSet.call(this);
}
function jur_NonCapJointSet__init_(var_0, var_1) {
    var var_2 = new jur_NonCapJointSet();
    jur_NonCapJointSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_NonCapJointSet__init_0($this, $children, $fSet) {
    jur_JointSet__init_2($this, $children, $fSet);
}
function jur_NonCapJointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $size, $i, $e, $shift;
    $start = $matchResult.$getConsumed($this.$groupIndex0);
    $matchResult.$setConsumed($this.$groupIndex0, $stringIndex);
    $size = $this.$children1.$size0();
    $i = 0;
    while (true) {
        if ($i >= $size) {
            $matchResult.$setConsumed($this.$groupIndex0, $start);
            return (-1);
        }
        $e = $this.$children1.$get($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
}
function jur_NonCapJointSet_getName($this) {
    return $rt_s(277);
}
function jur_NonCapJointSet_hasConsumed($this, $matchResult) {
    var $cons;
    $cons = $matchResult.$getConsumed($this.$groupIndex0);
    return !$cons ? 0 : 1;
}
function jur_AtomicJointSet() {
    jur_NonCapJointSet.call(this);
}
function jur_AtomicJointSet__init_(var_0, var_1) {
    var var_2 = new jur_AtomicJointSet();
    jur_AtomicJointSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AtomicJointSet__init_0($this, $children, $fSet) {
    jur_NonCapJointSet__init_0($this, $children, $fSet);
}
function jur_AtomicJointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $size, $i, $e, $shift;
    $start = $matchResult.$getConsumed($this.$groupIndex0);
    $matchResult.$setConsumed($this.$groupIndex0, $stringIndex);
    $size = $this.$children1.$size0();
    $i = 0;
    while ($i < $size) {
        $e = $this.$children1.$get($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            return $this.$next.$matches($this.$fSet.$getIndex(), $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    $matchResult.$setConsumed($this.$groupIndex0, $start);
    return (-1);
}
function jur_AtomicJointSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_AtomicJointSet_getName($this) {
    return $rt_s(277);
}
function jur_PositiveLookAhead() {
    jur_AtomicJointSet.call(this);
}
function jur_PositiveLookAhead__init_(var_0, var_1) {
    var var_2 = new jur_PositiveLookAhead();
    jur_PositiveLookAhead__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_PositiveLookAhead__init_0($this, $children, $fSet) {
    jur_AtomicJointSet__init_0($this, $children, $fSet);
}
function jur_PositiveLookAhead_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i, $e, $shift;
    $size = $this.$children1.$size0();
    $i = 0;
    while ($i < $size) {
        $e = $this.$children1.$get($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            return $this.$next.$matches($stringIndex, $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_PositiveLookAhead_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_PositiveLookAhead_getName($this) {
    return $rt_s(278);
}
function jur_NegativeLookAhead() {
    jur_AtomicJointSet.call(this);
}
function jur_NegativeLookAhead__init_(var_0, var_1) {
    var var_2 = new jur_NegativeLookAhead();
    jur_NegativeLookAhead__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_NegativeLookAhead__init_0($this, $children, $fSet) {
    jur_AtomicJointSet__init_0($this, $children, $fSet);
}
function jur_NegativeLookAhead_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i, $e;
    $size = $this.$children1.$size0();
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next.$matches($stringIndex, $testString, $matchResult);
        $e = $this.$children1.$get($i);
        if ($e.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_NegativeLookAhead_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_NegativeLookAhead_getName($this) {
    return $rt_s(279);
}
function it_Phases$lambda$static$59$lambda$_8_0() {
    jl_Object.call(this);
}
function it_Phases$lambda$static$59$lambda$_8_0__init_() {
    var var_0 = new it_Phases$lambda$static$59$lambda$_8_0();
    it_Phases$lambda$static$59$lambda$_8_0__init_0(var_0);
    return var_0;
}
function it_Phases$lambda$static$59$lambda$_8_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$lambda$static$59$lambda$_8_0_get(var$0, var$1) {
    it_Phases_lambda$null$58(var$1);
}
function it_Phases$5$update$lambda$_1_0() {
    var a = this; jl_Object.call(a);
    a.$_017 = 0.0;
    a.$_111 = 0.0;
}
function it_Phases$5$update$lambda$_1_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$5$update$lambda$_1_0();
    it_Phases$5$update$lambda$_1_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$5$update$lambda$_1_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_017 = var$1;
    var$0.$_111 = var$2;
}
function it_Phases$5$update$lambda$_1_0_run(var$0) {
    it_Phases$5_lambda$update$18(var$0.$_017, var$0.$_111);
}
function it_Phases$5$update$lambda$_1_1() {
    jl_Object.call(this);
}
function it_Phases$5$update$lambda$_1_1__init_() {
    var var_0 = new it_Phases$5$update$lambda$_1_1();
    it_Phases$5$update$lambda$_1_1__init_0(var_0);
    return var_0;
}
function it_Phases$5$update$lambda$_1_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$5$update$lambda$_1_1_run(var$0) {
    it_Phases$5_lambda$update$20();
}
function jl_Exception() {
    jl_Throwable.call(this);
}
function jl_Exception__init_() {
    var var_0 = new jl_Exception();
    jl_Exception__init_0(var_0);
    return var_0;
}
function jl_Exception__init_1(var_0, var_1) {
    var var_2 = new jl_Exception();
    jl_Exception__init_2(var_2, var_0, var_1);
    return var_2;
}
function jl_Exception__init_3(var_0) {
    var var_1 = new jl_Exception();
    jl_Exception__init_4(var_1, var_0);
    return var_1;
}
function jl_Exception__init_5(var_0) {
    var var_1 = new jl_Exception();
    jl_Exception__init_6(var_1, var_0);
    return var_1;
}
function jl_Exception__init_0($this) {
    jl_Throwable__init_0($this);
}
function jl_Exception__init_2($this, $message, $cause) {
    jl_Throwable__init_4($this, $message, $cause);
}
function jl_Exception__init_4($this, $message) {
    jl_Throwable__init_2($this, $message);
}
function jl_Exception__init_6($this, $cause) {
    jl_Throwable__init_6($this, $cause);
}
function jl_RuntimeException() {
    jl_Exception.call(this);
}
function jl_RuntimeException__init_0() {
    var var_0 = new jl_RuntimeException();
    jl_RuntimeException__init_1(var_0);
    return var_0;
}
function jl_RuntimeException__init_2(var_0, var_1) {
    var var_2 = new jl_RuntimeException();
    jl_RuntimeException__init_3(var_2, var_0, var_1);
    return var_2;
}
function jl_RuntimeException__init_(var_0) {
    var var_1 = new jl_RuntimeException();
    jl_RuntimeException__init_4(var_1, var_0);
    return var_1;
}
function jl_RuntimeException__init_5(var_0) {
    var var_1 = new jl_RuntimeException();
    jl_RuntimeException__init_6(var_1, var_0);
    return var_1;
}
function jl_RuntimeException__init_1($this) {
    jl_Exception__init_0($this);
}
function jl_RuntimeException__init_3($this, $message, $cause) {
    jl_Exception__init_2($this, $message, $cause);
}
function jl_RuntimeException__init_4($this, $message) {
    jl_Exception__init_4($this, $message);
}
function jl_RuntimeException__init_6($this, $cause) {
    jl_Exception__init_6($this, $cause);
}
function jl_UnsupportedOperationException() {
    jl_RuntimeException.call(this);
}
function jl_UnsupportedOperationException__init_() {
    var var_0 = new jl_UnsupportedOperationException();
    jl_UnsupportedOperationException__init_0(var_0);
    return var_0;
}
function jl_UnsupportedOperationException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function jn_ReadOnlyBufferException() {
    jl_UnsupportedOperationException.call(this);
}
function jn_ReadOnlyBufferException__init_() {
    var var_0 = new jn_ReadOnlyBufferException();
    jn_ReadOnlyBufferException__init_0(var_0);
    return var_0;
}
function jn_ReadOnlyBufferException__init_0($this) {
    jl_UnsupportedOperationException__init_0($this);
}
function iaaf_Cons() {
}
function it_Fx$_clinit_$lambda$_32_1() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_1__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_1();
    it_Fx$_clinit_$lambda$_32_1__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_1_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_1_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_1_get0(var$0, var$1) {
    it_Fx_lambda$static$2(var$1);
}
function otcjl_TThrowable() {
    jl_RuntimeException.call(this);
    this.$suppressed = null;
}
function otcjl_TThrowable__init_() {
    var var_0 = new otcjl_TThrowable();
    otcjl_TThrowable__init_0(var_0);
    return var_0;
}
function otcjl_TThrowable__init_0($this) {
    jl_RuntimeException__init_1($this);
    $this.$suppressed = $rt_createArray(otcjl_TThrowable, 0);
}
function otcjl_TThrowable_fillInStackTrace($this) {
    return $this;
}
function jl_Iterable() {
}
function iaac_ObjectMap() {
    var a = this; jl_Object.call(a);
    a.$size1 = 0;
    a.$keyTable0 = null;
    a.$valueTable = null;
    a.$capacity1 = 0;
    a.$stashSize0 = 0;
    a.$loadFactor = 0.0;
    a.$hashShift = 0;
    a.$mask = 0;
    a.$threshold = 0;
    a.$stashCapacity = 0;
    a.$pushIterations = 0;
    a.$entries1 = null;
    a.$entries2 = null;
    a.$keys1 = null;
    a.$keys2 = null;
}
function iaac_ObjectMap__init_() {
    var var_0 = new iaac_ObjectMap();
    iaac_ObjectMap__init_0(var_0);
    return var_0;
}
function iaac_ObjectMap__init_1(var_0) {
    var var_1 = new iaac_ObjectMap();
    iaac_ObjectMap__init_2(var_1, var_0);
    return var_1;
}
function iaac_ObjectMap__init_3(var_0, var_1) {
    var var_2 = new iaac_ObjectMap();
    iaac_ObjectMap__init_4(var_2, var_0, var_1);
    return var_2;
}
function iaac_ObjectMap__init_0($this) {
    iaac_ObjectMap__init_4($this, 51, 0.800000011920929);
}
function iaac_ObjectMap__init_2($this, $initialCapacity) {
    iaac_ObjectMap__init_4($this, $initialCapacity, 0.800000011920929);
}
function iaac_ObjectMap__init_4($this, $initialCapacity, $loadFactor) {
    var var$3;
    jl_Object__init_0($this);
    if ($initialCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(280)).$append3($initialCapacity).$toString()));
    var$3 = iaam_Mathf_nextPowerOfTwo(jl_Math_ceil($initialCapacity / $loadFactor) | 0);
    if (var$3 > 1073741824)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(281)).$append3(var$3).$toString()));
    $this.$capacity1 = var$3;
    if ($loadFactor <= 0.0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(282)).$append13($loadFactor).$toString()));
    $this.$loadFactor = $loadFactor;
    $this.$threshold = $this.$capacity1 * $loadFactor | 0;
    $this.$mask = $this.$capacity1 - 1 | 0;
    $this.$hashShift = 31 - jl_Integer_numberOfTrailingZeros($this.$capacity1) | 0;
    $this.$stashCapacity = jl_Math_max1(3, (jl_Math_ceil(jl_Math_log($this.$capacity1)) | 0) * 2 | 0);
    $this.$pushIterations = jl_Math_max1(jl_Math_min1($this.$capacity1, 8), (jl_Math_sqrt($this.$capacity1) | 0) / 8 | 0);
    $this.$keyTable0 = $rt_createArray(jl_Object, $this.$capacity1 + $this.$stashCapacity | 0);
    $this.$valueTable = $rt_createArray(jl_Object, $this.$keyTable0.data.length);
}
function iaac_ObjectMap_put($this, $key, $value) {
    var $keyTable, var$4, $hashCode, $index1, $key1, $oldValue, $index2, $key2, $index3, $key3, $i, $n, var$15;
    if ($key === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(283)));
    $keyTable = $this.$keyTable0;
    var$4 = $keyTable.data;
    $hashCode = $key.$hashCode();
    $index1 = $hashCode & $this.$mask;
    $key1 = var$4[$index1];
    if ($key.$equals($key1)) {
        $oldValue = $this.$valueTable.data[$index1];
        $this.$valueTable.data[$index1] = $value;
        return $oldValue;
    }
    $index2 = iaac_ObjectMap_hash2($this, $hashCode);
    $key2 = var$4[$index2];
    if ($key.$equals($key2)) {
        $oldValue = $this.$valueTable.data[$index2];
        $this.$valueTable.data[$index2] = $value;
        return $oldValue;
    }
    $index3 = iaac_ObjectMap_hash3($this, $hashCode);
    $key3 = var$4[$index3];
    if ($key.$equals($key3)) {
        $oldValue = $this.$valueTable.data[$index3];
        $this.$valueTable.data[$index3] = $value;
        return $oldValue;
    }
    $i = $this.$capacity1;
    $n = $i + $this.$stashSize0 | 0;
    while (true) {
        if ($i >= $n) {
            if ($key1 === null) {
                var$4[$index1] = $key;
                $this.$valueTable.data[$index1] = $value;
                var$15 = $this.$size1;
                $this.$size1 = var$15 + 1 | 0;
                if (var$15 >= $this.$threshold)
                    iaac_ObjectMap_resize($this, $this.$capacity1 << 1);
                return null;
            }
            if ($key2 === null) {
                var$4[$index2] = $key;
                $this.$valueTable.data[$index2] = $value;
                var$15 = $this.$size1;
                $this.$size1 = var$15 + 1 | 0;
                if (var$15 >= $this.$threshold)
                    iaac_ObjectMap_resize($this, $this.$capacity1 << 1);
                return null;
            }
            if ($key3 !== null) {
                iaac_ObjectMap_push($this, $key, $value, $index1, $key1, $index2, $key2, $index3, $key3);
                return null;
            }
            var$4[$index3] = $key;
            $this.$valueTable.data[$index3] = $value;
            var$15 = $this.$size1;
            $this.$size1 = var$15 + 1 | 0;
            if (var$15 >= $this.$threshold)
                iaac_ObjectMap_resize($this, $this.$capacity1 << 1);
            return null;
        }
        if ($key.$equals(var$4[$i]))
            break;
        $i = $i + 1 | 0;
    }
    $oldValue = $this.$valueTable.data[$i];
    $this.$valueTable.data[$i] = $value;
    return $oldValue;
}
function iaac_ObjectMap_putResize($this, $key, $value) {
    var $hashCode, $index1, $key1, var$6, $index2, $key2, $index3, $key3;
    $hashCode = $key.$hashCode();
    $index1 = $hashCode & $this.$mask;
    $key1 = $this.$keyTable0.data[$index1];
    if ($key1 === null) {
        $this.$keyTable0.data[$index1] = $key;
        $this.$valueTable.data[$index1] = $value;
        var$6 = $this.$size1;
        $this.$size1 = var$6 + 1 | 0;
        if (var$6 >= $this.$threshold)
            iaac_ObjectMap_resize($this, $this.$capacity1 << 1);
        return;
    }
    $index2 = iaac_ObjectMap_hash2($this, $hashCode);
    $key2 = $this.$keyTable0.data[$index2];
    if ($key2 === null) {
        $this.$keyTable0.data[$index2] = $key;
        $this.$valueTable.data[$index2] = $value;
        var$6 = $this.$size1;
        $this.$size1 = var$6 + 1 | 0;
        if (var$6 >= $this.$threshold)
            iaac_ObjectMap_resize($this, $this.$capacity1 << 1);
        return;
    }
    $index3 = iaac_ObjectMap_hash3($this, $hashCode);
    $key3 = $this.$keyTable0.data[$index3];
    if ($key3 !== null) {
        iaac_ObjectMap_push($this, $key, $value, $index1, $key1, $index2, $key2, $index3, $key3);
        return;
    }
    $this.$keyTable0.data[$index3] = $key;
    $this.$valueTable.data[$index3] = $value;
    var$6 = $this.$size1;
    $this.$size1 = var$6 + 1 | 0;
    if (var$6 >= $this.$threshold)
        iaac_ObjectMap_resize($this, $this.$capacity1 << 1);
}
function iaac_ObjectMap_push($this, $insertKey, $insertValue, $index1, $key1, $index2, $key2, $index3, $key3) {
    var $keyTable, $valueTable, $mask, $i, $pushIterations, var$14, var$15, $evictedValue, $hashCode, var$18, var$19, var$20;
    $keyTable = $this.$keyTable0;
    $valueTable = $this.$valueTable;
    $mask = $this.$mask;
    $i = 0;
    $pushIterations = $this.$pushIterations;
    while (true) {
        a: {
            switch (iaam_Mathf_random(2)) {
                case 0:
                    break;
                case 1:
                    var$14 = $valueTable.data;
                    var$15 = $keyTable.data;
                    $evictedValue = var$14[$index2];
                    var$15[$index2] = $insertKey;
                    var$14[$index2] = $insertValue;
                    $key1 = $key2;
                    break a;
                default:
                    var$14 = $valueTable.data;
                    var$15 = $keyTable.data;
                    $evictedValue = var$14[$index3];
                    var$15[$index3] = $insertKey;
                    var$14[$index3] = $insertValue;
                    $key1 = $key3;
                    break a;
            }
            var$14 = $valueTable.data;
            var$15 = $keyTable.data;
            $evictedValue = var$14[$index1];
            var$15[$index1] = $insertKey;
            var$14[$index1] = $insertValue;
        }
        var$15 = $keyTable.data;
        $hashCode = $key1.$hashCode();
        $index1 = $hashCode & $mask;
        var$18 = var$15[$index1];
        if (var$18 === null) {
            var$14 = $valueTable.data;
            var$15[$index1] = $key1;
            var$14[$index1] = $evictedValue;
            var$19 = $this.$size1;
            $this.$size1 = var$19 + 1 | 0;
            if (var$19 >= $this.$threshold)
                iaac_ObjectMap_resize($this, $this.$capacity1 << 1);
            return;
        }
        $index2 = iaac_ObjectMap_hash2($this, $hashCode);
        $key2 = var$15[$index2];
        if ($key2 === null) {
            var$14 = $valueTable.data;
            var$15[$index2] = $key1;
            var$14[$index2] = $evictedValue;
            var$19 = $this.$size1;
            $this.$size1 = var$19 + 1 | 0;
            if (var$19 >= $this.$threshold)
                iaac_ObjectMap_resize($this, $this.$capacity1 << 1);
            return;
        }
        $index3 = iaac_ObjectMap_hash3($this, $hashCode);
        $key3 = var$15[$index3];
        if ($key3 === null) {
            var$14 = $valueTable.data;
            var$15[$index3] = $key1;
            var$14[$index3] = $evictedValue;
            var$20 = $this.$size1;
            $this.$size1 = var$20 + 1 | 0;
            if (var$20 >= $this.$threshold)
                iaac_ObjectMap_resize($this, $this.$capacity1 << 1);
            return;
        }
        $i = $i + 1 | 0;
        if ($i == $pushIterations)
            break;
        $insertKey = $key1;
        $key1 = var$18;
        $insertValue = $evictedValue;
    }
    iaac_ObjectMap_putStash($this, $key1, $evictedValue);
}
function iaac_ObjectMap_putStash($this, $key, $value) {
    var $index;
    if ($this.$stashSize0 == $this.$stashCapacity) {
        iaac_ObjectMap_resize($this, $this.$capacity1 << 1);
        iaac_ObjectMap_putResize($this, $key, $value);
        return;
    }
    $index = $this.$capacity1 + $this.$stashSize0 | 0;
    $this.$keyTable0.data[$index] = $key;
    $this.$valueTable.data[$index] = $value;
    $this.$stashSize0 = $this.$stashSize0 + 1 | 0;
    $this.$size1 = $this.$size1 + 1 | 0;
}
function iaac_ObjectMap_getThrow($this, $key, $error) {
    if ($this.$containsKey($key))
        return $this.$get9($key);
    $rt_throw($error.$get0());
}
function iaac_ObjectMap_getOr($this, $key, $supplier) {
    var $val;
    $val = $this.$get9($key);
    if ($val === null) {
        $val = $supplier.$get0();
        $this.$put($key, $val);
    }
    return $val;
}
function iaac_ObjectMap_getNull($this, $key) {
    return $key !== null ? $this.$get9($key) : null;
}
function iaac_ObjectMap_get($this, $key) {
    var $hashCode, $index;
    $hashCode = $key.$hashCode();
    $index = $hashCode & $this.$mask;
    if (!$key.$equals($this.$keyTable0.data[$index])) {
        $index = iaac_ObjectMap_hash2($this, $hashCode);
        if (!$key.$equals($this.$keyTable0.data[$index])) {
            $index = iaac_ObjectMap_hash3($this, $hashCode);
            if (!$key.$equals($this.$keyTable0.data[$index]))
                return iaac_ObjectMap_getStash($this, $key, null);
        }
    }
    return $this.$valueTable.data[$index];
}
function iaac_ObjectMap_get0($this, $key, $defaultValue) {
    var $hashCode, $index;
    $hashCode = $key.$hashCode();
    $index = $hashCode & $this.$mask;
    if (!$key.$equals($this.$keyTable0.data[$index])) {
        $index = iaac_ObjectMap_hash2($this, $hashCode);
        if (!$key.$equals($this.$keyTable0.data[$index])) {
            $index = iaac_ObjectMap_hash3($this, $hashCode);
            if (!$key.$equals($this.$keyTable0.data[$index]))
                return iaac_ObjectMap_getStash($this, $key, $defaultValue);
        }
    }
    return $this.$valueTable.data[$index];
}
function iaac_ObjectMap_getStash($this, $key, $defaultValue) {
    var $keyTable, $i, $n;
    $keyTable = $this.$keyTable0;
    $i = $this.$capacity1;
    $n = $i + $this.$stashSize0 | 0;
    while ($i < $n) {
        if ($key.$equals($keyTable.data[$i]))
            return $this.$valueTable.data[$i];
        $i = $i + 1 | 0;
    }
    return $defaultValue;
}
function iaac_ObjectMap_clear($this) {
    var $keyTable, $valueTable, $i, $i_0, var$5;
    if (!$this.$size1)
        return;
    $keyTable = $this.$keyTable0;
    $valueTable = $this.$valueTable;
    $i = $this.$capacity1 + $this.$stashSize0 | 0;
    while (true) {
        $i_0 = $i + (-1) | 0;
        if ($i <= 0)
            break;
        var$5 = $valueTable.data;
        $keyTable.data[$i_0] = null;
        var$5[$i_0] = null;
        $i = $i_0;
    }
    $this.$size1 = 0;
    $this.$stashSize0 = 0;
}
function iaac_ObjectMap_containsKey($this, $key) {
    var $hashCode, $index, var$4;
    $hashCode = $key.$hashCode();
    $index = $hashCode & $this.$mask;
    if (!$key.$equals($this.$keyTable0.data[$index])) {
        var$4 = iaac_ObjectMap_hash2($this, $hashCode);
        if (!$key.$equals($this.$keyTable0.data[var$4])) {
            var$4 = iaac_ObjectMap_hash3($this, $hashCode);
            if (!$key.$equals($this.$keyTable0.data[var$4]))
                return iaac_ObjectMap_containsKeyStash($this, $key);
        }
    }
    return 1;
}
function iaac_ObjectMap_containsKeyStash($this, $key) {
    var $keyTable, $i, $n;
    $keyTable = $this.$keyTable0;
    $i = $this.$capacity1;
    $n = $i + $this.$stashSize0 | 0;
    while ($i < $n) {
        if ($key.$equals($keyTable.data[$i]))
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
}
function iaac_ObjectMap_resize($this, $newSize) {
    var $oldEndIndex, var$3, $oldKeyTable, $oldValueTable, $oldSize, $i, $key;
    a: {
        $oldEndIndex = $this.$capacity1 + $this.$stashSize0 | 0;
        $this.$capacity1 = $newSize;
        $this.$threshold = $newSize * $this.$loadFactor | 0;
        $this.$mask = $newSize - 1 | 0;
        $this.$hashShift = 31 - jl_Integer_numberOfTrailingZeros($newSize) | 0;
        var$3 = $newSize;
        $this.$stashCapacity = jl_Math_max1(3, (jl_Math_ceil(jl_Math_log(var$3)) | 0) * 2 | 0);
        $this.$pushIterations = jl_Math_max1(jl_Math_min1($newSize, 8), (jl_Math_sqrt(var$3) | 0) / 8 | 0);
        $oldKeyTable = $this.$keyTable0;
        $oldValueTable = $this.$valueTable;
        $this.$keyTable0 = $rt_createArray(jl_Object, $newSize + $this.$stashCapacity | 0);
        $this.$valueTable = $rt_createArray(jl_Object, $newSize + $this.$stashCapacity | 0);
        $oldSize = $this.$size1;
        $this.$size1 = 0;
        $this.$stashSize0 = 0;
        if ($oldSize > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldEndIndex)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key !== null)
                    iaac_ObjectMap_putResize($this, $key, $oldValueTable.data[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
}
function iaac_ObjectMap_hash2($this, $h) {
    var var$2;
    var$2 = $rt_imul($h, (-1262997959));
    return (var$2 ^ var$2 >>> $this.$hashShift) & $this.$mask;
}
function iaac_ObjectMap_hash3($this, $h) {
    var var$2;
    var$2 = $rt_imul($h, (-825114047));
    return (var$2 ^ var$2 >>> $this.$hashShift) & $this.$mask;
}
function iaac_ObjectMap_entries($this) {
    if ($this.$entries1 === null) {
        $this.$entries1 = iaac_ObjectMap$Entries__init_($this);
        $this.$entries2 = iaac_ObjectMap$Entries__init_($this);
    }
    if ($this.$entries1.$valid0) {
        $this.$entries2.$reset();
        $this.$entries2.$valid0 = 1;
        $this.$entries1.$valid0 = 0;
        return $this.$entries2;
    }
    $this.$entries1.$reset();
    $this.$entries1.$valid0 = 1;
    $this.$entries2.$valid0 = 0;
    return $this.$entries1;
}
function iaac_ObjectMap_keys($this) {
    if ($this.$keys1 === null) {
        $this.$keys1 = iaac_ObjectMap$Keys__init_($this);
        $this.$keys2 = iaac_ObjectMap$Keys__init_($this);
    }
    if ($this.$keys1.$valid0) {
        $this.$keys2.$reset();
        $this.$keys2.$valid0 = 1;
        $this.$keys1.$valid0 = 0;
        return $this.$keys2;
    }
    $this.$keys1.$reset();
    $this.$keys1.$valid0 = 1;
    $this.$keys2.$valid0 = 0;
    return $this.$keys1;
}
function iaac_StringMap() {
    iaac_ObjectMap.call(this);
}
function iaac_StringMap__init_() {
    var var_0 = new iaac_StringMap();
    iaac_StringMap__init_0(var_0);
    return var_0;
}
function iaac_StringMap__init_0($this) {
    iaac_ObjectMap__init_0($this);
}
function it_Fx$_clinit_$lambda$_32_0() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_0__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_0();
    it_Fx$_clinit_$lambda$_32_0__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_0_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_0_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_0_get0(var$0, var$1) {
    it_Fx_lambda$static$1(var$1);
}
function it_Fx$_clinit_$lambda$_32_3() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_3__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_3();
    it_Fx$_clinit_$lambda$_32_3__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_3__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_3_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_3_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_3_get0(var$0, var$1) {
    it_Fx_lambda$static$6(var$1);
}
function jlr_Array() {
    jl_Object.call(this);
}
function jlr_Array_getLength(var$1) {
    if (var$1 === null || var$1.constructor.$meta.item === undefined) {
        $rt_throw(jl_IllegalArgumentException__init_0());
    }
    return var$1.data.length;
}
function jlr_Array_newInstance($componentType, $length) {
    if ($componentType === null)
        $rt_throw(jl_NullPointerException__init_());
    if ($componentType === $rt_cls($rt_voidcls()))
        $rt_throw(jl_IllegalArgumentException__init_0());
    if ($length < 0)
        $rt_throw(jl_NegativeArraySizeException__init_());
    return jlr_Array_newInstanceImpl($componentType.$getPlatformClass(), $length);
}
function jlr_Array_newInstanceImpl(var$1, var$2) {
    if (var$1.$meta.primitive) {
        if (var$1 == $rt_bytecls()) {
            return $rt_createByteArray(var$2);
        }
        if (var$1 == $rt_shortcls()) {
            return $rt_createShortArray(var$2);
        }
        if (var$1 == $rt_charcls()) {
            return $rt_createCharArray(var$2);
        }
        if (var$1 == $rt_intcls()) {
            return $rt_createIntArray(var$2);
        }
        if (var$1 == $rt_longcls()) {
            return $rt_createLongArray(var$2);
        }
        if (var$1 == $rt_floatcls()) {
            return $rt_createFloatArray(var$2);
        }
        if (var$1 == $rt_doublecls()) {
            return $rt_createDoubleArray(var$2);
        }
        if (var$1 == $rt_booleancls()) {
            return $rt_createBooleanArray(var$2);
        }
    } else {
        return $rt_createArray(var$1, var$2)
    }
}
function it_Fx$_clinit_$lambda$_32_2() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_2__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_2();
    it_Fx$_clinit_$lambda$_32_2__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_2__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_2_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_2_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_2_get0(var$0, var$1) {
    it_Fx_lambda$static$4(var$1);
}
function cjj_InfCodes() {
    var a = this; jl_Object.call(a);
    a.$mode0 = 0;
    a.$len = 0;
    a.$tree = null;
    a.$tree_index = 0;
    a.$need0 = 0;
    a.$lit = 0;
    a.$get10 = 0;
    a.$dist = 0;
    a.$lbits = 0;
    a.$dbits = 0;
    a.$ltree = null;
    a.$ltree_index = 0;
    a.$dtree = null;
    a.$dtree_index = 0;
    a.$z0 = null;
    a.$s = null;
}
var cjj_InfCodes_inflate_mask = null;
function cjj_InfCodes_$callClinit() {
    cjj_InfCodes_$callClinit = $rt_eraseClinit(cjj_InfCodes);
    cjj_InfCodes__clinit_();
}
function cjj_InfCodes__init_(var_0, var_1) {
    var var_2 = new cjj_InfCodes();
    cjj_InfCodes__init_0(var_2, var_0, var_1);
    return var_2;
}
function cjj_InfCodes__init_0($this, $z, $s) {
    cjj_InfCodes_$callClinit();
    jl_Object__init_0($this);
    $this.$tree_index = 0;
    $this.$z0 = $z;
    $this.$s = $s;
}
function cjj_InfCodes_init($this, $bl, $bd, $tl, $tl_index, $td, $td_index) {
    $this.$mode0 = 0;
    $this.$lbits = $bl << 24 >> 24;
    $this.$dbits = $bd << 24 >> 24;
    $this.$ltree = $tl;
    $this.$ltree_index = $tl_index;
    $this.$dtree = $td;
    $this.$dtree_index = $td_index;
    $this.$tree = null;
}
function cjj_InfCodes_proc($this, $r) {
    var var$2, $n, var$4, var$5, $q, $m, var$8, var$9, var$10, var$11, var$12, $j, $tindex, $e, $f, var$17;
    var$2 = $this.$z0.$next_in_index;
    $n = $this.$z0.$avail_in;
    var$4 = $this.$s.$bitb;
    var$5 = $this.$s.$bitk;
    $q = $this.$s.$write1;
    $m = $q >= $this.$s.$read3 ? $this.$s.$end0 - $q | 0 : ($this.$s.$read3 - $q | 0) - 1 | 0;
    a: {
        b: while (true) {
            c: {
                d: {
                    e: {
                        f: {
                            g: {
                                switch ($this.$mode0) {
                                    case 0:
                                        break f;
                                    case 2:
                                        var$8 = $this.$get10;
                                        while (var$5 < var$8) {
                                            if (!$n) {
                                                $this.$s.$bitb = var$4;
                                                $this.$s.$bitk = var$5;
                                                $this.$z0.$avail_in = $n;
                                                var$9 = $this.$z0;
                                                var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z0.$next_in_index | 0));
                                                $this.$z0.$next_in_index = var$2;
                                                $this.$s.$write1 = $q;
                                                return cjj_InfBlocks_inflate_flush($this.$s, $r);
                                            }
                                            $r = 0;
                                            $n = $n + (-1) | 0;
                                            var$10 = $this.$z0.$next_in.data;
                                            var$11 = var$2 + 1 | 0;
                                            var$4 = var$4 | (var$10[var$2] & 255) << var$5;
                                            var$5 = var$5 + 8 | 0;
                                            var$2 = var$11;
                                        }
                                        $this.$len = $this.$len + (var$4 & cjj_InfCodes_inflate_mask.data[var$8]) | 0;
                                        var$4 = var$4 >> var$8;
                                        var$5 = var$5 - var$8 | 0;
                                        $this.$need0 = $this.$dbits;
                                        $this.$tree = $this.$dtree;
                                        $this.$tree_index = $this.$dtree_index;
                                        $this.$mode0 = 3;
                                        break g;
                                    case 4:
                                        var$8 = $this.$get10;
                                        while (var$5 < var$8) {
                                            if (!$n) {
                                                $this.$s.$bitb = var$4;
                                                $this.$s.$bitk = var$5;
                                                $this.$z0.$avail_in = $n;
                                                var$9 = $this.$z0;
                                                var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z0.$next_in_index | 0));
                                                $this.$z0.$next_in_index = var$2;
                                                $this.$s.$write1 = $q;
                                                return cjj_InfBlocks_inflate_flush($this.$s, $r);
                                            }
                                            $r = 0;
                                            $n = $n + (-1) | 0;
                                            var$10 = $this.$z0.$next_in.data;
                                            var$11 = var$2 + 1 | 0;
                                            var$4 = var$4 | (var$10[var$2] & 255) << var$5;
                                            var$5 = var$5 + 8 | 0;
                                            var$2 = var$11;
                                        }
                                        $this.$dist = $this.$dist + (var$4 & cjj_InfCodes_inflate_mask.data[var$8]) | 0;
                                        var$4 = var$4 >> var$8;
                                        var$5 = var$5 - var$8 | 0;
                                        $this.$mode0 = 5;
                                        break c;
                                    case 6:
                                        break d;
                                    case 7:
                                        if (var$5 > 7) {
                                            var$5 = var$5 + (-8) | 0;
                                            $n = $n + 1 | 0;
                                            var$2 = var$2 + (-1) | 0;
                                        }
                                        $this.$s.$write1 = $q;
                                        var$8 = cjj_InfBlocks_inflate_flush($this.$s, $r);
                                        $q = $this.$s.$write1;
                                        if ($this.$s.$read3 != $this.$s.$write1) {
                                            $this.$s.$bitb = var$4;
                                            $this.$s.$bitk = var$5;
                                            $this.$z0.$avail_in = $n;
                                            var$9 = $this.$z0;
                                            var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z0.$next_in_index | 0));
                                            $this.$z0.$next_in_index = var$2;
                                            $this.$s.$write1 = $q;
                                            return cjj_InfBlocks_inflate_flush($this.$s, var$8);
                                        }
                                        $this.$mode0 = 8;
                                        break a;
                                    case 9:
                                        $this.$s.$bitb = var$4;
                                        $this.$s.$bitk = var$5;
                                        $this.$z0.$avail_in = $n;
                                        var$9 = $this.$z0;
                                        var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z0.$next_in_index | 0));
                                        $this.$z0.$next_in_index = var$2;
                                        $this.$s.$write1 = $q;
                                        return cjj_InfBlocks_inflate_flush($this.$s, (-3));
                                    case 1:
                                        break e;
                                    case 3:
                                        break;
                                    case 5:
                                        break c;
                                    case 8:
                                        break a;
                                    default:
                                        $this.$s.$bitb = var$4;
                                        $this.$s.$bitk = var$5;
                                        $this.$z0.$avail_in = $n;
                                        var$9 = $this.$z0;
                                        var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z0.$next_in_index | 0));
                                        $this.$z0.$next_in_index = var$2;
                                        $this.$s.$write1 = $q;
                                        return cjj_InfBlocks_inflate_flush($this.$s, (-2));
                                }
                            }
                            var$11 = $this.$need0;
                            while (var$5 < var$11) {
                                if (!$n) {
                                    $this.$s.$bitb = var$4;
                                    $this.$s.$bitk = var$5;
                                    $this.$z0.$avail_in = $n;
                                    var$9 = $this.$z0;
                                    var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z0.$next_in_index | 0));
                                    $this.$z0.$next_in_index = var$2;
                                    $this.$s.$write1 = $q;
                                    return cjj_InfBlocks_inflate_flush($this.$s, $r);
                                }
                                $r = 0;
                                $n = $n + (-1) | 0;
                                var$10 = $this.$z0.$next_in.data;
                                var$8 = var$2 + 1 | 0;
                                var$4 = var$4 | (var$10[var$2] & 255) << var$5;
                                var$5 = var$5 + 8 | 0;
                                var$2 = var$8;
                            }
                            var$12 = ($this.$tree_index + (var$4 & cjj_InfCodes_inflate_mask.data[var$11]) | 0) * 3 | 0;
                            var$10 = $this.$tree.data;
                            var$8 = var$12 + 1 | 0;
                            var$4 = var$4 >> var$10[var$8];
                            var$5 = var$5 - $this.$tree.data[var$8] | 0;
                            var$11 = $this.$tree.data[var$12];
                            if (var$11 & 16) {
                                $this.$get10 = var$11 & 15;
                                $this.$dist = $this.$tree.data[var$12 + 2 | 0];
                                $this.$mode0 = 4;
                                continue b;
                            }
                            if (var$11 & 64) {
                                $this.$mode0 = 9;
                                $this.$z0.$msg = $rt_s(284);
                                $this.$s.$bitb = var$4;
                                $this.$s.$bitk = var$5;
                                $this.$z0.$avail_in = $n;
                                var$9 = $this.$z0;
                                var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z0.$next_in_index | 0));
                                $this.$z0.$next_in_index = var$2;
                                $this.$s.$write1 = $q;
                                return cjj_InfBlocks_inflate_flush($this.$s, (-3));
                            }
                            $this.$need0 = var$11;
                            $this.$tree_index = (var$12 / 3 | 0) + $this.$tree.data[var$12 + 2 | 0] | 0;
                            continue b;
                        }
                        if ($m >= 258 && $n >= 10) {
                            $this.$s.$bitb = var$4;
                            $this.$s.$bitk = var$5;
                            $this.$z0.$avail_in = $n;
                            var$9 = $this.$z0;
                            var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z0.$next_in_index | 0));
                            $this.$z0.$next_in_index = var$2;
                            $this.$s.$write1 = $q;
                            $r = cjj_InfCodes_inflate_fast($this, $this.$lbits, $this.$dbits, $this.$ltree, $this.$ltree_index, $this.$dtree, $this.$dtree_index, $this.$s, $this.$z0);
                            var$2 = $this.$z0.$next_in_index;
                            $n = $this.$z0.$avail_in;
                            var$4 = $this.$s.$bitb;
                            var$5 = $this.$s.$bitk;
                            $q = $this.$s.$write1;
                            $m = $q >= $this.$s.$read3 ? $this.$s.$end0 - $q | 0 : ($this.$s.$read3 - $q | 0) - 1 | 0;
                            if ($r) {
                                $this.$mode0 = $r != 1 ? 9 : 7;
                                continue b;
                            }
                        }
                        $this.$need0 = $this.$lbits;
                        $this.$tree = $this.$ltree;
                        $this.$tree_index = $this.$ltree_index;
                        $this.$mode0 = 1;
                    }
                    $j = $this.$need0;
                    while (var$5 < $j) {
                        if (!$n)
                            break b;
                        $r = 0;
                        $n = $n + (-1) | 0;
                        var$10 = $this.$z0.$next_in.data;
                        var$8 = var$2 + 1 | 0;
                        var$4 = var$4 | (var$10[var$2] & 255) << var$5;
                        var$5 = var$5 + 8 | 0;
                        var$2 = var$8;
                    }
                    $tindex = ($this.$tree_index + (var$4 & cjj_InfCodes_inflate_mask.data[$j]) | 0) * 3 | 0;
                    var$10 = $this.$tree.data;
                    var$8 = $tindex + 1 | 0;
                    var$4 = var$4 >>> var$10[var$8];
                    var$5 = var$5 - $this.$tree.data[var$8] | 0;
                    $e = $this.$tree.data[$tindex];
                    if (!$e) {
                        $this.$lit = $this.$tree.data[$tindex + 2 | 0];
                        $this.$mode0 = 6;
                        continue b;
                    }
                    if ($e & 16) {
                        $this.$get10 = $e & 15;
                        $this.$len = $this.$tree.data[$tindex + 2 | 0];
                        $this.$mode0 = 2;
                        continue b;
                    }
                    if (!($e & 64)) {
                        $this.$need0 = $e;
                        $this.$tree_index = ($tindex / 3 | 0) + $this.$tree.data[$tindex + 2 | 0] | 0;
                        continue b;
                    }
                    if (!($e & 32)) {
                        $this.$mode0 = 9;
                        $this.$z0.$msg = $rt_s(285);
                        $this.$s.$bitb = var$4;
                        $this.$s.$bitk = var$5;
                        $this.$z0.$avail_in = $n;
                        var$9 = $this.$z0;
                        var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z0.$next_in_index | 0));
                        $this.$z0.$next_in_index = var$2;
                        $this.$s.$write1 = $q;
                        return cjj_InfBlocks_inflate_flush($this.$s, (-3));
                    }
                    $this.$mode0 = 7;
                    continue b;
                }
                if ($m)
                    var$8 = $q;
                else {
                    if ($q != $this.$s.$end0)
                        var$8 = $q;
                    else if (!$this.$s.$read3)
                        var$8 = $q;
                    else {
                        var$8 = 0;
                        $m = var$8 >= $this.$s.$read3 ? $this.$s.$end0 - var$8 | 0 : ($this.$s.$read3 - var$8 | 0) - 1 | 0;
                    }
                    if (!$m) {
                        $this.$s.$write1 = var$8;
                        var$11 = cjj_InfBlocks_inflate_flush($this.$s, $r);
                        var$8 = $this.$s.$write1;
                        $m = var$8 >= $this.$s.$read3 ? $this.$s.$end0 - var$8 | 0 : ($this.$s.$read3 - var$8 | 0) - 1 | 0;
                        if (var$8 == $this.$s.$end0 && $this.$s.$read3) {
                            var$8 = 0;
                            $m = var$8 >= $this.$s.$read3 ? $this.$s.$end0 - var$8 | 0 : ($this.$s.$read3 - var$8 | 0) - 1 | 0;
                        }
                        if (!$m) {
                            $this.$s.$bitb = var$4;
                            $this.$s.$bitk = var$5;
                            $this.$z0.$avail_in = $n;
                            var$9 = $this.$z0;
                            var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z0.$next_in_index | 0));
                            $this.$z0.$next_in_index = var$2;
                            $this.$s.$write1 = var$8;
                            return cjj_InfBlocks_inflate_flush($this.$s, var$11);
                        }
                    }
                }
                $r = 0;
                var$10 = $this.$s.$window.data;
                $q = var$8 + 1 | 0;
                var$10[var$8] = $this.$lit << 24 >> 24;
                $m = $m + (-1) | 0;
                $this.$mode0 = 0;
                continue b;
            }
            $f = $q - $this.$dist | 0;
            while ($f < 0) {
                $f = $f + $this.$s.$end0 | 0;
            }
            while ($this.$len) {
                if ($m)
                    var$8 = $q;
                else {
                    if ($q != $this.$s.$end0)
                        var$8 = $q;
                    else if (!$this.$s.$read3)
                        var$8 = $q;
                    else {
                        var$8 = 0;
                        $m = var$8 >= $this.$s.$read3 ? $this.$s.$end0 - var$8 | 0 : ($this.$s.$read3 - var$8 | 0) - 1 | 0;
                    }
                    if (!$m) {
                        $this.$s.$write1 = var$8;
                        $r = cjj_InfBlocks_inflate_flush($this.$s, $r);
                        var$8 = $this.$s.$write1;
                        $m = var$8 >= $this.$s.$read3 ? $this.$s.$end0 - var$8 | 0 : ($this.$s.$read3 - var$8 | 0) - 1 | 0;
                        if (var$8 == $this.$s.$end0 && $this.$s.$read3) {
                            var$8 = 0;
                            $m = var$8 >= $this.$s.$read3 ? $this.$s.$end0 - var$8 | 0 : ($this.$s.$read3 - var$8 | 0) - 1 | 0;
                        }
                        if (!$m) {
                            $this.$s.$bitb = var$4;
                            $this.$s.$bitk = var$5;
                            $this.$z0.$avail_in = $n;
                            var$9 = $this.$z0;
                            var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z0.$next_in_index | 0));
                            $this.$z0.$next_in_index = var$2;
                            $this.$s.$write1 = var$8;
                            return cjj_InfBlocks_inflate_flush($this.$s, $r);
                        }
                    }
                }
                var$17 = $this.$s.$window.data;
                $q = var$8 + 1 | 0;
                var$10 = $this.$s.$window.data;
                var$11 = $f + 1 | 0;
                var$17[var$8] = var$10[$f];
                $m = $m + (-1) | 0;
                $f = var$11 == $this.$s.$end0 ? 0 : var$11;
                $this.$len = $this.$len - 1 | 0;
            }
            $this.$mode0 = 0;
        }
        $this.$s.$bitb = var$4;
        $this.$s.$bitk = var$5;
        $this.$z0.$avail_in = $n;
        var$9 = $this.$z0;
        var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z0.$next_in_index | 0));
        $this.$z0.$next_in_index = var$2;
        $this.$s.$write1 = $q;
        return cjj_InfBlocks_inflate_flush($this.$s, $r);
    }
    $this.$s.$bitb = var$4;
    $this.$s.$bitk = var$5;
    $this.$z0.$avail_in = $n;
    var$9 = $this.$z0;
    var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z0.$next_in_index | 0));
    $this.$z0.$next_in_index = var$2;
    $this.$s.$write1 = $q;
    return cjj_InfBlocks_inflate_flush($this.$s, 1);
}
function cjj_InfCodes_free($this, $z) {
    return;
}
function cjj_InfCodes_inflate_fast($this, $bl, $bd, $tl, $tl_index, $td, $td_index, $s, $z) {
    var $p, $n, $b, $k, $q, $m, $ml, $md, var$17, var$18, var$19, $t, $tp_index_t_3, var$22, $c, var$24, var$25, var$26, var$27, $d, $r;
    $p = $z.$next_in_index;
    $n = $z.$avail_in;
    $b = $s.$bitb;
    $k = $s.$bitk;
    $q = $s.$write1;
    $m = $q >= $s.$read3 ? $s.$end0 - $q | 0 : ($s.$read3 - $q | 0) - 1 | 0;
    $ml = cjj_InfCodes_inflate_mask.data[$bl];
    $md = cjj_InfCodes_inflate_mask.data[$bd];
    while (true) {
        if ($k < 20) {
            $n = $n + (-1) | 0;
            var$17 = $z.$next_in.data;
            var$18 = $p + 1 | 0;
            $b = $b | (var$17[$p] & 255) << $k;
            $k = $k + 8 | 0;
            $p = var$18;
            continue;
        }
        a: {
            var$19 = $tl.data;
            $t = $b & $ml;
            $tp_index_t_3 = ($tl_index + $t | 0) * 3 | 0;
            var$22 = var$19[$tp_index_t_3];
            if (!var$22) {
                var$18 = $tp_index_t_3 + 1 | 0;
                $b = $b >> var$19[var$18];
                $k = $k - var$19[var$18] | 0;
                var$17 = $s.$window.data;
                var$22 = $q + 1 | 0;
                var$17[$q] = var$19[$tp_index_t_3 + 2 | 0] << 24 >> 24;
                $m = $m + (-1) | 0;
            } else {
                while (true) {
                    var$18 = $tp_index_t_3 + 1 | 0;
                    $b = $b >> var$19[var$18];
                    $k = $k - var$19[var$18] | 0;
                    if (var$22 & 16) {
                        var$18 = var$22 & 15;
                        $c = var$19[$tp_index_t_3 + 2 | 0] + ($b & cjj_InfCodes_inflate_mask.data[var$18]) | 0;
                        var$24 = $b >> var$18;
                        var$25 = $k - var$18 | 0;
                        while (var$25 < 15) {
                            $n = $n + (-1) | 0;
                            var$17 = $z.$next_in.data;
                            var$18 = $p + 1 | 0;
                            var$24 = var$24 | (var$17[$p] & 255) << var$25;
                            var$25 = var$25 + 8 | 0;
                            $p = var$18;
                        }
                        var$17 = $td.data;
                        var$18 = var$24 & $md;
                        var$26 = ($td_index + var$18 | 0) * 3 | 0;
                        var$22 = var$17[var$26];
                        while (true) {
                            var$27 = var$26 + 1 | 0;
                            var$24 = var$24 >> var$17[var$27];
                            var$25 = var$25 - var$17[var$27] | 0;
                            if (var$22 & 16)
                                break;
                            if (var$22 & 64) {
                                $z.$msg = $rt_s(284);
                                var$18 = $z.$avail_in - $n | 0;
                                var$22 = var$25 >> 3;
                                if (var$22 < var$18)
                                    var$18 = var$22;
                                var$22 = $n + var$18 | 0;
                                var$26 = $p - var$18 | 0;
                                var$18 = var$25 - (var$18 << 3) | 0;
                                $s.$bitb = var$24;
                                $s.$bitk = var$18;
                                $z.$avail_in = var$22;
                                $z.$total_in = Long_add($z.$total_in, Long_fromInt(var$26 - $z.$next_in_index | 0));
                                $z.$next_in_index = var$26;
                                $s.$write1 = $q;
                                return (-3);
                            }
                            var$18 = var$18 + var$17[var$26 + 2 | 0] | 0;
                            var$18 = var$18 + (var$24 & cjj_InfCodes_inflate_mask.data[var$22]) | 0;
                            var$26 = ($td_index + var$18 | 0) * 3 | 0;
                            var$22 = var$17[var$26];
                        }
                        var$18 = var$22 & 15;
                        while (var$25 < var$18) {
                            $n = $n + (-1) | 0;
                            var$19 = $z.$next_in.data;
                            var$22 = $p + 1 | 0;
                            var$24 = var$24 | (var$19[$p] & 255) << var$25;
                            var$25 = var$25 + 8 | 0;
                            $p = var$22;
                        }
                        $d = var$17[var$26 + 2 | 0] + (var$24 & cjj_InfCodes_inflate_mask.data[var$18]) | 0;
                        $b = var$24 >> var$18;
                        $k = var$25 - var$18 | 0;
                        $m = $m - $c | 0;
                        if ($q >= $d) {
                            $r = $q - $d | 0;
                            var$18 = $q - $r | 0;
                            if (var$18 > 0 && 2 > var$18) {
                                var$19 = $s.$window.data;
                                var$18 = $q + 1 | 0;
                                var$17 = $s.$window.data;
                                var$22 = $r + 1 | 0;
                                var$19[$q] = var$17[$r];
                                var$19 = $s.$window.data;
                                $q = var$18 + 1 | 0;
                                var$17 = $s.$window.data;
                                $r = var$22 + 1 | 0;
                                var$19[var$18] = var$17[var$22];
                                $c = $c + (-2) | 0;
                            } else {
                                jl_System_arraycopy($s.$window, $r, $s.$window, $q, 2);
                                $q = $q + 2 | 0;
                                $r = $r + 2 | 0;
                                $c = $c + (-2) | 0;
                            }
                        } else {
                            $r = $q - $d | 0;
                            while (true) {
                                $r = $r + $s.$end0 | 0;
                                if ($r >= 0)
                                    break;
                            }
                            var$18 = $s.$end0 - $r | 0;
                            if ($c > var$18) {
                                $c = $c - var$18 | 0;
                                var$22 = $q - $r | 0;
                                if (var$22 > 0 && var$18 > var$22) {
                                    var$22 = $q;
                                    while (true) {
                                        var$19 = $s.$window.data;
                                        $q = var$22 + 1 | 0;
                                        var$17 = $s.$window.data;
                                        var$26 = $r + 1 | 0;
                                        var$19[var$22] = var$17[$r];
                                        var$18 = var$18 + (-1) | 0;
                                        if (!var$18)
                                            break;
                                        var$22 = $q;
                                        $r = var$26;
                                    }
                                } else {
                                    jl_System_arraycopy($s.$window, $r, $s.$window, $q, var$18);
                                    $q = $q + var$18 | 0;
                                }
                                $r = 0;
                            }
                        }
                        var$18 = $q - $r | 0;
                        if (var$18 > 0 && $c > var$18) {
                            while (true) {
                                var$19 = $s.$window.data;
                                var$22 = $q + 1 | 0;
                                var$17 = $s.$window.data;
                                var$18 = $r + 1 | 0;
                                var$19[$q] = var$17[$r];
                                $c = $c + (-1) | 0;
                                if (!$c)
                                    break;
                                $q = var$22;
                                $r = var$18;
                            }
                            break a;
                        }
                        jl_System_arraycopy($s.$window, $r, $s.$window, $q, $c);
                        var$22 = $q + $c | 0;
                        break a;
                    }
                    if (var$22 & 64) {
                        if (var$22 & 32) {
                            $c = $z.$avail_in - $n | 0;
                            var$18 = $k >> 3;
                            if (var$18 < $c)
                                $c = var$18;
                            var$18 = $n + $c | 0;
                            var$22 = $p - $c | 0;
                            var$26 = $k - ($c << 3) | 0;
                            $s.$bitb = $b;
                            $s.$bitk = var$26;
                            $z.$avail_in = var$18;
                            $z.$total_in = Long_add($z.$total_in, Long_fromInt(var$22 - $z.$next_in_index | 0));
                            $z.$next_in_index = var$22;
                            $s.$write1 = $q;
                            return 1;
                        }
                        $z.$msg = $rt_s(285);
                        $c = $z.$avail_in - $n | 0;
                        var$18 = $k >> 3;
                        if (var$18 < $c)
                            $c = var$18;
                        var$26 = $n + $c | 0;
                        var$18 = $p - $c | 0;
                        var$22 = $k - ($c << 3) | 0;
                        $s.$bitb = $b;
                        $s.$bitk = var$22;
                        $z.$avail_in = var$26;
                        $z.$total_in = Long_add($z.$total_in, Long_fromInt(var$18 - $z.$next_in_index | 0));
                        $z.$next_in_index = var$18;
                        $s.$write1 = $q;
                        return (-3);
                    }
                    var$18 = $t + var$19[$tp_index_t_3 + 2 | 0] | 0;
                    $t = var$18 + ($b & cjj_InfCodes_inflate_mask.data[var$22]) | 0;
                    $tp_index_t_3 = ($tl_index + $t | 0) * 3 | 0;
                    var$22 = var$19[$tp_index_t_3];
                    if (!var$22)
                        break;
                }
                var$18 = $tp_index_t_3 + 1 | 0;
                $b = $b >> var$19[var$18];
                $k = $k - var$19[var$18] | 0;
                var$17 = $s.$window.data;
                var$22 = $q + 1 | 0;
                var$17[$q] = var$19[$tp_index_t_3 + 2 | 0] << 24 >> 24;
                $m = $m + (-1) | 0;
            }
        }
        if ($m < 258)
            break;
        if ($n < 10)
            break;
        $q = var$22;
    }
    $c = $z.$avail_in - $n | 0;
    var$18 = $k >> 3;
    if (var$18 < $c)
        $c = var$18;
    var$18 = $n + $c | 0;
    var$26 = $p - $c | 0;
    var$24 = $k - ($c << 3) | 0;
    $s.$bitb = $b;
    $s.$bitk = var$24;
    $z.$avail_in = var$18;
    $z.$total_in = Long_add($z.$total_in, Long_fromInt(var$26 - $z.$next_in_index | 0));
    $z.$next_in_index = var$26;
    $s.$write1 = var$22;
    return 0;
}
function cjj_InfCodes__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(17);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 1;
    var$2[2] = 3;
    var$2[3] = 7;
    var$2[4] = 15;
    var$2[5] = 31;
    var$2[6] = 63;
    var$2[7] = 127;
    var$2[8] = 255;
    var$2[9] = 511;
    var$2[10] = 1023;
    var$2[11] = 2047;
    var$2[12] = 4095;
    var$2[13] = 8191;
    var$2[14] = 16383;
    var$2[15] = 32767;
    var$2[16] = 65535;
    cjj_InfCodes_inflate_mask = var$1;
}
function it_Fx$_clinit_$lambda$_32_5() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_5__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_5();
    it_Fx$_clinit_$lambda$_32_5__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_5__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_5_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_5_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_5_get0(var$0, var$1) {
    it_Fx_lambda$static$8(var$1);
}
function it_Fx$_clinit_$lambda$_32_4() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_4__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_4();
    it_Fx$_clinit_$lambda$_32_4__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_4__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_4_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_4_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_4_get0(var$0, var$1) {
    it_Fx_lambda$static$7(var$1);
}
function iaaus_Json() {
    var a = this; jl_Object.call(a);
    a.$typeToFields = null;
    a.$tagToClass = null;
    a.$classToTag = null;
    a.$classToSerializer = null;
    a.$classToDefaultValues = null;
    a.$equals1 = null;
    a.$equals2 = null;
    a.$typeName = null;
    a.$usePrototypes = 0;
    a.$outputType = null;
    a.$enumNames = 0;
}
function iaaus_Json__init_() {
    var var_0 = new iaaus_Json();
    iaaus_Json__init_0(var_0);
    return var_0;
}
function iaaus_Json__init_0($this) {
    var var$1;
    jl_Object__init_0($this);
    $this.$typeToFields = iaac_ObjectMap__init_();
    $this.$tagToClass = iaac_ObjectMap__init_();
    $this.$classToTag = iaac_ObjectMap__init_();
    $this.$classToSerializer = iaac_ObjectMap__init_();
    $this.$classToDefaultValues = iaac_ObjectMap__init_();
    var$1 = $rt_createArray(jl_Object, 1);
    var$1.data[0] = null;
    $this.$equals1 = var$1;
    var$1 = $rt_createArray(jl_Object, 1);
    var$1.data[0] = null;
    $this.$equals2 = var$1;
    $this.$typeName = $rt_s(286);
    $this.$usePrototypes = 1;
    $this.$enumNames = 1;
    iaaus_JsonWriter$OutputType_$callClinit();
    $this.$outputType = iaaus_JsonWriter$OutputType_minimal;
}
function iaaup_Pools() {
    jl_Object.call(this);
}
var iaaup_Pools_typePools = null;
function iaaup_Pools_$callClinit() {
    iaaup_Pools_$callClinit = $rt_eraseClinit(iaaup_Pools);
    iaaup_Pools__clinit_();
}
function iaaup_Pools_get($type, $supplier, $max) {
    var $pool;
    iaaup_Pools_$callClinit();
    $pool = iaaup_Pools_typePools.$get9($type);
    if ($pool === null) {
        $pool = iaaup_Pools$1__init_(4, $max, $supplier);
        iaaup_Pools_typePools.$put($type, $pool);
    }
    return $pool;
}
function iaaup_Pools_get0($type, $supplier) {
    iaaup_Pools_$callClinit();
    return iaaup_Pools_get($type, $supplier, 100);
}
function iaaup_Pools_obtain($type, $supplier) {
    jl_Object_monitorEnterSync($rt_cls(iaaup_Pools));
    try {
        iaaup_Pools_$callClinit();
        return iaaup_Pools_get0($type, $supplier).$obtain0();
    } finally {
        jl_Object_monitorExitSync($rt_cls(iaaup_Pools));
    }
}
function iaaup_Pools_free($object) {
    var $pool;
    jl_Object_monitorEnterSync($rt_cls(iaaup_Pools));
    try {
        iaaup_Pools_$callClinit();
        if ($object === null)
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(287)));
        $pool = iaaup_Pools_typePools.$get9(jl_Object_getClass($object));
        if ($pool === null)
            return;
        $pool.$free($object);
    } finally {
        jl_Object_monitorExitSync($rt_cls(iaaup_Pools));
    }
}
function iaaup_Pools_freeAll($objects) {
    iaaup_Pools_$callClinit();
    iaaup_Pools_freeAll0($objects, 0);
}
function iaaup_Pools_freeAll0($objects, $samePool) {
    var $pool, $i, $n, $object;
    iaaup_Pools_$callClinit();
    if ($objects === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(288)));
    $pool = null;
    $i = 0;
    $n = $objects.$size;
    while ($i < $n) {
        a: {
            $object = $objects.$get($i);
            if ($object !== null) {
                if ($pool === null) {
                    $pool = iaaup_Pools_typePools.$get9(jl_Object_getClass($object));
                    if ($pool === null)
                        break a;
                }
                $pool.$free($object);
                if (!$samePool)
                    $pool = null;
            }
        }
        $i = $i + 1 | 0;
    }
}
function iaaup_Pools__clinit_() {
    iaaup_Pools_typePools = iaac_ObjectMap__init_();
}
function otjt_ArrayBufferView() {
    jl_Object.call(this);
}
function otjt_Float64Array() {
    otjt_ArrayBufferView.call(this);
}
function it_Fx$_clinit_$lambda$_32_7() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_7__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_7();
    it_Fx$_clinit_$lambda$_32_7__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_7__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_7_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_7_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_7_get0(var$0, var$1) {
    it_Fx_lambda$static$10(var$1);
}
function it_Fx$_clinit_$lambda$_32_6() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_6__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_6();
    it_Fx$_clinit_$lambda$_32_6__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_6__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_6_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_6_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_6_get0(var$0, var$1) {
    it_Fx_lambda$static$9(var$1);
}
function it_Fx$_clinit_$lambda$_32_9() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_9__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_9();
    it_Fx$_clinit_$lambda$_32_9__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_9__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_9_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_9_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_9_get0(var$0, var$1) {
    it_Fx_lambda$static$13(var$1);
}
function it_Fx$_clinit_$lambda$_32_8() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_8__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_8();
    it_Fx$_clinit_$lambda$_32_8__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_8__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_8_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_8_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_8_get0(var$0, var$1) {
    it_Fx_lambda$static$11(var$1);
}
function jl_IncompatibleClassChangeError() {
    jl_LinkageError.call(this);
}
function jl_IncompatibleClassChangeError__init_(var_0) {
    var var_1 = new jl_IncompatibleClassChangeError();
    jl_IncompatibleClassChangeError__init_0(var_1, var_0);
    return var_1;
}
function jl_IncompatibleClassChangeError__init_0($this, $message) {
    jl_LinkageError__init_0($this, $message);
}
function jl_NoSuchFieldError() {
    jl_IncompatibleClassChangeError.call(this);
}
function jl_NoSuchFieldError__init_(var_0) {
    var var_1 = new jl_NoSuchFieldError();
    jl_NoSuchFieldError__init_0(var_1, var_0);
    return var_1;
}
function jl_NoSuchFieldError__init_0($this, $message) {
    jl_IncompatibleClassChangeError__init_0($this, $message);
}
function jur_AbstractCharClass$LazyJavaDigit() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaDigit();
    jur_AbstractCharClass$LazyJavaDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaDigit__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaDigit_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaDigit$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function otcjl_TIterable() {
}
function iw_Blocks() {
    jl_Object.call(this);
}
var iw_Blocks_blocks = null;
function iw_Blocks_$callClinit() {
    iw_Blocks_$callClinit = $rt_eraseClinit(iw_Blocks);
    iw_Blocks__clinit_();
}
function iw_Blocks__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createArray(iw_Block, 10);
    var$2 = var$1.data;
    var$2[0] = iw_Blocks$1__init_($rt_s(289));
    var$2[1] = iw_Blocks$2__init_($rt_s(290));
    var$2[2] = iw_Blocks$3__init_($rt_s(291));
    var$2[3] = iw_Blocks$4__init_($rt_s(292));
    var$2[4] = iw_Blocks$5__init_($rt_s(293));
    var$2[5] = iw_Blocks$6__init_($rt_s(294));
    var$2[6] = iw_Blocks$7__init_($rt_s(295));
    var$2[7] = iw_Blocks$8__init_($rt_s(296));
    var$2[8] = iw_Blocks$9__init_($rt_s(297));
    var$2[9] = iw_Blocks$10__init_($rt_s(298));
    iw_Blocks_blocks = iaac_Array_with(var$1);
}
function it_Phases$5$_init_$lambda$_0_0() {
    jl_Object.call(this);
}
function it_Phases$5$_init_$lambda$_0_0__init_() {
    var var_0 = new it_Phases$5$_init_$lambda$_0_0();
    it_Phases$5$_init_$lambda$_0_0__init_0(var_0);
    return var_0;
}
function it_Phases$5$_init_$lambda$_0_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$5$_init_$lambda$_0_0_run(var$0) {
    it_Phases$5_lambda$$4();
}
function it_Phases$5$_init_$lambda$_0_1() {
    jl_Object.call(this);
}
function it_Phases$5$_init_$lambda$_0_1__init_() {
    var var_0 = new it_Phases$5$_init_$lambda$_0_1();
    it_Phases$5$_init_$lambda$_0_1__init_0(var_0);
    return var_0;
}
function it_Phases$5$_init_$lambda$_0_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$5$_init_$lambda$_0_1_run(var$0) {
    it_Phases$5_lambda$$11();
}
function it_Phases$5$_init_$lambda$_0_2() {
    jl_Object.call(this);
}
function it_Phases$5$_init_$lambda$_0_2__init_() {
    var var_0 = new it_Phases$5$_init_$lambda$_0_2();
    it_Phases$5$_init_$lambda$_0_2__init_0(var_0);
    return var_0;
}
function it_Phases$5$_init_$lambda$_0_2__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$5$_init_$lambda$_0_2_run(var$0) {
    it_Phases$5_lambda$$17();
}
function iaac_FloatArray() {
    var a = this; jl_Object.call(a);
    a.$items1 = null;
    a.$size2 = 0;
    a.$ordered0 = 0;
}
function iaac_FloatArray__init_() {
    var var_0 = new iaac_FloatArray();
    iaac_FloatArray__init_0(var_0);
    return var_0;
}
function iaac_FloatArray__init_1(var_0) {
    var var_1 = new iaac_FloatArray();
    iaac_FloatArray__init_2(var_1, var_0);
    return var_1;
}
function iaac_FloatArray__init_3(var_0, var_1) {
    var var_2 = new iaac_FloatArray();
    iaac_FloatArray__init_4(var_2, var_0, var_1);
    return var_2;
}
function iaac_FloatArray__init_0($this) {
    iaac_FloatArray__init_4($this, 1, 16);
}
function iaac_FloatArray__init_2($this, $capacity) {
    iaac_FloatArray__init_4($this, 1, $capacity);
}
function iaac_FloatArray__init_4($this, $ordered, $capacity) {
    jl_Object__init_0($this);
    $this.$ordered0 = $ordered;
    $this.$items1 = $rt_createFloatArray($capacity);
}
function iaac_FloatArray_add($this, $value) {
    var $items, var$3, var$4;
    $items = $this.$items1;
    var$3 = $items.data;
    if ($this.$size2 == var$3.length)
        $items = $this.$resize0(jl_Math_max1(8, $this.$size2 * 1.75 | 0));
    var$3 = $items.data;
    var$4 = $this.$size2;
    $this.$size2 = var$4 + 1 | 0;
    var$3[var$4] = $value;
}
function iaac_FloatArray_add0($this, $value1, $value2) {
    var $items, var$4;
    $items = $this.$items1;
    var$4 = $items.data;
    if (($this.$size2 + 1 | 0) >= var$4.length)
        $items = $this.$resize0(jl_Math_max1(8, $this.$size2 * 1.75 | 0));
    var$4 = $items.data;
    var$4[$this.$size2] = $value1;
    var$4[$this.$size2 + 1 | 0] = $value2;
    $this.$size2 = $this.$size2 + 2 | 0;
}
function iaac_FloatArray_addAll($this, $array) {
    $this.$addAll0($array.$items1, 0, $array.$size2);
}
function iaac_FloatArray_addAll0($this, $array, $offset, $length) {
    if (($offset + $length | 0) <= $array.$size2) {
        $this.$addAll0($array.$items1, $offset, $length);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(299)).$append3($offset).$append($rt_s(300)).$append3($length).$append($rt_s(301)).$append3($array.$size2).$toString()));
}
function iaac_FloatArray_addAll1($this, $array, $offset, $length) {
    var $items, var$5, $sizeNeeded;
    $items = $this.$items1;
    var$5 = $items.data;
    $sizeNeeded = $this.$size2 + $length | 0;
    if ($sizeNeeded > var$5.length)
        $items = $this.$resize0(jl_Math_max1(8, $sizeNeeded * 1.75 | 0));
    jl_System_arraycopy($array, $offset, $items, $this.$size2, $length);
    $this.$size2 = $this.$size2 + $length | 0;
}
function iaac_FloatArray_get($this, $index) {
    if ($index < $this.$size2)
        return $this.$items1.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(302)).$append3($index).$append($rt_s(303)).$append3($this.$size2).$toString()));
}
function iaac_FloatArray_set($this, $index, $value) {
    if ($index < $this.$size2) {
        $this.$items1.data[$index] = $value;
        return;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(302)).$append3($index).$append($rt_s(303)).$append3($this.$size2).$toString()));
}
function iaac_FloatArray_removeRange($this, $start, $end) {
    var $items, $count, var$5, $lastIndex, $i, var$8;
    if ($end >= $this.$size2)
        $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(304)).$append3($end).$append($rt_s(303)).$append3($this.$size2).$toString()));
    if ($start > $end)
        $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(305)).$append3($start).$append($rt_s(306)).$append3($end).$toString()));
    a: {
        $items = $this.$items1;
        $count = ($end - $start | 0) + 1 | 0;
        if ($this.$ordered0) {
            var$5 = $start + $count | 0;
            jl_System_arraycopy($items, var$5, $items, $start, $this.$size2 - var$5 | 0);
        } else {
            $lastIndex = $this.$size2 - 1 | 0;
            $i = 0;
            while (true) {
                if ($i >= $count)
                    break a;
                var$8 = $items.data;
                var$8[$start + $i | 0] = var$8[$lastIndex - $i | 0];
                $i = $i + 1 | 0;
            }
        }
    }
    $this.$size2 = $this.$size2 - $count | 0;
}
function iaac_FloatArray_peek($this) {
    return $this.$items1.data[$this.$size2 - 1 | 0];
}
function iaac_FloatArray_clear($this) {
    $this.$size2 = 0;
}
function iaac_FloatArray_ensureCapacity($this, $additionalCapacity) {
    var $sizeNeeded;
    if ($additionalCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(307)).$append3($additionalCapacity).$toString()));
    $sizeNeeded = $this.$size2 + $additionalCapacity | 0;
    if ($sizeNeeded > $this.$items1.data.length)
        $this.$resize0(jl_Math_max1(8, $sizeNeeded));
    return $this.$items1;
}
function iaac_FloatArray_setSize($this, $newSize) {
    if ($newSize < 0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(308)).$append3($newSize).$toString()));
    if ($newSize > $this.$items1.data.length)
        $this.$resize0(jl_Math_max1(8, $newSize));
    $this.$size2 = $newSize;
    return $this.$items1;
}
function iaac_FloatArray_resize($this, $newSize) {
    var $newItems, var$3, $items;
    $newItems = $rt_createFloatArray($newSize);
    var$3 = $newItems.data;
    $items = $this.$items1;
    jl_System_arraycopy($items, 0, $newItems, 0, jl_Math_min1($this.$size2, var$3.length));
    $this.$items1 = $newItems;
    return $newItems;
}
function iaac_FloatArray_truncate($this, $newSize) {
    if ($this.$size2 > $newSize)
        $this.$size2 = $newSize;
}
function iaam_Interpolation() {
    jl_Object.call(this);
}
var iaam_Interpolation_linear = null;
var iaam_Interpolation_smooth = null;
var iaam_Interpolation_smooth2 = null;
var iaam_Interpolation_smoother = null;
var iaam_Interpolation_fade = null;
var iaam_Interpolation_pow2 = null;
var iaam_Interpolation_pow2In = null;
var iaam_Interpolation_slowFast = null;
var iaam_Interpolation_pow2Out = null;
var iaam_Interpolation_fastSlow = null;
var iaam_Interpolation_pow2InInverse = null;
var iaam_Interpolation_pow2OutInverse = null;
var iaam_Interpolation_pow3 = null;
var iaam_Interpolation_pow3In = null;
var iaam_Interpolation_pow3Out = null;
var iaam_Interpolation_pow3InInverse = null;
var iaam_Interpolation_pow3OutInverse = null;
var iaam_Interpolation_pow4 = null;
var iaam_Interpolation_pow4In = null;
var iaam_Interpolation_pow4Out = null;
var iaam_Interpolation_pow5 = null;
var iaam_Interpolation_pow5In = null;
var iaam_Interpolation_pow10In = null;
var iaam_Interpolation_pow5Out = null;
var iaam_Interpolation_sine = null;
var iaam_Interpolation_sineIn = null;
var iaam_Interpolation_sineOut = null;
var iaam_Interpolation_exp10 = null;
var iaam_Interpolation_exp10In = null;
var iaam_Interpolation_exp10Out = null;
var iaam_Interpolation_exp5 = null;
var iaam_Interpolation_exp5In = null;
var iaam_Interpolation_exp5Out = null;
var iaam_Interpolation_circle = null;
var iaam_Interpolation_circleIn = null;
var iaam_Interpolation_circleOut = null;
var iaam_Interpolation_elastic = null;
var iaam_Interpolation_elasticIn = null;
var iaam_Interpolation_elasticOut = null;
var iaam_Interpolation_swing = null;
var iaam_Interpolation_swingIn = null;
var iaam_Interpolation_swingOut = null;
var iaam_Interpolation_bounce = null;
var iaam_Interpolation_bounceIn = null;
var iaam_Interpolation_bounceOut = null;
function iaam_Interpolation_$callClinit() {
    iaam_Interpolation_$callClinit = $rt_eraseClinit(iaam_Interpolation);
    iaam_Interpolation__clinit_();
}
function iaam_Interpolation__init_() {
    var var_0 = new iaam_Interpolation();
    iaam_Interpolation__init_0(var_0);
    return var_0;
}
function iaam_Interpolation__init_0($this) {
    iaam_Interpolation_$callClinit();
    jl_Object__init_0($this);
}
function iaam_Interpolation_apply($this, $start, $end, $a) {
    return $start + ($end - $start) * $this.$apply($a);
}
function iaam_Interpolation__clinit_() {
    iaam_Interpolation_linear = iaam_Interpolation$1__init_();
    iaam_Interpolation_smooth = iaam_Interpolation$2__init_();
    iaam_Interpolation_smooth2 = iaam_Interpolation$3__init_();
    iaam_Interpolation_smoother = iaam_Interpolation$4__init_();
    iaam_Interpolation_fade = iaam_Interpolation_smoother;
    iaam_Interpolation_pow2 = iaam_Interpolation$Pow__init_(2);
    iaam_Interpolation_pow2In = iaam_Interpolation$PowIn__init_(2);
    iaam_Interpolation_slowFast = iaam_Interpolation_pow2In;
    iaam_Interpolation_pow2Out = iaam_Interpolation$PowOut__init_(2);
    iaam_Interpolation_fastSlow = iaam_Interpolation_pow2Out;
    iaam_Interpolation_pow2InInverse = iaam_Interpolation$5__init_();
    iaam_Interpolation_pow2OutInverse = iaam_Interpolation$6__init_();
    iaam_Interpolation_pow3 = iaam_Interpolation$Pow__init_(3);
    iaam_Interpolation_pow3In = iaam_Interpolation$PowIn__init_(3);
    iaam_Interpolation_pow3Out = iaam_Interpolation$PowOut__init_(3);
    iaam_Interpolation_pow3InInverse = iaam_Interpolation$7__init_();
    iaam_Interpolation_pow3OutInverse = iaam_Interpolation$8__init_();
    iaam_Interpolation_pow4 = iaam_Interpolation$Pow__init_(4);
    iaam_Interpolation_pow4In = iaam_Interpolation$PowIn__init_(4);
    iaam_Interpolation_pow4Out = iaam_Interpolation$PowOut__init_(4);
    iaam_Interpolation_pow5 = iaam_Interpolation$Pow__init_(5);
    iaam_Interpolation_pow5In = iaam_Interpolation$PowIn__init_(5);
    iaam_Interpolation_pow10In = iaam_Interpolation$PowIn__init_(10);
    iaam_Interpolation_pow5Out = iaam_Interpolation$PowOut__init_(5);
    iaam_Interpolation_sine = iaam_Interpolation$9__init_();
    iaam_Interpolation_sineIn = iaam_Interpolation$10__init_();
    iaam_Interpolation_sineOut = iaam_Interpolation$11__init_();
    iaam_Interpolation_exp10 = iaam_Interpolation$Exp__init_(2.0, 10.0);
    iaam_Interpolation_exp10In = iaam_Interpolation$ExpIn__init_(2.0, 10.0);
    iaam_Interpolation_exp10Out = iaam_Interpolation$ExpOut__init_(2.0, 10.0);
    iaam_Interpolation_exp5 = iaam_Interpolation$Exp__init_(2.0, 5.0);
    iaam_Interpolation_exp5In = iaam_Interpolation$ExpIn__init_(2.0, 5.0);
    iaam_Interpolation_exp5Out = iaam_Interpolation$ExpOut__init_(2.0, 5.0);
    iaam_Interpolation_circle = iaam_Interpolation$12__init_();
    iaam_Interpolation_circleIn = iaam_Interpolation$13__init_();
    iaam_Interpolation_circleOut = iaam_Interpolation$14__init_();
    iaam_Interpolation_elastic = iaam_Interpolation$Elastic__init_(2.0, 10.0, 7, 1.0);
    iaam_Interpolation_elasticIn = iaam_Interpolation$ElasticIn__init_(2.0, 10.0, 6, 1.0);
    iaam_Interpolation_elasticOut = iaam_Interpolation$ElasticOut__init_(2.0, 10.0, 7, 1.0);
    iaam_Interpolation_swing = iaam_Interpolation$Swing__init_(1.5);
    iaam_Interpolation_swingIn = iaam_Interpolation$SwingIn__init_(2.0);
    iaam_Interpolation_swingOut = iaam_Interpolation$SwingOut__init_(2.0);
    iaam_Interpolation_bounce = iaam_Interpolation$Bounce__init_(4);
    iaam_Interpolation_bounceIn = iaam_Interpolation$BounceIn__init_(4);
    iaam_Interpolation_bounceOut = iaam_Interpolation$BounceOut__init_(4);
}
function iaam_Interpolation$5() {
    iaam_Interpolation.call(this);
}
function iaam_Interpolation$5__init_() {
    var var_0 = new iaam_Interpolation$5();
    iaam_Interpolation$5__init_0(var_0);
    return var_0;
}
function iaam_Interpolation$5__init_0($this) {
    iaam_Interpolation__init_0($this);
}
function iaam_Interpolation$4() {
    iaam_Interpolation.call(this);
}
function iaam_Interpolation$4__init_() {
    var var_0 = new iaam_Interpolation$4();
    iaam_Interpolation$4__init_0(var_0);
    return var_0;
}
function iaam_Interpolation$4__init_0($this) {
    iaam_Interpolation__init_0($this);
}
function iw_Block() {
    var a = this; jl_Object.call(a);
    a.$id = 0;
    a.$name6 = null;
    a.$edge = null;
    a.$regions0 = null;
    a.$damage = 0.0;
    a.$solid = 0;
    a.$clear0 = 0;
    a.$variants = 0;
    a.$shadowSize = 0.0;
}
function iw_Block__init_(var_0) {
    var var_1 = new iw_Block();
    iw_Block__init_0(var_1, var_0);
    return var_1;
}
function iw_Block__init_0($this, $name) {
    var $i, var$3, var$4, var$5, $i_0;
    jl_Object__init_0($this);
    $this.$damage = (-1.0);
    $this.$shadowSize = 8.0;
    $this.$name6 = $name;
    iaa_Core_$callClinit();
    if (iaa_Core_atlas.$has(jl_StringBuilder__init_().$append($name).$append($rt_s(309)).$toString()))
        $this.$edge = iaa_Core_atlas.$find(jl_StringBuilder__init_().$append($name).$append($rt_s(309)).$toString());
    $i = 0;
    a: {
        while (true) {
            if ($i >= 10)
                break a;
            var$3 = iaa_Core_atlas;
            var$4 = jl_StringBuilder__init_().$append($name);
            $i = $i + 1 | 0;
            if (!var$3.$has(var$4.$append3($i).$toString()))
                break;
            $this.$variants = $i;
        }
    }
    b: {
        if (!$this.$variants) {
            $this.$variants = 1;
            $this.$regions0 = $rt_createArray(iaagg_TextureRegion, 1);
            $this.$regions0.data[0] = iaa_Core_atlas.$find($name);
        } else {
            $this.$regions0 = $rt_createArray(iaagg_TextureRegion, $this.$variants);
            $i = 0;
            while (true) {
                if ($i >= $this.$variants)
                    break b;
                var$5 = $this.$regions0.data;
                var$4 = iaa_Core_atlas;
                var$3 = jl_StringBuilder__init_().$append($name);
                $i_0 = $i + 1 | 0;
                var$5[$i] = var$4.$find(var$3.$append3($i_0).$toString());
                $i = $i_0;
            }
        }
    }
}
function iw_Block_draw($this, $x, $y) {
    var var$3, $region, var$5, var$6, $i, var$8, var$9, var$10, $p;
    if (!$y) {
        iaag_Color_$callClinit();
        iaagg_Draw_color(iaag_Color_black);
    }
    if (!$this.$solid) {
        var$3 = $y * 16 | 0;
        ig_Drawf_z(var$3);
        iaagg_Draw_rect($this.$regions0.data[0], $x * 16 | 0, var$3 + $this.$regions0.data[0].$getHeight0() / 2.0);
    } else
        a: {
            $region = $this.$regions0.data[iw_Block_rand($x, $y, $this.$variants) - 1 | 0];
            var$5 = $x * 16 | 0;
            var$6 = $y * 16 | 0;
            var$3 = var$6 - 8.0;
            iaagg_Draw_rect($region, var$5, var$3 + $region.$getHeight0() / 2.0);
            if ($this.$edge !== null) {
                ig_Drawf_z(var$3 - 9.999999747378752E-5);
                $i = 0;
                iaamg_Geometry_$callClinit();
                var$8 = iaamg_Geometry_d4.data;
                var$9 = var$8.length;
                var$10 = 0;
                while (true) {
                    if (var$10 >= var$9)
                        break a;
                    $p = var$8[var$10];
                    if (i_Inferno_world.$tile($x + $p.$x3 | 0, $y + $p.$y3 | 0).$wall !== $this)
                        iaagg_Draw_rect0($this.$edge, var$5, var$6 + 16 | 0, $i * 90 | 0);
                    $i = $i + 1 | 0;
                    var$10 = var$10 + 1 | 0;
                }
            }
        }
    iaagg_Draw_color0();
}
function iw_Block_drawShadow($this, $x, $y) {
    if ($this.$solid)
        iaagg_Draw_rect1($rt_s(310), $x * 16 | 0, $y * 16 | 0);
    else
        iaagg_Draw_rect2($rt_s(311), $x * 16 | 0, $y * 16 | 0, $this.$shadowSize, $this.$shadowSize / 2.0);
}
function iw_Block_rand($x, $y, $max) {
    return iw_Block_rand0($x, $y, 0, $max);
}
function iw_Block_rand0($x, $y, $offset, $max) {
    return iaam_Mathf_randomSeed(Long_fromInt(($x + ($y * 16 | 0) | 0) + $offset | 0), 1, $max);
}
function iw_Blocks$10() {
    iw_Block.call(this);
}
function iw_Blocks$10__init_(var_0) {
    var var_1 = new iw_Blocks$10();
    iw_Blocks$10__init_0(var_1, var_0);
    return var_1;
}
function iw_Blocks$10__init_0($this, $name) {
    iw_Block__init_0($this, $name);
}
function iw_Blocks$10_draw($this, $x, $y) {
    var $d, var$4, var$5;
    $d = $this.$regions0.data[iw_Block_rand($x, $y, $this.$variants) - 1 | 0];
    iaagg_Draw_color1(0.0, 0.0, 0.0, 0.30000001192092896);
    var$4 = $x * 16 | 0;
    var$5 = ($y * 16 | 0) + 8.0;
    iaagg_Draw_rect($d, var$4, var$5 - 1.0);
    iaagg_Draw_color0();
    iaagg_Draw_rect($d, var$4, var$5);
}
function iaam_Interpolation$3() {
    iaam_Interpolation.call(this);
}
function iaam_Interpolation$3__init_() {
    var var_0 = new iaam_Interpolation$3();
    iaam_Interpolation$3__init_0(var_0);
    return var_0;
}
function iaam_Interpolation$3__init_0($this) {
    iaam_Interpolation__init_0($this);
}
function otji_JS() {
    jl_Object.call(this);
}
function otji_JS_function(var$1, var$2) {
    var name = 'jso$functor$' + var$2;
    if (!var$1[name]) {
        var fn = function() {
            return var$1[var$2].apply(var$1, arguments);
        };
        var$1[name] = function() {
            return fn;
        };
    }
    return var$1[name]();
}
function otji_JS_functionAsObject(var$1, var$2) {
    if (typeof var$1 !== "function") return var$1;
    var result = {};
    result[var$2] = var$1;
    return result;
}
function iaam_Interpolation$2() {
    iaam_Interpolation.call(this);
}
function iaam_Interpolation$2__init_() {
    var var_0 = new iaam_Interpolation$2();
    iaam_Interpolation$2__init_0(var_0);
    return var_0;
}
function iaam_Interpolation$2__init_0($this) {
    iaam_Interpolation__init_0($this);
}
function iaam_Interpolation$2_apply($this, $a) {
    return $a * $a * (3.0 - 2.0 * $a);
}
function iaam_Interpolation$1() {
    iaam_Interpolation.call(this);
}
function iaam_Interpolation$1__init_() {
    var var_0 = new iaam_Interpolation$1();
    iaam_Interpolation$1__init_0(var_0);
    return var_0;
}
function iaam_Interpolation$1__init_0($this) {
    iaam_Interpolation__init_0($this);
}
function iaam_Interpolation$1_apply($this, $a) {
    return $a;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$00 = null;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_0($this, $this$0) {
    $this.$this$00 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains($this, $ch) {
    return jl_Character_isUnicodeIdentifierStart($ch);
}
function it_Phases$3$lambda$null$4$lambda$_28_0() {
    var a = this; jl_Object.call(a);
    a.$_018 = 0;
    a.$_112 = 0;
    a.$_21 = 0.0;
    a.$_30 = 0;
}
function it_Phases$3$lambda$null$4$lambda$_28_0__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new it_Phases$3$lambda$null$4$lambda$_28_0();
    it_Phases$3$lambda$null$4$lambda$_28_0__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function it_Phases$3$lambda$null$4$lambda$_28_0__init_0(var$0, var$1, var$2, var$3, var$4) {
    jl_Object__init_0(var$0);
    var$0.$_018 = var$1;
    var$0.$_112 = var$2;
    var$0.$_21 = var$3;
    var$0.$_30 = var$4;
}
function it_Phases$3$lambda$null$4$lambda$_28_0_run(var$0) {
    it_Phases$3_lambda$null$3(var$0.$_018, var$0.$_112, var$0.$_21, var$0.$_30);
}
function iaat_Effect() {
    var a = this; jl_Object.call(a);
    a.$label = null;
    a.$indexStart = 0;
    a.$indexEnd = 0;
    a.$duration = 0.0;
    a.$endToken = null;
    a.$totalTime = 0.0;
}
function iaat_Effect__init_(var_0) {
    var var_1 = new iaat_Effect();
    iaat_Effect__init_0(var_1, var_0);
    return var_1;
}
function iaat_Effect__init_0($this, $label) {
    jl_Object__init_0($this);
    $this.$indexStart = (-1);
    $this.$indexEnd = (-1);
    $this.$duration = Infinity;
    $this.$label = $label;
}
function iaat_Effect_update($this, $delta) {
    $this.$totalTime = $this.$totalTime + $delta;
}
function iaat_Effect_apply($this, $glyph, $glyphIndex, $delta) {
    var $localIndex;
    $localIndex = $glyphIndex - $this.$indexStart | 0;
    $this.$onApply($glyph, $localIndex, $delta);
}
function iaat_Effect_isFinished($this) {
    return $this.$totalTime <= $this.$duration ? 0 : 1;
}
function iaat_Effect_calculateFadeout($this) {
    var $progress;
    if (!isFinite($this.$duration) ? 1 : 0)
        return 1.0;
    $progress = iaam_Mathf_clamp($this.$totalTime / $this.$duration, 0.0, 1.0);
    if ($progress < 0.25)
        return 1.0;
    iaam_Interpolation_$callClinit();
    return iaam_Interpolation_smooth.$apply0(1.0, 0.0, ($progress - 0.25) / 0.75);
}
function iaat_Effect_calculateProgress($this, $modifier) {
    return $this.$calculateProgress($modifier, 0.0, 1);
}
function iaat_Effect_calculateProgress0($this, $modifier, $offset) {
    return $this.$calculateProgress($modifier, $offset, 1);
}
function iaat_Effect_calculateProgress1($this, $modifier, $offset, $pingpong) {
    var $progress, var$5, var$6;
    $progress = $this.$totalTime / $modifier + $offset;
    while ($progress < 0.0) {
        $progress = $progress + 2.0;
    }
    if (!$pingpong)
        var$5 = $progress % 1.0;
    else {
        var$5 = $progress % 2.0;
        if (var$5 > 1.0)
            var$5 = 1.0 - (var$5 - 1.0);
    }
    var$6 = iaam_Mathf_clamp(var$5, 0.0, 1.0);
    return var$6;
}
function iaat_Effect_getLineHeight($this) {
    return $this.$label.$getBitmapFontCache().$getFont().$getLineHeight() * $this.$label.$getFontScaleY();
}
function iaate_JumpEffect() {
    var a = this; iaat_Effect.call(a);
    a.$distance = 0.0;
    a.$frequency = 0.0;
    a.$intensity = 0.0;
}
function iaate_JumpEffect__init_(var_0) {
    var var_1 = new iaate_JumpEffect();
    iaate_JumpEffect__init_0(var_1, var_0);
    return var_1;
}
function iaate_JumpEffect__init_0($this, $label) {
    iaat_Effect__init_0($this, $label);
    $this.$distance = 1.0;
    $this.$frequency = 1.0;
    $this.$intensity = 1.0;
}
function iaate_JumpEffect_onApply($this, $glyph, $localIndex, $delta) {
    var $progressModifier, $normalFrequency, $progressOffset, $progress, $split, var$9, $y, $fadeout;
    $progressModifier = 1.0 / $this.$intensity * 1.0;
    $normalFrequency = 1.0 / $this.$frequency * 50.0;
    $progressOffset = $localIndex / $normalFrequency;
    $progress = $this.$calculateProgress($progressModifier,  -$progressOffset, 0);
    $split = 0.20000000298023224;
    if ($progress < $split) {
        iaam_Interpolation_$callClinit();
        var$9 = iaam_Interpolation_pow2Out.$apply0(0.0, 1.0, $progress / $split);
    } else {
        iaam_Interpolation_$callClinit();
        var$9 = iaam_Interpolation_bounceOut.$apply0(1.0, 0.0, ($progress - $split) / 0.800000011920929);
    }
    $y = $this.$getLineHeight() * $this.$distance * var$9 * 1.3300000429153442;
    $fadeout = $this.$calculateFadeout();
    var$9 = $y * $fadeout;
    $glyph.$yoffset = $glyph.$yoffset + var$9 | 0;
}
function iaa_Input() {
    var a = this; jl_Object.call(a);
    a.$keyboard = null;
    a.$devices = null;
    a.$inputMultiplexer = null;
    a.$caughtKeys = null;
    a.$mouseReturn = null;
}
function iaa_Input__init_() {
    var var_0 = new iaa_Input();
    iaa_Input__init_0(var_0);
    return var_0;
}
function iaa_Input__init_0($this) {
    var var$1, var$2;
    jl_Object__init_0($this);
    $this.$keyboard = iaai_KeyboardDevice__init_();
    var$1 = $rt_createArray(iaai_InputDevice, 1);
    var$1.data[0] = $this.$keyboard;
    $this.$devices = iaac_Array_with(var$1);
    var$2 = new iaai_InputMultiplexer;
    var$1 = $rt_createArray(iaai_InputProcessor, 1);
    var$1.data[0] = $this.$keyboard;
    iaai_InputMultiplexer__init_(var$2, var$1);
    $this.$inputMultiplexer = var$2;
    $this.$caughtKeys = iaac_IntSet__init_();
    $this.$mouseReturn = iaamg_Vector2__init_0();
}
function iaa_Input_mouseWorld($this) {
    iaa_Core_$callClinit();
    return iaa_Core_camera.$unproject($this.$mouse());
}
function iaa_Input_mouse($this) {
    return $this.$mouseReturn.$set2($this.$mouseX(), $this.$mouseY());
}
function iaa_Input_keyTap($this, $key) {
    return $this.$keyboard.$isKeyTapped($key);
}
function iaa_Input_keyDown($this, $key) {
    iaa_Core_$callClinit();
    return iaa_Core_keybinds.$get13($key).$key !== null && $this.$keyboard.$isKeyPressed(iaa_Core_keybinds.$get13($key).$key) ? 1 : 0;
}
function iaa_Input_keyTap0($this, $key) {
    iaa_Core_$callClinit();
    return iaa_Core_keybinds.$get13($key).$key !== null && $this.$keyboard.$isKeyTapped(iaa_Core_keybinds.$get13($key).$key) ? 1 : 0;
}
function iaa_Input_axis($this, $key) {
    var $axis, var$3, var$4, var$5;
    iaa_Core_$callClinit();
    $axis = iaa_Core_keybinds.$get13($key);
    if ($axis.$key !== null)
        return $this.$keyboard.$getAxis($axis.$key);
    if ($this.$keyboard.$isKeyPressed($axis.$min2) && $this.$keyboard.$isKeyPressed($axis.$max2))
        var$3 = 0.0;
    else {
        var$4 = $this.$keyboard;
        var$5 = $axis.$min2;
        var$3 = var$4.$isKeyPressed(var$5) ? (-1.0) : !$this.$keyboard.$isKeyPressed($axis.$max2) ? 0.0 : 1.0;
    }
    return var$3;
}
function iaa_Input_addProcessor($this, $processor) {
    $this.$inputMultiplexer.$addProcessor($processor);
}
function iaa_Input_getDevices($this) {
    return $this.$devices;
}
function iaa_Input_getKeyboard($this) {
    return $this.$keyboard;
}
function iaa_Input_isCursorCatched($this) {
    return 0;
}
function iaabt_TeaInput() {
    var a = this; iaa_Input.call(a);
    a.$justTouched = 0;
    a.$touched = null;
    a.$touchX = null;
    a.$touchY = null;
    a.$deltaX = null;
    a.$deltaY = null;
    a.$canvas = null;
    a.$hasFocus = 0;
}
function iaabt_TeaInput__init_(var_0) {
    var var_1 = new iaabt_TeaInput();
    iaabt_TeaInput__init_0(var_1, var_0);
    return var_1;
}
function iaabt_TeaInput__init_0($this, $canvas) {
    iaa_Input__init_0($this);
    $this.$justTouched = 0;
    $this.$touched = $rt_createBooleanArray(20);
    $this.$touchX = $rt_createIntArray(20);
    $this.$touchY = $rt_createIntArray(20);
    $this.$deltaX = $rt_createIntArray(20);
    $this.$deltaY = $rt_createIntArray(20);
    $this.$hasFocus = 1;
    $this.$canvas = $canvas;
    iaabt_TeaInput_hookEvents($this);
}
function iaabt_TeaInput_prepareNext($this) {
    var var$1, $device;
    var$1 = $this.$devices.$iterator();
    while (var$1.$hasNext()) {
        $device = var$1.$next0();
        $device.$update1();
    }
}
function iaabt_TeaInput_mouseX($this) {
    return $this.$touchX.data[0];
}
function iaabt_TeaInput_mouseY($this) {
    return $this.$touchY.data[0];
}
function iaabt_TeaInput_getRelativeX($this, $e, $target) {
    return $e.clientX;
}
function iaabt_TeaInput_getRelativeY($this, $e, $target) {
    return ($target.height - 1 | 0) - $e.clientY | 0;
}
function iaabt_TeaInput_hookEvents($this) {
    var $document;
    $document = $this.$canvas.ownerDocument;
    $this.$canvas.addEventListener("mousedown", otji_JS_function($this, "handleEvent"), !!1);
    $document.addEventListener("mousedown", otji_JS_function($this, "handleEvent"), !!1);
    $this.$canvas.addEventListener("mouseup", otji_JS_function($this, "handleEvent"), !!1);
    $document.addEventListener("mouseup", otji_JS_function($this, "handleEvent"), !!1);
    $this.$canvas.addEventListener("mousemove", otji_JS_function($this, "handleEvent"), !!1);
    $document.addEventListener("mousemove", otji_JS_function($this, "handleEvent"), !!1);
    $this.$canvas.addEventListener("wheel", otji_JS_function($this, "handleEvent"), !!1);
    $document.addEventListener("keydown", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("keyup", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("keypress", otji_JS_function($this, "handleEvent"), !!0);
    $this.$canvas.addEventListener("touchstart", otji_JS_function($this, "handleEvent"));
    $this.$canvas.addEventListener("touchmove", otji_JS_function($this, "handleEvent"));
    $this.$canvas.addEventListener("touchcancel", otji_JS_function($this, "handleEvent"));
    $this.$canvas.addEventListener("touchend", otji_JS_function($this, "handleEvent"));
}
function iaabt_TeaInput_getMovementXJSNI($this, $event) {
    return $event.screenX;
}
function iaabt_TeaInput_getMovementYJSNI($this, $event) {
    return $event.screenY;
}
function iaabt_TeaInput_handleEvent($this, $e) {
    var $mouseEvent, var$3, $mouseX, $mouseY, $wheel, $keyEvent, $code, $c;
    if ($rt_str($e.type).$equals($rt_s(312))) {
        $mouseEvent = $e;
        if ($e.target === $this.$canvas && !$this.$touched.data[0]) {
            $this.$hasFocus = 1;
            $this.$justTouched = 1;
            $this.$touched.data[0] = 1;
            $this.$deltaX.data[0] = 0;
            $this.$deltaY.data[0] = 0;
            if (!$this.$isCursorCatched()) {
                $this.$touchX.data[0] = $this.$getRelativeX($mouseEvent, $this.$canvas);
                $this.$touchY.data[0] = $this.$getRelativeY($mouseEvent, $this.$canvas);
            } else {
                var$3 = $this.$touchX.data;
                var$3[0] = var$3[0] + iaabt_TeaInput_getMovementXJSNI($this, $e) | 0;
                var$3 = $this.$touchY.data;
                var$3[0] = var$3[0] + iaabt_TeaInput_getMovementYJSNI($this, $e) | 0;
            }
            $this.$inputMultiplexer.$touchDown($this.$touchX.data[0], $this.$touchY.data[0], 0, iaabt_TeaKeymap_getButton($mouseEvent.button));
            $e.preventDefault();
            $e.stopPropagation();
        } else {
            a: {
                $mouseX = $this.$getRelativeX($mouseEvent, $this.$canvas);
                $mouseY = $this.$getRelativeY($mouseEvent, $this.$canvas);
                if ($mouseX >= 0.0) {
                    iaa_Core_$callClinit();
                    if ($mouseX <= iaa_Core_graphics.$getWidth0() && $mouseY >= 0.0 && $mouseY <= iaa_Core_graphics.$getHeight0())
                        break a;
                }
                $this.$hasFocus = 0;
            }
            return;
        }
    }
    if ($rt_str($e.type).$equals($rt_s(313))) {
        $mouseEvent = $e;
        if ($this.$isCursorCatched()) {
            $this.$deltaX.data[0] = iaabt_TeaInput_getMovementXJSNI($this, $e) | 0;
            $this.$deltaY.data[0] = iaabt_TeaInput_getMovementYJSNI($this, $e) | 0;
            var$3 = $this.$touchX.data;
            var$3[0] = var$3[0] + iaabt_TeaInput_getMovementXJSNI($this, $e) | 0;
            var$3 = $this.$touchY.data;
            var$3[0] = var$3[0] + iaabt_TeaInput_getMovementYJSNI($this, $e) | 0;
        } else {
            $this.$deltaX.data[0] = $this.$getRelativeX($mouseEvent, $this.$canvas) - $this.$touchX.data[0] | 0;
            $this.$deltaY.data[0] = $this.$getRelativeY($mouseEvent, $this.$canvas) - $this.$touchY.data[0] | 0;
            $this.$touchX.data[0] = $this.$getRelativeX($mouseEvent, $this.$canvas);
            $this.$touchY.data[0] = $this.$getRelativeY($mouseEvent, $this.$canvas);
        }
        if (!$this.$touched.data[0])
            $this.$inputMultiplexer.$mouseMoved($this.$touchX.data[0], $this.$touchY.data[0]);
        else
            $this.$inputMultiplexer.$touchDragged($this.$touchX.data[0], $this.$touchY.data[0], 0);
    }
    if ($rt_str($e.type).$equals($rt_s(314))) {
        if (!$this.$touched.data[0])
            return;
        $mouseEvent = $e;
        if ($this.$isCursorCatched()) {
            $this.$deltaX.data[0] = iaabt_TeaInput_getMovementXJSNI($this, $e) | 0;
            $this.$deltaY.data[0] = iaabt_TeaInput_getMovementYJSNI($this, $e) | 0;
            var$3 = $this.$touchX.data;
            var$3[0] = var$3[0] + iaabt_TeaInput_getMovementXJSNI($this, $e) | 0;
            var$3 = $this.$touchY.data;
            var$3[0] = var$3[0] + iaabt_TeaInput_getMovementYJSNI($this, $e) | 0;
        } else {
            $this.$deltaX.data[0] = $this.$getRelativeX($mouseEvent, $this.$canvas) - $this.$touchX.data[0] | 0;
            $this.$deltaY.data[0] = $this.$getRelativeY($mouseEvent, $this.$canvas) - $this.$touchY.data[0] | 0;
            $this.$touchX.data[0] = $this.$getRelativeX($mouseEvent, $this.$canvas);
            $this.$touchY.data[0] = $this.$getRelativeY($mouseEvent, $this.$canvas);
        }
        $this.$touched.data[0] = 0;
        $this.$inputMultiplexer.$touchUp($this.$touchX.data[0], $this.$touchY.data[0], 0, iaabt_TeaKeymap_getButton($mouseEvent.button));
        $e.preventDefault();
        $e.stopPropagation();
    }
    if ($rt_str($e.type).$equals($rt_s(315))) {
        $wheel = $e;
        $this.$inputMultiplexer.$scrolled($wheel.deltaX, $wheel.deltaY);
        $e.preventDefault();
        $e.stopPropagation();
    }
    if ($rt_str($e.type).$equals($rt_s(316)) && $this.$hasFocus) {
        $keyEvent = $e;
        $code = iaabt_TeaKeymap_getCode($keyEvent.keyCode);
        iaai_KeyCode_$callClinit();
        if ($code !== iaai_KeyCode_BACKSPACE)
            $this.$inputMultiplexer.$keyDown($code);
        else {
            $this.$inputMultiplexer.$keyDown($code);
            $this.$inputMultiplexer.$keyTyped(8);
        }
        $e.preventDefault();
        $e.stopPropagation();
    }
    if ($rt_str($e.type).$equals($rt_s(317)) && $this.$hasFocus) {
        $keyEvent = $e;
        $c = $keyEvent.charCode & 65535;
        $this.$inputMultiplexer.$keyTyped($c);
        $e.preventDefault();
        $e.stopPropagation();
    }
    if ($rt_str($e.type).$equals($rt_s(318)) && $this.$hasFocus) {
        $keyEvent = $e;
        $code = iaabt_TeaKeymap_getCode($keyEvent.keyCode);
        $this.$inputMultiplexer.$keyUp($code);
        $e.preventDefault();
        $e.stopPropagation();
    }
}
function iaabt_TeaInput_handleEvent$exported$0(var$0, var$1) {
    var$0.$handleEvent(var$1);
}
function otciu_UnicodeHelper() {
    jl_Object.call(this);
}
function otciu_UnicodeHelper_decodeIntByte($text) {
    var $flow, $sz, $data, $i;
    $flow = otci_CharFlow__init_($text.$toCharArray());
    $sz = otci_Base46_decode($flow);
    $data = $rt_createIntArray($sz);
    $i = 0;
    while ($i < $sz) {
        $data.data[$i] = otci_Base46_decode($flow);
        $i = $i + 1 | 0;
    }
    return $data;
}
function otciu_UnicodeHelper_decodeByte($c) {
    if ($c > 92)
        return (($c - 32 | 0) - 2 | 0) << 24 >> 24;
    if ($c <= 34)
        return ($c - 32 | 0) << 24 >> 24;
    return (($c - 32 | 0) - 1 | 0) << 24 >> 24;
}
function otciu_UnicodeHelper_extractRle($encoded) {
    var $ranges, $buffer, $index, $rangeIndex, $codePoint, $i, $b, $count, $pos, $j, $digit, var$13, var$14, var$15, var$16, var$17;
    $ranges = $rt_createArray(otciu_UnicodeHelper$Range, 16384);
    $buffer = $rt_createByteArray(16384);
    $index = 0;
    $rangeIndex = 0;
    $codePoint = 0;
    $i = 0;
    while ($i < $encoded.$length()) {
        $b = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
        if ($b == 64) {
            $i = $i + 1 | 0;
            $b = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
            $count = 0;
            $pos = 1;
            $j = 0;
            while ($j < 3) {
                $i = $i + 1 | 0;
                $digit = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
                $count = $count | $rt_imul($pos, $digit);
                $pos = $pos * 64 | 0;
                $j = $j + 1 | 0;
            }
        } else if ($b < 32)
            $count = 1;
        else {
            $b = ($b - 32 | 0) << 24 >> 24;
            $i = $i + 1 | 0;
            $count = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
        }
        if (!$b && $count >= 128) {
            if ($index > 0) {
                var$13 = $ranges.data;
                var$14 = $rangeIndex + 1 | 0;
                var$13[$rangeIndex] = otciu_UnicodeHelper$Range__init_($codePoint, $codePoint + $index | 0, ju_Arrays_copyOf($buffer, $index));
                $rangeIndex = var$14;
            }
            $codePoint = $codePoint + ($index + $count | 0) | 0;
            $index = 0;
        } else {
            var$15 = $buffer.data;
            var$14 = $index + $count | 0;
            if (var$14 < var$15.length)
                var$16 = $rangeIndex;
            else {
                var$13 = $ranges.data;
                var$16 = $rangeIndex + 1 | 0;
                var$13[$rangeIndex] = otciu_UnicodeHelper$Range__init_($codePoint, $codePoint + $index | 0, ju_Arrays_copyOf($buffer, $index));
                $codePoint = $codePoint + var$14 | 0;
                $index = 0;
            }
            while (true) {
                var$14 = $count + (-1) | 0;
                if ($count <= 0)
                    break;
                var$17 = $index + 1 | 0;
                var$15[$index] = $b;
                $index = var$17;
                $count = var$14;
            }
            $rangeIndex = var$16;
        }
        $i = $i + 1 | 0;
    }
    return ju_Arrays_copyOf1($ranges, $rangeIndex);
}
function otp_PlatformRunnable() {
}
function jl_Object$monitorEnterWait$lambda$_6_0() {
    var a = this; jl_Object.call(a);
    a.$_019 = null;
    a.$_113 = null;
    a.$_22 = 0;
    a.$_31 = null;
}
function jl_Object$monitorEnterWait$lambda$_6_0__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jl_Object$monitorEnterWait$lambda$_6_0();
    jl_Object$monitorEnterWait$lambda$_6_0__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jl_Object$monitorEnterWait$lambda$_6_0__init_0(var$0, var$1, var$2, var$3, var$4) {
    jl_Object__init_0(var$0);
    var$0.$_019 = var$1;
    var$0.$_113 = var$2;
    var$0.$_22 = var$3;
    var$0.$_31 = var$4;
}
function jl_Object$monitorEnterWait$lambda$_6_0_run(var$0) {
    jl_Object_lambda$monitorEnterWait$0(var$0.$_019, var$0.$_113, var$0.$_22, var$0.$_31);
}
function iaas_Scene$touchUp$lambda$_22_0() {
    jl_Object.call(this);
}
function iaas_Scene$touchUp$lambda$_22_0__init_() {
    var var_0 = new iaas_Scene$touchUp$lambda$_22_0();
    iaas_Scene$touchUp$lambda$_22_0__init_0(var_0);
    return var_0;
}
function iaas_Scene$touchUp$lambda$_22_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaas_Scene$touchUp$lambda$_22_0_get(var$0) {
    return iaas_Scene$touchUp$lambda$_22_0_get0(var$0);
}
function iaas_Scene$touchUp$lambda$_22_0_get0(var$0) {
    return iaase_InputEvent__init_();
}
function jur_AbstractCharClass$LazyAlnum() {
    jur_AbstractCharClass$LazyAlpha.call(this);
}
function jur_AbstractCharClass$LazyAlnum__init_() {
    var var_0 = new jur_AbstractCharClass$LazyAlnum();
    jur_AbstractCharClass$LazyAlnum__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyAlnum__init_0($this) {
    jur_AbstractCharClass$LazyAlpha__init_0($this);
}
function jur_AbstractCharClass$LazyAlnum_computeValue($this) {
    return jur_AbstractCharClass$LazyAlpha_computeValue($this).$add0(48, 57);
}
function jur_AbstractCharClass$LazyGraph() {
    jur_AbstractCharClass$LazyAlnum.call(this);
}
function jur_AbstractCharClass$LazyGraph__init_() {
    var var_0 = new jur_AbstractCharClass$LazyGraph();
    jur_AbstractCharClass$LazyGraph__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyGraph__init_0($this) {
    jur_AbstractCharClass$LazyAlnum__init_0($this);
}
function jur_AbstractCharClass$LazyGraph_computeValue($this) {
    return jur_AbstractCharClass$LazyAlnum_computeValue($this).$add0(33, 64).$add0(91, 96).$add0(123, 126);
}
function jur_AbstractCharClass$LazyPrint() {
    jur_AbstractCharClass$LazyGraph.call(this);
}
function jur_AbstractCharClass$LazyPrint__init_() {
    var var_0 = new jur_AbstractCharClass$LazyPrint();
    jur_AbstractCharClass$LazyPrint__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyPrint__init_0($this) {
    jur_AbstractCharClass$LazyGraph__init_0($this);
}
function jur_AbstractCharClass$LazyPrint_computeValue($this) {
    return jur_AbstractCharClass$LazyGraph_computeValue($this).$add(32);
}
function jur_AbstractCharClass$LazyJavaSpaceChar() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaSpaceChar__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaSpaceChar();
    jur_AbstractCharClass$LazyJavaSpaceChar__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaSpaceChar__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaSpaceChar_computeValue($this) {
    return jur_AbstractCharClass$LazyJavaSpaceChar$1__init_($this);
}
function jur_PositiveLookBehind() {
    jur_AtomicJointSet.call(this);
}
function jur_PositiveLookBehind__init_(var_0, var_1) {
    var var_2 = new jur_PositiveLookBehind();
    jur_PositiveLookBehind__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_PositiveLookBehind__init_0($this, $children, $fSet) {
    jur_AtomicJointSet__init_0($this, $children, $fSet);
}
function jur_PositiveLookBehind_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $leftBound, $shift, $i, $e;
    $size = $this.$children1.$size0();
    $leftBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getLeftBound() : 0;
    a: {
        $shift = $this.$next.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0) {
            $matchResult.$setConsumed($this.$groupIndex0, $stringIndex);
            $i = 0;
            while (true) {
                if ($i >= $size)
                    break a;
                $e = $this.$children1.$get($i);
                if ($e.$findBack($leftBound, $stringIndex, $testString, $matchResult) >= 0) {
                    $matchResult.$setConsumed($this.$groupIndex0, (-1));
                    return $shift;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    return (-1);
}
function jur_PositiveLookBehind_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_PositiveLookBehind_getName($this) {
    return $rt_s(319);
}
function jnc_CharsetEncoder() {
    var a = this; jl_Object.call(a);
    a.$charset = null;
    a.$replacement = null;
    a.$averageBytesPerChar = 0.0;
    a.$maxBytesPerChar = 0.0;
    a.$malformedAction = null;
    a.$unmappableAction = null;
    a.$status = 0;
}
function jnc_CharsetEncoder__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jnc_CharsetEncoder();
    jnc_CharsetEncoder__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jnc_CharsetEncoder__init_1(var_0, var_1, var_2) {
    var var_3 = new jnc_CharsetEncoder();
    jnc_CharsetEncoder__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function jnc_CharsetEncoder__init_0($this, $cs, $averageBytesPerChar, $maxBytesPerChar, $replacement) {
    jl_Object__init_0($this);
    jnc_CodingErrorAction_$callClinit();
    $this.$malformedAction = jnc_CodingErrorAction_REPORT;
    $this.$unmappableAction = jnc_CodingErrorAction_REPORT;
    jnc_CharsetEncoder_checkReplacement($this, $replacement);
    $this.$charset = $cs;
    $this.$replacement = $replacement.$clone();
    $this.$averageBytesPerChar = $averageBytesPerChar;
    $this.$maxBytesPerChar = $maxBytesPerChar;
}
function jnc_CharsetEncoder__init_2($this, $cs, $averageBytesPerChar, $maxBytesPerChar) {
    var var$4;
    var$4 = $rt_createByteArray(1);
    var$4.data[0] = 63;
    jnc_CharsetEncoder__init_0($this, $cs, $averageBytesPerChar, $maxBytesPerChar, var$4);
}
function jnc_CharsetEncoder_checkReplacement($this, $replacement) {
    var var$2;
    if ($replacement !== null) {
        var$2 = $replacement.data.length;
        if (var$2 && var$2 >= $this.$maxBytesPerChar)
            return;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(320)));
}
function jnc_CharsetEncoder_onMalformedInput($this, $newAction) {
    if ($newAction !== null) {
        $this.$malformedAction = $newAction;
        $this.$implOnMalformedInput($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(321)));
}
function jnc_CharsetEncoder_implOnMalformedInput($this, $newAction) {
    return;
}
function jnc_CharsetEncoder_onUnmappableCharacter($this, $newAction) {
    if ($newAction !== null) {
        $this.$unmappableAction = $newAction;
        $this.$implOnUnmappableCharacter($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(321)));
}
function jnc_CharsetEncoder_implOnUnmappableCharacter($this, $newAction) {
    return;
}
function jnc_CharsetEncoder_encode($this, $in, $out, $endOfInput) {
    var $result, $e, $remaining, $action, $$je;
    a: {
        if ($this.$status != 3) {
            if ($endOfInput)
                break a;
            if ($this.$status != 2)
                break a;
        }
        $rt_throw(jl_IllegalStateException__init_0());
    }
    $this.$status = !$endOfInput ? 1 : 2;
    while (true) {
        try {
            $result = $this.$encodeLoop($in, $out);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $e = $$je;
                $rt_throw(jnc_CoderMalfunctionError__init_($e));
            } else {
                throw $$e;
            }
        }
        if ($result.$isUnderflow()) {
            if (!$endOfInput)
                return $result;
            $remaining = jn_Buffer_remaining($in);
            if ($remaining <= 0)
                return $result;
            $result = jnc_CoderResult_malformedForLength($remaining);
        } else if ($result.$isOverflow())
            break;
        $action = !$result.$isUnmappable() ? $this.$malformedAction : $this.$unmappableAction;
        b: {
            jnc_CodingErrorAction_$callClinit();
            if ($action !== jnc_CodingErrorAction_REPLACE) {
                if ($action === jnc_CodingErrorAction_IGNORE)
                    break b;
                else
                    return $result;
            }
            if (jn_Buffer_remaining($out) < $this.$replacement.data.length)
                return jnc_CoderResult_OVERFLOW;
            jn_ByteBuffer_put($out, $this.$replacement);
        }
        $in.$position1(jn_Buffer_position($in) + $result.$length() | 0);
    }
    return $result;
}
function jnc_CharsetEncoder_flush($this, $out) {
    var $result;
    if ($this.$status != 2 && $this.$status != 4)
        $rt_throw(jl_IllegalStateException__init_0());
    $result = $this.$implFlush($out);
    jnc_CoderResult_$callClinit();
    if ($result === jnc_CoderResult_UNDERFLOW)
        $this.$status = 3;
    return $result;
}
function jnc_CharsetEncoder_implFlush($this, $out) {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult_UNDERFLOW;
}
function jl_ArrayStoreException() {
    jl_RuntimeException.call(this);
}
function jl_ArrayStoreException__init_() {
    var var_0 = new jl_ArrayStoreException();
    jl_ArrayStoreException__init_0(var_0);
    return var_0;
}
function jl_ArrayStoreException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function iaagg_BatchShader() {
    jl_Object.call(this);
}
var iaagg_BatchShader_val = null;
var iaagg_BatchShader_vertexShader = null;
var iaagg_BatchShader_fragmentShader = null;
function iaagg_BatchShader_$callClinit() {
    iaagg_BatchShader_$callClinit = $rt_eraseClinit(iaagg_BatchShader);
    iaagg_BatchShader__clinit_();
}
function iaagg_BatchShader_create() {
    iaagg_BatchShader_$callClinit();
    return iaagg_Shader__init_(iaagg_BatchShader_vertexShader, iaagg_BatchShader_fragmentShader);
}
function iaagg_BatchShader_copyTransform($matrix) {
    iaagg_BatchShader_$callClinit();
    iaagg_BatchShader_val.data[4] = $matrix.$val.data[3];
    iaagg_BatchShader_val.data[1] = $matrix.$val.data[1];
    iaagg_BatchShader_val.data[0] = $matrix.$val.data[0];
    iaagg_BatchShader_val.data[5] = $matrix.$val.data[4];
    iaagg_BatchShader_val.data[10] = $matrix.$val.data[8];
    iaagg_BatchShader_val.data[12] = $matrix.$val.data[6];
    iaagg_BatchShader_val.data[13] = $matrix.$val.data[7];
    iaagg_BatchShader_val.data[15] = 1.0;
    return iaagg_BatchShader_val;
}
function iaagg_BatchShader__clinit_() {
    var var$1, var$2;
    iaagg_BatchShader_val = $rt_createFloatArray(16);
    var$1 = $rt_createArray(jl_String, 17);
    var$2 = var$1.data;
    var$2[0] = $rt_s(322);
    var$2[1] = $rt_s(323);
    var$2[2] = $rt_s(324);
    var$2[3] = $rt_s(325);
    var$2[4] = $rt_s(326);
    var$2[5] = $rt_s(327);
    var$2[6] = $rt_s(328);
    var$2[7] = $rt_s(329);
    var$2[8] = $rt_s(58);
    var$2[9] = $rt_s(330);
    var$2[10] = $rt_s(331);
    var$2[11] = $rt_s(332);
    var$2[12] = $rt_s(333);
    var$2[13] = $rt_s(334);
    var$2[14] = $rt_s(335);
    var$2[15] = $rt_s(336);
    var$2[16] = $rt_s(26);
    iaagg_BatchShader_vertexShader = iaau_Strings_join($rt_s(337), var$1);
    var$1 = $rt_createArray(jl_String, 16);
    var$2 = var$1.data;
    var$2[0] = $rt_s(338);
    var$2[1] = $rt_s(339);
    var$2[2] = $rt_s(340);
    var$2[3] = $rt_s(341);
    var$2[4] = $rt_s(342);
    var$2[5] = $rt_s(343);
    var$2[6] = $rt_s(58);
    var$2[7] = $rt_s(344);
    var$2[8] = $rt_s(345);
    var$2[9] = $rt_s(329);
    var$2[10] = $rt_s(346);
    var$2[11] = $rt_s(58);
    var$2[12] = $rt_s(330);
    var$2[13] = $rt_s(347);
    var$2[14] = $rt_s(348);
    var$2[15] = $rt_s(26);
    iaagg_BatchShader_fragmentShader = iaau_Strings_join($rt_s(337), var$1);
}
function ji_DataInput() {
}
function ji_DataInputStream() {
    ji_FilterInputStream.call(this);
    this.$buff = null;
}
function ji_DataInputStream__init_(var_0) {
    var var_1 = new ji_DataInputStream();
    ji_DataInputStream__init_0(var_1, var_0);
    return var_1;
}
function ji_DataInputStream__init_0($this, $in) {
    ji_FilterInputStream__init_0($this, $in);
    $this.$buff = $rt_createByteArray(8);
}
function ji_DataInputStream_read($this, $buffer) {
    var var$2;
    var$2 = $buffer.data;
    return $this.$in.$read($buffer, 0, var$2.length);
}
function ji_DataInputStream_readToBuff($this, $count) {
    var $offset, $bytesRead;
    $offset = 0;
    while ($offset < $count) {
        $bytesRead = $this.$in.$read($this.$buff, $offset, $count - $offset | 0);
        if ($bytesRead == (-1))
            return $bytesRead;
        $offset = $offset + $bytesRead | 0;
    }
    return $offset;
}
function ji_DataInputStream_readInt($this) {
    if (ji_DataInputStream_readToBuff($this, 4) < 0)
        $rt_throw(ji_EOFException__init_());
    return ($this.$buff.data[0] & 255) << 24 | ($this.$buff.data[1] & 255) << 16 | ($this.$buff.data[2] & 255) << 8 | $this.$buff.data[3] & 255;
}
function iaam_Affine2() {
    var a = this; jl_Object.call(a);
    a.$m00 = 0.0;
    a.$m01 = 0.0;
    a.$m02 = 0.0;
    a.$m10 = 0.0;
    a.$m11 = 0.0;
    a.$m12 = 0.0;
}
function iaam_Affine2__init_() {
    var var_0 = new iaam_Affine2();
    iaam_Affine2__init_0(var_0);
    return var_0;
}
function iaam_Affine2__init_0($this) {
    jl_Object__init_0($this);
    $this.$m00 = 1.0;
    $this.$m01 = 0.0;
    $this.$m02 = 0.0;
    $this.$m10 = 0.0;
    $this.$m11 = 1.0;
    $this.$m12 = 0.0;
}
function iaam_Affine2_setToTrnRotScl($this, $x, $y, $degrees, $scaleX, $scaleY) {
    var $sin, $cos;
    $this.$m02 = $x;
    $this.$m12 = $y;
    if ($degrees === 0.0) {
        $this.$m00 = $scaleX;
        $this.$m01 = 0.0;
        $this.$m10 = 0.0;
        $this.$m11 = $scaleY;
    } else {
        $sin = iaam_Mathf_sinDeg($degrees);
        $cos = iaam_Mathf_cosDeg($degrees);
        $this.$m00 = $cos * $scaleX;
        $this.$m01 =  -$sin * $scaleY;
        $this.$m10 = $sin * $scaleX;
        $this.$m11 = $cos * $scaleY;
    }
    return $this;
}
function iaam_Affine2_preMul($this, $other) {
    var $tmp00, $tmp01, $tmp02, $tmp10, $tmp11, $tmp12;
    $tmp00 = $other.$m00 * $this.$m00 + $other.$m01 * $this.$m10;
    $tmp01 = $other.$m00 * $this.$m01 + $other.$m01 * $this.$m11;
    $tmp02 = $other.$m00 * $this.$m02 + $other.$m01 * $this.$m12 + $other.$m02;
    $tmp10 = $other.$m10 * $this.$m00 + $other.$m11 * $this.$m10;
    $tmp11 = $other.$m10 * $this.$m01 + $other.$m11 * $this.$m11;
    $tmp12 = $other.$m10 * $this.$m02 + $other.$m11 * $this.$m12 + $other.$m12;
    $this.$m00 = $tmp00;
    $this.$m01 = $tmp01;
    $this.$m02 = $tmp02;
    $this.$m10 = $tmp10;
    $this.$m11 = $tmp11;
    $this.$m12 = $tmp12;
    return $this;
}
function iaam_Affine2_translate($this, $x, $y) {
    $this.$m02 = $this.$m02 + $this.$m00 * $x + $this.$m01 * $y;
    $this.$m12 = $this.$m12 + $this.$m10 * $x + $this.$m11 * $y;
    return $this;
}
function jur_MatchResult() {
}
function jur_MatchResultImpl() {
    var a = this; jl_Object.call(a);
    a.$groupBounds = null;
    a.$consumers = null;
    a.$compQuantCounters = null;
    a.$string0 = null;
    a.$groupCount = 0;
    a.$valid1 = 0;
    a.$leftBound = 0;
    a.$rightBound = 0;
    a.$startIndex = 0;
    a.$transparentBounds = 0;
    a.$anchoringBounds = 0;
    a.$hitEnd = 0;
    a.$requireEnd = 0;
    a.$previousMatch = 0;
    a.$mode1 = 0;
}
function jur_MatchResultImpl__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jur_MatchResultImpl();
    jur_MatchResultImpl__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jur_MatchResultImpl__init_0($this, $string, $leftBound, $rightBound, $groupCount, $compQuantCount, $consumersCount) {
    var var$7;
    jl_Object__init_0($this);
    $this.$previousMatch = (-1);
    var$7 = $groupCount + 1 | 0;
    $this.$groupCount = var$7;
    $this.$groupBounds = $rt_createIntArray(var$7 * 2 | 0);
    $this.$consumers = $rt_createIntArray($consumersCount);
    ju_Arrays_fill0($this.$consumers, (-1));
    if ($compQuantCount > 0)
        $this.$compQuantCounters = $rt_createIntArray($compQuantCount);
    ju_Arrays_fill0($this.$groupBounds, (-1));
    $this.$reset1($string, $leftBound, $rightBound);
}
function jur_MatchResultImpl_setConsumed($this, $counter, $value) {
    $this.$consumers.data[$counter] = $value;
}
function jur_MatchResultImpl_getConsumed($this, $counter) {
    return $this.$consumers.data[$counter];
}
function jur_MatchResultImpl_end($this) {
    return $this.$end1(0);
}
function jur_MatchResultImpl_end0($this, $group) {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
}
function jur_MatchResultImpl_setStart($this, $group, $offset) {
    $this.$groupBounds.data[$group * 2 | 0] = $offset;
}
function jur_MatchResultImpl_setEnd($this, $group, $offset) {
    $this.$groupBounds.data[($group * 2 | 0) + 1 | 0] = $offset;
}
function jur_MatchResultImpl_getStart($this, $group) {
    return $this.$groupBounds.data[$group * 2 | 0];
}
function jur_MatchResultImpl_getEnd($this, $group) {
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
}
function jur_MatchResultImpl_group($this, $group) {
    if ($this.$start($group) < 0)
        return null;
    return $this.$string0.$subSequence($this.$start($group), $this.$end1($group)).$toString();
}
function jur_MatchResultImpl_getGroupNoCheck($this, $group) {
    var $st, $end;
    $st = $this.$getStart($group);
    $end = $this.$getEnd($group);
    if (($end | $st | ($end - $st | 0)) >= 0 && $end <= $this.$string0.$length())
        return $this.$string0.$subSequence($st, $end).$toString();
    return null;
}
function jur_MatchResultImpl_start($this) {
    return $this.$start(0);
}
function jur_MatchResultImpl_start0($this, $group) {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[$group * 2 | 0];
}
function jur_MatchResultImpl_finalizeMatch($this) {
    if ($this.$groupBounds.data[0] == (-1)) {
        $this.$groupBounds.data[0] = $this.$startIndex;
        $this.$groupBounds.data[1] = $this.$startIndex;
    }
    $this.$previousMatch = $this.$end2();
}
function jur_MatchResultImpl_getEnterCounter($this, $setCounter) {
    return $this.$compQuantCounters.data[$setCounter];
}
function jur_MatchResultImpl_setEnterCounter($this, $setCounter, $value) {
    $this.$compQuantCounters.data[$setCounter] = $value;
}
function jur_MatchResultImpl_checkGroup($this, $group) {
    if (!$this.$valid1)
        $rt_throw(jl_IllegalStateException__init_0());
    if ($group >= 0 && $group < $this.$groupCount)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_String_valueOf0($group)));
}
function jur_MatchResultImpl_setValid($this) {
    $this.$valid1 = 1;
}
function jur_MatchResultImpl_isValid($this) {
    return $this.$valid1;
}
function jur_MatchResultImpl_reset($this, $newSequence, $leftBound, $rightBound) {
    $this.$valid1 = 0;
    $this.$mode1 = 2;
    ju_Arrays_fill0($this.$groupBounds, (-1));
    ju_Arrays_fill0($this.$consumers, (-1));
    if ($newSequence !== null)
        $this.$string0 = $newSequence;
    if ($leftBound >= 0)
        jur_MatchResultImpl_setBounds($this, $leftBound, $rightBound);
    $this.$startIndex = $this.$leftBound;
}
function jur_MatchResultImpl_reset0($this) {
    $this.$reset1(null, (-1), (-1));
}
function jur_MatchResultImpl_setBounds($this, $leftBound, $rightBound) {
    $this.$leftBound = $leftBound;
    $this.$rightBound = $rightBound;
}
function jur_MatchResultImpl_setStartIndex($this, $startIndex) {
    $this.$startIndex = $startIndex;
    if ($this.$previousMatch >= 0)
        $startIndex = $this.$previousMatch;
    $this.$previousMatch = $startIndex;
}
function jur_MatchResultImpl_getLeftBound($this) {
    return $this.$leftBound;
}
function jur_MatchResultImpl_getRightBound($this) {
    return $this.$rightBound;
}
function jur_MatchResultImpl_setMode($this, $mode) {
    $this.$mode1 = $mode;
}
function jur_MatchResultImpl_mode($this) {
    return $this.$mode1;
}
function jur_MatchResultImpl_hasAnchoringBounds($this) {
    return $this.$anchoringBounds;
}
function jur_MatchResultImpl_hasTransparentBounds($this) {
    return $this.$transparentBounds;
}
function jur_MatchResultImpl_getPreviousMatchEnd($this) {
    return $this.$previousMatch;
}
function iaaf_Intc2() {
}
function i_Renderer$drawWorld$lambda$_9_1() {
    jl_Object.call(this);
}
function i_Renderer$drawWorld$lambda$_9_1__init_() {
    var var_0 = new i_Renderer$drawWorld$lambda$_9_1();
    i_Renderer$drawWorld$lambda$_9_1__init_0(var_0);
    return var_0;
}
function i_Renderer$drawWorld$lambda$_9_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function i_Renderer$drawWorld$lambda$_9_1_get(var$0, var$1, var$2) {
    i_Renderer_lambda$drawWorld$2(var$1, var$2);
}
function i_Renderer$drawWorld$lambda$_9_0() {
    jl_Object.call(this);
}
function i_Renderer$drawWorld$lambda$_9_0__init_() {
    var var_0 = new i_Renderer$drawWorld$lambda$_9_0();
    i_Renderer$drawWorld$lambda$_9_0__init_0(var_0);
    return var_0;
}
function i_Renderer$drawWorld$lambda$_9_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function i_Renderer$drawWorld$lambda$_9_0_get(var$0, var$1, var$2) {
    i_Renderer_lambda$drawWorld$1(var$1, var$2);
}
function iaaup_Pool$Poolable() {
}
function it_Phases$2$lambda$null$3$lambda$_21_0() {
    var a = this; jl_Object.call(a);
    a.$_020 = 0.0;
    a.$_114 = 0;
}
function it_Phases$2$lambda$null$3$lambda$_21_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$2$lambda$null$3$lambda$_21_0();
    it_Phases$2$lambda$null$3$lambda$_21_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$2$lambda$null$3$lambda$_21_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_020 = var$1;
    var$0.$_114 = var$2;
}
function it_Phases$2$lambda$null$3$lambda$_21_0_run(var$0) {
    it_Phases$2_lambda$null$2(var$0.$_020, var$0.$_114);
}
function it_Phases$2$lambda$null$13$lambda$_11_0() {
    jl_Object.call(this);
}
function it_Phases$2$lambda$null$13$lambda$_11_0__init_() {
    var var_0 = new it_Phases$2$lambda$null$13$lambda$_11_0();
    it_Phases$2$lambda$null$13$lambda$_11_0__init_0(var_0);
    return var_0;
}
function it_Phases$2$lambda$null$13$lambda$_11_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$2$lambda$null$13$lambda$_11_0_get(var$0, var$1) {
    it_Phases$2_lambda$null$12(var$1);
}
function iaa_Net() {
    jl_Object.call(this);
    this.$impl = null;
}
function iaa_Net__init_() {
    var var_0 = new iaa_Net();
    iaa_Net__init_0(var_0);
    return var_0;
}
function iaa_Net__init_0($this) {
    jl_Object__init_0($this);
    $this.$impl = iaau_NetJavaImpl__init_();
}
function iaabt_TeaNet() {
    iaa_Net.call(this);
}
function iaabt_TeaNet__init_() {
    var var_0 = new iaabt_TeaNet();
    iaabt_TeaNet__init_0(var_0);
    return var_0;
}
function iaabt_TeaNet__init_0($this) {
    iaa_Net__init_0($this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$01 = null;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1();
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_0($this, $this$0) {
    $this.$this$01 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains($this, $ch) {
    return jl_Character_isJavaIdentifierPart($ch);
}
function ie_EntityCollisions$SolidChecker() {
}
function ie_EntityCollisions$overlapsTile$lambda$_3_0() {
    jl_Object.call(this);
}
function ie_EntityCollisions$overlapsTile$lambda$_3_0__init_() {
    var var_0 = new ie_EntityCollisions$overlapsTile$lambda$_3_0();
    ie_EntityCollisions$overlapsTile$lambda$_3_0__init_0(var_0);
    return var_0;
}
function ie_EntityCollisions$overlapsTile$lambda$_3_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function ie_EntityCollisions$overlapsTile$lambda$_3_0_solid(var$0, var$1, var$2) {
    return ie_EntityCollisions_solid(var$1, var$2);
}
function cbgu_GdxRuntimeException() {
    jl_RuntimeException.call(this);
}
function cbgu_GdxRuntimeException__init_(var_0) {
    var var_1 = new cbgu_GdxRuntimeException();
    cbgu_GdxRuntimeException__init_0(var_1, var_0);
    return var_1;
}
function cbgu_GdxRuntimeException__init_0($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
function iaam_Interpolation$Elastic() {
    var a = this; iaam_Interpolation.call(a);
    a.$value0 = 0.0;
    a.$power = 0.0;
    a.$scale = 0.0;
    a.$bounces = 0.0;
}
function iaam_Interpolation$Elastic__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new iaam_Interpolation$Elastic();
    iaam_Interpolation$Elastic__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaam_Interpolation$Elastic__init_0($this, $value, $power, $bounces, $scale) {
    iaam_Interpolation__init_0($this);
    $this.$value0 = $value;
    $this.$power = $power;
    $this.$scale = $scale;
    $this.$bounces = $bounces * 3.1415927410125732 * ($bounces % 2 | 0 ? (-1) : 1);
}
function iaam_Interpolation$ElasticOut() {
    iaam_Interpolation$Elastic.call(this);
}
function iaam_Interpolation$ElasticOut__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new iaam_Interpolation$ElasticOut();
    iaam_Interpolation$ElasticOut__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaam_Interpolation$ElasticOut__init_0($this, $value, $power, $bounces, $scale) {
    iaam_Interpolation$Elastic__init_0($this, $value, $power, $bounces, $scale);
}
function iaase_InputEvent$Type() {
    jl_Enum.call(this);
}
var iaase_InputEvent$Type_touchDown = null;
var iaase_InputEvent$Type_touchUp = null;
var iaase_InputEvent$Type_touchDragged = null;
var iaase_InputEvent$Type_mouseMoved = null;
var iaase_InputEvent$Type_enter = null;
var iaase_InputEvent$Type_exit = null;
var iaase_InputEvent$Type_scrolled = null;
var iaase_InputEvent$Type_keyDown = null;
var iaase_InputEvent$Type_keyUp = null;
var iaase_InputEvent$Type_keyTyped = null;
var iaase_InputEvent$Type_$VALUES = null;
function iaase_InputEvent$Type_$callClinit() {
    iaase_InputEvent$Type_$callClinit = $rt_eraseClinit(iaase_InputEvent$Type);
    iaase_InputEvent$Type__clinit_();
}
function iaase_InputEvent$Type__init_(var_0, var_1) {
    var var_2 = new iaase_InputEvent$Type();
    iaase_InputEvent$Type__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaase_InputEvent$Type_values() {
    iaase_InputEvent$Type_$callClinit();
    return iaase_InputEvent$Type_$VALUES.$clone();
}
function iaase_InputEvent$Type__init_0($this, var$1, var$2) {
    iaase_InputEvent$Type_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaase_InputEvent$Type__clinit_() {
    var var$1, var$2;
    iaase_InputEvent$Type_touchDown = iaase_InputEvent$Type__init_($rt_s(349), 0);
    iaase_InputEvent$Type_touchUp = iaase_InputEvent$Type__init_($rt_s(350), 1);
    iaase_InputEvent$Type_touchDragged = iaase_InputEvent$Type__init_($rt_s(351), 2);
    iaase_InputEvent$Type_mouseMoved = iaase_InputEvent$Type__init_($rt_s(352), 3);
    iaase_InputEvent$Type_enter = iaase_InputEvent$Type__init_($rt_s(353), 4);
    iaase_InputEvent$Type_exit = iaase_InputEvent$Type__init_($rt_s(354), 5);
    iaase_InputEvent$Type_scrolled = iaase_InputEvent$Type__init_($rt_s(355), 6);
    iaase_InputEvent$Type_keyDown = iaase_InputEvent$Type__init_($rt_s(356), 7);
    iaase_InputEvent$Type_keyUp = iaase_InputEvent$Type__init_($rt_s(357), 8);
    iaase_InputEvent$Type_keyTyped = iaase_InputEvent$Type__init_($rt_s(358), 9);
    var$1 = $rt_createArray(iaase_InputEvent$Type, 10);
    var$2 = var$1.data;
    var$2[0] = iaase_InputEvent$Type_touchDown;
    var$2[1] = iaase_InputEvent$Type_touchUp;
    var$2[2] = iaase_InputEvent$Type_touchDragged;
    var$2[3] = iaase_InputEvent$Type_mouseMoved;
    var$2[4] = iaase_InputEvent$Type_enter;
    var$2[5] = iaase_InputEvent$Type_exit;
    var$2[6] = iaase_InputEvent$Type_scrolled;
    var$2[7] = iaase_InputEvent$Type_keyDown;
    var$2[8] = iaase_InputEvent$Type_keyUp;
    var$2[9] = iaase_InputEvent$Type_keyTyped;
    iaase_InputEvent$Type_$VALUES = var$1;
}
function jnc_Charset() {
    var a = this; jl_Object.call(a);
    a.$canonicalName = null;
    a.$aliases = null;
}
function jnc_Charset__init_(var_0, var_1) {
    var var_2 = new jnc_Charset();
    jnc_Charset__init_0(var_2, var_0, var_1);
    return var_2;
}
function jnc_Charset__init_0($this, $canonicalName, $aliases) {
    var var$3, var$4, var$5, $alias;
    var$3 = $aliases.data;
    jl_Object__init_0($this);
    jnc_Charset_checkCanonicalName($canonicalName);
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $alias = var$3[var$5];
        jnc_Charset_checkCanonicalName($alias);
        var$5 = var$5 + 1 | 0;
    }
    $this.$canonicalName = $canonicalName;
    $this.$aliases = $aliases.$clone();
}
function jnc_Charset_checkCanonicalName($name) {
    var $i, $c;
    if ($name.$isEmpty())
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    if (!jnc_Charset_isValidCharsetStart($name.$charAt(0)))
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    $i = 1;
    while ($i < $name.$length()) {
        a: {
            $c = $name.$charAt($i);
            switch ($c) {
                case 43:
                case 45:
                case 46:
                case 58:
                case 95:
                    break;
                default:
                    if (jnc_Charset_isValidCharsetStart($c))
                        break a;
                    else
                        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
            }
        }
        $i = $i + 1 | 0;
    }
}
function jnc_Charset_isValidCharsetStart($c) {
    return !($c >= 48 && $c <= 57) && !($c >= 97 && $c <= 122) && $c < 65 && $c > 90 ? 0 : 1;
}
function jnc_Charset_forName($charsetName) {
    var $charset;
    if ($charsetName === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(359)));
    jnc_Charset_checkCanonicalName($charsetName);
    $charset = jnc_Charset$Charsets_access$000().$get9($charsetName.$toUpperCase());
    if ($charset !== null)
        return $charset;
    $rt_throw(jnc_UnsupportedCharsetException__init_($charsetName));
}
function jnc_Charset_decode($this, $bb) {
    var var$2, var$3, $e, $$je;
    a: {
        try {
            var$2 = $this.$newDecoder();
            jnc_CodingErrorAction_$callClinit();
            var$3 = jnc_CodingErrorAction_REPLACE;
            var$3 = jnc_CharsetDecoder_onMalformedInput(var$2, var$3);
            var$2 = jnc_CodingErrorAction_REPLACE;
            var$3 = jnc_CharsetDecoder_onUnmappableCharacter(var$3, var$2);
            var$3 = jnc_CharsetDecoder_decode(var$3, $bb);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_CharacterCodingException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    $rt_throw(jl_AssertionError__init_($rt_s(360), $e));
}
function jur_DecomposedCharSet() {
    var a = this; jur_JointSet.call(a);
    a.$readCharsForCodePoint = 0;
    a.$decomposedCharUTF16 = null;
    a.$decomposedChar = null;
    a.$decomposedCharLength = 0;
}
function jur_DecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_DecomposedCharSet();
    jur_DecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_DecomposedCharSet__init_0($this, $decomposedChar, $decomposedCharLength) {
    jur_JointSet__init_0($this);
    $this.$readCharsForCodePoint = 1;
    $this.$decomposedChar = $decomposedChar;
    $this.$decomposedCharLength = $decomposedCharLength;
}
function jur_DecomposedCharSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_DecomposedCharSet_matches($this, $strIndex, $testString, $matchResult) {
    var $decCodePoint, $readCodePoints, $rightBound, $curChar, var$8, $decCurCodePoint, var$10, var$11, var$12, var$13, var$14, var$15;
    $decCodePoint = $rt_createIntArray(4);
    $readCodePoints = 0;
    $rightBound = $matchResult.$getRightBound();
    if ($strIndex >= $rightBound)
        return (-1);
    $curChar = $this.$codePointAt($strIndex, $testString, $rightBound);
    var$8 = $strIndex + $this.$readCharsForCodePoint | 0;
    $decCurCodePoint = jur_Lexer_getDecomposition($curChar);
    if ($decCurCodePoint === null) {
        var$10 = $decCodePoint.data;
        var$11 = 1;
        var$10[$readCodePoints] = $curChar;
    } else {
        var$11 = $decCurCodePoint.data.length;
        jl_System_arraycopy($decCurCodePoint, 0, $decCodePoint, 0, var$11);
        var$11 = $readCodePoints + var$11 | 0;
    }
    a: {
        if (var$8 < $rightBound) {
            var$12 = $this.$codePointAt(var$8, $testString, $rightBound);
            while (var$11 < 4) {
                if (!jur_Lexer_hasDecompositionNonNullCanClass(var$12)) {
                    var$10 = $decCodePoint.data;
                    var$13 = var$11 + 1 | 0;
                    var$10[var$11] = var$12;
                } else {
                    var$10 = jur_Lexer_getDecomposition(var$12).data;
                    if (var$10.length != 2) {
                        var$14 = $decCodePoint.data;
                        var$13 = var$11 + 1 | 0;
                        var$14[var$11] = var$10[0];
                    } else {
                        var$14 = $decCodePoint.data;
                        var$12 = var$11 + 1 | 0;
                        var$14[var$11] = var$10[0];
                        var$13 = var$12 + 1 | 0;
                        var$14[var$12] = var$10[1];
                    }
                }
                var$8 = var$8 + $this.$readCharsForCodePoint | 0;
                if (var$8 >= $rightBound) {
                    var$11 = var$13;
                    break a;
                }
                var$12 = $this.$codePointAt(var$8, $testString, $rightBound);
                var$11 = var$13;
            }
        }
    }
    if (var$11 != $this.$decomposedCharLength)
        return (-1);
    var$15 = 0;
    while (true) {
        if (var$15 >= var$11)
            return $this.$next.$matches(var$8, $testString, $matchResult);
        if ($decCodePoint.data[var$15] != $this.$decomposedChar.data[var$15])
            break;
        var$15 = var$15 + 1 | 0;
    }
    return (-1);
}
function jur_DecomposedCharSet_getDecomposedChar($this) {
    var $strBuff, $i;
    if ($this.$decomposedCharUTF16 === null) {
        $strBuff = jl_StringBuilder__init_();
        $i = 0;
        while ($i < $this.$decomposedCharLength) {
            $strBuff.$append14(jl_Character_toChars($this.$decomposedChar.data[$i]));
            $i = $i + 1 | 0;
        }
        $this.$decomposedCharUTF16 = $strBuff.$toString();
    }
    return $this.$decomposedCharUTF16;
}
function jur_DecomposedCharSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(361)).$append(jur_DecomposedCharSet_getDecomposedChar($this)).$toString();
}
function jur_DecomposedCharSet_codePointAt($this, $strIndex, $testString, $rightBound) {
    var $curChar, var$5, $low, $curCodePointUTF16, var$8;
    $this.$readCharsForCodePoint = 1;
    if ($strIndex >= ($rightBound - 1 | 0))
        $curChar = $testString.$charAt($strIndex);
    else {
        var$5 = $strIndex + 1 | 0;
        $curChar = $testString.$charAt($strIndex);
        $low = $testString.$charAt(var$5);
        if (jl_Character_isSurrogatePair($curChar, $low)) {
            $curCodePointUTF16 = $rt_createCharArray(2);
            var$8 = $curCodePointUTF16.data;
            var$8[0] = $curChar;
            var$8[1] = $low;
            $curChar = jl_Character_codePointAt($curCodePointUTF16, 0);
            $this.$readCharsForCodePoint = 2;
        }
    }
    return $curChar;
}
function jur_DecomposedCharSet_first($this, $set) {
    var var$2, var$3;
    a: {
        if ($set instanceof jur_DecomposedCharSet) {
            var$2 = $set;
            if (!jur_DecomposedCharSet_getDecomposedChar(var$2).$equals(jur_DecomposedCharSet_getDecomposedChar($this))) {
                var$3 = 0;
                break a;
            }
        }
        var$3 = 1;
    }
    return var$3;
}
function jur_DecomposedCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jl_IllegalArgumentException() {
    jl_RuntimeException.call(this);
}
function jl_IllegalArgumentException__init_0() {
    var var_0 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_2(var_0);
    return var_0;
}
function jl_IllegalArgumentException__init_(var_0) {
    var var_1 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_1(var_1, var_0);
    return var_1;
}
function jl_IllegalArgumentException__init_2($this) {
    jl_RuntimeException__init_1($this);
}
function jl_IllegalArgumentException__init_1($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
function jnc_IllegalCharsetNameException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName = null;
}
function jnc_IllegalCharsetNameException__init_(var_0) {
    var var_1 = new jnc_IllegalCharsetNameException();
    jnc_IllegalCharsetNameException__init_0(var_1, var_0);
    return var_1;
}
function jnc_IllegalCharsetNameException__init_0($this, $charsetName) {
    jl_IllegalArgumentException__init_2($this);
    $this.$charsetName = $charsetName;
}
function it_Phases$4$lambda$null$0$lambda$_17_0() {
    jl_Object.call(this);
    this.$_021 = null;
}
function it_Phases$4$lambda$null$0$lambda$_17_0__init_(var_0) {
    var var_1 = new it_Phases$4$lambda$null$0$lambda$_17_0();
    it_Phases$4$lambda$null$0$lambda$_17_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$4$lambda$null$0$lambda$_17_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_021 = var$1;
}
function it_Phases$4$lambda$null$0$lambda$_17_0_get(var$0, var$1) {
    var$0.$_021.$shoot(var$1);
}
function iaam_Interpolation$9() {
    iaam_Interpolation.call(this);
}
function iaam_Interpolation$9__init_() {
    var var_0 = new iaam_Interpolation$9();
    iaam_Interpolation$9__init_0(var_0);
    return var_0;
}
function iaam_Interpolation$9__init_0($this) {
    iaam_Interpolation__init_0($this);
}
function iaam_Interpolation$9_apply($this, $a) {
    return (1.0 - iaam_Mathf_cos($a * 3.1415927410125732)) / 2.0;
}
function iaam_Interpolation$8() {
    iaam_Interpolation.call(this);
}
function iaam_Interpolation$8__init_() {
    var var_0 = new iaam_Interpolation$8();
    iaam_Interpolation$8__init_0(var_0);
    return var_0;
}
function iaam_Interpolation$8__init_0($this) {
    iaam_Interpolation__init_0($this);
}
function otja_ReadyStateChangeHandler() {
}
function iaam_Interpolation$7() {
    iaam_Interpolation.call(this);
}
function iaam_Interpolation$7__init_() {
    var var_0 = new iaam_Interpolation$7();
    iaam_Interpolation$7__init_0(var_0);
    return var_0;
}
function iaam_Interpolation$7__init_0($this) {
    iaam_Interpolation__init_0($this);
}
function iaam_Interpolation$6() {
    iaam_Interpolation.call(this);
}
function iaam_Interpolation$6__init_() {
    var var_0 = new iaam_Interpolation$6();
    iaam_Interpolation$6__init_0(var_0);
    return var_0;
}
function iaam_Interpolation$6__init_0($this) {
    iaam_Interpolation__init_0($this);
}
function ji_FilterOutputStream() {
    ji_OutputStream.call(this);
    this.$out0 = null;
}
function ji_FilterOutputStream__init_(var_0) {
    var var_1 = new ji_FilterOutputStream();
    ji_FilterOutputStream__init_0(var_1, var_0);
    return var_1;
}
function ji_FilterOutputStream__init_0($this, $out) {
    ji_OutputStream__init_0($this);
    $this.$out0 = $out;
}
function ji_PrintStream() {
    var a = this; ji_FilterOutputStream.call(a);
    a.$autoFlush = 0;
    a.$errorState = 0;
    a.$sb = null;
    a.$buffer1 = null;
    a.$charset0 = null;
}
function ji_PrintStream__init_(var_0, var_1) {
    var var_2 = new ji_PrintStream();
    ji_PrintStream__init_0(var_2, var_0, var_1);
    return var_2;
}
function ji_PrintStream__init_0($this, $out, $autoFlush) {
    ji_FilterOutputStream__init_0($this, $out);
    $this.$sb = jl_StringBuilder__init_();
    $this.$buffer1 = $rt_createCharArray(32);
    $this.$autoFlush = $autoFlush;
    $this.$charset0 = jnci_UTF8Charset__init_();
}
function ji_PrintStream_write($this, $b, $off, $len) {
    var $$je;
    if (!ji_PrintStream_check($this))
        return;
    a: {
        try {
            $this.$out0.$write($b, $off, $len);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_IOException) {
            } else {
                throw $$e;
            }
        }
        $this.$errorState = 1;
    }
}
function ji_PrintStream_check($this) {
    if ($this.$out0 === null)
        $this.$errorState = 1;
    return $this.$errorState ? 0 : 1;
}
function ji_PrintStream_print($this, $s, $begin, $end) {
    var var$4, $src, $destBytes, $dest, var$8, var$9, $encoder, $overflow;
    var$4 = $s.data;
    $src = jn_CharBuffer_wrap($s, $begin, $end - $begin | 0);
    $destBytes = $rt_createByteArray(jl_Math_max1(16, jl_Math_min1(var$4.length, 1024)));
    $dest = jn_ByteBuffer_wrap($destBytes);
    var$8 = $this.$charset0.$newEncoder();
    jnc_CodingErrorAction_$callClinit();
    var$9 = jnc_CodingErrorAction_REPLACE;
    var$8 = jnc_CharsetEncoder_onMalformedInput(var$8, var$9);
    var$9 = jnc_CodingErrorAction_REPLACE;
    $encoder = jnc_CharsetEncoder_onUnmappableCharacter(var$8, var$9);
    while (true) {
        $overflow = jnc_CharsetEncoder_encode($encoder, $src, $dest, 1).$isOverflow();
        $this.$write($destBytes, 0, jn_Buffer_position($dest));
        jn_ByteBuffer_clear($dest);
        if (!$overflow)
            break;
    }
    while (true) {
        $overflow = jnc_CharsetEncoder_flush($encoder, $dest).$isOverflow();
        $this.$write($destBytes, 0, jn_Buffer_position($dest));
        jn_ByteBuffer_clear($dest);
        if (!$overflow)
            break;
    }
}
function ji_PrintStream_println($this, $s) {
    $this.$sb.$append($s).$append0(10);
    ji_PrintStream_printSB($this);
}
function ji_PrintStream_printSB($this) {
    var $buffer;
    $buffer = $this.$sb.$length() <= $this.$buffer1.data.length ? $this.$buffer1 : $rt_createCharArray($this.$sb.$length());
    $this.$sb.$getChars(0, $this.$sb.$length(), $buffer, 0);
    ji_PrintStream_print($this, $buffer, 0, $this.$sb.$length());
    $this.$sb.$setLength(0);
}
function jur_NegativeLookBehind() {
    jur_AtomicJointSet.call(this);
}
function jur_NegativeLookBehind__init_(var_0, var_1) {
    var var_2 = new jur_NegativeLookBehind();
    jur_NegativeLookBehind__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_NegativeLookBehind__init_0($this, $children, $fSet) {
    jur_AtomicJointSet__init_0($this, $children, $fSet);
}
function jur_NegativeLookBehind_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i, $e, $shift;
    $size = $this.$children1.$size0();
    $matchResult.$setConsumed($this.$groupIndex0, $stringIndex);
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next.$matches($stringIndex, $testString, $matchResult);
        $e = $this.$children1.$get($i);
        $shift = $e.$findBack(0, $stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_NegativeLookBehind_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_NegativeLookBehind_getName($this) {
    return $rt_s(362);
}
function iaa_Core() {
    jl_Object.call(this);
}
var iaa_Core_app = null;
var iaa_Core_graphics = null;
var iaa_Core_audio = null;
var iaa_Core_input = null;
var iaa_Core_files = null;
var iaa_Core_settings = null;
var iaa_Core_keybinds = null;
var iaa_Core_net = null;
var iaa_Core_bundle = null;
var iaa_Core_camera = null;
var iaa_Core_batch = null;
var iaa_Core_scene = null;
var iaa_Core_atlas = null;
var iaa_Core_gl = null;
var iaa_Core_gl20 = null;
var iaa_Core_gl30 = null;
function iaa_Core_$callClinit() {
    iaa_Core_$callClinit = $rt_eraseClinit(iaa_Core);
    iaa_Core__clinit_();
}
function iaa_Core__clinit_() {
    iaa_Core_keybinds = iaa_KeyBinds__init_();
    iaa_Core_bundle = iaau_I18NBundle_createEmptyBundle();
}
function jn_IntBuffer() {
    jn_Buffer.call(this);
}
function jn_IntBuffer__init_(var_0, var_1, var_2) {
    var var_3 = new jn_IntBuffer();
    jn_IntBuffer__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jn_IntBuffer__init_0($this, $capacity, $position, $limit) {
    jn_Buffer__init_0($this, $capacity);
    $this.$position0 = $position;
    $this.$limit1 = $limit;
}
function jn_IntBuffer_clear($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_IntBuffer_flip($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_IntBuffer_position($this, $newPosition) {
    jn_Buffer_position0($this, $newPosition);
    return $this;
}
function jn_IntBuffer_flip0($this) {
    return jn_IntBuffer_flip($this);
}
function jn_IntBuffer_clear0($this) {
    return jn_IntBuffer_clear($this);
}
function jn_IntBuffer_position0($this, var$1) {
    return $this.$position3(var$1);
}
function jn_IntBufferImpl() {
    jn_IntBuffer.call(this);
}
function jn_IntBufferImpl__init_(var_0, var_1, var_2) {
    var var_3 = new jn_IntBufferImpl();
    jn_IntBufferImpl__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jn_IntBufferImpl__init_0($this, $capacity, $position, $limit) {
    jn_IntBuffer__init_0($this, $capacity, $position, $limit);
}
function jn_IntBufferImpl_get($this) {
    var var$1;
    if ($this.$position0 >= $this.$limit1)
        $rt_throw(jn_BufferUnderflowException__init_());
    var$1 = $this.$position0;
    $this.$position0 = var$1 + 1 | 0;
    return $this.$getElement(var$1);
}
function jn_IntBufferImpl_put($this, $b) {
    var var$2;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($this.$position0 >= $this.$limit1)
        $rt_throw(jn_BufferOverflowException__init_());
    var$2 = $this.$position0;
    $this.$position0 = var$2 + 1 | 0;
    $this.$putElement(var$2, $b);
    return $this;
}
function jn_IntBufferImpl_get0($this, $index) {
    if ($index >= 0 && $index < $this.$limit1)
        return $this.$getElement($index);
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(363)).$append3($index).$append($rt_s(55)).$append3($this.$limit1).$append($rt_s(364)).$toString()));
}
function jn_IntBufferImpl_put0($this, $index, $b) {
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($index >= 0 && $index < $this.$limit1) {
        $this.$putElement($index, $b);
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(363)).$append3($index).$append($rt_s(55)).$append3($this.$limit1).$append($rt_s(364)).$toString()));
}
function jn_IntBufferImpl_isReadOnly($this) {
    return $this.$readOnly();
}
function jn_IntBufferOverByteBuffer() {
    var a = this; jn_IntBufferImpl.call(a);
    a.$byteByffer = null;
    a.$readOnly0 = 0;
    a.$start0 = 0;
}
function jn_IntBufferOverByteBuffer__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_IntBufferOverByteBuffer();
    jn_IntBufferOverByteBuffer__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_IntBufferOverByteBuffer__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_IntBufferImpl__init_0($this, $capacity, $position, $limit);
    $this.$start0 = $start;
    $this.$byteByffer = $byteBuffer;
    $this.$readOnly0 = $readOnly;
}
function jn_IntBufferOverByteBuffer_readOnly($this) {
    return $this.$readOnly0;
}
function jn_IntBufferOverByteBufferLittleEndian() {
    jn_IntBufferOverByteBuffer.call(this);
}
function jn_IntBufferOverByteBufferLittleEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_IntBufferOverByteBufferLittleEndian();
    jn_IntBufferOverByteBufferLittleEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_IntBufferOverByteBufferLittleEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_IntBufferOverByteBuffer__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_IntBufferOverByteBufferLittleEndian_getElement($this, $index) {
    var var$2, var$3, var$4;
    var$2 = $this.$byteByffer.$array.data;
    var$3 = $this.$start0;
    var$4 = $index * 4 | 0;
    return var$2[var$3 + var$4 | 0] & 255 | ($this.$byteByffer.$array.data[($this.$start0 + var$4 | 0) + 1 | 0] & 255) << 8 | ($this.$byteByffer.$array.data[($this.$start0 + var$4 | 0) + 2 | 0] & 255) << 16 | ($this.$byteByffer.$array.data[($this.$start0 + var$4 | 0) + 3 | 0] & 255) << 24;
}
function jn_IntBufferOverByteBufferLittleEndian_putElement($this, $index, $value) {
    var var$3, var$4, var$5;
    var$3 = $this.$byteByffer.$array.data;
    var$4 = $this.$start0;
    var$5 = $index * 4 | 0;
    var$3[var$4 + var$5 | 0] = $value << 24 >> 24;
    $this.$byteByffer.$array.data[($this.$start0 + var$5 | 0) + 1 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer.$array.data[($this.$start0 + var$5 | 0) + 2 | 0] = $value >> 16 << 24 >> 24;
    $this.$byteByffer.$array.data[($this.$start0 + var$5 | 0) + 3 | 0] = $value >> 24 << 24 >> 24;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function iaagg_NinePatch() {
    var a = this; jl_Object.call(a);
    a.$color3 = null;
    a.$texture = null;
    a.$bottomLeft = 0;
    a.$bottomCenter = 0;
    a.$bottomRight = 0;
    a.$middleLeft = 0;
    a.$middleCenter = 0;
    a.$middleRight = 0;
    a.$topLeft = 0;
    a.$topCenter = 0;
    a.$topRight = 0;
    a.$leftWidth = 0.0;
    a.$rightWidth = 0.0;
    a.$middleWidth = 0.0;
    a.$middleHeight = 0.0;
    a.$topHeight = 0.0;
    a.$bottomHeight = 0.0;
    a.$vertices = null;
    a.$idx = 0;
    a.$padLeft = 0.0;
    a.$padRight = 0.0;
    a.$padTop = 0.0;
    a.$padBottom = 0.0;
}
var iaagg_NinePatch_tmpDrawColor = null;
function iaagg_NinePatch_$callClinit() {
    iaagg_NinePatch_$callClinit = $rt_eraseClinit(iaagg_NinePatch);
    iaagg_NinePatch__clinit_();
}
function iaagg_NinePatch__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new iaagg_NinePatch();
    iaagg_NinePatch__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function iaagg_NinePatch__init_0($this, $region, $left, $right, $top, $bottom) {
    var var$6, $middleWidth, $middleHeight, $patches, var$10;
    iaagg_NinePatch_$callClinit();
    jl_Object__init_0($this);
    var$6 = new iaag_Color;
    iaag_Color_$callClinit();
    iaag_Color__init_8(var$6, iaag_Color_white);
    $this.$color3 = var$6;
    $this.$bottomLeft = (-1);
    $this.$bottomCenter = (-1);
    $this.$bottomRight = (-1);
    $this.$middleLeft = (-1);
    $this.$middleCenter = (-1);
    $this.$middleRight = (-1);
    $this.$topLeft = (-1);
    $this.$topCenter = (-1);
    $this.$topRight = (-1);
    $this.$vertices = $rt_createFloatArray(216);
    $this.$padLeft = (-1.0);
    $this.$padRight = (-1.0);
    $this.$padTop = (-1.0);
    $this.$padBottom = (-1.0);
    if ($region === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(365)));
    $middleWidth = ($region.$getWidth0() - $left | 0) - $right | 0;
    $middleHeight = ($region.$getHeight0() - $top | 0) - $bottom | 0;
    $patches = $rt_createArray(iaagg_TextureRegion, 9);
    if ($top > 0) {
        if ($left > 0)
            $patches.data[0] = iaagg_TextureRegion__init_($region, 0, 0, $left, $top);
        if ($middleWidth > 0)
            $patches.data[1] = iaagg_TextureRegion__init_($region, $left, 0, $middleWidth, $top);
        if ($right > 0)
            $patches.data[2] = iaagg_TextureRegion__init_($region, $left + $middleWidth | 0, 0, $right, $top);
    }
    if ($middleHeight > 0) {
        if ($left > 0)
            $patches.data[3] = iaagg_TextureRegion__init_($region, 0, $top, $left, $middleHeight);
        if ($middleWidth > 0)
            $patches.data[4] = iaagg_TextureRegion__init_($region, $left, $top, $middleWidth, $middleHeight);
        if ($right > 0)
            $patches.data[5] = iaagg_TextureRegion__init_($region, $left + $middleWidth | 0, $top, $right, $middleHeight);
    }
    if ($bottom > 0) {
        if ($left > 0)
            $patches.data[6] = iaagg_TextureRegion__init_($region, 0, $top + $middleHeight | 0, $left, $bottom);
        if ($middleWidth > 0)
            $patches.data[7] = iaagg_TextureRegion__init_($region, $left, $top + $middleHeight | 0, $middleWidth, $bottom);
        if ($right > 0)
            $patches.data[8] = iaagg_TextureRegion__init_($region, $left + $middleWidth | 0, $top + $middleHeight | 0, $right, $bottom);
    }
    if (!$left && !$middleWidth) {
        var$10 = $patches.data;
        var$10[1] = var$10[2];
        var$10[4] = var$10[5];
        var$10[7] = var$10[8];
        var$10[2] = null;
        var$10[5] = null;
        var$10[8] = null;
    }
    if (!$top && !$middleHeight) {
        var$10 = $patches.data;
        var$10[3] = var$10[6];
        var$10[4] = var$10[7];
        var$10[5] = var$10[8];
        var$10[6] = null;
        var$10[7] = null;
        var$10[8] = null;
    }
    iaagg_NinePatch_load($this, $patches);
}
function iaagg_NinePatch_load($this, $patches) {
    var var$2, $color, $newVertices;
    var$2 = $patches.data;
    iaag_Color_$callClinit();
    $color = iaag_Color_whiteFloatBits;
    if (var$2[6] !== null) {
        $this.$bottomLeft = iaagg_NinePatch_add($this, var$2[6], $color, 0, 0);
        $this.$leftWidth = var$2[6].$getWidth0();
        $this.$bottomHeight = var$2[6].$getHeight0();
    }
    if (var$2[7] !== null) {
        $this.$bottomCenter = iaagg_NinePatch_add($this, var$2[7], $color, 1, 0);
        $this.$middleWidth = jl_Math_max($this.$middleWidth, var$2[7].$getWidth0());
        $this.$bottomHeight = jl_Math_max($this.$bottomHeight, var$2[7].$getHeight0());
    }
    if (var$2[8] !== null) {
        $this.$bottomRight = iaagg_NinePatch_add($this, var$2[8], $color, 0, 0);
        $this.$rightWidth = jl_Math_max($this.$rightWidth, var$2[8].$getWidth0());
        $this.$bottomHeight = jl_Math_max($this.$bottomHeight, var$2[8].$getHeight0());
    }
    if (var$2[3] !== null) {
        $this.$middleLeft = iaagg_NinePatch_add($this, var$2[3], $color, 0, 1);
        $this.$leftWidth = jl_Math_max($this.$leftWidth, var$2[3].$getWidth0());
        $this.$middleHeight = jl_Math_max($this.$middleHeight, var$2[3].$getHeight0());
    }
    if (var$2[4] !== null) {
        $this.$middleCenter = iaagg_NinePatch_add($this, var$2[4], $color, 1, 1);
        $this.$middleWidth = jl_Math_max($this.$middleWidth, var$2[4].$getWidth0());
        $this.$middleHeight = jl_Math_max($this.$middleHeight, var$2[4].$getHeight0());
    }
    if (var$2[5] !== null) {
        $this.$middleRight = iaagg_NinePatch_add($this, var$2[5], $color, 0, 1);
        $this.$rightWidth = jl_Math_max($this.$rightWidth, var$2[5].$getWidth0());
        $this.$middleHeight = jl_Math_max($this.$middleHeight, var$2[5].$getHeight0());
    }
    if (var$2[0] !== null) {
        $this.$topLeft = iaagg_NinePatch_add($this, var$2[0], $color, 0, 0);
        $this.$leftWidth = jl_Math_max($this.$leftWidth, var$2[0].$getWidth0());
        $this.$topHeight = jl_Math_max($this.$topHeight, var$2[0].$getHeight0());
    }
    if (var$2[1] !== null) {
        $this.$topCenter = iaagg_NinePatch_add($this, var$2[1], $color, 1, 0);
        $this.$middleWidth = jl_Math_max($this.$middleWidth, var$2[1].$getWidth0());
        $this.$topHeight = jl_Math_max($this.$topHeight, var$2[1].$getHeight0());
    }
    if (var$2[2] !== null) {
        $this.$topRight = iaagg_NinePatch_add($this, var$2[2], $color, 0, 0);
        $this.$rightWidth = jl_Math_max($this.$rightWidth, var$2[2].$getWidth0());
        $this.$topHeight = jl_Math_max($this.$topHeight, var$2[2].$getHeight0());
    }
    if ($this.$idx < $this.$vertices.data.length) {
        $newVertices = $rt_createFloatArray($this.$idx);
        jl_System_arraycopy($this.$vertices, 0, $newVertices, 0, $this.$idx);
        $this.$vertices = $newVertices;
    }
}
function iaagg_NinePatch_add($this, $region, $color, $isStretchW, $isStretchH) {
    var $u, $v, $u2, $v2, var$9, $halfTexelWidth, $halfTexelHeight, $vertices, var$13, $mixColor;
    if ($this.$texture === null)
        $this.$texture = $region.$getTexture();
    else if ($this.$texture !== $region.$getTexture())
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(366)));
    $u = $region.$u;
    $v = $region.$v2;
    $u2 = $region.$u2;
    $v2 = $region.$v;
    var$9 = $this.$texture.$getMagFilter();
    iaag_Texture$TextureFilter_$callClinit();
    if (!(var$9 !== iaag_Texture$TextureFilter_Linear && $this.$texture.$getMinFilter() !== iaag_Texture$TextureFilter_Linear)) {
        if ($isStretchW) {
            $halfTexelWidth = 0.5 / $this.$texture.$getWidth0();
            $u = $u + $halfTexelWidth;
            $u2 = $u2 - $halfTexelWidth;
        }
        if ($isStretchH) {
            $halfTexelHeight = 0.5 / $this.$texture.$getHeight0();
            $v = $v - $halfTexelHeight;
            $v2 = $v2 + $halfTexelHeight;
        }
    }
    $vertices = $this.$vertices;
    var$13 = $vertices.data;
    iaag_Color_$callClinit();
    $mixColor = iaag_Color_clearFloatBits;
    var$13[$this.$idx + 2 | 0] = $color;
    var$13[$this.$idx + 3 | 0] = $u;
    var$13[$this.$idx + 4 | 0] = $v;
    var$13[$this.$idx + 5 | 0] = $mixColor;
    var$13[$this.$idx + 8 | 0] = $color;
    var$13[$this.$idx + 9 | 0] = $u;
    var$13[$this.$idx + 10 | 0] = $v2;
    var$13[$this.$idx + 11 | 0] = $mixColor;
    var$13[$this.$idx + 14 | 0] = $color;
    var$13[$this.$idx + 15 | 0] = $u2;
    var$13[$this.$idx + 16 | 0] = $v2;
    var$13[$this.$idx + 17 | 0] = $mixColor;
    var$13[$this.$idx + 20 | 0] = $color;
    var$13[$this.$idx + 21 | 0] = $u2;
    var$13[$this.$idx + 22 | 0] = $v;
    var$13[$this.$idx + 23 | 0] = $mixColor;
    $this.$idx = $this.$idx + 24 | 0;
    return $this.$idx - 24 | 0;
}
function iaagg_NinePatch_set($this, $idx, $x, $y, $width, $height, $color) {
    var $fx2, $fy2, $vertices, var$10, $mixColor;
    $fx2 = $x + $width;
    $fy2 = $y + $height;
    $vertices = $this.$vertices;
    var$10 = $vertices.data;
    iaag_Color_$callClinit();
    $mixColor = iaag_Color_clearFloatBits;
    var$10[$idx] = $x;
    var$10[$idx + 1 | 0] = $y;
    var$10[$idx + 2 | 0] = $color;
    var$10[$idx + 5 | 0] = $mixColor;
    var$10[$idx + 6 | 0] = $x;
    var$10[$idx + 7 | 0] = $fy2;
    var$10[$idx + 8 | 0] = $color;
    var$10[$idx + 11 | 0] = $mixColor;
    var$10[$idx + 12 | 0] = $fx2;
    var$10[$idx + 13 | 0] = $fy2;
    var$10[$idx + 14 | 0] = $color;
    var$10[$idx + 17 | 0] = $mixColor;
    var$10[$idx + 18 | 0] = $fx2;
    var$10[$idx + 19 | 0] = $y;
    var$10[$idx + 20 | 0] = $color;
    var$10[$idx + 23 | 0] = $mixColor;
}
function iaagg_NinePatch_prepareVertices($this, $x, $y, $width, $height) {
    var $centerColumnX, var$6, $rightColumnX, $middleRowY, var$9, $topRowY, $c;
    $centerColumnX = $x + $this.$leftWidth;
    var$6 = $x + $width;
    $rightColumnX = var$6 - $this.$rightWidth;
    $middleRowY = $y + $this.$bottomHeight;
    var$9 = $y + $height;
    $topRowY = var$9 - $this.$topHeight;
    $c = iaagg_NinePatch_tmpDrawColor.$set($this.$color3).$mul(iaagg_Draw_getColor()).$toFloatBits();
    if ($this.$bottomLeft != (-1))
        iaagg_NinePatch_set($this, $this.$bottomLeft, $x, $y, $centerColumnX - $x, $middleRowY - $y, $c);
    if ($this.$bottomCenter != (-1))
        iaagg_NinePatch_set($this, $this.$bottomCenter, $centerColumnX, $y, $rightColumnX - $centerColumnX, $middleRowY - $y, $c);
    if ($this.$bottomRight != (-1))
        iaagg_NinePatch_set($this, $this.$bottomRight, $rightColumnX, $y, var$6 - $rightColumnX, $middleRowY - $y, $c);
    if ($this.$middleLeft != (-1))
        iaagg_NinePatch_set($this, $this.$middleLeft, $x, $middleRowY, $centerColumnX - $x, $topRowY - $middleRowY, $c);
    if ($this.$middleCenter != (-1))
        iaagg_NinePatch_set($this, $this.$middleCenter, $centerColumnX, $middleRowY, $rightColumnX - $centerColumnX, $topRowY - $middleRowY, $c);
    if ($this.$middleRight != (-1))
        iaagg_NinePatch_set($this, $this.$middleRight, $rightColumnX, $middleRowY, var$6 - $rightColumnX, $topRowY - $middleRowY, $c);
    if ($this.$topLeft != (-1))
        iaagg_NinePatch_set($this, $this.$topLeft, $x, $topRowY, $centerColumnX - $x, var$9 - $topRowY, $c);
    if ($this.$topCenter != (-1))
        iaagg_NinePatch_set($this, $this.$topCenter, $centerColumnX, $topRowY, $rightColumnX - $centerColumnX, var$9 - $topRowY, $c);
    if ($this.$topRight != (-1))
        iaagg_NinePatch_set($this, $this.$topRight, $rightColumnX, $topRowY, var$6 - $rightColumnX, var$9 - $topRowY, $c);
}
function iaagg_NinePatch_draw($this, $x, $y, $originX, $originY, $width, $height, $scaleX, $scaleY, $rotation) {
    var $worldOriginX, $worldOriginY, $n, $vertices, $i, var$15, $vx, var$17, $vy, $cos, $sin;
    a: {
        iaagg_NinePatch_prepareVertices($this, $x, $y, $width, $height);
        $worldOriginX = $x + $originX;
        $worldOriginY = $y + $originY;
        $n = $this.$idx;
        $vertices = $this.$vertices;
        if ($rotation !== 0.0) {
            $i = 0;
            while ($i < $n) {
                var$15 = $vertices.data;
                $vx = (var$15[$i] - $worldOriginX) * $scaleX;
                var$17 = $i + 1 | 0;
                $vy = (var$15[var$17] - $worldOriginY) * $scaleY;
                $cos = iaam_Mathf_cosDeg($rotation);
                $sin = iaam_Mathf_sinDeg($rotation);
                var$15[$i] = $cos * $vx - $sin * $vy + $worldOriginX;
                var$15[var$17] = $sin * $vx + $cos * $vy + $worldOriginY;
                $i = $i + 6 | 0;
            }
        } else if (!($scaleX === 1.0 && $scaleY === 1.0)) {
            $i = 0;
            while (true) {
                if ($i >= $n)
                    break a;
                var$15 = $vertices.data;
                var$15[$i] = (var$15[$i] - $worldOriginX) * $scaleX + $worldOriginX;
                var$17 = $i + 1 | 0;
                var$15[var$17] = (var$15[var$17] - $worldOriginY) * $scaleY + $worldOriginY;
                $i = $i + 6 | 0;
            }
        }
    }
    iaagg_Draw_vert($this.$texture, $vertices, 0, $n);
}
function iaagg_NinePatch_getLeftWidth($this) {
    return $this.$leftWidth;
}
function iaagg_NinePatch_getRightWidth($this) {
    return $this.$rightWidth;
}
function iaagg_NinePatch_getTopHeight($this) {
    return $this.$topHeight;
}
function iaagg_NinePatch_getBottomHeight($this) {
    return $this.$bottomHeight;
}
function iaagg_NinePatch_getTotalWidth($this) {
    return $this.$leftWidth + $this.$middleWidth + $this.$rightWidth;
}
function iaagg_NinePatch_getTotalHeight($this) {
    return $this.$topHeight + $this.$middleHeight + $this.$bottomHeight;
}
function iaagg_NinePatch_setPadding($this, $left, $right, $top, $bottom) {
    $this.$padLeft = $left;
    $this.$padRight = $right;
    $this.$padTop = $top;
    $this.$padBottom = $bottom;
}
function iaagg_NinePatch_getPadLeft($this) {
    if ($this.$padLeft !== (-1.0))
        return $this.$padLeft;
    return $this.$getLeftWidth();
}
function iaagg_NinePatch_getPadRight($this) {
    if ($this.$padRight !== (-1.0))
        return $this.$padRight;
    return $this.$getRightWidth();
}
function iaagg_NinePatch_getPadTop($this) {
    if ($this.$padTop !== (-1.0))
        return $this.$padTop;
    return $this.$getTopHeight();
}
function iaagg_NinePatch_getPadBottom($this) {
    if ($this.$padBottom !== (-1.0))
        return $this.$padBottom;
    return $this.$getBottomHeight();
}
function iaagg_NinePatch__clinit_() {
    iaagg_NinePatch_tmpDrawColor = iaag_Color__init_0();
}
function iaabt_TeaFileLoader$TeaVMFilePreloadListener() {
}
function jur_LeafQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$leaf = null;
}
function jur_LeafQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_LeafQuantifierSet();
    jur_LeafQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_QuantifierSet__init_0($this, $innerSet, $next, $type);
    $this.$leaf = $innerSet;
}
function jur_LeafQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $i, var$5;
    $i = 0;
    a: {
        while (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$getRightBound()) {
            var$5 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$5 <= 0)
                break a;
            $stringIndex = $stringIndex + var$5 | 0;
            $i = $i + 1 | 0;
        }
    }
    while (true) {
        if ($i < 0)
            return (-1);
        var$5 = $this.$next.$matches($stringIndex, $testString, $matchResult);
        if (var$5 >= 0)
            break;
        $stringIndex = $stringIndex - $this.$leaf.$charCount0() | 0;
        $i = $i + (-1) | 0;
    }
    return var$5;
}
function jur_LeafQuantifierSet_getName($this) {
    return $rt_s(367);
}
function jur_UnifiedQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
}
function jur_UnifiedQuantifierSet__init_(var_0) {
    var var_1 = new jur_UnifiedQuantifierSet();
    jur_UnifiedQuantifierSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UnifiedQuantifierSet__init_0($this, $quant) {
    jur_LeafQuantifierSet__init_0($this, $quant.$getInnerSet(), $quant.$getNext(), $quant.$getType());
    $this.$innerSet.$setNext($this);
}
function jur_UnifiedQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    while (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$getRightBound()) {
        var$4 = $this.$leaf;
        if (var$4.$accepts($stringIndex, $testString) <= 0)
            break;
        $stringIndex = $stringIndex + $this.$leaf.$charCount0() | 0;
    }
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_UnifiedQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
    var $startSearch, $newSearch, $newSearch_0;
    $startSearch = $this.$next.$find0($stringIndex, $testString, $matchResult);
    if ($startSearch < 0)
        return (-1);
    $newSearch = $startSearch - $this.$leaf.$charCount0() | 0;
    while ($newSearch >= $stringIndex && $this.$leaf.$accepts($newSearch, $testString) > 0) {
        $newSearch_0 = $newSearch - $this.$leaf.$charCount0() | 0;
        $startSearch = $newSearch;
        $newSearch = $newSearch_0;
    }
    return $startSearch;
}
function jl_Class() {
    var a = this; jl_Object.call(a);
    a.$name7 = null;
    a.$simpleName = null;
    a.$platformClass = null;
    a.$declaredConstructors = null;
    a.$declaredMethods = null;
}
var jl_Class_reflectionInitialized = 0;
function jl_Class__init_(var_0) {
    var var_1 = new jl_Class();
    jl_Class__init_0(var_1, var_0);
    return var_1;
}
function jl_Class__init_0($this, $platformClass) {
    var var$2;
    jl_Object__init_0($this);
    $this.$platformClass = $platformClass;
    var$2 = $this;
    $platformClass.classObject = var$2;
}
function jl_Class_getClass($cls) {
    var $result;
    if ($cls === null)
        return null;
    $result = $cls.classObject;
    if ($result === null)
        $result = jl_Class__init_($cls);
    return $result;
}
function jl_Class_getPlatformClass($this) {
    return $this.$platformClass;
}
function jl_Class_isInstance($this, $obj) {
    return otp_Platform_isInstance($obj, $this.$platformClass);
}
function jl_Class_isAssignableFrom($this, $obj) {
    return otp_Platform_isAssignable($obj.$getPlatformClass(), $this.$platformClass);
}
function jl_Class_getName($this) {
    if ($this.$name7 === null)
        $this.$name7 = otp_Platform_getName($this.$platformClass);
    return $this.$name7;
}
function jl_Class_getSimpleName($this) {
    var $name, var$2, $lastDollar, $lastDot;
    $name = jl_Class_getSimpleNameCache($this);
    if ($name === null) {
        if ($this.$isArray()) {
            var$2 = jl_StringBuilder__init_().$append($this.$getComponentType().$getSimpleName()).$append($rt_s(368)).$toString();
            jl_Class_setSimpleNameCache($this, var$2);
            return var$2;
        }
        $name = otp_Platform_getName($this.$platformClass);
        $lastDollar = $name.$lastIndexOf(36);
        if ($lastDollar == (-1)) {
            $lastDot = $name.$lastIndexOf(46);
            if ($lastDot != (-1))
                $name = $name.$substring($lastDot + 1 | 0);
        } else {
            $name = $name.$substring($lastDollar + 1 | 0);
            if ($name.$charAt(0) >= 48 && $name.$charAt(0) <= 57)
                $name = $rt_s(58);
        }
        jl_Class_setSimpleNameCache($this, $name);
    }
    return $name;
}
function jl_Class_getSimpleNameCache($this) {
    return $this.$simpleName;
}
function jl_Class_setSimpleNameCache($this, $value) {
    $this.$simpleName = $value;
}
function jl_Class_isPrimitive($this) {
    return otp_Platform_isPrimitive($this.$platformClass);
}
function jl_Class_isArray($this) {
    return otp_Platform_getArrayItem($this.$platformClass) === null ? 0 : 1;
}
function jl_Class_isEnum($this) {
    return otp_Platform_isEnum($this.$platformClass);
}
function jl_Class_isInterface($this) {
    return !($this.$platformClass.$meta.flags & 2) ? 0 : 1;
}
function jl_Class_getComponentType($this) {
    return jl_Class_getClass(otp_Platform_getArrayItem($this.$platformClass));
}
function jl_Class_initReflection() {
    if (!jl_Class_reflectionInitialized) {
        jl_Class_reflectionInitialized = 1;
        jl_Class_createMetadata();
    }
}
function jl_Class_createMetadata() {
    iaar_GifRecorder.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Fi, iaaf_Fi],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "doInput",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "update",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setSpeedMultiplier",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setGUIDisabled",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_booleancls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "isSaving",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "isOpen",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "open",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "close",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "isRecording",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "startRecording",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getTime",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "finishRecording",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "clearFrames",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setExportDirectory",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Fi],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setResizeKey",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaai_KeyCode],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setOpenKey",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaai_KeyCode],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setRecordKey",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaai_KeyCode],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setFPS",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setBounds",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setBounds",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaamg_Rectangle],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "writeGIF",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [iaaf_Fi],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "compileGIF",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [iaac_Array, $rt_intcls(), $rt_intcls(), iaaf_Fi],
            returnType : ji_File,
            callable : null
        }, {
            name : "toImage",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_arraycls($rt_bytecls()), $rt_intcls(), $rt_intcls()],
            returnType : jai_BufferedImage,
            callable : null
        }, {
            name : "lambda$writeGIF$0",
            modifiers : 32,
            accessLevel : 1,
            parameterTypes : [$rt_intcls(), $rt_intcls(), iaaf_Fi],
            returnType : $rt_voidcls(),
            callable : null
        }];
    jl_Object.$meta.methods = [
        {
            name : "monitorEnterSync",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "monitorExitSync",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "monitorEnter",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "monitorEnter",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [jl_Object, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "createMonitor",
            modifiers : 512,
            accessLevel : 1,
            parameterTypes : [jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "monitorEnterWait",
            modifiers : 768,
            accessLevel : 0,
            parameterTypes : [jl_Object, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "monitorEnterWait",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [jl_Object, $rt_intcls(), oti_AsyncCallback],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "monitorExit",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "monitorExit",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [jl_Object, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "waitForOtherThreads",
            modifiers : 512,
            accessLevel : 1,
            parameterTypes : [jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "isEmptyMonitor",
            modifiers : 4,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "deleteMonitor",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "holdsLock",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "fakeInit",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getClass",
            modifiers : 4,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_Class,
            callable : null
        }, {
            name : "hashCode",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "equals",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "identity",
            modifiers : 4,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "hashCodeLowLevel",
            modifiers : 768,
            accessLevel : 1,
            parameterTypes : [jl_Object],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "hashCodeLowLevelImpl",
            modifiers : 512,
            accessLevel : 1,
            parameterTypes : [otr_RuntimeObject],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "setHashCodeLowLevel",
            modifiers : 768,
            accessLevel : 1,
            parameterTypes : [jl_Object, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setHashCodeLowLevelImpl",
            modifiers : 512,
            accessLevel : 1,
            parameterTypes : [otr_RuntimeObject, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "identityLowLevel",
            modifiers : 512,
            accessLevel : 1,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "identityOrMonitor",
            modifiers : 256,
            accessLevel : 1,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "identityOrMonitorLowLevel",
            modifiers : 512,
            accessLevel : 1,
            parameterTypes : [otr_RuntimeObject],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "setIdentity",
            modifiers : 256,
            accessLevel : 0,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setIdentityLowLevel",
            modifiers : 512,
            accessLevel : 1,
            parameterTypes : [otr_RuntimeObject, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "clone",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_Object,
            callable : null
        }, {
            name : "cloneLowLevel",
            modifiers : 512,
            accessLevel : 1,
            parameterTypes : [otr_RuntimeObject],
            returnType : otr_RuntimeObject,
            callable : null
        }, {
            name : "notify",
            modifiers : 4,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "notifyAll",
            modifiers : 4,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "wait",
            modifiers : 4,
            accessLevel : 3,
            parameterTypes : [$rt_longcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "wait",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_longcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "waitImpl",
            modifiers : 256,
            accessLevel : 1,
            parameterTypes : [$rt_longcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "waitImpl",
            modifiers : 4,
            accessLevel : 3,
            parameterTypes : [$rt_longcls(), $rt_intcls(), oti_AsyncCallback],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "wait",
            modifiers : 4,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "finalize",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "lambda$monitorExit$2",
            modifiers : 544,
            accessLevel : 1,
            parameterTypes : [jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "lambda$monitorExit$1",
            modifiers : 544,
            accessLevel : 1,
            parameterTypes : [jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "lambda$monitorEnterWait$0",
            modifiers : 544,
            accessLevel : 1,
            parameterTypes : [jl_Thread, jl_Object, $rt_intcls(), oti_AsyncCallback],
            returnType : $rt_voidcls(),
            callable : null
        }];
    jl_Enum.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [jl_String, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "name",
            modifiers : 4,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "ordinal",
            modifiers : 4,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "equals",
            modifiers : 4,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "hashCode",
            modifiers : 4,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "clone",
            modifiers : 4,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_Object,
            callable : null
        }, {
            name : "getDeclaringClass",
            modifiers : 4,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_Class,
            callable : null
        }, {
            name : "compareTo",
            modifiers : 4,
            accessLevel : 3,
            parameterTypes : [jl_Enum],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "valueOf",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [jl_Class, jl_String],
            returnType : jl_Enum,
            callable : null
        }, {
            name : "compareTo",
            modifiers : 96,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_intcls(),
            callable : null
        }];
    iaass_Style.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }];
    iaase_SceneEvent.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "handle",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "cancel",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "stop",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }];
    ie_Entity.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "update",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "removed",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "added",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "draw",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "drawShadow",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "targetGroup",
            modifiers : 1,
            accessLevel : 3,
            parameterTypes : [],
            returnType : ie_EntityGroup,
            callable : null
        }, {
            name : "drawSize",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "add",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "remove",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "isAdded",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "set",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getX",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "getY",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }];
    iaagg_BitmapFont$Glyph.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getKerning",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_charcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "setKerning",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }];
    jl_String.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_charcls())],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_charcls()), $rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_bytecls()), $rt_intcls(), $rt_intcls(), jl_String],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_bytecls()), $rt_intcls(), $rt_intcls(), jnc_Charset],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_bytecls()), $rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_bytecls())],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_bytecls()), jl_String],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_bytecls()), jnc_Charset],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_intcls()), $rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "initWithBytes",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_arraycls($rt_bytecls()), $rt_intcls(), $rt_intcls(), jnc_Charset],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_StringBuilder],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "charAt",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_charcls(),
            callable : null
        }, {
            name : "codePointAt",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "codePointBefore",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "codePointCount",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "offsetByCodePoints",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "length",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "isEmpty",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "getChars",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls(), $rt_arraycls($rt_charcls()), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "contentEquals",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_StringBuffer],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "contentEquals",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_CharSequence],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "compareTo",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "compareToIgnoreCase",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "startsWith",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String, $rt_intcls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "startsWith",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "regionMatches",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_booleancls(), $rt_intcls(), jl_String, $rt_intcls(), $rt_intcls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "regionMatches",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), jl_String, $rt_intcls(), $rt_intcls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "endsWith",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "indexOf",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "indexOf",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "lastIndexOf",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "lastIndexOf",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "indexOf",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String, $rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "indexOf",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "lastIndexOf",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String, $rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "lastIndexOf",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "substring",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : jl_String,
            callable : null
        }, {
            name : "substring",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : jl_String,
            callable : null
        }, {
            name : "subSequence",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : jl_CharSequence,
            callable : null
        }, {
            name : "concat",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : jl_String,
            callable : null
        }, {
            name : "replace",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_charcls(), $rt_charcls()],
            returnType : jl_String,
            callable : null
        }, {
            name : "contains",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_CharSequence],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "replace",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_CharSequence, jl_CharSequence],
            returnType : jl_String,
            callable : null
        }, {
            name : "trim",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "toCharArray",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_arraycls($rt_charcls()),
            callable : null
        }, {
            name : "valueOf",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : jl_String,
            callable : null
        }, {
            name : "valueOf",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_charcls())],
            returnType : jl_String,
            callable : null
        }, {
            name : "valueOf",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_charcls()), $rt_intcls(), $rt_intcls()],
            returnType : jl_String,
            callable : null
        }, {
            name : "copyValueOf",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_charcls())],
            returnType : jl_String,
            callable : null
        }, {
            name : "copyValueOf",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_charcls()), $rt_intcls(), $rt_intcls()],
            returnType : jl_String,
            callable : null
        }, {
            name : "valueOf",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_booleancls()],
            returnType : jl_String,
            callable : null
        }, {
            name : "valueOf",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_charcls()],
            returnType : jl_String,
            callable : null
        }, {
            name : "valueOf",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : jl_String,
            callable : null
        }, {
            name : "valueOf",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_longcls()],
            returnType : jl_String,
            callable : null
        }, {
            name : "valueOf",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : jl_String,
            callable : null
        }, {
            name : "valueOf",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_doublecls()],
            returnType : jl_String,
            callable : null
        }, {
            name : "equals",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "equalsIgnoreCase",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "getBytes",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : $rt_arraycls($rt_bytecls()),
            callable : null
        }, {
            name : "getBytes",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_arraycls($rt_bytecls()),
            callable : null
        }, {
            name : "getBytes",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jnc_Charset],
            returnType : $rt_arraycls($rt_bytecls()),
            callable : null
        }, {
            name : "hashCode",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "toLowerCase",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "toLowerCase",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [ju_Locale],
            returnType : jl_String,
            callable : null
        }, {
            name : "toUpperCase",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "toUpperCase",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [ju_Locale],
            returnType : jl_String,
            callable : null
        }, {
            name : "intern",
            modifiers : 256,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "matches",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "split",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : $rt_arraycls(jl_String),
            callable : null
        }, {
            name : "split",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String, $rt_intcls()],
            returnType : $rt_arraycls(jl_String),
            callable : null
        }, {
            name : "replaceAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String, jl_String],
            returnType : jl_String,
            callable : null
        }, {
            name : "replaceFirst",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String, jl_String],
            returnType : jl_String,
            callable : null
        }, {
            name : "format",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [jl_String, $rt_arraycls(jl_Object)],
            returnType : jl_String,
            callable : null
        }, {
            name : "format",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [ju_Locale, jl_String, $rt_arraycls(jl_Object)],
            returnType : jl_String,
            callable : null
        }, {
            name : "join",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [jl_CharSequence, $rt_arraycls(jl_CharSequence)],
            returnType : jl_String,
            callable : null
        }, {
            name : "join",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [jl_CharSequence, jl_Iterable],
            returnType : jl_String,
            callable : null
        }, {
            name : "compareTo",
            modifiers : 96,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "lambda$static$0",
            modifiers : 544,
            accessLevel : 1,
            parameterTypes : [jl_String, jl_String],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }];
    iaac_Array.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_booleancls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_booleancls(), $rt_intcls(), jl_Class],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Class],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_Array],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls(jl_Object)],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_booleancls(), $rt_arraycls(jl_Object), $rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "of",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [jl_Class],
            returnType : iaac_Array,
            callable : null
        }, {
            name : "of",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_booleancls(), $rt_intcls(), jl_Class],
            returnType : iaac_Array,
            callable : null
        }, {
            name : "withArrays",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls(jl_Object)],
            returnType : iaac_Array,
            callable : null
        }, {
            name : "with",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls(jl_Object)],
            returnType : iaac_Array,
            callable : null
        }, {
            name : "with",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [jl_Iterable],
            returnType : iaac_Array,
            callable : null
        }, {
            name : "select",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls(jl_Object), iaaf_Boolf],
            returnType : iaac_Array,
            callable : null
        }, {
            name : "copy",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaac_Array,
            callable : null
        }, {
            name : "sumf",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Floatf],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "sum",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Intf],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "each",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Boolf, iaaf_Cons],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "each",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Cons],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "replace",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Func],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "flatten",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaac_Array,
            callable : null
        }, {
            name : "map",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Func],
            returnType : iaac_Array,
            callable : null
        }, {
            name : "mapInt",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Intf],
            returnType : iaac_IntArray,
            callable : null
        }, {
            name : "reduce",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, iaaf_Func2],
            returnType : jl_Object,
            callable : null
        }, {
            name : "contains",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Boolf],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "min",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [ju_Comparator],
            returnType : jl_Object,
            callable : null
        }, {
            name : "max",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [ju_Comparator],
            returnType : jl_Object,
            callable : null
        }, {
            name : "min",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Floatf],
            returnType : jl_Object,
            callable : null
        }, {
            name : "max",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Floatf],
            returnType : jl_Object,
            callable : null
        }, {
            name : "find",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Boolf],
            returnType : jl_Object,
            callable : null
        }, {
            name : "add",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "add",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "add",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, jl_Object, jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "add",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, jl_Object, jl_Object, jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "addAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_Array],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "addAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_Array, $rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "addAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls(jl_Object)],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "addAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls(jl_Object), $rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "addAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Iterable],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "set",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_Array],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "get",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : jl_Object,
            callable : null
        }, {
            name : "set",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "insert",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "swap",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "contains",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "contains",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, $rt_booleancls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "indexOf",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "indexOf",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, $rt_booleancls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "lastIndexOf",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, $rt_booleancls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "remove",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "remove",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Boolf],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "removeValue",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, $rt_booleancls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "remove",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : jl_Object,
            callable : null
        }, {
            name : "removeRange",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "removeAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Boolf],
            returnType : iaac_Array,
            callable : null
        }, {
            name : "removeAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_Array],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "removeAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_Array, $rt_booleancls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "pop",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_Object,
            callable : null
        }, {
            name : "peek",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_Object,
            callable : null
        }, {
            name : "first",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_Object,
            callable : null
        }, {
            name : "isEmpty",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "clear",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "shrink",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_arraycls(jl_Object),
            callable : null
        }, {
            name : "ensureCapacity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_arraycls(jl_Object),
            callable : null
        }, {
            name : "setSize",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_arraycls(jl_Object),
            callable : null
        }, {
            name : "resize",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_arraycls(jl_Object),
            callable : null
        }, {
            name : "sort",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "sort",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [ju_Comparator],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "sort",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Floatf],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "selectFrom",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_Array, iaaf_Boolf],
            returnType : iaac_Array,
            callable : null
        }, {
            name : "distinct",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaac_Array,
            callable : null
        }, {
            name : "as",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Class],
            returnType : iaac_Array,
            callable : null
        }, {
            name : "select",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Boolf],
            returnType : iaac_Array,
            callable : null
        }, {
            name : "count",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Boolf],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "selectRanked",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [ju_Comparator, $rt_intcls()],
            returnType : jl_Object,
            callable : null
        }, {
            name : "selectRankedIndex",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [ju_Comparator, $rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "reverse",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "shuffle",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "truncate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "random",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_Object,
            callable : null
        }, {
            name : "random",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : jl_Object,
            callable : null
        }, {
            name : "toArray",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_arraycls(jl_Object),
            callable : null
        }, {
            name : "toArray",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Class],
            returnType : $rt_arraycls(jl_Object),
            callable : null
        }, {
            name : "hashCode",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "equals",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String, iaaf_Func],
            returnType : jl_String,
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : jl_String,
            callable : null
        }, {
            name : "iterator",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : ju_Iterator,
            callable : null
        }, {
            name : "lambda$distinct$1",
            modifiers : 544,
            accessLevel : 1,
            parameterTypes : [iaac_ObjectSet, jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "lambda$selectFrom$0",
            modifiers : 32,
            accessLevel : 1,
            parameterTypes : [iaaf_Boolf, jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }];
    iaac_ObjectMap.$meta.methods = [
        {
            name : "of",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls(jl_Object)],
            returnType : iaac_ObjectMap,
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_ObjectMap],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "each",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Cons2],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "put",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, jl_Object],
            returnType : jl_Object,
            callable : null
        }, {
            name : "putAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_ObjectMap],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "merge",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_ObjectMap],
            returnType : iaac_ObjectMap,
            callable : null
        }, {
            name : "putResize",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_Object, jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "push",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_Object, jl_Object, $rt_intcls(), jl_Object, $rt_intcls(), jl_Object, $rt_intcls(), jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "putStash",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_Object, jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getThrow",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, iaaf_Prov],
            returnType : jl_Object,
            callable : null
        }, {
            name : "getOr",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, iaaf_Prov],
            returnType : jl_Object,
            callable : null
        }, {
            name : "getNull",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : jl_Object,
            callable : null
        }, {
            name : "get",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : jl_Object,
            callable : null
        }, {
            name : "get",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, jl_Object],
            returnType : jl_Object,
            callable : null
        }, {
            name : "getStash",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_Object, jl_Object],
            returnType : jl_Object,
            callable : null
        }, {
            name : "remove",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : jl_Object,
            callable : null
        }, {
            name : "removeStash",
            modifiers : 0,
            accessLevel : 0,
            parameterTypes : [jl_Object],
            returnType : jl_Object,
            callable : null
        }, {
            name : "removeStashIndex",
            modifiers : 0,
            accessLevel : 0,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "isEmpty",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "shrink",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "clear",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "clear",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "containsValue",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, $rt_booleancls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "containsKey",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "containsKeyStash",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "findKey",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, $rt_booleancls()],
            returnType : jl_Object,
            callable : null
        }, {
            name : "ensureCapacity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "resize",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "hash2",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "hash3",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "hashCode",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "equals",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : jl_String,
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_String, $rt_booleancls()],
            returnType : jl_String,
            callable : null
        }, {
            name : "iterator",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaac_ObjectMap$Entries,
            callable : null
        }, {
            name : "entries",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaac_ObjectMap$Entries,
            callable : null
        }, {
            name : "values",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaac_ObjectMap$Values,
            callable : null
        }, {
            name : "keys",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaac_ObjectMap$Keys,
            callable : null
        }, {
            name : "iterator",
            modifiers : 96,
            accessLevel : 3,
            parameterTypes : [],
            returnType : ju_Iterator,
            callable : null
        }];
    iaac_IntArray.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_booleancls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_IntArray],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_intcls())],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_booleancls(), $rt_arraycls($rt_intcls()), $rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "with",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_intcls())],
            returnType : iaac_IntArray,
            callable : null
        }, {
            name : "sum",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "add",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "add",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "add",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "add",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls(), $rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "addAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_IntArray],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "addAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_IntArray, $rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "addAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_intcls())],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "addAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_intcls()), $rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "get",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "set",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "incr",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "mul",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "insert",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "swap",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "contains",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "indexOf",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "lastIndexOf",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "removeValue",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "removeIndex",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "removeRange",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "removeAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_IntArray],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "pop",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "peek",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "first",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "isEmpty",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "clear",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "shrink",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_arraycls($rt_intcls()),
            callable : null
        }, {
            name : "ensureCapacity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_arraycls($rt_intcls()),
            callable : null
        }, {
            name : "setSize",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_arraycls($rt_intcls()),
            callable : null
        }, {
            name : "resize",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_arraycls($rt_intcls()),
            callable : null
        }, {
            name : "sort",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "reverse",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "shuffle",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "truncate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "random",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "toArray",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_arraycls($rt_intcls()),
            callable : null
        }, {
            name : "hashCode",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "equals",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : jl_String,
            callable : null
        }];
    iaac_ObjectSet.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_ObjectSet],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "with",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls(jl_Object)],
            returnType : iaac_ObjectSet,
            callable : null
        }, {
            name : "with",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [iaac_Array],
            returnType : iaac_ObjectSet,
            callable : null
        }, {
            name : "select",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Boolf],
            returnType : iaac_ObjectSet,
            callable : null
        }, {
            name : "each",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Cons],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "add",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "addAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_Array],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "addAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_Array, $rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "addAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls(jl_Object)],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "addAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls(jl_Object), $rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "addAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_ObjectSet],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "addResize",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "push",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_Object, $rt_intcls(), jl_Object, $rt_intcls(), jl_Object, $rt_intcls(), jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "addStash",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "remove",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "removeStash",
            modifiers : 0,
            accessLevel : 0,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "removeStashIndex",
            modifiers : 0,
            accessLevel : 0,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "isEmpty",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "shrink",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "clear",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "clear",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "contains",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "get",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : jl_Object,
            callable : null
        }, {
            name : "getKeyStash",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_Object],
            returnType : jl_Object,
            callable : null
        }, {
            name : "first",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_Object,
            callable : null
        }, {
            name : "ensureCapacity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "resize",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "hash2",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "hash3",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "hashCode",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "equals",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : jl_String,
            callable : null
        }, {
            name : "iterator",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaac_ObjectSet$ObjectSetIterator,
            callable : null
        }, {
            name : "iterator",
            modifiers : 96,
            accessLevel : 3,
            parameterTypes : [],
            returnType : ju_Iterator,
            callable : null
        }];
    iaac_ObjectIntMap.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_ObjectIntMap],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "put",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "putAll",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaac_ObjectIntMap],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "putResize",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_Object, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "push",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_Object, $rt_intcls(), $rt_intcls(), jl_Object, $rt_intcls(), jl_Object, $rt_intcls(), jl_Object],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "putStash",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_Object, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "get",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, $rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "getStash",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_Object, $rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "getAndIncrement",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, $rt_intcls(), $rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "getAndIncrementStash",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_Object, $rt_intcls(), $rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "remove",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object, $rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "removeStash",
            modifiers : 0,
            accessLevel : 0,
            parameterTypes : [jl_Object, $rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "removeStashIndex",
            modifiers : 0,
            accessLevel : 0,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "isEmpty",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "shrink",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "clear",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "clear",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "containsValue",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "containsKey",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "containsKeyStash",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "findKey",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : jl_Object,
            callable : null
        }, {
            name : "ensureCapacity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "resize",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "hash2",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "hash3",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "hashCode",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "equals",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "iterator",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaac_ObjectIntMap$Entries,
            callable : null
        }, {
            name : "entries",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaac_ObjectIntMap$Entries,
            callable : null
        }, {
            name : "values",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaac_ObjectIntMap$Values,
            callable : null
        }, {
            name : "keys",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaac_ObjectIntMap$Keys,
            callable : null
        }, {
            name : "iterator",
            modifiers : 96,
            accessLevel : 3,
            parameterTypes : [],
            returnType : ju_Iterator,
            callable : null
        }];
    iaamg_Rectangle.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaamg_Rectangle],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "set",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "getX",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "setX",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "getY",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "setY",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "getWidth",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "setWidth",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "getHeight",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "setHeight",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "getPosition",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaamg_Vector2],
            returnType : iaamg_Vector2,
            callable : null
        }, {
            name : "setPosition",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaamg_Vector2],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "setPosition",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls()],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "setSize",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls()],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "setSize",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "getSize",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaamg_Vector2],
            returnType : iaamg_Vector2,
            callable : null
        }, {
            name : "contains",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "contains",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaamg_Vector2],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "contains",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaamg_Circle],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "contains",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaamg_Rectangle],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "overlaps",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaamg_Rectangle],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "overlaps",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "set",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaamg_Rectangle],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "grow",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "grow",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls()],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "merge",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaamg_Rectangle],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "merge",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls()],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "merge",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaamg_Vector2],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "merge",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls(iaamg_Vector2)],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "getAspectRatio",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "getCenter",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaamg_Vector2],
            returnType : iaamg_Vector2,
            callable : null
        }, {
            name : "setCenter",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls()],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "setCenter",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaamg_Vector2],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "fitOutside",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaamg_Rectangle],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "fitInside",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaamg_Rectangle],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "fromString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : iaamg_Rectangle,
            callable : null
        }, {
            name : "area",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "perimeter",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "hashCode",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "equals",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }];
    iaag_Color.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaag_Color],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "valueOf",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "valueOf",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [iaag_Color, jl_String],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "parseHex",
            modifiers : 512,
            accessLevel : 1,
            parameterTypes : [jl_String, $rt_intcls(), $rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "toFloatBits",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls(), $rt_intcls(), $rt_intcls()],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "toFloatBits",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "toIntBits",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls(), $rt_intcls(), $rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "alpha",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "luminanceAlpha",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "rgb565",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "rgba4444",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "rgb888",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "rgba8888",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "argb8888",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "rgb565",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [iaag_Color],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "rgba4444",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [iaag_Color],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "rgb888",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [iaag_Color],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "rgba8888",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [iaag_Color],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "argb8888",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [iaag_Color],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "rgb565ToColor",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [iaag_Color, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "rgba4444ToColor",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [iaag_Color, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "rgb888ToColor",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [iaag_Color, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "rgba8888ToColor",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [iaag_Color, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "argb8888ToColor",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [iaag_Color, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "abgr8888ToColor",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [iaag_Color, $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "fromGray",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "fromRGB",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls(), $rt_intcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "floatToIntColor",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "intToFloatColor",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "rand",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "randHue",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "rgba",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "set",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaag_Color],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "mul",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaag_Color],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "mul",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "add",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaag_Color],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "sub",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaag_Color],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "clamp",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "set",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "set",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "set",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "sum",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "add",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "add",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "sub",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "sub",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "inv",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "r",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "g",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "b",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "a",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "mul",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "lerp",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaag_Color, $rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "lerp",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "premultiplyAlpha",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "shiftHue",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "shiftSaturation",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "shiftValue",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "equals",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "hashCode",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "toFloatBits",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "toIntBits",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_StringBuilder],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "fromHsv",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "fromHsv",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_floatcls())],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "toHsv",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_floatcls())],
            returnType : $rt_arraycls($rt_floatcls()),
            callable : null
        }, {
            name : "HSVtoRGB",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "HSVtoRGB",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "HSVtoRGB",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), iaag_Color],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "RGBtoHSV",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [iaag_Color],
            returnType : $rt_arraycls($rt_intcls()),
            callable : null
        }, {
            name : "RGBtoHSV",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_arraycls($rt_intcls()),
            callable : null
        }, {
            name : "cpy",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "lerp",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls(iaag_Color), $rt_floatcls()],
            returnType : iaag_Color,
            callable : null
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }];
    iaau_Time$DelayRun.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "access$002",
            modifiers : 544,
            accessLevel : 0,
            parameterTypes : [iaau_Time$DelayRun, jl_Runnable],
            returnType : jl_Runnable,
            callable : null
        }, {
            name : "access$102",
            modifiers : 544,
            accessLevel : 0,
            parameterTypes : [iaau_Time$DelayRun, $rt_floatcls()],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "access$100",
            modifiers : 544,
            accessLevel : 0,
            parameterTypes : [iaau_Time$DelayRun],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "access$000",
            modifiers : 544,
            accessLevel : 0,
            parameterTypes : [iaau_Time$DelayRun],
            returnType : jl_Runnable,
            callable : null
        }];
    iaas_Scene$TouchFocus.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 32,
            accessLevel : 0,
            parameterTypes : [iaas_Scene$1],
            returnType : $rt_voidcls(),
            callable : null
        }];
    iaasu_Label$LabelStyle.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaagg_BitmapFont, iaag_Color],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaasu_Label$LabelStyle],
            returnType : $rt_voidcls(),
            callable : null
        }];
    ig_DrawRequest.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "compareTo",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [ig_DrawRequest],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "compareTo",
            modifiers : 96,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_intcls(),
            callable : null
        }];
    iaase_InputEvent.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "toCoordinates",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaas_Element, iaamg_Vector2],
            returnType : iaamg_Vector2,
            callable : null
        }, {
            name : "isTouchFocusCancel",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }];
    iaagg_GlyphLayout$GlyphRun.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }];
    it_EffectEntity.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setParent",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [ie_Entity],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "targetGroup",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : ie_EntityGroup,
            callable : null
        }, {
            name : "fin",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "lifetime",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "drawSize",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "update",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "draw",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "removed",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }];
    iaasul_Cell.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "defaults",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "setLayout",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaasul_Table],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setElement",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaas_Element],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "clearElement",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "get",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaas_Element,
            callable : null
        }, {
            name : "hasElement",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "prefWidth",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "prefHeight",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "maxWidth",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "maxHeight",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "minWidth",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "minHeight",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "size",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "size",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "name",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "update",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Cons],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "disabled",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Boolf],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "disabled",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_booleancls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "touchable",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaase_Touchable],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "touchable",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Prov],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "visible",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Boolp],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "visible",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_booleancls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "valid",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaasu_TextField$TextFieldValidator],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "wrap",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "labelAlign",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "group",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaasu_ButtonGroup],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "checked",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_booleancls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "checked",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaaf_Boolf],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "fontScale",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "color",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaag_Color],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "margin",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "marginTop",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "marginBottom",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "marginLeft",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "marginRight",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "width",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "style",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaass_Style],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "height",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "minSize",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "minSize",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "minWidth",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "minHeight",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "maxSize",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "maxSize",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "maxWidth",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "maxHeight",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "pad",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "pad",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "padTop",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "padLeft",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "padBottom",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "padRight",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "fill",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "fillX",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "fillY",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "fill",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "fill",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_booleancls(), $rt_booleancls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "fill",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_booleancls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "align",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "center",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "top",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "left",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "bottom",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "right",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "grow",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "growX",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "growY",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "expand",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "expandX",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "expandY",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "expand",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "expand",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_booleancls(), $rt_booleancls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "colspan",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "uniform",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "uniformX",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "uniformY",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "uniform",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_booleancls(), $rt_booleancls()],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "setBounds",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "isEndRow",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "row",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getTable",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : iaasul_Table,
            callable : null
        }, {
            name : "clear",
            modifiers : 0,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "scl",
            modifiers : 0,
            accessLevel : 0,
            parameterTypes : [$rt_floatcls()],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "set",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaasul_Cell],
            returnType : iaasul_Cell,
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "lambda$checked$2",
            modifiers : 544,
            accessLevel : 1,
            parameterTypes : [iaas_Element, iaaf_Boolf],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "lambda$disabled$1",
            modifiers : 544,
            accessLevel : 1,
            parameterTypes : [iaaf_Boolf, iaas_Element],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "lambda$update$0",
            modifiers : 544,
            accessLevel : 1,
            parameterTypes : [iaaf_Cons, iaas_Element],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }];
    iaase_FocusListener$FocusEvent.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }];
    iaat_TypingGlyph.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "set",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [iaagg_BitmapFont$Glyph],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }];
}
function jl_Class_getDeclaredConstructors($this) {
    var $jsClass, $jsMethods, $count, $i, $jsMethod, $jsParameterTypes, $parameterTypes, $j, var$9, var$10, var$11, var$12, var$13;
    if (!$this.$isPrimitive() && !$this.$isArray()) {
        if ($this.$declaredConstructors === null) {
            jl_Class_initReflection();
            $jsClass = $this.$getPlatformClass().$meta;
            $jsMethods = $jsClass.methods;
            $this.$declaredConstructors = $rt_createArray(jlr_Constructor, $jsMethods.length);
            $count = 0;
            $i = 0;
            while ($i < $jsMethods.length) {
                $jsMethod = $jsMethods[$i];
                if ($rt_str($jsMethod.name).$equals($rt_s(369))) {
                    $jsParameterTypes = $jsMethod.parameterTypes;
                    $parameterTypes = $rt_createArray(jl_Class, $jsParameterTypes.length);
                    $j = 0;
                    while (true) {
                        var$9 = $parameterTypes.data;
                        if ($j >= var$9.length)
                            break;
                        var$9[$j] = jl_Class_getClass($jsParameterTypes[$j]);
                        $j = $j + 1 | 0;
                    }
                    var$9 = $this.$declaredConstructors.data;
                    var$10 = $count + 1 | 0;
                    var$11 = new jlr_Constructor;
                    var$12 = $rt_str($jsMethod.name);
                    var$13 = $jsMethod.modifiers;
                    jlr_Constructor__init_0(var$11, $this, var$12, var$13, $jsMethod.accessLevel, $parameterTypes, otji_JS_functionAsObject($jsMethod.callable, "call"));
                    var$9[$count] = var$11;
                    $count = var$10;
                }
                $i = $i + 1 | 0;
            }
            $this.$declaredConstructors = ju_Arrays_copyOf1($this.$declaredConstructors, $count);
        }
        return $this.$declaredConstructors.$clone();
    }
    return $rt_createArray(jlr_Constructor, 0);
}
function jl_Class_getConstructor($this, $parameterTypes) {
    var var$2, var$3, var$4, $constructor;
    var$2 = $this.$getDeclaredConstructors().data;
    var$3 = var$2.length;
    var$4 = 0;
    while (true) {
        if (var$4 >= var$3)
            $rt_throw(jl_NoSuchMethodException__init_());
        $constructor = var$2[var$4];
        if (jlr_Modifier_isPublic($constructor.$getModifiers0()) && ju_Arrays_equals($constructor.$getParameterTypes(), $parameterTypes))
            break;
        var$4 = var$4 + 1 | 0;
    }
    return $constructor;
}
function jl_Class_getDeclaredMethods($this) {
    var $jsClass, $jsMethods, $count, $i, $jsMethod, $jsParameterTypes, $parameterTypes, $j, var$9, $returnType, var$11, var$12, var$13, var$14;
    if (!$this.$isPrimitive() && !$this.$isArray()) {
        if ($this.$declaredMethods === null) {
            jl_Class_initReflection();
            $jsClass = $this.$getPlatformClass().$meta;
            $jsMethods = $jsClass.methods;
            $this.$declaredMethods = $rt_createArray(jlr_Method, $jsMethods.length);
            $count = 0;
            $i = 0;
            while ($i < $jsMethods.length) {
                $jsMethod = $jsMethods[$i];
                if (!$rt_str($jsMethod.name).$equals($rt_s(369)) && !$rt_str($jsMethod.name).$equals($rt_s(370))) {
                    $jsParameterTypes = $jsMethod.parameterTypes;
                    $parameterTypes = $rt_createArray(jl_Class, $jsParameterTypes.length);
                    $j = 0;
                    while (true) {
                        var$9 = $parameterTypes.data;
                        if ($j >= var$9.length)
                            break;
                        var$9[$j] = jl_Class_getClass($jsParameterTypes[$j]);
                        $j = $j + 1 | 0;
                    }
                    $returnType = jl_Class_getClass($jsMethod.returnType);
                    var$9 = $this.$declaredMethods.data;
                    var$11 = $count + 1 | 0;
                    var$12 = new jlr_Method;
                    var$13 = $rt_str($jsMethod.name);
                    var$14 = $jsMethod.modifiers;
                    jlr_Method__init_(var$12, $this, var$13, var$14, $jsMethod.accessLevel, $returnType, $parameterTypes, otji_JS_functionAsObject($jsMethod.callable, "call"));
                    var$9[$count] = var$12;
                    $count = var$11;
                }
                $i = $i + 1 | 0;
            }
            $this.$declaredMethods = ju_Arrays_copyOf1($this.$declaredMethods, $count);
        }
        return $this.$declaredMethods.$clone();
    }
    return $rt_createArray(jlr_Method, 0);
}
function jl_Class_getMethod($this, $name, $parameterTypes) {
    var $method;
    $method = jl_Class_findMethod($this, null, $name, $parameterTypes);
    if ($method !== null)
        return $method;
    $rt_throw(jl_NoSuchMethodException__init_());
}
function jl_Class_findMethod($cls, $current, $name, $parameterTypes) {
    var var$5, var$6, var$7, $method, $superclass, var$10, $iface;
    var$5 = $cls.$getDeclaredMethods().data;
    var$6 = var$5.length;
    var$7 = 0;
    while (var$7 < var$6) {
        $method = var$5[var$7];
        if (jlr_Modifier_isPublic($method.$getModifiers0()) && $method.$getName().$equals($name) && ju_Arrays_equals($method.$getParameterTypes(), $parameterTypes) && !($current !== null && !$current.$getReturnType().$isAssignableFrom($method.$getReturnType())))
            $current = $method;
        var$7 = var$7 + 1 | 0;
    }
    if (!$cls.$isInterface()) {
        $superclass = $cls.$getSuperclass();
        if ($superclass !== null)
            $current = jl_Class_findMethod($superclass, $current, $name, $parameterTypes);
    }
    var$10 = $cls.$getInterfaces().data;
    var$7 = var$10.length;
    var$6 = 0;
    while (var$6 < var$7) {
        $iface = var$10[var$6];
        $current = jl_Class_findMethod($iface, $current, $name, $parameterTypes);
        var$6 = var$6 + 1 | 0;
    }
    return $current;
}
function jl_Class_getSuperclass($this) {
    return jl_Class_getClass($this.$platformClass.$meta.superclass);
}
function jl_Class_getInterfaces($this) {
    var $supertypes, $filteredSupertypes, $j, $i, var$5, var$6;
    $supertypes = $this.$platformClass.$meta.supertypes;
    $filteredSupertypes = $rt_createArray(jl_Class, $supertypes.length);
    $j = 0;
    $i = 0;
    while ($i < $supertypes.length) {
        if ($supertypes[$i] !== $this.$platformClass.$meta.superclass) {
            var$5 = $filteredSupertypes.data;
            var$6 = $j + 1 | 0;
            var$5[$j] = jl_Class_getClass($supertypes[var$6]);
            $j = var$6;
        }
        $i = $i + 1 | 0;
    }
    if ($filteredSupertypes.data.length > $j)
        $filteredSupertypes = ju_Arrays_copyOf1($filteredSupertypes, $j);
    return $filteredSupertypes;
}
function jl_Class_getEnumConstants($this) {
    if (!$this.$isEnum0())
        return null;
    $this.$platformClass.$clinit();
    return otp_Platform_getEnumConstants($this.$platformClass).$clone();
}
function jl_Class_initialize($this) {
    $this.$platformClass.$clinit();
}
function otjt_Int16Array() {
    otjt_ArrayBufferView.call(this);
}
function iaau_ColorCodes() {
    jl_Object.call(this);
}
var iaau_ColorCodes_FLUSH = null;
var iaau_ColorCodes_RESET = null;
var iaau_ColorCodes_BOLD = null;
var iaau_ColorCodes_ITALIC = null;
var iaau_ColorCodes_UNDERLINED = null;
var iaau_ColorCodes_BLACK = null;
var iaau_ColorCodes_RED = null;
var iaau_ColorCodes_GREEN = null;
var iaau_ColorCodes_YELLOW = null;
var iaau_ColorCodes_BLUE = null;
var iaau_ColorCodes_PURPLE = null;
var iaau_ColorCodes_CYAN = null;
var iaau_ColorCodes_LIGHT_RED = null;
var iaau_ColorCodes_LIGHT_GREEN = null;
var iaau_ColorCodes_LIGHT_YELLOW = null;
var iaau_ColorCodes_LIGHT_BLUE = null;
var iaau_ColorCodes_LIGHT_MAGENTA = null;
var iaau_ColorCodes_LIGHT_CYAN = null;
var iaau_ColorCodes_WHITE = null;
var iaau_ColorCodes_BACK_DEFAULT = null;
var iaau_ColorCodes_BACK_RED = null;
var iaau_ColorCodes_BACK_GREEN = null;
var iaau_ColorCodes_BACK_YELLOW = null;
var iaau_ColorCodes_BACK_BLUE = null;
var iaau_ColorCodes_codes = null;
function iaau_ColorCodes_$callClinit() {
    iaau_ColorCodes_$callClinit = $rt_eraseClinit(iaau_ColorCodes);
    iaau_ColorCodes__clinit_();
}
function iaau_ColorCodes_getColorCodes() {
    iaau_ColorCodes_$callClinit();
    return iaac_ObjectMap$Keys__init_(iaau_ColorCodes_codes);
}
function iaau_ColorCodes_getColorText($code) {
    iaau_ColorCodes_$callClinit();
    return iaau_ColorCodes_codes.$get9($code);
}
function iaau_ColorCodes__clinit_() {
    iaau_ColorCodes_FLUSH = $rt_s(371);
    iaau_ColorCodes_RESET = $rt_s(372);
    iaau_ColorCodes_BOLD = $rt_s(373);
    iaau_ColorCodes_ITALIC = $rt_s(374);
    iaau_ColorCodes_UNDERLINED = $rt_s(375);
    iaau_ColorCodes_BLACK = $rt_s(376);
    iaau_ColorCodes_RED = $rt_s(377);
    iaau_ColorCodes_GREEN = $rt_s(378);
    iaau_ColorCodes_YELLOW = $rt_s(379);
    iaau_ColorCodes_BLUE = $rt_s(380);
    iaau_ColorCodes_PURPLE = $rt_s(381);
    iaau_ColorCodes_CYAN = $rt_s(382);
    iaau_ColorCodes_LIGHT_RED = $rt_s(383);
    iaau_ColorCodes_LIGHT_GREEN = $rt_s(384);
    iaau_ColorCodes_LIGHT_YELLOW = $rt_s(385);
    iaau_ColorCodes_LIGHT_BLUE = $rt_s(386);
    iaau_ColorCodes_LIGHT_MAGENTA = $rt_s(387);
    iaau_ColorCodes_LIGHT_CYAN = $rt_s(388);
    iaau_ColorCodes_WHITE = $rt_s(389);
    iaau_ColorCodes_BACK_DEFAULT = $rt_s(390);
    iaau_ColorCodes_BACK_RED = $rt_s(391);
    iaau_ColorCodes_BACK_GREEN = $rt_s(392);
    iaau_ColorCodes_BACK_YELLOW = $rt_s(393);
    iaau_ColorCodes_BACK_BLUE = $rt_s(394);
    iaau_ColorCodes_codes = iaac_ObjectMap__init_();
    iaau_OS_$callClinit();
    if (!(!iaau_OS_isWindows && !iaau_OS_isAndroid)) {
        iaau_ColorCodes_ITALIC = $rt_s(58);
        iaau_ColorCodes_BACK_GREEN = $rt_s(58);
        iaau_ColorCodes_BACK_BLUE = $rt_s(58);
        iaau_ColorCodes_BACK_YELLOW = $rt_s(58);
        iaau_ColorCodes_BACK_RED = $rt_s(58);
        iaau_ColorCodes_BACK_DEFAULT = $rt_s(58);
        iaau_ColorCodes_WHITE = $rt_s(58);
        iaau_ColorCodes_LIGHT_CYAN = $rt_s(58);
        iaau_ColorCodes_LIGHT_MAGENTA = $rt_s(58);
        iaau_ColorCodes_LIGHT_BLUE = $rt_s(58);
        iaau_ColorCodes_LIGHT_YELLOW = $rt_s(58);
        iaau_ColorCodes_LIGHT_GREEN = $rt_s(58);
        iaau_ColorCodes_LIGHT_RED = $rt_s(58);
        iaau_ColorCodes_CYAN = $rt_s(58);
        iaau_ColorCodes_PURPLE = $rt_s(58);
        iaau_ColorCodes_BLUE = $rt_s(58);
        iaau_ColorCodes_YELLOW = $rt_s(58);
        iaau_ColorCodes_GREEN = $rt_s(58);
        iaau_ColorCodes_RED = $rt_s(58);
        iaau_ColorCodes_BLACK = $rt_s(58);
        iaau_ColorCodes_UNDERLINED = $rt_s(58);
        iaau_ColorCodes_BOLD = $rt_s(58);
        iaau_ColorCodes_RESET = $rt_s(58);
        iaau_ColorCodes_FLUSH = $rt_s(58);
    }
    iaau_ColorCodes_codes.$put($rt_s(395), iaau_ColorCodes_FLUSH);
    iaau_ColorCodes_codes.$put($rt_s(396), iaau_ColorCodes_RESET);
    iaau_ColorCodes_codes.$put($rt_s(397), iaau_ColorCodes_BOLD);
    iaau_ColorCodes_codes.$put($rt_s(398), iaau_ColorCodes_ITALIC);
    iaau_ColorCodes_codes.$put($rt_s(399), iaau_ColorCodes_UNDERLINED);
    iaau_ColorCodes_codes.$put($rt_s(400), iaau_ColorCodes_BLACK);
    iaau_ColorCodes_codes.$put($rt_s(401), iaau_ColorCodes_RED);
    iaau_ColorCodes_codes.$put($rt_s(402), iaau_ColorCodes_GREEN);
    iaau_ColorCodes_codes.$put($rt_s(269), iaau_ColorCodes_YELLOW);
    iaau_ColorCodes_codes.$put($rt_s(34), iaau_ColorCodes_BLUE);
    iaau_ColorCodes_codes.$put($rt_s(403), iaau_ColorCodes_PURPLE);
    iaau_ColorCodes_codes.$put($rt_s(404), iaau_ColorCodes_CYAN);
    iaau_ColorCodes_codes.$put($rt_s(405), iaau_ColorCodes_LIGHT_RED);
    iaau_ColorCodes_codes.$put($rt_s(406), iaau_ColorCodes_LIGHT_GREEN);
    iaau_ColorCodes_codes.$put($rt_s(407), iaau_ColorCodes_LIGHT_YELLOW);
    iaau_ColorCodes_codes.$put($rt_s(408), iaau_ColorCodes_LIGHT_MAGENTA);
    iaau_ColorCodes_codes.$put($rt_s(409), iaau_ColorCodes_LIGHT_BLUE);
    iaau_ColorCodes_codes.$put($rt_s(410), iaau_ColorCodes_LIGHT_CYAN);
    iaau_ColorCodes_codes.$put($rt_s(88), iaau_ColorCodes_WHITE);
    iaau_ColorCodes_codes.$put($rt_s(411), iaau_ColorCodes_BACK_DEFAULT);
    iaau_ColorCodes_codes.$put($rt_s(412), iaau_ColorCodes_BACK_RED);
    iaau_ColorCodes_codes.$put($rt_s(413), iaau_ColorCodes_BACK_GREEN);
    iaau_ColorCodes_codes.$put($rt_s(414), iaau_ColorCodes_BACK_YELLOW);
    iaau_ColorCodes_codes.$put($rt_s(415), iaau_ColorCodes_BACK_BLUE);
}
function otjb_AnimationFrameCallback() {
}
function iaabt_TeaApplication$delayedStep$lambda$_3_0() {
    jl_Object.call(this);
    this.$_022 = null;
}
function iaabt_TeaApplication$delayedStep$lambda$_3_0__init_(var_0) {
    var var_1 = new iaabt_TeaApplication$delayedStep$lambda$_3_0();
    iaabt_TeaApplication$delayedStep$lambda$_3_0__init_0(var_1, var_0);
    return var_1;
}
function iaabt_TeaApplication$delayedStep$lambda$_3_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_022 = var$1;
}
function iaabt_TeaApplication$delayedStep$lambda$_3_0_onAnimationFrame(var$0, var$1) {
    iaabt_TeaApplication_lambda$delayedStep$1(var$0.$_022, var$1);
}
function iaabt_TeaApplication$delayedStep$lambda$_3_0_onAnimationFrame$exported$0(var$0, var$1) {
    var$0.$onAnimationFrame(var$1);
}
function jl_Cloneable() {
}
function ju_BitSet() {
    var a = this; jl_Object.call(a);
    a.$data = null;
    a.$length1 = 0;
}
function ju_BitSet__init_0() {
    var var_0 = new ju_BitSet();
    ju_BitSet__init_1(var_0);
    return var_0;
}
function ju_BitSet__init_(var_0) {
    var var_1 = new ju_BitSet();
    ju_BitSet__init_2(var_1, var_0);
    return var_1;
}
function ju_BitSet__init_1($this) {
    jl_Object__init_0($this);
    $this.$data = $rt_createIntArray(0);
}
function ju_BitSet__init_2($this, $nbits) {
    jl_Object__init_0($this);
    $this.$data = $rt_createIntArray((($nbits + 32 | 0) - 1 | 0) / 32 | 0);
}
function ju_BitSet_set($this, $bitIndex) {
    var $index, var$3;
    $index = $bitIndex / 32 | 0;
    if ($bitIndex >= $this.$length1) {
        ju_BitSet_ensureCapacity($this, $index + 1 | 0);
        $this.$length1 = $bitIndex + 1 | 0;
    }
    var$3 = $this.$data.data;
    var$3[$index] = var$3[$index] | 1 << ($bitIndex % 32 | 0);
}
function ju_BitSet_set0($this, $fromIndex, $toIndex) {
    var $fromDataIndex, $toDataIndex, var$5, $i;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    $fromDataIndex = $fromIndex / 32 | 0;
    $toDataIndex = $toIndex / 32 | 0;
    if ($toIndex > $this.$length1) {
        ju_BitSet_ensureCapacity($this, $toDataIndex + 1 | 0);
        $this.$length1 = $toIndex;
    }
    if ($fromDataIndex == $toDataIndex) {
        var$5 = $this.$data.data;
        var$5[$fromDataIndex] = var$5[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex) & ju_BitSet_trailingOneBits($this, $toIndex);
    } else {
        var$5 = $this.$data.data;
        var$5[$fromDataIndex] = var$5[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex);
        $i = $fromDataIndex + 1 | 0;
        while ($i < $toDataIndex) {
            $this.$data.data[$i] = (-1);
            $i = $i + 1 | 0;
        }
        var$5 = $this.$data.data;
        var$5[$toDataIndex] = var$5[$toDataIndex] | ju_BitSet_trailingOneBits($this, $toIndex);
    }
}
function ju_BitSet_trailingZeroBits($this, $num) {
    var var$2;
    var$2 = $num % 32 | 0;
    return (-1) << var$2;
}
function ju_BitSet_trailingOneBits($this, $num) {
    var var$2;
    var$2 = $num % 32 | 0;
    return !var$2 ? 0 : (-1) >>> (32 - var$2 | 0);
}
function ju_BitSet_clear($this, $bitIndex) {
    var $index, var$3;
    $index = $bitIndex / 32 | 0;
    if ($index < $this.$data.data.length) {
        var$3 = $this.$data.data;
        var$3[$index] = var$3[$index] & jl_Integer_rotateLeft((-2), $bitIndex % 32 | 0);
        if ($bitIndex == ($this.$length1 - 1 | 0))
            ju_BitSet_recalculateLength($this);
    }
}
function ju_BitSet_clear0($this, $fromIndex, $toIndex) {
    var var$3, $fromDataIndex, $toDataIndex, var$6, $i;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    if ($fromIndex >= $this.$length1)
        return;
    var$3 = jl_Math_min1($this.$length1, $toIndex);
    $fromDataIndex = $fromIndex / 32 | 0;
    $toDataIndex = var$3 / 32 | 0;
    if ($fromDataIndex == $toDataIndex) {
        var$6 = $this.$data.data;
        var$6[$fromDataIndex] = var$6[$fromDataIndex] & (ju_BitSet_trailingOneBits($this, $fromIndex) | ju_BitSet_trailingZeroBits($this, var$3));
    } else {
        var$6 = $this.$data.data;
        var$6[$fromDataIndex] = var$6[$fromDataIndex] & ju_BitSet_trailingOneBits($this, $fromIndex);
        $i = $fromDataIndex + 1 | 0;
        while ($i < $toDataIndex) {
            $this.$data.data[$i] = 0;
            $i = $i + 1 | 0;
        }
        var$6 = $this.$data.data;
        var$6[$toDataIndex] = var$6[$toDataIndex] & ju_BitSet_trailingZeroBits($this, var$3);
    }
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_get($this, $bitIndex) {
    var $index;
    $index = $bitIndex / 32 | 0;
    return $index < $this.$data.data.length && $this.$data.data[$index] & 1 << ($bitIndex % 32 | 0) ? 1 : 0;
}
function ju_BitSet_nextSetBit($this, $fromIndex) {
    var $index, $val, var$4, $top, $i;
    if ($fromIndex >= $this.$length1)
        return (-1);
    $index = $fromIndex / 32 | 0;
    $val = $this.$data.data[$index];
    var$4 = $val >>> ($fromIndex % 32 | 0);
    if (var$4)
        return jl_Integer_numberOfTrailingZeros(var$4) + $fromIndex | 0;
    $top = ($this.$length1 + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if ($this.$data.data[$i])
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros($this.$data.data[$i]) | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function ju_BitSet_nextClearBit($this, $fromIndex) {
    var $index, $val, var$4, $top, $i;
    if ($fromIndex >= $this.$length1)
        return $fromIndex;
    $index = $fromIndex / 32 | 0;
    $val = $this.$data.data[$index] ^ (-1);
    var$4 = $val >>> ($fromIndex % 32 | 0);
    if (var$4)
        return jl_Integer_numberOfTrailingZeros(var$4) + $fromIndex | 0;
    $top = ($this.$length1 + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if ($this.$data.data[$i] != (-1))
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros($this.$data.data[$i] ^ (-1)) | 0;
        $i = $i + 1 | 0;
    }
    return $this.$length1;
}
function ju_BitSet_ensureCapacity($this, $capacity) {
    var $newArrayLength;
    if ($this.$data.data.length >= $capacity)
        return;
    $newArrayLength = jl_Math_max1(($capacity * 3 | 0) / 2 | 0, ($this.$data.data.length * 2 | 0) + 1 | 0);
    $this.$data = ju_Arrays_copyOf2($this.$data, $newArrayLength);
}
function ju_BitSet_recalculateLength($this) {
    var $top, $i, $sz;
    $top = ($this.$length1 + 31 | 0) / 32 | 0;
    $this.$length1 = $top * 32 | 0;
    $i = $top - 1 | 0;
    a: {
        while (true) {
            if ($i < 0)
                break a;
            $sz = jl_Integer_numberOfLeadingZeros($this.$data.data[$i]);
            if ($sz < 32)
                break;
            $i = $i + (-1) | 0;
            $this.$length1 = $this.$length1 - 32 | 0;
        }
        $this.$length1 = $this.$length1 - $sz | 0;
    }
}
function ju_BitSet_intersects($this, $set) {
    var $sz, $i;
    $sz = jl_Math_min1($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        if ($this.$data.data[$i] & $set.$data.data[$i])
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
}
function ju_BitSet_and($this, $set) {
    var $i, $i_0, var$4;
    $i = jl_Math_min1($this.$data.data.length, $set.$data.data.length);
    $i_0 = 0;
    while ($i_0 < $i) {
        var$4 = $this.$data.data;
        var$4[$i_0] = var$4[$i_0] & $set.$data.data[$i_0];
        $i_0 = $i_0 + 1 | 0;
    }
    while ($i < $this.$data.data.length) {
        $this.$data.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    $this.$length1 = jl_Math_min1($this.$length1, $set.$length1);
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_andNot($this, $set) {
    var $sz, $i, var$4;
    $sz = jl_Math_min1($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] & ($set.$data.data[$i] ^ (-1));
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_or($this, $set) {
    var $sz, $i, var$4;
    $this.$length1 = jl_Math_max1($this.$length1, $set.$length1);
    ju_BitSet_ensureCapacity($this, ($this.$length1 + 31 | 0) / 32 | 0);
    $sz = jl_Math_min1($this.$data.data.length, $set.$length1);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] | $set.$data.data[$i];
        $i = $i + 1 | 0;
    }
}
function ju_BitSet_xor($this, $set) {
    var $sz, $i, var$4;
    $this.$length1 = jl_Math_max1($this.$length1, $set.$length1);
    ju_BitSet_ensureCapacity($this, ($this.$length1 + 31 | 0) / 32 | 0);
    $sz = jl_Math_min1($this.$data.data.length, $set.$length1);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] ^ $set.$data.data[$i];
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_isEmpty($this) {
    return $this.$length1 ? 0 : 1;
}
function jl_Float() {
    jl_Number.call(this);
    this.$value1 = 0.0;
}
var jl_Float_NaN = 0.0;
var jl_Float_TYPE = null;
function jl_Float_$callClinit() {
    jl_Float_$callClinit = $rt_eraseClinit(jl_Float);
    jl_Float__clinit_();
}
function jl_Float__init_(var_0) {
    var var_1 = new jl_Float();
    jl_Float__init_0(var_1, var_0);
    return var_1;
}
function jl_Float__init_0($this, $value) {
    jl_Float_$callClinit();
    jl_Number__init_0($this);
    $this.$value1 = $value;
}
function jl_Float_valueOf($d) {
    jl_Float_$callClinit();
    return jl_Float__init_($d);
}
function jl_Float_parseFloat($string) {
    var $start, $end, $negative, $c, $mantissa, $exp, $hasOneDigit, var$9, var$10, $negativeExp, $numExp, var$13;
    jl_Float_$callClinit();
    if ($string.$isEmpty())
        $rt_throw(jl_NumberFormatException__init_());
    $start = 0;
    $end = $string.$length();
    while (true) {
        if ($string.$charAt($start) > 32) {
            while ($string.$charAt($end - 1 | 0) <= 32) {
                $end = $end + (-1) | 0;
            }
            $negative = 0;
            if ($string.$charAt($start) == 45) {
                $start = $start + 1 | 0;
                $negative = 1;
            } else if ($string.$charAt($start) == 43)
                $start = $start + 1 | 0;
            if ($start == $end)
                $rt_throw(jl_NumberFormatException__init_());
            a: {
                $c = $string.$charAt($start);
                $mantissa = 0;
                $exp = 0;
                $hasOneDigit = 0;
                if ($c != 46) {
                    $hasOneDigit = 1;
                    if ($c >= 48 && $c <= 57) {
                        b: {
                            while ($start < $end) {
                                if ($string.$charAt($start) != 48)
                                    break b;
                                $start = $start + 1 | 0;
                            }
                        }
                        while ($start < $end) {
                            var$9 = $string.$charAt($start);
                            if (var$9 < 48)
                                break a;
                            if (var$9 > 57)
                                break a;
                            if ($mantissa >= 1.0E8)
                                $exp = $exp + 1 | 0;
                            else
                                $mantissa = ($mantissa * 10 | 0) + (var$9 - 48 | 0) | 0;
                            $start = $start + 1 | 0;
                        }
                    } else
                        $rt_throw(jl_NumberFormatException__init_());
                }
            }
            if ($start < $end && $string.$charAt($start) == 46) {
                $start = $start + 1 | 0;
                c: {
                    while (true) {
                        if ($start >= $end)
                            break c;
                        var$10 = $string.$charAt($start);
                        if (var$10 < 48)
                            break c;
                        if (var$10 > 57)
                            break;
                        if ($mantissa < 1.0E38) {
                            $mantissa = ($mantissa * 10 | 0) + (var$10 - 48 | 0) | 0;
                            $exp = $exp + (-1) | 0;
                        }
                        $start = $start + 1 | 0;
                        $hasOneDigit = 1;
                    }
                }
                if (!$hasOneDigit)
                    $rt_throw(jl_NumberFormatException__init_());
            }
            if ($start < $end) {
                var$9 = $string.$charAt($start);
                if (var$9 != 101 && var$9 != 69)
                    $rt_throw(jl_NumberFormatException__init_());
                var$9 = $start + 1 | 0;
                $negativeExp = 0;
                if (var$9 == $end)
                    $rt_throw(jl_NumberFormatException__init_());
                if ($string.$charAt(var$9) == 45) {
                    var$9 = var$9 + 1 | 0;
                    $negativeExp = 1;
                } else if ($string.$charAt(var$9) == 43)
                    var$9 = var$9 + 1 | 0;
                $numExp = 0;
                var$13 = 0;
                d: {
                    while (true) {
                        if (var$9 >= $end)
                            break d;
                        var$10 = $string.$charAt(var$9);
                        if (var$10 < 48)
                            break d;
                        if (var$10 > 57)
                            break;
                        $numExp = (10 * $numExp | 0) + (var$10 - 48 | 0) | 0;
                        var$13 = 1;
                        var$9 = var$9 + 1 | 0;
                    }
                }
                if (!var$13)
                    $rt_throw(jl_NumberFormatException__init_());
                if ($negativeExp)
                    $numExp =  -$numExp;
                $exp = $exp + $numExp | 0;
            }
            e: {
                var$9 = $rt_compare($exp, 38);
                if (var$9 <= 0) {
                    if (var$9)
                        break e;
                    if ($mantissa <= 34028234)
                        break e;
                }
                return $negative ? (-Infinity) : Infinity;
            }
            if ($negative)
                $mantissa =  -$mantissa;
            return $mantissa * jl_Float_decimalExponent($exp);
        }
        $start = $start + 1 | 0;
        if ($start == $end)
            break;
    }
    $rt_throw(jl_NumberFormatException__init_());
}
function jl_Float_decimalExponent($n) {
    var $d, $result;
    jl_Float_$callClinit();
    if ($n >= 0)
        $d = 10.0;
    else {
        $d = 0.1;
        $n =  -$n;
    }
    $result = 1.0;
    while ($n) {
        if ($n % 2 | 0)
            $result = $result * $d;
        $d = $d * $d;
        $n = $n / 2 | 0;
    }
    return $result;
}
function jl_Float_valueOf0($s) {
    jl_Float_$callClinit();
    return jl_Float_valueOf(jl_Float_parseFloat($s));
}
function jl_Float_compare(var$1, var$2) {
    jl_Float_$callClinit();
    return $rt_compare(var$1, var$2);
}
function jl_Float_floatToRawIntBits($value) {
    jl_Float_$callClinit();
    return $rt_floatToIntBits($value);
}
function jl_Float__clinit_() {
    jl_Float_NaN = NaN;
    jl_Float_TYPE = $rt_cls($rt_floatcls());
}
function juz_InflaterInputStream() {
    var a = this; ji_FilterInputStream.call(a);
    a.$inf = null;
    a.$buf1 = null;
    a.$len0 = 0;
    a.$closed = 0;
    a.$eof = 0;
}
function juz_InflaterInputStream__init_(var_0) {
    var var_1 = new juz_InflaterInputStream();
    juz_InflaterInputStream__init_0(var_1, var_0);
    return var_1;
}
function juz_InflaterInputStream__init_1(var_0, var_1, var_2) {
    var var_3 = new juz_InflaterInputStream();
    juz_InflaterInputStream__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function juz_InflaterInputStream__init_0($this, $is) {
    juz_InflaterInputStream__init_2($this, $is, juz_Inflater__init_(), 512);
}
function juz_InflaterInputStream__init_2($this, $is, $inf, $bsize) {
    ji_FilterInputStream__init_0($this, $is);
    if ($is !== null && $inf !== null) {
        if ($bsize <= 0)
            $rt_throw(jl_IllegalArgumentException__init_0());
        $this.$inf = $inf;
        $this.$buf1 = $rt_createByteArray($bsize);
        return;
    }
    $rt_throw(jl_NullPointerException__init_());
}
function juz_InflaterInputStream_read($this) {
    var $b;
    $b = $rt_createByteArray(1);
    if ($this.$read($b, 0, 1) == (-1))
        return (-1);
    return $b.data[0] & 255;
}
function juz_InflaterInputStream_read0($this, $buffer, $off, $nbytes) {
    var var$4, var$5, var$6, $result, $e, $$je;
    if ($this.$closed)
        $rt_throw(ji_IOException__init_($rt_s(4)));
    if (null === $buffer)
        $rt_throw(jl_NullPointerException__init_());
    if ($off >= 0 && $nbytes >= 0) {
        var$4 = $buffer.data;
        var$5 = $off + $nbytes | 0;
        var$6 = var$4.length;
        if (var$5 <= var$6) {
            if (!$nbytes)
                return 0;
            if ($this.$eof)
                return (-1);
            if ($off <= var$6 && $nbytes >= 0 && $off >= 0 && (var$6 - $off | 0) >= $nbytes) {
                a: {
                    b: {
                        c: {
                            d: {
                                while (true) {
                                    if ($this.$inf.$needsInput())
                                        $this.$fill1();
                                    try {
                                        $result = $this.$inf.$inflate($buffer, $off, $nbytes);
                                        $this.$eof = $this.$inf.$finished();
                                        if ($result > 0)
                                            break;
                                        if ($this.$eof)
                                            break d;
                                        if ($this.$inf.$needsDictionary())
                                            break b;
                                        if ($this.$len0 == (-1))
                                            break c;
                                        continue;
                                    } catch ($$e) {
                                        $$je = $rt_wrapException($$e);
                                        if ($$je instanceof juz_DataFormatException) {
                                            $e = $$je;
                                            break a;
                                        } else {
                                            throw $$e;
                                        }
                                    }
                                }
                                return $result;
                            }
                            try {
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof juz_DataFormatException) {
                                    $e = $$je;
                                    break a;
                                } else {
                                    throw $$e;
                                }
                            }
                            return (-1);
                        }
                        try {
                            $this.$eof = 1;
                            $rt_throw(ji_EOFException__init_());
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof juz_DataFormatException) {
                                $e = $$je;
                                break a;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                    try {
                        $this.$eof = 1;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof juz_DataFormatException) {
                            $e = $$je;
                            break a;
                        } else {
                            throw $$e;
                        }
                    }
                    return (-1);
                }
                $this.$eof = 1;
                if ($this.$len0 != (-1))
                    $rt_throw(ji_IOException__init_0($e));
                $rt_throw(ji_EOFException__init_());
            }
            $rt_throw(jl_ArrayIndexOutOfBoundsException__init_());
        }
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function juz_InflaterInputStream_fill($this) {
    if ($this.$closed)
        $rt_throw(ji_IOException__init_1());
    $this.$len0 = $this.$in.$read0($this.$buf1);
    if ($this.$len0 > 0)
        $this.$inf.$setInput($this.$buf1, 0, $this.$len0);
}
function juz_InflaterInputStream_available($this) {
    if ($this.$closed)
        $rt_throw(ji_IOException__init_($rt_s(4)));
    if (!$this.$eof)
        return 1;
    return 0;
}
function juz_GZIPInputStream() {
    var a = this; juz_InflaterInputStream.call(a);
    a.$crc0 = null;
    a.$eos = 0;
}
function juz_GZIPInputStream__init_(var_0, var_1) {
    var var_2 = new juz_GZIPInputStream();
    juz_GZIPInputStream__init_0(var_2, var_0, var_1);
    return var_2;
}
function juz_GZIPInputStream__init_0($this, $is, $size) {
    var $header, var$4, var$5, $flags, $hcrc, $length, $max, $result, $crc16;
    juz_InflaterInputStream__init_2($this, $is, juz_Inflater__init_0(1), $size);
    $this.$crc0 = juz_CRC32__init_();
    $header = $rt_createByteArray(10);
    var$4 = $header.data;
    var$5 = var$4.length;
    juz_GZIPInputStream_readFully($this, $header, 0, var$5);
    if (juz_GZIPInputStream_getShort($this, $header, 0) != 35615)
        $rt_throw(ji_IOException__init_1());
    $flags = var$4[3];
    $hcrc = !($flags & 2) ? 0 : 1;
    if ($hcrc)
        $this.$crc0.$update0($header, 0, var$5);
    a: {
        if ($flags & 4) {
            juz_GZIPInputStream_readFully($this, $header, 0, 2);
            if ($hcrc)
                $this.$crc0.$update0($header, 0, 2);
            $length = juz_GZIPInputStream_getShort($this, $header, 0);
            while (true) {
                if ($length <= 0)
                    break a;
                $max = $length <= $this.$buf1.data.length ? $length : $this.$buf1.data.length;
                $result = $this.$in.$read($this.$buf1, 0, $max);
                if ($result == (-1))
                    break;
                if ($hcrc)
                    $this.$crc0.$update0($this.$buf1, 0, $result);
                $length = $length - $result | 0;
            }
            $rt_throw(ji_EOFException__init_());
        }
    }
    if ($flags & 8)
        juz_GZIPInputStream_readZeroTerminated($this, $hcrc);
    if ($flags & 16)
        juz_GZIPInputStream_readZeroTerminated($this, $hcrc);
    if ($hcrc) {
        juz_GZIPInputStream_readFully($this, $header, 0, 2);
        $crc16 = juz_GZIPInputStream_getShort($this, $header, 0);
        if (Long_ne(Long_and($this.$crc0.$getValue(), Long_fromInt(65535)), Long_fromInt($crc16)))
            $rt_throw(ji_IOException__init_1());
        $this.$crc0.$reset();
    }
}
function juz_GZIPInputStream_getLong($this, $buffer, $off) {
    var var$3, $l, var$5;
    var$3 = $buffer.data;
    $l = Long_ZERO;
    var$5 = Long_or($l, Long_fromInt(var$3[$off] & 255));
    var$5 = Long_or(var$5, Long_fromInt((var$3[$off + 1 | 0] & 255) << 8));
    var$5 = Long_or(var$5, Long_fromInt((var$3[$off + 2 | 0] & 255) << 16));
    var$5 = Long_or(var$5, Long_shl(Long_fromInt(var$3[$off + 3 | 0] & 255), 24));
    return var$5;
}
function juz_GZIPInputStream_getShort($this, $buffer, $off) {
    var var$3;
    var$3 = $buffer.data;
    return var$3[$off] & 255 | (var$3[$off + 1 | 0] & 255) << 8;
}
function juz_GZIPInputStream_read($this, $buffer, $off, $nbytes) {
    var var$4, $bytesRead, var$6, $$je;
    if ($this.$closed)
        $rt_throw(ji_IOException__init_1());
    if ($this.$eos)
        return (-1);
    var$4 = $buffer.data.length;
    if ($off <= var$4 && $nbytes >= 0 && $off >= 0 && (var$4 - $off | 0) >= $nbytes) {
        a: {
            try {
                $bytesRead = juz_InflaterInputStream_read0($this, $buffer, $off, $nbytes);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$6 = $$je;

            }
            $this.$eos = $this.$eof;
            $rt_throw(var$6);
        }
        $this.$eos = $this.$eof;
        if ($bytesRead != (-1))
            $this.$crc0.$update0($buffer, $off, $bytesRead);
        if ($this.$eos)
            juz_GZIPInputStream_verifyCrc($this);
        return $bytesRead;
    }
    $rt_throw(jl_ArrayIndexOutOfBoundsException__init_());
}
function juz_GZIPInputStream_verifyCrc($this) {
    var $size, $b, $copySize;
    $size = $this.$inf.$getRemaining();
    $b = $rt_createByteArray(8);
    $copySize = $size <= 8 ? $size : 8;
    jl_System_arraycopy($this.$buf1, $this.$len0 - $size | 0, $b, 0, $copySize);
    juz_GZIPInputStream_readFully($this, $b, $copySize, 8 - $copySize | 0);
    if (Long_ne(juz_GZIPInputStream_getLong($this, $b, 0), $this.$crc0.$getValue()))
        $rt_throw(ji_IOException__init_1());
    if (juz_GZIPInputStream_getLong($this, $b, 4).lo == $this.$inf.$getTotalOut())
        return;
    $rt_throw(ji_IOException__init_1());
}
function juz_GZIPInputStream_readFully($this, $buffer, $offset, $length) {
    var $result;
    while ($length > 0) {
        $result = $this.$in.$read($buffer, $offset, $length);
        if ($result == (-1))
            $rt_throw(ji_EOFException__init_());
        $offset = $offset + $result | 0;
        $length = $length - $result | 0;
    }
}
function juz_GZIPInputStream_readZeroTerminated($this, $hcrc) {
    var var$2;
    while (true) {
        var$2 = $this.$in.$read4();
        if (var$2 <= 0)
            break;
        if (!$hcrc)
            continue;
        $this.$crc0.$update2(var$2);
    }
    if (var$2 == (-1))
        $rt_throw(ji_EOFException__init_());
    if ($hcrc)
        $this.$crc0.$update2(var$2);
}
function jur_CharSet() {
    jur_LeafSet.call(this);
    this.$ch = 0;
}
function jur_CharSet__init_(var_0) {
    var var_1 = new jur_CharSet();
    jur_CharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_CharSet__init_0($this, $ch) {
    jur_LeafSet__init_2($this);
    $this.$ch = $ch;
}
function jur_CharSet_charCount($this) {
    return 1;
}
function jur_CharSet_accepts($this, $strIndex, $testString) {
    return $this.$ch != $testString.$charAt($strIndex) ? (-1) : 1;
}
function jur_CharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$6, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = $testStr.$indexOf1($this.$ch, $strIndex);
        if (var$6 < 0)
            return (-1);
        var$7 = $this.$next;
        $strIndex = var$6 + 1 | 0;
        if (var$7.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
}
function jur_CharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $testStr, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$6 = $testStr.$lastIndexOf0($this.$ch, $lastIndex);
            if (var$6 < 0)
                break a;
            if (var$6 < $strIndex)
                break a;
            if ($this.$next.$matches(var$6 + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$6 + (-1) | 0;
        }
        return var$6;
    }
    return (-1);
}
function jur_CharSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(58)).$append0($this.$ch).$toString();
}
function jur_CharSet_getChar($this) {
    return $this.$ch;
}
function jur_CharSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return $set.$getChar() != $this.$ch ? 0 : 1;
    if (!($set instanceof jur_RangeSet)) {
        if ($set instanceof jur_SupplRangeSet)
            return $set.$contains($this.$ch);
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return 0;
    }
    return $set.$accepts(0, jl_Character_toString($this.$ch)) <= 0 ? 0 : 1;
}
function it_Phases$3$lambda$null$13$lambda$_19_0() {
    jl_Object.call(this);
    this.$_023 = 0.0;
}
function it_Phases$3$lambda$null$13$lambda$_19_0__init_(var_0) {
    var var_1 = new it_Phases$3$lambda$null$13$lambda$_19_0();
    it_Phases$3$lambda$null$13$lambda$_19_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$3$lambda$null$13$lambda$_19_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_023 = var$1;
}
function it_Phases$3$lambda$null$13$lambda$_19_0_get(var$0, var$1) {
    it_Phases$3_lambda$null$12(var$0.$_023, var$1);
}
function ig_LayerBatch$draw$lambda$_3_0() {
    jl_Object.call(this);
}
function ig_LayerBatch$draw$lambda$_3_0__init_() {
    var var_0 = new ig_LayerBatch$draw$lambda$_3_0();
    ig_LayerBatch$draw$lambda$_3_0__init_0(var_0);
    return var_0;
}
function ig_LayerBatch$draw$lambda$_3_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function ig_LayerBatch$draw$lambda$_3_0_get(var$0) {
    return ig_LayerBatch$draw$lambda$_3_0_get0(var$0);
}
function ig_LayerBatch$draw$lambda$_3_0_get0(var$0) {
    return ig_DrawRequest__init_();
}
function it_Phases$3$lambda$null$17$lambda$_15_0() {
    jl_Object.call(this);
}
function it_Phases$3$lambda$null$17$lambda$_15_0__init_() {
    var var_0 = new it_Phases$3$lambda$null$17$lambda$_15_0();
    it_Phases$3$lambda$null$17$lambda$_15_0__init_0(var_0);
    return var_0;
}
function it_Phases$3$lambda$null$17$lambda$_15_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$3$lambda$null$17$lambda$_15_0_get(var$0, var$1) {
    it_Phases$3_lambda$null$16(var$1);
}
function it_Phases$2$lambda$null$9$lambda$_15_0() {
    jl_Object.call(this);
}
function it_Phases$2$lambda$null$9$lambda$_15_0__init_() {
    var var_0 = new it_Phases$2$lambda$null$9$lambda$_15_0();
    it_Phases$2$lambda$null$9$lambda$_15_0__init_0(var_0);
    return var_0;
}
function it_Phases$2$lambda$null$9$lambda$_15_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$2$lambda$null$9$lambda$_15_0_run(var$0) {
    it_Phases$2_lambda$null$8();
}
function it_Phases$2$lambda$null$7$lambda$_17_0() {
    var a = this; jl_Object.call(a);
    a.$_024 = 0;
    a.$_115 = 0.0;
}
function it_Phases$2$lambda$null$7$lambda$_17_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$2$lambda$null$7$lambda$_17_0();
    it_Phases$2$lambda$null$7$lambda$_17_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$2$lambda$null$7$lambda$_17_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_024 = var$1;
    var$0.$_115 = var$2;
}
function it_Phases$2$lambda$null$7$lambda$_17_0_run(var$0) {
    it_Phases$2_lambda$null$6(var$0.$_024, var$0.$_115);
}
function jur_AbstractCharClass$LazyCategoryScope() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category0 = 0;
    a.$mayContainSupplCodepoints1 = 0;
    a.$containsAllSurrogates0 = 0;
}
function jur_AbstractCharClass$LazyCategoryScope__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_1(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyCategoryScope__init_0(var_0, var_1, var_2) {
    var var_3 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AbstractCharClass$LazyCategoryScope__init_1($this, $cat, $mayContainSupplCodepoints) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
}
function jur_AbstractCharClass$LazyCategoryScope__init_2($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
    $this.$containsAllSurrogates0 = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
}
function jur_AbstractCharClass$LazyCategoryScope_computeValue($this) {
    var $chCl;
    $chCl = jur_UnicodeCategoryScope__init_($this.$category0);
    if ($this.$containsAllSurrogates0)
        $chCl.$lowHighSurrogates.$set4(0, 2048);
    $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints1;
    return $chCl;
}
function iaam_Interpolation$Pow() {
    iaam_Interpolation.call(this);
    this.$power0 = 0;
}
function iaam_Interpolation$Pow__init_(var_0) {
    var var_1 = new iaam_Interpolation$Pow();
    iaam_Interpolation$Pow__init_0(var_1, var_0);
    return var_1;
}
function iaam_Interpolation$Pow__init_0($this, $power) {
    iaam_Interpolation__init_0($this);
    $this.$power0 = $power;
}
function iaam_Interpolation$PowOut() {
    iaam_Interpolation$Pow.call(this);
}
function iaam_Interpolation$PowOut__init_(var_0) {
    var var_1 = new iaam_Interpolation$PowOut();
    iaam_Interpolation$PowOut__init_0(var_1, var_0);
    return var_1;
}
function iaam_Interpolation$PowOut__init_0($this, $power) {
    iaam_Interpolation$Pow__init_0($this, $power);
}
function iaam_Interpolation$PowOut_apply($this, $a) {
    return jl_Math_pow($a - 1.0, $this.$power0) * ($this.$power0 % 2 | 0 ? 1 : (-1)) + 1.0;
}
function iaas_Scene$TouchFocus() {
    var a = this; jl_Object.call(a);
    a.$listener = null;
    a.$listenerActor0 = null;
    a.$target = null;
    a.$pointer0 = 0;
    a.$button = null;
}
function iaas_Scene$TouchFocus__init_() {
    var var_0 = new iaas_Scene$TouchFocus();
    iaas_Scene$TouchFocus__init_0(var_0);
    return var_0;
}
function iaas_Scene$TouchFocus__init_1(var_0) {
    var var_1 = new iaas_Scene$TouchFocus();
    iaas_Scene$TouchFocus__init_2(var_1, var_0);
    return var_1;
}
function iaas_Scene$TouchFocus__init_0($this) {
    jl_Object__init_0($this);
}
function iaas_Scene$TouchFocus_reset($this) {
    $this.$listenerActor0 = null;
    $this.$listener = null;
    $this.$target = null;
}
function iaas_Scene$TouchFocus__init_2($this, $x0) {
    iaas_Scene$TouchFocus__init_0($this);
}
function iaass_Style() {
    jl_Object.call(this);
}
function iaass_Style__init_() {
    var var_0 = new iaass_Style();
    iaass_Style__init_0(var_0);
    return var_0;
}
function iaass_Style__init_0($this) {
    jl_Object__init_0($this);
}
function iaasu_Label$LabelStyle() {
    var a = this; iaass_Style.call(a);
    a.$font = null;
    a.$fontColor = null;
    a.$background = null;
}
function iaasu_Label$LabelStyle__init_() {
    var var_0 = new iaasu_Label$LabelStyle();
    iaasu_Label$LabelStyle__init_0(var_0);
    return var_0;
}
function iaasu_Label$LabelStyle__init_1(var_0) {
    var var_1 = new iaasu_Label$LabelStyle();
    iaasu_Label$LabelStyle__init_2(var_1, var_0);
    return var_1;
}
function iaasu_Label$LabelStyle__init_0($this) {
    iaass_Style__init_0($this);
}
function iaasu_Label$LabelStyle__init_2($this, $style) {
    iaass_Style__init_0($this);
    $this.$font = $style.$font;
    if ($style.$fontColor !== null)
        $this.$fontColor = iaag_Color__init_7($style.$fontColor);
    $this.$background = $style.$background;
}
function iu_Styles$1() {
    iaasu_Label$LabelStyle.call(this);
}
function iu_Styles$1__init_() {
    var var_0 = new iu_Styles$1();
    iu_Styles$1__init_0(var_0);
    return var_0;
}
function iu_Styles$1__init_0($this) {
    iaasu_Label$LabelStyle__init_0($this);
    iu_Styles_$callClinit();
    $this.$font = iu_Styles_font;
    iaag_Color_$callClinit();
    $this.$fontColor = iaag_Color_white;
}
function iaaf_Func() {
}
function jl_Readable() {
}
function jn_CharBuffer() {
    jn_Buffer.call(this);
}
function jn_CharBuffer__init_(var_0, var_1, var_2) {
    var var_3 = new jn_CharBuffer();
    jn_CharBuffer__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jn_CharBuffer__init_0($this, $capacity, $position, $limit) {
    jn_Buffer__init_0($this, $capacity);
    $this.$position0 = $position;
    $this.$limit1 = $limit;
}
function jn_CharBuffer_allocate($capacity) {
    if ($capacity >= 0)
        return jn_CharBufferOverArray__init_($capacity);
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(416)).$append3($capacity).$toString()));
}
function jn_CharBuffer_wrap($array, $offset, $length) {
    return jn_CharBufferOverArray__init_0(0, $array.data.length, $array, $offset, $offset + $length | 0, 0);
}
function jn_CharBuffer_wrap0($array) {
    return jn_CharBuffer_wrap($array, 0, $array.data.length);
}
function jn_CharBuffer_get($this, $dst, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i;
    if ($offset >= 0) {
        var$4 = $dst.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(417)).$append3(var$6).$append($rt_s(418)).$append3(var$5).$toString()));
            if (jn_Buffer_remaining($this) < $length)
                $rt_throw(jn_BufferUnderflowException__init_());
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(419)).$append3($length).$append($rt_s(420)).$toString()));
            $pos = $this.$position0;
            $i = 0;
            while ($i < $length) {
                var$6 = $offset + 1 | 0;
                var$5 = $pos + 1 | 0;
                var$4[$offset] = $this.$getChar0($pos);
                $i = $i + 1 | 0;
                $offset = var$6;
                $pos = var$5;
            }
            $this.$position0 = $this.$position0 + $length | 0;
            return $this;
        }
    }
    var$4 = $dst.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(421)).$append3($offset).$append($rt_s(55)).$append3(var$4.length).$append($rt_s(364)).$toString()));
}
function jn_CharBuffer_get0($this, $dst) {
    return $this.$get15($dst, 0, $dst.data.length);
}
function jn_CharBuffer_put($this, $src, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($offset >= 0) {
        var$4 = $src.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(422)).$append3(var$6).$append($rt_s(418)).$append3(var$5).$toString()));
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(419)).$append3($length).$append($rt_s(420)).$toString()));
            $pos = $this.$position0;
            $i = 0;
            while ($i < $length) {
                var$6 = $pos + 1 | 0;
                var$5 = $offset + 1 | 0;
                $this.$putChar($pos, var$4[$offset]);
                $i = $i + 1 | 0;
                $pos = var$6;
                $offset = var$5;
            }
            $this.$position0 = $this.$position0 + $length | 0;
            return $this;
        }
    }
    var$4 = $src.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(421)).$append3($offset).$append($rt_s(55)).$append3(var$4.length).$append($rt_s(364)).$toString()));
}
function jn_CharBuffer_put0($this, $src, $start, $end) {
    var $sz, var$5, var$6, $pos, $pos_0, var$9;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    $sz = $end - $start | 0;
    if (jn_Buffer_remaining($this) < $sz)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($start >= 0 && $start < $src.$length()) {
        if ($end > $src.$length()) {
            var$5 = new jl_IndexOutOfBoundsException;
            var$6 = jl_StringBuilder__init_().$append($rt_s(422)).$append3($end).$append($rt_s(423));
            jl_IndexOutOfBoundsException__init_1(var$5, var$6.$append3($src.$length()).$toString());
            $rt_throw(var$5);
        }
        if ($start > $end)
            $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(424)).$append3($start).$append($rt_s(425)).$append3($end).$toString()));
        $pos = $this.$position0;
        while ($start < $end) {
            $pos_0 = $pos + 1 | 0;
            var$9 = $start + 1 | 0;
            $this.$putChar($pos, $src.$charAt($start));
            $pos = $pos_0;
            $start = var$9;
        }
        $this.$position0 = $this.$position0 + $sz | 0;
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(424)).$append3($start).$append($rt_s(55)).$append3($src.$length()).$append($rt_s(364)).$toString()));
}
function jn_CharBuffer_put1($this, $src) {
    return $this.$put1($src, 0, $src.$length());
}
function jn_CharBuffer_hasArray($this) {
    return $this.$isArrayPresent();
}
function jn_CharBuffer_array($this) {
    return $this.$getArray();
}
function jn_CharBuffer_flip($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_CharBuffer_position($this, $newPosition) {
    jn_Buffer_position0($this, $newPosition);
    return $this;
}
function jn_CharBufferImpl() {
    jn_CharBuffer.call(this);
}
function jn_CharBufferImpl__init_(var_0, var_1, var_2) {
    var var_3 = new jn_CharBufferImpl();
    jn_CharBufferImpl__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jn_CharBufferImpl__init_0($this, $capacity, $position, $limit) {
    jn_CharBuffer__init_0($this, $capacity, $position, $limit);
}
function jn_CharBufferImpl_compact($this) {
    var $sz, $src, $i, var$4;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    a: {
        $sz = jn_Buffer_remaining($this);
        if ($this.$position0 > 0) {
            $src = $this.$position0;
            $i = 0;
            while (true) {
                if ($i >= $sz)
                    break a;
                var$4 = $src + 1 | 0;
                $this.$putChar($i, $this.$getChar0($src));
                $i = $i + 1 | 0;
                $src = var$4;
            }
        }
    }
    $this.$position0 = $sz;
    $this.$limit1 = $this.$capacity;
    $this.$mark = (-1);
    return $this;
}
function jn_CharBufferImpl_isReadOnly($this) {
    return $this.$readOnly();
}
function jn_CharBufferOverArray() {
    var a = this; jn_CharBufferImpl.call(a);
    a.$readOnly1 = 0;
    a.$start1 = 0;
    a.$array0 = null;
}
function jn_CharBufferOverArray__init_(var_0) {
    var var_1 = new jn_CharBufferOverArray();
    jn_CharBufferOverArray__init_1(var_1, var_0);
    return var_1;
}
function jn_CharBufferOverArray__init_0(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_CharBufferOverArray();
    jn_CharBufferOverArray__init_2(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_CharBufferOverArray__init_1($this, $capacity) {
    jn_CharBufferOverArray__init_2($this, 0, $capacity, $rt_createCharArray($capacity), 0, $capacity, 0);
}
function jn_CharBufferOverArray__init_2($this, $start, $capacity, $array, $position, $limit, $readOnly) {
    jn_CharBufferImpl__init_0($this, $capacity, $position, $limit);
    $this.$start1 = $start;
    $this.$readOnly1 = $readOnly;
    $this.$array0 = $array;
}
function jn_CharBufferOverArray_getChar($this, $index) {
    return $this.$array0.data[$index + $this.$start1 | 0];
}
function jn_CharBufferOverArray_putChar($this, $index, $value) {
    $this.$array0.data[$index + $this.$start1 | 0] = $value;
}
function jn_CharBufferOverArray_isArrayPresent($this) {
    return 1;
}
function jn_CharBufferOverArray_getArray($this) {
    return $this.$array0;
}
function jn_CharBufferOverArray_readOnly($this) {
    return $this.$readOnly1;
}
function iaaal_AsynchronousAssetLoader() {
    iaaal_AssetLoader.call(this);
}
function iaaal_AsynchronousAssetLoader__init_(var_0) {
    var var_1 = new iaaal_AsynchronousAssetLoader();
    iaaal_AsynchronousAssetLoader__init_0(var_1, var_0);
    return var_1;
}
function iaaal_AsynchronousAssetLoader__init_0($this, $resolver) {
    iaaal_AssetLoader__init_0($this, $resolver);
}
function iaaml_BaseTmxMapLoader() {
    var a = this; iaaal_AsynchronousAssetLoader.call(a);
    a.$xml = null;
    a.$root1 = null;
    a.$convertObjectToTileSpace = 0;
    a.$flipY = 0;
    a.$mapTileWidth = 0;
    a.$mapTileHeight = 0;
    a.$mapWidthInPixels = 0;
    a.$mapHeightInPixels = 0;
}
function iaaml_BaseTmxMapLoader__init_(var_0) {
    var var_1 = new iaaml_BaseTmxMapLoader();
    iaaml_BaseTmxMapLoader__init_0(var_1, var_0);
    return var_1;
}
function iaaml_BaseTmxMapLoader__init_0($this, $resolver) {
    iaaal_AsynchronousAssetLoader__init_0($this, $resolver);
    $this.$xml = iaaus_XmlReader__init_();
    $this.$flipY = 1;
}
function iaaml_BaseTmxMapLoader_getTileIds($element, $width, $height) {
    var $data, $encoding, $ids, $array, $i, var$9, $is, $compression, $bytes, var$13, $e, $temp, $y, $x, $read, var$19, var$20, var$21, $curr, var$23, $$je;
    $data = $element.$getChildByName($rt_s(426));
    $encoding = $data.$getAttribute($rt_s(427), null);
    if ($encoding === null)
        $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(428)));
    a: {
        b: {
            c: {
                $ids = $rt_createIntArray($rt_imul($width, $height));
                if ($encoding.$equals($rt_s(429))) {
                    $array = $data.$getText().$split($rt_s(430));
                    $i = 0;
                    while (true) {
                        var$9 = $array.data;
                        if ($i >= var$9.length)
                            break;
                        $ids.data[$i] = jl_Long_parseLong(var$9[$i].$trim()).lo;
                        $i = $i + 1 | 0;
                    }
                } else {
                    if (!$encoding.$equals($rt_s(431)))
                        $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(432)).$append($encoding).$append($rt_s(433)).$toString()));
                    $is = null;
                    d: {
                        try {
                            e: {
                                try {
                                    $compression = $data.$getAttribute($rt_s(434), null);
                                    $bytes = iaaus_Base64Coder_decode($data.$getText());
                                    if ($compression !== null)
                                        break e;
                                    $is = ji_ByteArrayInputStream__init_($bytes);
                                    var$13 = $is;
                                    break d;
                                } catch ($$e) {
                                    $$je = $rt_wrapException($$e);
                                    if ($$je instanceof ji_IOException) {
                                        $e = $$je;
                                        break b;
                                    } else {
                                        throw $$e;
                                    }
                                }
                            }
                            f: {
                                try {
                                    if (!$compression.$equals($rt_s(435)))
                                        break f;
                                    var$9 = $bytes.data;
                                    $is = ji_BufferedInputStream__init_(juz_GZIPInputStream__init_(ji_ByteArrayInputStream__init_($bytes), var$9.length));
                                    var$13 = $is;
                                    break d;
                                } catch ($$e) {
                                    $$je = $rt_wrapException($$e);
                                    if ($$je instanceof ji_IOException) {
                                        $e = $$je;
                                        break b;
                                    } else {
                                        throw $$e;
                                    }
                                }
                            }
                            g: {
                                try {
                                    if ($compression.$equals($rt_s(436)))
                                        break g;
                                    $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(437)).$append($compression).$append($rt_s(433)).$toString()));
                                } catch ($$e) {
                                    $$je = $rt_wrapException($$e);
                                    if ($$je instanceof ji_IOException) {
                                        $e = $$je;
                                        break b;
                                    } else {
                                        throw $$e;
                                    }
                                }
                            }
                            try {
                                $is = ji_BufferedInputStream__init_(juz_InflaterInputStream__init_(ji_ByteArrayInputStream__init_($bytes)));
                                var$13 = $is;
                                break d;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof ji_IOException) {
                                    $e = $$je;
                                    break b;
                                } else {
                                    throw $$e;
                                }
                            }
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            var$13 = $$je;
                            break a;

                        }
                    }
                    try {
                        $temp = $rt_createByteArray(4);
                        $y = 0;
                        while ($y < $height) {
                            $x = 0;
                            while ($x < $width) {
                                $read = var$13.$read0($temp);
                                h: {
                                    while (true) {
                                        var$19 = $temp.data;
                                        var$20 = var$19.length;
                                        var$21 = $rt_compare($read, var$20);
                                        if (var$21 >= 0)
                                            break h;
                                        $curr = var$13.$read($temp, $read, var$20 - $read | 0);
                                        if ($curr == (-1))
                                            break;
                                        $read = $read + $curr | 0;
                                    }
                                }
                                if (var$21)
                                    break c;
                                var$9 = $ids.data;
                                var$23 = $rt_imul($y, $width) + $x | 0;
                                var$20 = iaaml_BaseTmxMapLoader_unsignedByteToInt(var$19[0]) | iaaml_BaseTmxMapLoader_unsignedByteToInt(var$19[1]) << 8;
                                var$21 = var$19[2];
                                var$9[var$23] = var$20 | iaaml_BaseTmxMapLoader_unsignedByteToInt(var$21) << 16 | iaaml_BaseTmxMapLoader_unsignedByteToInt(var$19[3]) << 24;
                                $x = $x + 1 | 0;
                            }
                            $y = $y + 1 | 0;
                        }
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof ji_IOException) {
                            $e = $$je;
                            break b;
                        } else{
                            var$13 = $$je;
                            break a;
                        }
                    }
                    iaaui_Streams_closeQuietly(var$13);
                }
                return $ids;
            }
            try {
                $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(438)));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    $e = $$je;
                } else{
                    var$13 = $$je;
                    break a;
                }
            }
        }
        try {
            $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(439)).$append($e.$getMessage()).$toString()));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$13 = $$je;

        }
    }
    iaaui_Streams_closeQuietly($is);
    $rt_throw(var$13);
}
function iaaml_BaseTmxMapLoader_unsignedByteToInt($b) {
    return $b & 255;
}
function iaaml_BaseTmxMapLoader_getRelativeFileHandle($file, $path) {
    var $tokenizer, $result, $token;
    $tokenizer = ju_StringTokenizer__init_($path, $rt_s(440));
    $result = $file.$parent0();
    while ($tokenizer.$hasMoreElements()) {
        $token = $tokenizer.$nextToken();
        $result = !$token.$equals($rt_s(441)) ? $result.$child($token) : $result.$parent0();
    }
    return $result;
}
function iaaml_BaseTmxMapLoader_loadTileLayer($this, $map, $parentLayers, $element) {
    var $width, $height, $tileWidth, $tileHeight, $layer, $ids, $tilesets, $y, $x, $id, $flipHorizontally, $flipVertically, $flipDiagonally, $tile, $cell, $properties;
    if ($element.$getName().$equals($rt_s(442))) {
        $width = $element.$getIntAttribute($rt_s(443), 0);
        $height = $element.$getIntAttribute($rt_s(444), 0);
        $tileWidth = $map.$properties.$get16($rt_s(445)).$intValue();
        $tileHeight = $map.$properties.$get16($rt_s(446)).$intValue();
        $layer = iaam_TileLayer__init_($width, $height, $tileWidth, $tileHeight);
        $this.$loadBasicLayerInfo($layer, $element);
        $ids = iaaml_BaseTmxMapLoader_getTileIds($element, $width, $height);
        $tilesets = $map.$tilesets;
        $y = 0;
        while ($y < $height) {
            $x = 0;
            while ($x < $width) {
                $id = $ids.data[$rt_imul($y, $width) + $x | 0];
                $flipHorizontally = !($id & (-2147483648)) ? 0 : 1;
                $flipVertically = !($id & 1073741824) ? 0 : 1;
                $flipDiagonally = !($id & 536870912) ? 0 : 1;
                $tile = $tilesets.$getTile($id & 536870911);
                if ($tile !== null) {
                    $cell = $this.$createTileLayerCell($flipHorizontally, $flipVertically, $flipDiagonally);
                    $cell.$tile0 = $tile;
                    $layer.$setCell($x, !$this.$flipY ? $y : ($height - 1 | 0) - $y | 0, $cell);
                }
                $x = $x + 1 | 0;
            }
            $y = $y + 1 | 0;
        }
        $properties = $element.$getChildByName($rt_s(447));
        if ($properties !== null)
            $this.$loadProperties($layer.$properties0, $properties);
        $parentLayers.$add1($layer);
    }
}
function iaaml_BaseTmxMapLoader_loadObjectGroup($this, $map, $parentLayers, $element) {
    var $layer, $properties, var$6, $objectElement;
    if ($element.$getName().$equals($rt_s(448))) {
        $layer = iaam_MapLayer__init_();
        $this.$loadBasicLayerInfo($layer, $element);
        $properties = $element.$getChildByName($rt_s(447));
        if ($properties !== null)
            $this.$loadProperties($layer.$properties0, $properties);
        var$6 = $element.$getChildrenByName($rt_s(449)).$iterator();
        while (var$6.$hasNext()) {
            $objectElement = var$6.$next0();
            $this.$loadObject($map, $layer, $objectElement);
        }
        $parentLayers.$add1($layer);
    }
}
function iaaml_BaseTmxMapLoader_loadBasicLayerInfo($this, $layer, $element) {
    var $name, $opacity, $visible, $offsetX, $offsetY;
    $name = $element.$getAttribute($rt_s(450), null);
    $opacity = jl_Float_parseFloat($element.$getAttribute($rt_s(451), $rt_s(452)));
    $visible = $element.$getIntAttribute($rt_s(453), 1) != 1 ? 0 : 1;
    $offsetX = $element.$getFloatAttribute($rt_s(454), 0.0);
    $offsetY = $element.$getFloatAttribute($rt_s(455), 0.0);
    $layer.$name8 = $name;
    $layer.$opacity = $opacity;
    $layer.$visible1 = $visible;
    $layer.$setOffsetX($offsetX);
    $layer.$setOffsetY($offsetY);
}
function iaaml_BaseTmxMapLoader_loadObject($this, $map, $layer, $element) {
    $this.$loadObject0($map, $layer.$objects0, $element, $this.$mapHeightInPixels);
}
function iaaml_BaseTmxMapLoader_loadObject0($this, $map, $tile, $element) {
    $this.$loadObject0($map, $tile.$getObjects(), $element, $tile.$region0.$getHeight0());
}
function iaaml_BaseTmxMapLoader_loadObject1($this, $map, $objects, $element, $heightInPixels) {
    var $tileMapObject, $scaleX, $scaleY, $x, $y, $width, $height, var$12, $points, var$14, var$15, $vertices, $i, var$18, $point, var$20, var$21, $polygon, $polyline, $id, $flipHorizontally, $flipVertically, $tile, $textureRegion, $y1, $objectWidth, $objectHeight, $rotation, $type, $properties;
    if ($element.$getName().$equals($rt_s(449))) {
        $tileMapObject = null;
        $scaleX = !$this.$convertObjectToTileSpace ? 1.0 : 1.0 / $this.$mapTileWidth;
        $scaleY = !$this.$convertObjectToTileSpace ? 1.0 : 1.0 / $this.$mapTileHeight;
        $x = $element.$getFloatAttribute($rt_s(268), 0.0) * $scaleX;
        $y = (!$this.$flipY ? $element.$getFloatAttribute($rt_s(269), 0.0) : $heightInPixels - $element.$getFloatAttribute($rt_s(269), 0.0)) * $scaleY;
        $width = $element.$getFloatAttribute($rt_s(443), 0.0) * $scaleX;
        $height = $element.$getFloatAttribute($rt_s(444), 0.0) * $scaleY;
        if ($element.$getChildCount() > 0) {
            var$12 = $element.$getChildByName($rt_s(456));
            if (var$12 !== null) {
                $points = var$12.$getAttribute0($rt_s(457)).$split($rt_s(32));
                var$14 = $points.data;
                var$15 = var$14.length;
                $vertices = $rt_createFloatArray(var$15 * 2 | 0);
                $i = 0;
                while ($i < var$15) {
                    var$18 = $vertices.data;
                    $point = var$14[$i].$split($rt_s(430));
                    var$20 = $point.data;
                    var$21 = $i * 2 | 0;
                    var$18[var$21] = jl_Float_parseFloat(var$20[0]) * $scaleX;
                    var$18[var$21 + 1 | 0] = jl_Float_parseFloat(var$20[1]) * $scaleY * (!$this.$flipY ? 1 : (-1));
                    $i = $i + 1 | 0;
                }
                $polygon = iaamg_Polygon__init_($vertices);
                $polygon.$setPosition($x, $y);
                $tileMapObject = iaamo_PolygonMapObject__init_($polygon);
            } else {
                var$12 = $element.$getChildByName($rt_s(458));
                if (var$12 !== null) {
                    $points = var$12.$getAttribute0($rt_s(457)).$split($rt_s(32));
                    var$14 = $points.data;
                    var$21 = var$14.length;
                    $vertices = $rt_createFloatArray(var$21 * 2 | 0);
                    $i = 0;
                    while ($i < var$21) {
                        var$18 = $vertices.data;
                        $point = var$14[$i].$split($rt_s(430));
                        var$20 = $point.data;
                        var$15 = $i * 2 | 0;
                        var$18[var$15] = jl_Float_parseFloat(var$20[0]) * $scaleX;
                        var$18[var$15 + 1 | 0] = jl_Float_parseFloat(var$20[1]) * $scaleY * (!$this.$flipY ? 1 : (-1));
                        $i = $i + 1 | 0;
                    }
                    $polyline = iaamg_Polyline__init_($vertices);
                    $polyline.$setPosition($x, $y);
                    $tileMapObject = iaamo_PolylineMapObject__init_($polyline);
                } else if ($element.$getChildByName($rt_s(459)) !== null)
                    $tileMapObject = iaamo_EllipseMapObject__init_($x, !$this.$flipY ? $y : $y - $height, $width, $height);
            }
        }
        if ($tileMapObject === null) {
            var$12 = $element.$getAttribute($rt_s(460), null);
            if (var$12 === null)
                $tileMapObject = iaamo_RectangleMapObject__init_($x, !$this.$flipY ? $y : $y - $height, $width, $height);
            else {
                $id = jl_Long_parseLong(var$12).lo;
                $flipHorizontally = !($id & (-2147483648)) ? 0 : 1;
                $flipVertically = !($id & 1073741824) ? 0 : 1;
                $tile = $map.$tilesets.$getTile($id & 536870911);
                $tileMapObject = iaamo_TileMapObject__init_($tile, $flipHorizontally, $flipVertically);
                $textureRegion = $tileMapObject.$textureRegion;
                $tileMapObject.$properties1.$put2($rt_s(460), jl_Integer_valueOf0($id));
                $tileMapObject.$x4 = $x;
                $y1 = !$this.$flipY ? $y - $height : $y;
                $tileMapObject.$y4 = $y1;
                $objectWidth = $element.$getFloatAttribute($rt_s(443), $textureRegion.$getWidth0());
                $objectHeight = $element.$getFloatAttribute($rt_s(444), $textureRegion.$getHeight0());
                $tileMapObject.$scaleX0 = $scaleX * $objectWidth / $textureRegion.$getWidth0();
                $tileMapObject.$scaleY0 = $scaleY * $objectHeight / $textureRegion.$getHeight0();
                $tileMapObject.$rotation0 = $element.$getFloatAttribute($rt_s(461), 0.0);
            }
        }
        $tileMapObject.$name9 = $element.$getAttribute($rt_s(450), null);
        $rotation = $element.$getAttribute($rt_s(461), null);
        if ($rotation !== null)
            $tileMapObject.$properties1.$put2($rt_s(461), jl_Float_valueOf(jl_Float_parseFloat($rotation)));
        $type = $element.$getAttribute($rt_s(462), null);
        if ($type !== null)
            $tileMapObject.$properties1.$put2($rt_s(462), $type);
        $id = $element.$getIntAttribute($rt_s(463), 0);
        if ($id)
            $tileMapObject.$properties1.$put2($rt_s(463), jl_Integer_valueOf0($id));
        $tileMapObject.$properties1.$put2($rt_s(268), jl_Float_valueOf($x));
        if ($tileMapObject instanceof iaamo_TileMapObject)
            $tileMapObject.$properties1.$put2($rt_s(269), jl_Float_valueOf($y));
        else {
            var$12 = $tileMapObject.$properties1;
            if ($this.$flipY)
                $y = $y - $height;
            var$12.$put2($rt_s(269), jl_Float_valueOf($y));
        }
        $tileMapObject.$properties1.$put2($rt_s(443), jl_Float_valueOf($width));
        $tileMapObject.$properties1.$put2($rt_s(444), jl_Float_valueOf($height));
        $tileMapObject.$visible2 = $element.$getIntAttribute($rt_s(453), 1) != 1 ? 0 : 1;
        $properties = $element.$getChildByName($rt_s(447));
        if ($properties !== null)
            $this.$loadProperties($tileMapObject.$properties1, $properties);
        $objects.$add1($tileMapObject);
    }
}
function iaaml_BaseTmxMapLoader_loadProperties($this, $properties, $element) {
    var var$3, $property, $name, $value, $type, $castValue;
    if ($element === null)
        return;
    a: {
        if ($element.$getName().$equals($rt_s(447))) {
            var$3 = $element.$getChildrenByName($rt_s(464)).$iterator();
            while (true) {
                if (!var$3.$hasNext())
                    break a;
                $property = var$3.$next0();
                $name = $property.$getAttribute($rt_s(450), null);
                $value = $property.$getAttribute($rt_s(465), null);
                $type = $property.$getAttribute($rt_s(462), null);
                if ($value === null)
                    $value = $property.$getText();
                $castValue = iaaml_BaseTmxMapLoader_castProperty($this, $name, $value, $type);
                $properties.$put2($name, $castValue);
            }
        }
    }
}
function iaaml_BaseTmxMapLoader_castProperty($this, $name, $value, $type) {
    var $opaqueColor, $alpha;
    if ($type === null)
        return $value;
    if ($type.$equals($rt_s(466)))
        return jl_Integer_valueOf1($value);
    if ($type.$equals($rt_s(467)))
        return jl_Float_valueOf0($value);
    if ($type.$equals($rt_s(468)))
        return jl_Boolean_valueOf0($value);
    if (!$type.$equals($rt_s(469)))
        $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(470)).$append($name).$append($rt_s(471)).$append($type).$append($rt_s(472)).$toString()));
    $opaqueColor = $value.$substring(3);
    $alpha = $value.$substring0(1, 3);
    return iaag_Color_valueOf(jl_StringBuilder__init_().$append($opaqueColor).$append($alpha).$toString());
}
function iaaml_BaseTmxMapLoader_createTileLayerCell($this, $flipHorizontally, $flipVertically, $flipDiagonally) {
    var $cell;
    $cell = iaam_TileLayer$Cell__init_();
    if (!$flipDiagonally) {
        $cell.$rotation1 = !$flipVertically ? 0 : 2;
        $cell.$flipHorizontally = $flipHorizontally;
        $cell.$flipVertically = $flipVertically;
    } else if ($flipHorizontally && $flipVertically) {
        $cell.$flipHorizontally = 1;
        $cell.$rotation1 = 3;
    } else if ($flipHorizontally)
        $cell.$rotation1 = 3;
    else if ($flipVertically)
        $cell.$rotation1 = 1;
    else {
        $cell.$flipVertically = 1;
        $cell.$rotation1 = 3;
    }
    return $cell;
}
function iaaml_TmxMapLoader() {
    iaaml_BaseTmxMapLoader.call(this);
}
function iaaml_TmxMapLoader__init_() {
    var var_0 = new iaaml_TmxMapLoader();
    iaaml_TmxMapLoader__init_0(var_0);
    return var_0;
}
function iaaml_TmxMapLoader__init_0($this) {
    iaaml_BaseTmxMapLoader__init_0($this, iaaalr_InternalFileHandleResolver__init_());
}
function iaaml_TmxMapLoader_load($this, $fileName) {
    return $this.$load1($fileName, iaaml_TmxMapLoader$Parameters__init_());
}
function jur_AbstractCharClass$LazyJavaTitleCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$02 = null;
}
function jur_AbstractCharClass$LazyJavaTitleCase$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaTitleCase$1();
    jur_AbstractCharClass$LazyJavaTitleCase$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaTitleCase$1__init_0($this, $this$0) {
    $this.$this$02 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaTitleCase$1_contains($this, $ch) {
    return jl_Character_isTitleCase($ch);
}
function it_Phases$3$lambda$$23$lambda$_9_0() {
    jl_Object.call(this);
}
function it_Phases$3$lambda$$23$lambda$_9_0__init_() {
    var var_0 = new it_Phases$3$lambda$$23$lambda$_9_0();
    it_Phases$3$lambda$$23$lambda$_9_0__init_0(var_0);
    return var_0;
}
function it_Phases$3$lambda$$23$lambda$_9_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$3$lambda$$23$lambda$_9_0_run(var$0) {
    it_Phases$3_lambda$null$22();
}
function iaau_ArcRuntimeException() {
    jl_RuntimeException.call(this);
}
function iaau_ArcRuntimeException__init_0(var_0) {
    var var_1 = new iaau_ArcRuntimeException();
    iaau_ArcRuntimeException__init_1(var_1, var_0);
    return var_1;
}
function iaau_ArcRuntimeException__init_(var_0, var_1) {
    var var_2 = new iaau_ArcRuntimeException();
    iaau_ArcRuntimeException__init_2(var_2, var_0, var_1);
    return var_2;
}
function iaau_ArcRuntimeException__init_1($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
function iaau_ArcRuntimeException__init_2($this, $message, $t) {
    jl_RuntimeException__init_3($this, $message, $t);
}
function iaabte_PixmapEmulator$1() {
    jl_Object.call(this);
}
var iaabte_PixmapEmulator$1_$SwitchMap$io$anuke$arc$backends$teavm$emu$PixmapEmulator$DrawType = null;
function iaabte_PixmapEmulator$1_$callClinit() {
    iaabte_PixmapEmulator$1_$callClinit = $rt_eraseClinit(iaabte_PixmapEmulator$1);
    iaabte_PixmapEmulator$1__clinit_();
}
function iaabte_PixmapEmulator$1__clinit_() {
    var $$je;
    iaabte_PixmapEmulator$1_$SwitchMap$io$anuke$arc$backends$teavm$emu$PixmapEmulator$DrawType = $rt_createIntArray(iaabte_PixmapEmulator$DrawType_values().data.length);
    a: {
        try {
            iaabte_PixmapEmulator$1_$SwitchMap$io$anuke$arc$backends$teavm$emu$PixmapEmulator$DrawType.data[jl_Enum_ordinal(iaabte_PixmapEmulator$DrawType_FILL)] = 1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    b: {
        try {
            iaabte_PixmapEmulator$1_$SwitchMap$io$anuke$arc$backends$teavm$emu$PixmapEmulator$DrawType.data[jl_Enum_ordinal(iaabte_PixmapEmulator$DrawType_STROKE)] = 2;
            break b;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
}
function iaasul_Scl() {
    jl_Object.call(this);
}
var iaasul_Scl_scl = 0.0;
var iaasul_Scl_addition = 0.0;
var iaasul_Scl_product = 0.0;
function iaasul_Scl_$callClinit() {
    iaasul_Scl_$callClinit = $rt_eraseClinit(iaasul_Scl);
    iaasul_Scl__clinit_();
}
function iaasul_Scl_scl0($amount) {
    var var$2;
    iaasul_Scl_$callClinit();
    if (iaasul_Scl_scl < 0.0) {
        iaa_Core_$callClinit();
        var$2 = iaa_Core_app.$getType0();
        iaa_Application$ApplicationType_$callClinit();
        if (var$2 === iaa_Application$ApplicationType_Desktop)
            iaasul_Scl_scl = 1.0 * iaasul_Scl_product;
        else if (iaa_Core_app.$getType0() === iaa_Application$ApplicationType_WebGL)
            iaasul_Scl_scl = 1.0 * iaasul_Scl_product;
        else
            iaasul_Scl_scl = jl_Math_max(Long_toNumber(jl_Math_round((iaa_Core_graphics.$getDensity() / 1.5 + iaasul_Scl_addition) / 0.5)) * 0.5, 1.0) * iaasul_Scl_product;
    }
    return $amount * iaasul_Scl_scl;
}
function iaasul_Scl__clinit_() {
    iaasul_Scl_scl = (-1.0);
    iaasul_Scl_addition = 0.0;
    iaasul_Scl_product = 1.0;
}
function iaau_Scaling() {
    jl_Enum.call(this);
}
var iaau_Scaling_fit = null;
var iaau_Scaling_fill = null;
var iaau_Scaling_fillX = null;
var iaau_Scaling_fillY = null;
var iaau_Scaling_stretch = null;
var iaau_Scaling_stretchX = null;
var iaau_Scaling_stretchY = null;
var iaau_Scaling_none = null;
var iaau_Scaling_temp = null;
var iaau_Scaling_$VALUES = null;
function iaau_Scaling_$callClinit() {
    iaau_Scaling_$callClinit = $rt_eraseClinit(iaau_Scaling);
    iaau_Scaling__clinit_();
}
function iaau_Scaling__init_(var_0, var_1) {
    var var_2 = new iaau_Scaling();
    iaau_Scaling__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaau_Scaling_values() {
    iaau_Scaling_$callClinit();
    return iaau_Scaling_$VALUES.$clone();
}
function iaau_Scaling__init_0($this, var$1, var$2) {
    iaau_Scaling_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaau_Scaling_apply($this, $sourceWidth, $sourceHeight, $targetWidth, $targetHeight) {
    var $targetRatio, $sourceRatio, $scale;
    a: {
        iaau_Scaling$1_$callClinit();
        switch (iaau_Scaling$1_$SwitchMap$io$anuke$arc$util$Scaling.data[jl_Enum_ordinal($this)]) {
            case 1:
                $targetRatio = $targetHeight / $targetWidth;
                $sourceRatio = $sourceHeight / $sourceWidth;
                $scale = $targetRatio <= $sourceRatio ? $targetHeight / $sourceHeight : $targetWidth / $sourceWidth;
                iaau_Scaling_temp.$x0 = $sourceWidth * $scale;
                iaau_Scaling_temp.$y0 = $sourceHeight * $scale;
                break a;
            case 2:
                $targetRatio = $targetHeight / $targetWidth;
                $sourceRatio = $sourceHeight / $sourceWidth;
                $scale = $targetRatio >= $sourceRatio ? $targetHeight / $sourceHeight : $targetWidth / $sourceWidth;
                iaau_Scaling_temp.$x0 = $sourceWidth * $scale;
                iaau_Scaling_temp.$y0 = $sourceHeight * $scale;
                break a;
            case 3:
                $scale = $targetWidth / $sourceWidth;
                iaau_Scaling_temp.$x0 = $sourceWidth * $scale;
                iaau_Scaling_temp.$y0 = $sourceHeight * $scale;
                break a;
            case 4:
                $scale = $targetHeight / $sourceHeight;
                iaau_Scaling_temp.$x0 = $sourceWidth * $scale;
                iaau_Scaling_temp.$y0 = $sourceHeight * $scale;
                break a;
            case 5:
                break;
            case 6:
                iaau_Scaling_temp.$x0 = $targetWidth;
                iaau_Scaling_temp.$y0 = $sourceHeight;
                break a;
            case 7:
                iaau_Scaling_temp.$x0 = $sourceWidth;
                iaau_Scaling_temp.$y0 = $targetHeight;
                break a;
            case 8:
                iaau_Scaling_temp.$x0 = $sourceWidth;
                iaau_Scaling_temp.$y0 = $sourceHeight;
                break a;
            default:
                break a;
        }
        iaau_Scaling_temp.$x0 = $targetWidth;
        iaau_Scaling_temp.$y0 = $targetHeight;
    }
    return iaau_Scaling_temp;
}
function iaau_Scaling__clinit_() {
    var var$1, var$2;
    iaau_Scaling_fit = iaau_Scaling__init_($rt_s(473), 0);
    iaau_Scaling_fill = iaau_Scaling__init_($rt_s(474), 1);
    iaau_Scaling_fillX = iaau_Scaling__init_($rt_s(475), 2);
    iaau_Scaling_fillY = iaau_Scaling__init_($rt_s(476), 3);
    iaau_Scaling_stretch = iaau_Scaling__init_($rt_s(477), 4);
    iaau_Scaling_stretchX = iaau_Scaling__init_($rt_s(478), 5);
    iaau_Scaling_stretchY = iaau_Scaling__init_($rt_s(479), 6);
    iaau_Scaling_none = iaau_Scaling__init_($rt_s(480), 7);
    var$1 = $rt_createArray(iaau_Scaling, 8);
    var$2 = var$1.data;
    var$2[0] = iaau_Scaling_fit;
    var$2[1] = iaau_Scaling_fill;
    var$2[2] = iaau_Scaling_fillX;
    var$2[3] = iaau_Scaling_fillY;
    var$2[4] = iaau_Scaling_stretch;
    var$2[5] = iaau_Scaling_stretchX;
    var$2[6] = iaau_Scaling_stretchY;
    var$2[7] = iaau_Scaling_none;
    iaau_Scaling_$VALUES = var$1;
    iaau_Scaling_temp = iaamg_Vector2__init_0();
}
function jnc_UnsupportedCharsetException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName0 = null;
}
function jnc_UnsupportedCharsetException__init_(var_0) {
    var var_1 = new jnc_UnsupportedCharsetException();
    jnc_UnsupportedCharsetException__init_0(var_1, var_0);
    return var_1;
}
function jnc_UnsupportedCharsetException__init_0($this, $charsetName) {
    jl_IllegalArgumentException__init_2($this);
    $this.$charsetName0 = $charsetName;
}
function it_Phases$1$lambda$$22$lambda$_2_0() {
    jl_Object.call(this);
}
function it_Phases$1$lambda$$22$lambda$_2_0__init_() {
    var var_0 = new it_Phases$1$lambda$$22$lambda$_2_0();
    it_Phases$1$lambda$$22$lambda$_2_0__init_0(var_0);
    return var_0;
}
function it_Phases$1$lambda$$22$lambda$_2_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$1$lambda$$22$lambda$_2_0_run(var$0) {
    it_Phases$1_lambda$null$21();
}
function jur_AbstractCharClass$LazyJavaISOControl$1() {
    jur_AbstractCharClass.call(this);
    this.$this$03 = null;
}
function jur_AbstractCharClass$LazyJavaISOControl$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaISOControl$1();
    jur_AbstractCharClass$LazyJavaISOControl$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaISOControl$1__init_0($this, $this$0) {
    $this.$this$03 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaISOControl$1_contains($this, $ch) {
    return jl_Character_isISOControl($ch);
}
function jn_FloatBuffer() {
    jn_Buffer.call(this);
}
function jn_FloatBuffer__init_(var_0, var_1, var_2) {
    var var_3 = new jn_FloatBuffer();
    jn_FloatBuffer__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jn_FloatBuffer__init_0($this, $capacity, $position, $limit) {
    jn_Buffer__init_0($this, $capacity);
    $this.$position0 = $position;
    $this.$limit1 = $limit;
}
function jn_FloatBuffer_get($this, $dst, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i;
    if ($offset >= 0) {
        var$4 = $dst.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(481)).$append3(var$6).$append($rt_s(418)).$append3(var$5).$toString()));
            if (jn_Buffer_remaining($this) < $length)
                $rt_throw(jn_BufferUnderflowException__init_());
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(419)).$append3($length).$append($rt_s(420)).$toString()));
            $pos = $this.$position0;
            $i = 0;
            while ($i < $length) {
                var$6 = $offset + 1 | 0;
                var$5 = $pos + 1 | 0;
                var$4[$offset] = $this.$getElement0($pos);
                $i = $i + 1 | 0;
                $offset = var$6;
                $pos = var$5;
            }
            $this.$position0 = $this.$position0 + $length | 0;
            return $this;
        }
    }
    var$4 = $dst.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(421)).$append3($offset).$append($rt_s(55)).$append3(var$4.length).$append($rt_s(364)).$toString()));
}
function jn_FloatBuffer_get0($this, $dst) {
    return $this.$get17($dst, 0, $dst.data.length);
}
function jn_FloatBuffer_put($this, $src, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($offset >= 0) {
        var$4 = $src.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(482)).$append3(var$6).$append($rt_s(418)).$append3(var$5).$toString()));
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(419)).$append3($length).$append($rt_s(420)).$toString()));
            $pos = $this.$position0;
            $i = 0;
            while ($i < $length) {
                var$6 = $pos + 1 | 0;
                var$5 = $offset + 1 | 0;
                $this.$putElement0($pos, var$4[$offset]);
                $i = $i + 1 | 0;
                $pos = var$6;
                $offset = var$5;
            }
            $this.$position0 = $this.$position0 + $length | 0;
            return $this;
        }
    }
    var$4 = $src.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(421)).$append3($offset).$append($rt_s(55)).$append3(var$4.length).$append($rt_s(364)).$toString()));
}
function jn_FloatBuffer_hasArray($this) {
    return $this.$isArrayPresent();
}
function jn_FloatBuffer_array($this) {
    return $this.$getArray0();
}
function jn_FloatBuffer_clear($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_FloatBuffer_flip($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_FloatBuffer_limit($this, $newLimit) {
    jn_Buffer_limit0($this, $newLimit);
    return $this;
}
function jn_FloatBuffer_position($this, $newPosition) {
    jn_Buffer_position0($this, $newPosition);
    return $this;
}
function jn_FloatBuffer_flip0($this) {
    return jn_FloatBuffer_flip($this);
}
function jn_FloatBuffer_clear0($this) {
    return jn_FloatBuffer_clear($this);
}
function jn_FloatBuffer_limit0($this, var$1) {
    return $this.$limit2(var$1);
}
function jn_FloatBuffer_position0($this, var$1) {
    return $this.$position4(var$1);
}
function jn_FloatBufferImpl() {
    jn_FloatBuffer.call(this);
}
function jn_FloatBufferImpl__init_(var_0, var_1, var_2) {
    var var_3 = new jn_FloatBufferImpl();
    jn_FloatBufferImpl__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jn_FloatBufferImpl__init_0($this, $capacity, $position, $limit) {
    jn_FloatBuffer__init_0($this, $capacity, $position, $limit);
}
function jn_FloatBufferImpl_duplicate($this) {
    return $this.$duplicate(0, $this.$capacity, $this.$position0, $this.$limit1, $this.$isReadOnly());
}
function jn_FloatBufferImpl_isReadOnly($this) {
    return $this.$readOnly();
}
function jn_FloatBufferOverByteBuffer() {
    var a = this; jn_FloatBufferImpl.call(a);
    a.$byteByffer0 = null;
    a.$readOnly2 = 0;
    a.$start2 = 0;
}
function jn_FloatBufferOverByteBuffer__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_FloatBufferOverByteBuffer();
    jn_FloatBufferOverByteBuffer__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_FloatBufferOverByteBuffer__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_FloatBufferImpl__init_0($this, $capacity, $position, $limit);
    $this.$start2 = $start;
    $this.$byteByffer0 = $byteBuffer;
    $this.$readOnly2 = $readOnly;
}
function jn_FloatBufferOverByteBuffer_isArrayPresent($this) {
    return 0;
}
function jn_FloatBufferOverByteBuffer_getArray($this) {
    $rt_throw(jl_UnsupportedOperationException__init_());
}
function jn_FloatBufferOverByteBuffer_readOnly($this) {
    return $this.$readOnly2;
}
function iaabt_TeaFi$FSEntry() {
    var a = this; jl_Object.call(a);
    a.$childEntries = null;
    a.$data0 = null;
    a.$directory = 0;
    a.$imageElem = null;
}
function iaabt_TeaFi$FSEntry__init_() {
    var var_0 = new iaabt_TeaFi$FSEntry();
    iaabt_TeaFi$FSEntry__init_0(var_0);
    return var_0;
}
function iaabt_TeaFi$FSEntry__init_0($this) {
    jl_Object__init_0($this);
    $this.$childEntries = iaac_ObjectMap__init_();
}
function iaagg_GLFrameBuffer$FrameBufferRenderBufferAttachmentSpec() {
    jl_Object.call(this);
    this.$internalFormat0 = 0;
}
function iaagg_GLFrameBuffer$FrameBufferRenderBufferAttachmentSpec__init_(var_0) {
    var var_1 = new iaagg_GLFrameBuffer$FrameBufferRenderBufferAttachmentSpec();
    iaagg_GLFrameBuffer$FrameBufferRenderBufferAttachmentSpec__init_0(var_1, var_0);
    return var_1;
}
function iaagg_GLFrameBuffer$FrameBufferRenderBufferAttachmentSpec__init_0($this, $internalFormat) {
    jl_Object__init_0($this);
    $this.$internalFormat0 = $internalFormat;
}
function cbgu_Array() {
    var a = this; jl_Object.call(a);
    a.$items2 = null;
    a.$ordered1 = 0;
}
function cbgu_Array__init_() {
    var var_0 = new cbgu_Array();
    cbgu_Array__init_0(var_0);
    return var_0;
}
function cbgu_Array__init_1(var_0, var_1) {
    var var_2 = new cbgu_Array();
    cbgu_Array__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbgu_Array__init_0($this) {
    cbgu_Array__init_2($this, 1, 16);
}
function cbgu_Array__init_2($this, $ordered, $capacity) {
    jl_Object__init_0($this);
    $this.$ordered1 = $ordered;
    $this.$items2 = $rt_createArray(jl_Object, $capacity);
}
function cjj_GZIPHeader() {
    var a = this; jl_Object.call(a);
    a.$text0 = 0;
    a.$fhcrc = 0;
    a.$time = Long_ZERO;
    a.$xflags = 0;
    a.$os = 0;
    a.$extra = null;
    a.$name0 = null;
    a.$comment = null;
    a.$hcrc = 0;
    a.$crc = Long_ZERO;
    a.$done = 0;
    a.$mtime = Long_ZERO;
}
function cjj_GZIPHeader__init_() {
    var var_0 = new cjj_GZIPHeader();
    cjj_GZIPHeader__init_0(var_0);
    return var_0;
}
function cjj_GZIPHeader__init_0($this) {
    jl_Object__init_0($this);
    $this.$text0 = 0;
    $this.$fhcrc = 0;
    $this.$os = 255;
    $this.$done = 0;
    $this.$mtime = Long_ZERO;
}
function jur_AtomicFSet() {
    jur_FSet.call(this);
    this.$index1 = 0;
}
function jur_AtomicFSet__init_(var_0) {
    var var_1 = new jur_AtomicFSet();
    jur_AtomicFSet__init_0(var_1, var_0);
    return var_1;
}
function jur_AtomicFSet__init_0($this, $groupIndex) {
    jur_FSet__init_0($this, $groupIndex);
}
function jur_AtomicFSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $gr;
    $gr = $this.$getGroupIndex();
    $matchResult.$setConsumed($gr, $stringIndex - $matchResult.$getConsumed($gr) | 0);
    $this.$index1 = $stringIndex;
    return $stringIndex;
}
function jur_AtomicFSet_getIndex($this) {
    return $this.$index1;
}
function jur_AtomicFSet_getName($this) {
    return $rt_s(483);
}
function jur_AtomicFSet_hasConsumed($this, $mr) {
    return 0;
}
function jur_LowSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$low = 0;
}
function jur_LowSurrogateCharSet__init_(var_0) {
    var var_1 = new jur_LowSurrogateCharSet();
    jur_LowSurrogateCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_LowSurrogateCharSet__init_0($this, $low) {
    jur_JointSet__init_0($this);
    $this.$low = $low;
}
function jur_LowSurrogateCharSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_LowSurrogateCharSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4, $low, $high;
    var$4 = $stringIndex + 1 | 0;
    if (var$4 > $matchResult.$getRightBound()) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $low = $testString.$charAt($stringIndex);
    if ($stringIndex > $matchResult.$getLeftBound()) {
        $high = $testString.$charAt($stringIndex - 1 | 0);
        if (jl_Character_isHighSurrogate($high))
            return (-1);
    }
    if ($this.$low != $low)
        return (-1);
    return $this.$next.$matches(var$4, $testString, $matchResult);
}
function jur_LowSurrogateCharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $startStr, $strLength, var$7, var$8;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $startStr = $matchResult.$getLeftBound();
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$7 = $testStr.$indexOf1($this.$low, $strIndex);
        if (var$7 < 0)
            return (-1);
        if (var$7 > $startStr && jl_Character_isHighSurrogate($testStr.$charAt(var$7 - 1 | 0))) {
            $strIndex = var$7 + 1 | 0;
            continue;
        }
        var$8 = $this.$next;
        $strIndex = var$7 + 1 | 0;
        if (var$8.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$7;
}
function jur_LowSurrogateCharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $startStr, $testStr, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $startStr = $matchResult.$getLeftBound();
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf0($this.$low, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if (var$7 > $startStr && jl_Character_isHighSurrogate($testStr.$charAt(var$7 - 1 | 0))) {
                $lastIndex = var$7 + (-2) | 0;
                continue;
            }
            if ($this.$next.$matches(var$7 + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_LowSurrogateCharSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(58)).$append0($this.$low).$toString();
}
function jur_LowSurrogateCharSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_HighSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_LowSurrogateCharSet))
        return 1;
    return $set.$low != $this.$low ? 0 : 1;
}
function jur_LowSurrogateCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
function iaaui_Streams() {
    jl_Object.call(this);
}
var iaaui_Streams_EMPTY_BYTES = null;
function iaaui_Streams_$callClinit() {
    iaaui_Streams_$callClinit = $rt_eraseClinit(iaaui_Streams);
    iaaui_Streams__clinit_();
}
function iaaui_Streams__clinit_() {
    iaaui_Streams_EMPTY_BYTES = $rt_createByteArray(0);
}
function iaaui_Streams_closeQuietly($c) {
    iaaui_Streams_$callClinit();
}
function jl_AssertionError() {
    jl_Error.call(this);
}
function jl_AssertionError__init_(var_0, var_1) {
    var var_2 = new jl_AssertionError();
    jl_AssertionError__init_0(var_2, var_0, var_1);
    return var_2;
}
function jl_AssertionError__init_0($this, $message, $cause) {
    jl_Error__init_0($this, $message, $cause);
}
function it_Phases$2$lambda$null$21$lambda$_3_0() {
    jl_Object.call(this);
    this.$_025 = 0.0;
}
function it_Phases$2$lambda$null$21$lambda$_3_0__init_(var_0) {
    var var_1 = new it_Phases$2$lambda$null$21$lambda$_3_0();
    it_Phases$2$lambda$null$21$lambda$_3_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$2$lambda$null$21$lambda$_3_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_025 = var$1;
}
function it_Phases$2$lambda$null$21$lambda$_3_0_get(var$0, var$1) {
    it_Phases$2_lambda$null$20(var$0.$_025, var$1);
}
function iaate_EaseEffect() {
    var a = this; iaat_Effect.call(a);
    a.$distance0 = 0.0;
    a.$intensity0 = 0.0;
    a.$elastic = 0;
    a.$timePassedByGlyphIndex = null;
}
function iaate_EaseEffect__init_(var_0) {
    var var_1 = new iaate_EaseEffect();
    iaate_EaseEffect__init_0(var_1, var_0);
    return var_1;
}
function iaate_EaseEffect__init_0($this, $label) {
    iaat_Effect__init_0($this, $label);
    $this.$distance0 = 1.0;
    $this.$intensity0 = 1.0;
    $this.$elastic = 0;
    $this.$timePassedByGlyphIndex = iaac_IntFloatMap__init_();
}
function iaate_EaseEffect_onApply($this, $glyph, $localIndex, $delta) {
    var $realIntensity, $timePassed, $progress, $interpolation, $interpolatedValue, $y;
    $realIntensity = $this.$intensity0 * (!$this.$elastic ? 1.0 : 3.0) * 0.07500000298023224;
    $timePassed = $this.$timePassedByGlyphIndex.$getAndIncrement($localIndex, 0.0, $delta);
    $progress = $timePassed / $realIntensity;
    if ($progress >= 0.0 && $progress <= 1.0) {
        if (!$this.$elastic) {
            iaam_Interpolation_$callClinit();
            $interpolation = iaam_Interpolation_sine;
        } else {
            iaam_Interpolation_$callClinit();
            $interpolation = iaam_Interpolation_swingOut;
        }
        $interpolatedValue = $interpolation.$apply0(1.0, 0.0, $progress);
        $y = $this.$getLineHeight() * $this.$distance0 * $interpolatedValue * 0.15000000596046448;
        $glyph.$yoffset = $glyph.$yoffset + $y | 0;
        return;
    }
}
function iaasul_Table() {
    var a = this; iaasul_WidgetGroup.call(a);
    a.$cells = null;
    a.$cellDefaults = null;
    a.$columnDefaults = null;
    a.$marginTop = 0.0;
    a.$marginLeft = 0.0;
    a.$marginBot = 0.0;
    a.$marginRight = 0.0;
    a.$align = 0;
    a.$background0 = null;
    a.$round1 = 0;
    a.$columns = 0;
    a.$rows = 0;
    a.$implicitEndRow = 0;
    a.$rowDefaults = null;
    a.$sizeInvalid = 0;
    a.$columnMinWidth = null;
    a.$rowMinHeight = null;
    a.$columnPrefWidth = null;
    a.$rowPrefHeight = null;
    a.$tableMinWidth = 0.0;
    a.$tableMinHeight = 0.0;
    a.$tablePrefWidth = 0.0;
    a.$tablePrefHeight = 0.0;
    a.$columnWidth = null;
    a.$rowHeight = null;
    a.$expandWidth = null;
    a.$expandHeight = null;
    a.$clip = 0;
}
var iaasul_Table_columnWeightedWidth = null;
var iaasul_Table_rowWeightedHeight = null;
var iaasul_Table_cellPool = null;
function iaasul_Table_$callClinit() {
    iaasul_Table_$callClinit = $rt_eraseClinit(iaasul_Table);
    iaasul_Table__clinit_();
}
function iaasul_Table__init_() {
    var var_0 = new iaasul_Table();
    iaasul_Table__init_0(var_0);
    return var_0;
}
function iaasul_Table__init_1(var_0) {
    var var_1 = new iaasul_Table();
    iaasul_Table__init_2(var_1, var_0);
    return var_1;
}
function iaasul_Table__init_0($this) {
    iaasul_Table_$callClinit();
    iaasul_WidgetGroup__init_0($this);
    $this.$cells = iaac_Array__init_(4);
    $this.$columnDefaults = iaac_Array__init_(2);
    $this.$marginTop = (-Infinity);
    $this.$marginLeft = (-Infinity);
    $this.$marginBot = (-Infinity);
    $this.$marginRight = (-Infinity);
    $this.$align = 1;
    $this.$round1 = 1;
    $this.$sizeInvalid = 1;
    $this.$cellDefaults = iaasul_Table_obtainCell($this);
    $this.$setTransform(0);
    iaase_Touchable_$callClinit();
    $this.$touchable0(iaase_Touchable_childrenOnly);
}
function iaasul_Table__init_2($this, $background) {
    iaasul_Table_$callClinit();
    iaasul_Table__init_0($this);
    $this.$background1($background);
}
function iaasul_Table_obtainCell($this) {
    var $cell;
    $cell = iaasul_Table_cellPool.$obtain0();
    $cell.$setLayout($this);
    return $cell;
}
function iaasul_Table_draw($this) {
    var $padLeft, $padBottom, var$3, var$4;
    $this.$validate();
    if (!$this.$isTransform()) {
        $this.$drawBackground($this.$x, $this.$y);
        iaasul_WidgetGroup_draw($this);
    } else {
        $this.$applyTransform($this.$computeTransform());
        $this.$drawBackground(0.0, 0.0);
        if (!$this.$clip)
            $this.$drawChildren();
        else {
            iaagg_Draw_flush();
            $padLeft = $this.$getMarginLeft();
            $padBottom = $this.$getMarginBottom();
            var$3 = $this.$getWidth() - $padLeft - $this.$getMarginRight();
            var$4 = $this.$getHeight() - $padBottom - $this.$getMarginTop();
            if ($this.$clipBegin($padLeft, $padBottom, var$3, var$4)) {
                $this.$drawChildren();
                iaagg_Draw_flush();
                $this.$clipEnd();
            }
        }
        $this.$resetTransform();
    }
}
function iaasul_Table_drawBackground($this, $x, $y) {
    var $color;
    if ($this.$background0 === null)
        return;
    $color = $this.$getColor();
    iaagg_Draw_color1($color.$r0, $color.$g, $color.$b, $color.$a * $this.$parentAlpha);
    $this.$background0.$draw0($x, $y, $this.$width, $this.$height);
}
function iaasul_Table_background($this, $background) {
    $this.$setBackground($background);
    return $this;
}
function iaasul_Table_setBackground($this, $background) {
    var $padTopOld, $padLeftOld, $padBottomOld, $padRightOld, $padTopNew, $padLeftNew, $padBottomNew, $padRightNew;
    if ($this.$background0 === $background)
        return;
    $padTopOld = $this.$getMarginTop();
    $padLeftOld = $this.$getMarginLeft();
    $padBottomOld = $this.$getMarginBottom();
    $padRightOld = $this.$getMarginRight();
    $this.$background0 = $background;
    $padTopNew = $this.$getMarginTop();
    $padLeftNew = $this.$getMarginLeft();
    $padBottomNew = $this.$getMarginBottom();
    $padRightNew = $this.$getMarginRight();
    if (!($padTopOld + $padBottomOld === $padTopNew + $padBottomNew && $padLeftOld + $padRightOld === $padLeftNew + $padRightNew))
        $this.$invalidateHierarchy();
    else if (!($padTopOld === $padTopNew && $padLeftOld === $padLeftNew && $padBottomOld === $padBottomNew && $padRightOld === $padRightNew))
        $this.$invalidate();
}
function iaasul_Table_hit($this, $x, $y, $touchable) {
    var var$4;
    a: {
        if ($this.$clip) {
            if ($touchable) {
                var$4 = $this.$getTouchable();
                iaase_Touchable_$callClinit();
                if (var$4 === iaase_Touchable_disabled)
                    return null;
            }
            if ($x < 0.0)
                break a;
            if ($x >= $this.$getWidth())
                break a;
            if ($y < 0.0)
                break a;
            if ($y >= $this.$getHeight())
                break a;
        }
        return iaas_Group_hit($this, $x, $y, $touchable);
    }
    return null;
}
function iaasul_Table_invalidate($this) {
    $this.$sizeInvalid = 1;
    iaasul_WidgetGroup_invalidate($this);
}
function iaasul_Table_add($this, $element) {
    var $cell, $cells, $cellCount, $lastCell, $i, $other, $column, $nn;
    $cell = iaasul_Table_obtainCell($this);
    $cell.$element = $element;
    if ($this.$implicitEndRow) {
        $this.$implicitEndRow = 0;
        $this.$rows = $this.$rows - 1 | 0;
        $this.$cells.$peek().$endRow = 0;
    }
    $cells = $this.$cells;
    $cellCount = $cells.$size;
    if ($cellCount <= 0) {
        $cell.$column = 0;
        $cell.$row = 0;
    } else {
        $lastCell = $cells.$peek();
        if ($lastCell.$endRow) {
            $cell.$column = 0;
            $cell.$row = $lastCell.$row + 1 | 0;
        } else {
            $cell.$column = $lastCell.$column + $lastCell.$colspan | 0;
            $cell.$row = $lastCell.$row;
        }
        a: {
            if ($cell.$row > 0) {
                $i = $cellCount - 1 | 0;
                b: while (true) {
                    if ($i < 0)
                        break a;
                    $other = $cells.$get($i);
                    $column = $other.$column;
                    $nn = $column + $other.$colspan | 0;
                    while ($column < $nn) {
                        if ($column == $cell.$column)
                            break b;
                        $column = $column + 1 | 0;
                    }
                    $i = $i + (-1) | 0;
                }
                $cell.$cellAboveIndex = $i;
            }
        }
    }
    $cells.$add1($cell);
    $cell.$set7($this.$cellDefaults);
    if ($cell.$column < $this.$columnDefaults.$size)
        $this.$columnDefaults.$get($cell.$column);
    if ($element !== null)
        $this.$addChild0($element);
    return $cell;
}
function iaasul_Table_table($this, $cons) {
    var $table;
    $table = iaasul_Table__init_();
    $cons.$get5($table);
    return $this.$add4($table);
}
function iaasul_Table_table0($this, $background, $cons) {
    return $this.$table($background, 1, $cons);
}
function iaasul_Table_table1($this, $background, $align, $cons) {
    var $table;
    $table = iaasul_Table__init_1($background);
    $table.$align0($align);
    $cons.$get5($table);
    return $this.$add4($table);
}
function iaasul_Table_label($this, $text) {
    return $this.$add4(iaasu_Label__init_($text));
}
function iaasul_Table_removeChild($this, $element, $unfocus) {
    var $cell;
    if (!iaas_Group_removeChild($this, $element, $unfocus))
        return 0;
    $cell = $this.$getCell($element);
    if ($cell !== null)
        $cell.$element = null;
    return 1;
}
function iaasul_Table_row($this) {
    if ($this.$cells.$size > 0) {
        if (!$this.$implicitEndRow)
            iaasul_Table_endRow($this);
        $this.$invalidate();
    }
    $this.$implicitEndRow = 0;
    if ($this.$rowDefaults !== null)
        iaasul_Table_cellPool.$free($this.$rowDefaults);
    $this.$rowDefaults = iaasul_Table_obtainCell($this);
    $this.$rowDefaults.$clear();
    return $this;
}
function iaasul_Table_endRow($this) {
    var $cells, $rowColumns, $i, $cell;
    $cells = $this.$cells;
    $rowColumns = 0;
    $i = $cells.$size - 1 | 0;
    a: {
        while (true) {
            if ($i < 0)
                break a;
            $cell = $cells.$get($i);
            if ($cell.$endRow)
                break;
            $rowColumns = $rowColumns + $cell.$colspan | 0;
            $i = $i + (-1) | 0;
        }
    }
    $this.$columns = jl_Math_max1($this.$columns, $rowColumns);
    $this.$rows = $this.$rows + 1 | 0;
    $cells.$peek().$endRow = 1;
}
function iaasul_Table_getCell($this, $actor) {
    var $cells, $i, $n, $c;
    $cells = $this.$cells;
    $i = 0;
    $n = $cells.$size;
    while (true) {
        if ($i >= $n)
            return null;
        $c = $cells.$get($i);
        if ($c.$element === $actor)
            break;
        $i = $i + 1 | 0;
    }
    return $c;
}
function iaasul_Table_getPrefWidth($this) {
    var $width;
    if ($this.$sizeInvalid)
        iaasul_Table_computeSize($this);
    $width = $this.$tablePrefWidth;
    if ($this.$background0 === null)
        return $width;
    return jl_Math_max($width, $this.$background0.$getMinWidth());
}
function iaasul_Table_getPrefHeight($this) {
    var $height;
    if ($this.$sizeInvalid)
        iaasul_Table_computeSize($this);
    $height = $this.$tablePrefHeight;
    if ($this.$background0 === null)
        return $height;
    return jl_Math_max($height, $this.$background0.$getMinHeight());
}
function iaasul_Table_getMinWidth($this) {
    if ($this.$sizeInvalid)
        iaasul_Table_computeSize($this);
    return $this.$tableMinWidth;
}
function iaasul_Table_getMinHeight($this) {
    if ($this.$sizeInvalid)
        iaasul_Table_computeSize($this);
    return $this.$tableMinHeight;
}
function iaasul_Table_defaults($this) {
    return $this.$cellDefaults;
}
function iaasul_Table_margin($this, $pad) {
    $this.$margin($pad, $pad, $pad, $pad);
    return $this;
}
function iaasul_Table_margin0($this, $top, $left, $bottom, $right) {
    $this.$marginTop = iaasul_Scl_scl0($top);
    $this.$marginLeft = iaasul_Scl_scl0($left);
    $this.$marginBot = iaasul_Scl_scl0($bottom);
    $this.$marginRight = iaasul_Scl_scl0($right);
    $this.$sizeInvalid = 1;
    return $this;
}
function iaasul_Table_align($this, $align) {
    $this.$align = $align;
    return $this;
}
function iaasul_Table_top($this) {
    $this.$align = $this.$align | 2;
    $this.$align = $this.$align & (-5);
    return $this;
}
function iaasul_Table_left($this) {
    $this.$align = $this.$align | 8;
    $this.$align = $this.$align & (-17);
    return $this;
}
function iaasul_Table_bottom($this) {
    $this.$align = $this.$align | 4;
    $this.$align = $this.$align & (-3);
    return $this;
}
function iaasul_Table_right($this) {
    $this.$align = $this.$align | 16;
    $this.$align = $this.$align & (-9);
    return $this;
}
function iaasul_Table_getMarginTop($this) {
    return $this.$marginTop !== (-Infinity) ? $this.$marginTop : $this.$background0 === null ? 0.0 : $this.$background0.$getTopHeight();
}
function iaasul_Table_getMarginLeft($this) {
    return $this.$marginLeft !== (-Infinity) ? $this.$marginLeft : $this.$background0 === null ? 0.0 : $this.$background0.$getLeftWidth();
}
function iaasul_Table_getMarginBottom($this) {
    return $this.$marginBot !== (-Infinity) ? $this.$marginBot : $this.$background0 === null ? 0.0 : $this.$background0.$getBottomHeight();
}
function iaasul_Table_getMarginRight($this) {
    return $this.$marginRight !== (-Infinity) ? $this.$marginRight : $this.$background0 === null ? 0.0 : $this.$background0.$getRightWidth();
}
function iaasul_Table_ensureSize($this, $array, $size) {
    var var$3, var$4, $i;
    if ($array !== null) {
        var$3 = $array.data;
        var$4 = var$3.length;
        if (var$4 >= $size) {
            $i = 0;
            while ($i < var$4) {
                var$3[$i] = 0.0;
                $i = $i + 1 | 0;
            }
            return $array;
        }
    }
    return $rt_createFloatArray($size);
}
function iaasul_Table_layout($this) {
    var $width, $height, $cells, $i, $n, $c, $actorHeight, $actorY, $actor, $actorWidth, $actorX, $children, $child;
    a: {
        $width = $this.$getWidth();
        $height = $this.$getHeight();
        iaasul_Table_layout0($this, 0.0, 0.0, $width, $height);
        $cells = $this.$cells;
        if (!$this.$round1) {
            $i = 0;
            $n = $cells.$size;
            while (true) {
                if ($i >= $n)
                    break a;
                $c = $cells.$get($i);
                $actorHeight = $c.$elementHeight;
                $actorY = $height - $c.$elementY - $actorHeight;
                $c.$elementY = $actorY;
                $actor = $c.$element;
                if ($actor !== null)
                    $actor.$setBounds0($c.$elementX, $actorY, $c.$elementWidth, $actorHeight);
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        $n = $cells.$size;
        while ($i < $n) {
            $c = $cells.$get($i);
            $actorWidth = jl_Math_round0($c.$elementWidth);
            $actorHeight = jl_Math_round0($c.$elementHeight);
            $actorX = jl_Math_round0($c.$elementX);
            $actorY = $height - jl_Math_round0($c.$elementY) - $actorHeight;
            $c.$setBounds0($actorX, $actorY, $actorWidth, $actorHeight);
            $actor = $c.$element;
            if ($actor !== null)
                $actor.$setBounds0($actorX, $actorY, $actorWidth, $actorHeight);
            $i = $i + 1 | 0;
        }
    }
    $children = $this.$getChildren();
    $i = 0;
    $n = $children.$size;
    while ($i < $n) {
        $child = $children.$get($i);
        $child.$validate();
        $i = $i + 1 | 0;
    }
}
function iaasul_Table_computeSize($this) {
    var $cells, $cellCount, $columns, $rows, $i, $c, $column, $row, $colspan, var$10, $prefWidth, $prefHeight, $minWidth, $minHeight, $maxWidth, $maxHeight, $hpadding, $vpadding, $uniformMinWidth, $uniformMinHeight, $uniformPrefWidth, $uniformPrefHeight, $expandX, $nn, $ii, var$26, $spannedMinWidth, $totalExpandWidth, var$29, $extraMinWidth, $extraPrefWidth, $ratio, var$33;
    $this.$sizeInvalid = 0;
    $cells = $this.$cells;
    $cellCount = $cells.$size;
    if ($cellCount > 0 && !$cells.$peek().$endRow) {
        iaasul_Table_endRow($this);
        $this.$implicitEndRow = 1;
    }
    $columns = $this.$columns;
    $rows = $this.$rows;
    $this.$columnMinWidth = iaasul_Table_ensureSize($this, $this.$columnMinWidth, $columns);
    $this.$rowMinHeight = iaasul_Table_ensureSize($this, $this.$rowMinHeight, $rows);
    $this.$columnPrefWidth = iaasul_Table_ensureSize($this, $this.$columnPrefWidth, $columns);
    $this.$rowPrefHeight = iaasul_Table_ensureSize($this, $this.$rowPrefHeight, $rows);
    $this.$columnWidth = iaasul_Table_ensureSize($this, $this.$columnWidth, $columns);
    $this.$rowHeight = iaasul_Table_ensureSize($this, $this.$rowHeight, $rows);
    $this.$expandWidth = iaasul_Table_ensureSize($this, $this.$expandWidth, $columns);
    $this.$expandHeight = iaasul_Table_ensureSize($this, $this.$expandHeight, $rows);
    $i = 0;
    while ($i < $cellCount) {
        $c = $cells.$get($i);
        $column = $c.$column;
        $row = $c.$row;
        $colspan = $c.$colspan;
        if ($c.$expandY && $this.$expandHeight.data[$row] === 0.0)
            $this.$expandHeight.data[$row] = $c.$expandY;
        var$10 = $rt_compare($colspan, 1);
        if (!var$10 && $c.$expandX && $this.$expandWidth.data[$column] === 0.0)
            $this.$expandWidth.data[$column] = $c.$expandX;
        $c.$computedPadLeft = $c.$padLeft0;
        $c.$computedPadTop = $c.$padTop0;
        $c.$computedPadRight = $c.$padRight0;
        $c.$computedPadBottom = $c.$padBottom0;
        $prefWidth = $c.$prefWidth();
        $prefHeight = $c.$prefHeight();
        $minWidth = $c.$minWidth();
        $minHeight = $c.$minHeight();
        $maxWidth = $c.$maxWidth();
        $maxHeight = $c.$maxHeight();
        if ($prefWidth < $minWidth)
            $prefWidth = $minWidth;
        if ($prefHeight < $minHeight)
            $prefHeight = $minHeight;
        if ($maxWidth <= 0.0)
            $maxWidth = $prefWidth;
        else if ($prefWidth <= $maxWidth)
            $maxWidth = $prefWidth;
        if ($maxHeight <= 0.0)
            $maxHeight = $prefHeight;
        else if ($prefHeight <= $maxHeight)
            $maxHeight = $prefHeight;
        if (!var$10) {
            $hpadding = $c.$computedPadLeft + $c.$computedPadRight;
            $this.$columnPrefWidth.data[$column] = jl_Math_max($this.$columnPrefWidth.data[$column], $maxWidth + $hpadding);
            $this.$columnMinWidth.data[$column] = jl_Math_max($this.$columnMinWidth.data[$column], $minWidth + $hpadding);
        }
        $vpadding = $c.$computedPadTop + $c.$computedPadBottom;
        $this.$rowPrefHeight.data[$row] = jl_Math_max($this.$rowPrefHeight.data[$row], $maxHeight + $vpadding);
        $this.$rowMinHeight.data[$row] = jl_Math_max($this.$rowMinHeight.data[$row], $minHeight + $vpadding);
        $i = $i + 1 | 0;
    }
    $uniformMinWidth = 0.0;
    $uniformMinHeight = 0.0;
    $uniformPrefWidth = 0.0;
    $uniformPrefHeight = 0.0;
    $i = 0;
    while ($i < $cellCount) {
        a: {
            $c = $cells.$get($i);
            $column = $c.$column;
            $expandX = $c.$expandX;
            if ($expandX) {
                $nn = $column + $c.$colspan | 0;
                $ii = $column;
                b: {
                    while (true) {
                        if ($ii >= $nn)
                            break b;
                        if ($this.$expandWidth.data[$ii] !== 0.0)
                            break;
                        $ii = $ii + 1 | 0;
                    }
                    break a;
                }
                $ii = $column;
                while (true) {
                    if ($ii >= $nn)
                        break a;
                    $this.$expandWidth.data[$ii] = $expandX;
                    $ii = $ii + 1 | 0;
                }
            }
        }
        if ($c.$uniformX && $c.$colspan == 1) {
            $hpadding = $c.$computedPadLeft + $c.$computedPadRight;
            $uniformMinWidth = jl_Math_max($uniformMinWidth, $this.$columnMinWidth.data[$column] - $hpadding);
            $uniformPrefWidth = jl_Math_max($uniformPrefWidth, $this.$columnPrefWidth.data[$column] - $hpadding);
        }
        if ($c.$uniformY) {
            $vpadding = $c.$computedPadTop + $c.$computedPadBottom;
            $uniformMinHeight = jl_Math_max($uniformMinHeight, $this.$rowMinHeight.data[$c.$row] - $vpadding);
            $uniformPrefHeight = jl_Math_max($uniformPrefHeight, $this.$rowPrefHeight.data[$c.$row] - $vpadding);
        }
        $i = $i + 1 | 0;
    }
    c: {
        var$26 = $rt_compare($uniformPrefWidth, 0.0);
        if (!(var$26 <= 0 && $uniformPrefHeight <= 0.0)) {
            $i = 0;
            while (true) {
                if ($i >= $cellCount)
                    break c;
                $c = $cells.$get($i);
                if (var$26 > 0 && $c.$uniformX && $c.$colspan == 1) {
                    $hpadding = $c.$computedPadLeft + $c.$computedPadRight;
                    $this.$columnMinWidth.data[$c.$column] = $uniformMinWidth + $hpadding;
                    $this.$columnPrefWidth.data[$c.$column] = $uniformPrefWidth + $hpadding;
                }
                if ($uniformPrefHeight > 0.0 && $c.$uniformY) {
                    $vpadding = $c.$computedPadTop + $c.$computedPadBottom;
                    $this.$rowMinHeight.data[$c.$row] = $uniformMinHeight + $vpadding;
                    $this.$rowPrefHeight.data[$c.$row] = $uniformPrefHeight + $vpadding;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    $i = 0;
    while ($i < $cellCount) {
        d: {
            $c = $cells.$get($i);
            $colspan = $c.$colspan;
            if ($colspan != 1) {
                $column = $c.$column;
                $minWidth = $c.$minWidth();
                $prefWidth = $c.$prefWidth();
                $maxWidth = $c.$maxWidth();
                if ($prefWidth < $minWidth)
                    $prefWidth = $minWidth;
                if ($maxWidth <= 0.0)
                    $maxWidth = $prefWidth;
                else if ($prefWidth <= $maxWidth)
                    $maxWidth = $prefWidth;
                $spannedMinWidth =  -($c.$computedPadLeft + $c.$computedPadRight);
                $totalExpandWidth = 0.0;
                $nn = $column + $colspan | 0;
                var$29 = $spannedMinWidth;
                var$10 = $column;
                while (var$10 < $nn) {
                    var$29 = var$29 + $this.$columnMinWidth.data[var$10];
                    $spannedMinWidth = $spannedMinWidth + $this.$columnPrefWidth.data[var$10];
                    $totalExpandWidth = $totalExpandWidth + $this.$expandWidth.data[var$10];
                    var$10 = var$10 + 1 | 0;
                }
                $extraMinWidth = jl_Math_max(0.0, $minWidth - var$29);
                $extraPrefWidth = jl_Math_max(0.0, $maxWidth - $spannedMinWidth);
                while (true) {
                    if ($column >= $nn)
                        break d;
                    $ratio = $totalExpandWidth === 0.0 ? 1.0 / $colspan : $this.$expandWidth.data[$column] / $totalExpandWidth;
                    var$33 = $this.$columnMinWidth.data;
                    var$33[$column] = var$33[$column] + $extraMinWidth * $ratio;
                    var$33 = $this.$columnPrefWidth.data;
                    var$33[$column] = var$33[$column] + $extraPrefWidth * $ratio;
                    $column = $column + 1 | 0;
                }
            }
        }
        $i = $i + 1 | 0;
    }
    $this.$tableMinWidth = 0.0;
    $this.$tableMinHeight = 0.0;
    $this.$tablePrefWidth = 0.0;
    $this.$tablePrefHeight = 0.0;
    $i = 0;
    while ($i < $columns) {
        $this.$tableMinWidth = $this.$tableMinWidth + $this.$columnMinWidth.data[$i];
        $this.$tablePrefWidth = $this.$tablePrefWidth + $this.$columnPrefWidth.data[$i];
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < $rows) {
        $this.$tableMinHeight = $this.$tableMinHeight + $this.$rowMinHeight.data[$i];
        $this.$tablePrefHeight = $this.$tablePrefHeight + jl_Math_max($this.$rowMinHeight.data[$i], $this.$rowPrefHeight.data[$i]);
        $i = $i + 1 | 0;
    }
    $hpadding = $this.$getMarginLeft() + $this.$getMarginRight();
    $vpadding = $this.$getMarginTop() + $this.$getMarginBottom();
    $this.$tableMinWidth = $this.$tableMinWidth + $hpadding;
    $this.$tableMinHeight = $this.$tableMinHeight + $vpadding;
    $this.$tablePrefWidth = jl_Math_max($this.$tablePrefWidth + $hpadding, $this.$tableMinWidth);
    $this.$tablePrefHeight = jl_Math_max($this.$tablePrefHeight + $vpadding, $this.$tableMinHeight);
}
function iaasul_Table_layout0($this, $layoutX, $layoutY, $layoutWidth, $layoutHeight) {
    var $cells, $cellCount, $padLeft, $hpadding, $padTop, $vpadding, $columns, $rows, $expandWidth, $expandHeight, $columnWidth, $rowHeight, $totalExpandWidth, $totalExpandHeight, $i, $totalGrowWidth, $columnWeightedWidth, $extraWidth, $columnMinWidth, $columnPrefWidth, var$25, var$26, $growWidth, $growRatio, $totalGrowHeight, $rowWeightedHeight, $extraHeight, $rowMinHeight, $rowPrefHeight, $growHeight, $c, $column, $row, $spannedWeightedWidth, $colspan, $nn, var$41, $weightedHeight, $prefWidth, $prefHeight,
    $minWidth, $minHeight, $maxWidth, $maxHeight, var$49, $extra, $used, $lastIndex, $amount, var$54, $align, $x, $y, $spannedCellWidth, var$59, var$60, $fillX, $fillY;
    $cells = $this.$cells;
    $cellCount = $cells.$size;
    if ($this.$sizeInvalid)
        iaasul_Table_computeSize($this);
    $padLeft = $this.$getMarginLeft();
    $hpadding = $padLeft + $this.$getMarginRight();
    $padTop = $this.$getMarginTop();
    $vpadding = $padTop + $this.$getMarginBottom();
    $columns = $this.$columns;
    $rows = $this.$rows;
    $expandWidth = $this.$expandWidth;
    $expandHeight = $this.$expandHeight;
    $columnWidth = $this.$columnWidth;
    $rowHeight = $this.$rowHeight;
    $totalExpandWidth = 0.0;
    $totalExpandHeight = 0.0;
    $i = 0;
    while ($i < $columns) {
        $totalExpandWidth = $totalExpandWidth + $expandWidth.data[$i];
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < $rows) {
        $totalExpandHeight = $totalExpandHeight + $expandHeight.data[$i];
        $i = $i + 1 | 0;
    }
    $totalGrowWidth = $this.$tablePrefWidth - $this.$tableMinWidth;
    if ($totalGrowWidth === 0.0)
        $columnWeightedWidth = $this.$columnMinWidth;
    else {
        $extraWidth = jl_Math_min($totalGrowWidth, jl_Math_max(0.0, $layoutWidth - $this.$tableMinWidth));
        $columnWeightedWidth = iaasul_Table_ensureSize($this, iaasul_Table_columnWeightedWidth, $columns);
        iaasul_Table_columnWeightedWidth = $columnWeightedWidth;
        $columnMinWidth = $this.$columnMinWidth;
        $columnPrefWidth = $this.$columnPrefWidth;
        $i = 0;
        while ($i < $columns) {
            var$25 = $columnWeightedWidth.data;
            var$26 = $columnMinWidth.data;
            $growWidth = $columnPrefWidth.data[$i] - var$26[$i];
            $growRatio = $growWidth / $totalGrowWidth;
            var$25[$i] = var$26[$i] + $extraWidth * $growRatio;
            $i = $i + 1 | 0;
        }
    }
    $totalGrowHeight = $this.$tablePrefHeight - $this.$tableMinHeight;
    if ($totalGrowHeight === 0.0)
        $rowWeightedHeight = $this.$rowMinHeight;
    else {
        $rowWeightedHeight = iaasul_Table_ensureSize($this, iaasul_Table_rowWeightedHeight, $rows);
        iaasul_Table_rowWeightedHeight = $rowWeightedHeight;
        $extraHeight = jl_Math_min($totalGrowHeight, jl_Math_max(0.0, $layoutHeight - $this.$tableMinHeight));
        $rowMinHeight = $this.$rowMinHeight;
        $rowPrefHeight = $this.$rowPrefHeight;
        $i = 0;
        while ($i < $rows) {
            var$25 = $rowWeightedHeight.data;
            var$26 = $rowMinHeight.data;
            $growHeight = $rowPrefHeight.data[$i] - var$26[$i];
            $growRatio = $growHeight / $totalGrowHeight;
            var$25[$i] = var$26[$i] + $extraHeight * $growRatio;
            $i = $i + 1 | 0;
        }
    }
    $i = 0;
    while ($i < $cellCount) {
        $c = $cells.$get($i);
        $column = $c.$column;
        $row = $c.$row;
        $spannedWeightedWidth = 0.0;
        $colspan = $c.$colspan;
        $nn = $column + $colspan | 0;
        var$41 = $column;
        while (var$41 < $nn) {
            $spannedWeightedWidth = $spannedWeightedWidth + $columnWeightedWidth.data[var$41];
            var$41 = var$41 + 1 | 0;
        }
        $weightedHeight = $rowWeightedHeight.data[$row];
        $prefWidth = $c.$prefWidth();
        $prefHeight = $c.$prefHeight();
        $minWidth = $c.$minWidth();
        $minHeight = $c.$minHeight();
        $maxWidth = $c.$maxWidth();
        $maxHeight = $c.$maxHeight();
        if ($prefWidth >= $minWidth)
            $minWidth = $prefWidth;
        if ($prefHeight >= $minHeight)
            $minHeight = $prefHeight;
        if ($maxWidth <= 0.0)
            $maxWidth = $minWidth;
        else if ($minWidth <= $maxWidth)
            $maxWidth = $minWidth;
        if ($maxHeight <= 0.0)
            $maxHeight = $minHeight;
        else if ($minHeight <= $maxHeight)
            $maxHeight = $minHeight;
        $c.$elementWidth = jl_Math_min($spannedWeightedWidth - $c.$computedPadLeft - $c.$computedPadRight, $maxWidth);
        $c.$elementHeight = jl_Math_min($weightedHeight - $c.$computedPadTop - $c.$computedPadBottom, $maxHeight);
        if ($colspan == 1) {
            var$49 = $columnWidth.data;
            var$49[$column] = jl_Math_max(var$49[$column], $spannedWeightedWidth);
        }
        var$49 = $rowHeight.data;
        var$49[$row] = jl_Math_max(var$49[$row], $weightedHeight);
        $i = $i + 1 | 0;
    }
    if ($totalExpandWidth > 0.0) {
        $extra = $layoutWidth - $hpadding;
        $i = 0;
        while ($i < $columns) {
            $extra = $extra - $columnWidth.data[$i];
            $i = $i + 1 | 0;
        }
        $used = 0.0;
        $lastIndex = 0;
        $i = 0;
        while ($i < $columns) {
            var$49 = $expandWidth.data;
            if (var$49[$i] !== 0.0) {
                var$26 = $columnWidth.data;
                $amount = $extra * var$49[$i] / $totalExpandWidth;
                var$26[$i] = var$26[$i] + $amount;
                $used = $used + $amount;
                $lastIndex = $i;
            }
            $i = $i + 1 | 0;
        }
        var$49 = $columnWidth.data;
        var$49[$lastIndex] = var$49[$lastIndex] + $extra - $used;
    }
    if ($totalExpandHeight > 0.0) {
        $extra = $layoutHeight - $vpadding;
        $i = 0;
        while ($i < $rows) {
            $extra = $extra - $rowHeight.data[$i];
            $i = $i + 1 | 0;
        }
        $used = 0.0;
        $lastIndex = 0;
        $i = 0;
        while ($i < $rows) {
            var$49 = $expandHeight.data;
            if (var$49[$i] !== 0.0) {
                var$26 = $rowHeight.data;
                $amount = $extra * var$49[$i] / $totalExpandHeight;
                var$26[$i] = var$26[$i] + $amount;
                $used = $used + $amount;
                $lastIndex = $i;
            }
            $i = $i + 1 | 0;
        }
        var$49 = $rowHeight.data;
        var$49[$lastIndex] = var$49[$lastIndex] + $extra - $used;
    }
    $i = 0;
    while ($i < $cellCount) {
        a: {
            $c = $cells.$get($i);
            $colspan = $c.$colspan;
            if ($colspan != 1) {
                $extraWidth = 0.0;
                $column = $c.$column;
                $nn = $column + $colspan | 0;
                while ($column < $nn) {
                    var$26 = $columnWidth.data;
                    $extraWidth = $extraWidth + $columnWeightedWidth.data[$column] - var$26[$column];
                    $column = $column + 1 | 0;
                }
                var$54 = $extraWidth - jl_Math_max(0.0, $c.$computedPadLeft + $c.$computedPadRight);
                var$54 = var$54 / $colspan;
                if (var$54 > 0.0) {
                    $column = $c.$column;
                    $nn = $column + $colspan | 0;
                    while (true) {
                        if ($column >= $nn)
                            break a;
                        var$49 = $columnWidth.data;
                        var$49[$column] = var$49[$column] + var$54;
                        $column = $column + 1 | 0;
                    }
                }
            }
        }
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < $columns) {
        $hpadding = $hpadding + $columnWidth.data[$i];
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < $rows) {
        $vpadding = $vpadding + $rowHeight.data[$i];
        $i = $i + 1 | 0;
    }
    $align = $this.$align;
    $x = $layoutX + $padLeft;
    if ($align & 16)
        $x = $x + $layoutWidth - $hpadding;
    else if (!($align & 8))
        $x = $x + ($layoutWidth - $hpadding) / 2.0;
    $y = $layoutY + $padTop;
    if ($align & 4)
        $y = $y + $layoutHeight - $vpadding;
    else if (!($align & 2))
        $y = $y + ($layoutHeight - $vpadding) / 2.0;
    $i = 0;
    var$54 = $x;
    while ($i < $cellCount) {
        $c = $cells.$get($i);
        $spannedCellWidth = 0.0;
        $column = $c.$column;
        $nn = $column + $c.$colspan | 0;
        while ($column < $nn) {
            $spannedCellWidth = $spannedCellWidth + $columnWidth.data[$column];
            $column = $column + 1 | 0;
        }
        var$59 = $spannedCellWidth - ($c.$computedPadLeft + $c.$computedPadRight);
        var$60 = var$54 + $c.$computedPadLeft;
        $fillX = $c.$fillX;
        $fillY = $c.$fillY;
        if ($fillX > 0.0) {
            $c.$elementWidth = jl_Math_max(var$59 * $fillX, $c.$minWidth());
            $maxWidth = $c.$maxWidth0;
            if ($maxWidth > 0.0)
                $c.$elementWidth = jl_Math_min($c.$elementWidth, $maxWidth);
        }
        if ($fillY > 0.0) {
            $c.$elementHeight = jl_Math_max($rowHeight.data[$c.$row] * $fillY - $c.$computedPadTop - $c.$computedPadBottom, $c.$minHeight());
            $maxHeight = $c.$maxHeight();
            if ($maxHeight > 0.0)
                $c.$elementHeight = jl_Math_min($c.$elementHeight, $maxHeight);
        }
        var$41 = $c.$align1;
        if (var$41 & 8)
            $c.$elementX = var$60;
        else if (var$41 & 16)
            $c.$elementX = var$60 + var$59 - $c.$elementWidth;
        else
            $c.$elementX = var$60 + (var$59 - $c.$elementWidth) / 2.0;
        if (var$41 & 2)
            $c.$elementY = $y + $c.$computedPadTop;
        else if (var$41 & 4)
            $c.$elementY = $y + $rowHeight.data[$c.$row] - $c.$elementHeight - $c.$computedPadBottom;
        else
            $c.$elementY = $y + ($rowHeight.data[$c.$row] - $c.$elementHeight + $c.$computedPadTop - $c.$computedPadBottom) / 2.0;
        if (!$c.$endRow)
            var$54 = var$60 + var$59 + $c.$computedPadRight;
        else {
            $y = $y + $rowHeight.data[$c.$row];
            var$54 = $x;
        }
        $i = $i + 1 | 0;
    }
}
function iaasul_Table__clinit_() {
    iaasul_Table_cellPool = iaaup_Pools_get0($rt_cls(iaasul_Cell), iaasul_Table$_clinit_$lambda$_113_0__init_());
}
function iaasu_Disableable() {
}
function iaasu_Button() {
    iaasul_Table.call(this);
}
function iaasu_TextButton() {
    iaasu_Button.call(this);
}
function ju_Iterator() {
}
function iaac_Array$ArrayIterable$ArrayIterator() {
    var a = this; jl_Object.call(a);
    a.$index2 = 0;
    a.$done0 = 0;
    a.$this$04 = null;
}
function iaac_Array$ArrayIterable$ArrayIterator__init_(var_0) {
    var var_1 = new iaac_Array$ArrayIterable$ArrayIterator();
    iaac_Array$ArrayIterable$ArrayIterator__init_0(var_1, var_0);
    return var_1;
}
function iaac_Array$ArrayIterable$ArrayIterator__init_1(var_0, var_1) {
    var var_2 = new iaac_Array$ArrayIterable$ArrayIterator();
    iaac_Array$ArrayIterable$ArrayIterator__init_2(var_2, var_0, var_1);
    return var_2;
}
function iaac_Array$ArrayIterable$ArrayIterator__init_0($this, var$1) {
    $this.$this$04 = var$1;
    jl_Object__init_0($this);
    $this.$done0 = 1;
    iaac_Array_$callClinit();
    iaac_Array_iteratorsAllocated = iaac_Array_iteratorsAllocated + 1 | 0;
}
function iaac_Array$ArrayIterable$ArrayIterator_hasNext($this) {
    if ($this.$index2 >= iaac_Array$ArrayIterable_access$100($this.$this$04).$size)
        $this.$done0 = 1;
    return $this.$index2 >= iaac_Array$ArrayIterable_access$100($this.$this$04).$size ? 0 : 1;
}
function iaac_Array$ArrayIterable$ArrayIterator_next($this) {
    var var$1, var$2;
    if ($this.$index2 >= iaac_Array$ArrayIterable_access$100($this.$this$04).$size)
        $rt_throw(ju_NoSuchElementException__init_(jl_String_valueOf0($this.$index2)));
    var$1 = iaac_Array$ArrayIterable_access$100($this.$this$04).$items.data;
    var$2 = $this.$index2;
    $this.$index2 = var$2 + 1 | 0;
    return var$1[var$2];
}
function iaac_Array$ArrayIterable$ArrayIterator_remove($this) {
    if (!iaac_Array$ArrayIterable_access$200($this.$this$04))
        $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(484)));
    $this.$index2 = $this.$index2 - 1 | 0;
    iaac_Array$ArrayIterable_access$100($this.$this$04).$remove($this.$index2);
}
function iaac_Array$ArrayIterable$ArrayIterator__init_2($this, $x0, $x1) {
    iaac_Array$ArrayIterable$ArrayIterator__init_0($this, $x0);
}
function it_BulletType() {
    var a = this; jl_Object.call(a);
    a.$size3 = 0.0;
    a.$speed = 0.0;
    a.$light = 0.0;
    a.$damage0 = 0.0;
    a.$lifetime0 = 0.0;
    a.$shake0 = 0.0;
    a.$deflect = 0;
    a.$pierce = 0;
    a.$lightColor = null;
    a.$hit0 = null;
}
function it_BulletType__init_() {
    var var_0 = new it_BulletType();
    it_BulletType__init_0(var_0);
    return var_0;
}
function it_BulletType__init_0($this) {
    jl_Object__init_0($this);
    $this.$size3 = 4.0;
    $this.$speed = 2.0;
    $this.$light = 30.0;
    $this.$damage0 = 4.0;
    $this.$lifetime0 = 200.0;
    $this.$shake0 = 0.0;
    $this.$deflect = 1;
    $this.$pierce = 0;
    $this.$lightColor = iaag_Color__init_(1.0, 1.0, 1.0, 0.5);
    it_Fx_$callClinit();
    $this.$hit0 = it_Fx_spark;
}
function it_BulletType_draw($this, $bullet) {
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 4.0);
}
function it_BulletType_draw0($this, $laser) {
    var var$2;
    var$2 = 8.0 * $laser.$fout();
    ig_Pal_$callClinit();
    iaagg_Lines_stroke(var$2, ig_Pal_fireball);
    iaagg_Lines_lineAngle($laser.$x2, $laser.$y2, $laser.$angle, 1000.0);
}
function it_BulletType_update($this, $bullet) {
    return;
}
function it_BulletType_init($this, $bullet) {
    if ($this.$shake0 > 0.0)
        i_Inferno_renderer.$shake1($this.$shake0);
}
function it_BulletType_solid($this, $x, $y) {
    var $tile;
    $tile = i_Inferno_world.$tileOpt($x, $y);
    if ($tile !== null && $tile.$wall !== null && $tile.$wall.$clear0)
        return 0;
    return i_Inferno_world.$solid0($x, $y);
}
function it_BulletType_drawLight($this, $bullet) {
    if ($this.$light <= 0.0)
        return;
    ig_Drawf_light($bullet.$x2, $bullet.$y2, $this.$light, $this.$lightColor);
}
function it_BulletType_despawn($this, $bullet) {
    $this.$hit0.$at0($bullet.$x2, $bullet.$y2, $this.$lightColor);
}
function it_BulletType_hit($this, $bullet) {
    if (!$this.$pierce) {
        $bullet.$remove0();
        $this.$hit0.$at0($bullet.$x2, $bullet.$y2, $this.$lightColor);
    } else if (!$bullet.$hit1) {
        $this.$hit0.$at0($bullet.$x2, $bullet.$y2, $this.$lightColor);
        $bullet.$hit1 = 1;
    }
}
function iw_Tile() {
    var a = this; jl_Object.call(a);
    a.$floor0 = null;
    a.$wall = null;
    a.$overlay = null;
    a.$shadowed = 0;
    a.$rotation2 = 0;
}
function iw_Tile__init_(var_0, var_1, var_2) {
    var var_3 = new iw_Tile();
    iw_Tile__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function iw_Tile__init_0($this, $floor, $overlay, $wall) {
    jl_Object__init_0($this);
    $this.$floor0 = $floor;
    $this.$wall = $wall;
    $this.$overlay = $overlay;
}
function iw_Tile_solid($this) {
    return $this.$wall !== null && $this.$wall.$solid ? 1 : 0;
}
function jur_CompositeQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
    this.$quantifier = null;
}
function jur_CompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CompositeQuantifierSet();
    jur_CompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
    jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type);
    $this.$quantifier = $quant;
}
function jur_CompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $min, $max, $i, $shift;
    $min = $this.$quantifier.$min3();
    $max = $this.$quantifier.$max3();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while ($i < $max) {
                    if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound())
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break a;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            while (true) {
                if ($i < $min)
                    return (-1);
                $shift = $this.$next.$matches($stringIndex, $testString, $matchResult);
                if ($shift >= 0)
                    break;
                $stringIndex = $stringIndex - $this.$leaf.$charCount0() | 0;
                $i = $i + (-1) | 0;
            }
            return $shift;
        }
        if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_CompositeQuantifierSet_getName($this) {
    return $this.$quantifier.$toString();
}
function jur_SupplRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$chars = null;
    a.$alt1 = 0;
}
function jur_SupplRangeSet__init_(var_0) {
    var var_1 = new jur_SupplRangeSet();
    jur_SupplRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_SupplRangeSet__init_0($this, $cc) {
    jur_JointSet__init_0($this);
    $this.$chars = $cc.$getInstance();
    $this.$alt1 = $cc.$alt0;
}
function jur_SupplRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, $high, var$7, $low;
    $strLength = $matchResult.$getRightBound();
    if ($stringIndex < $strLength) {
        var$5 = $stringIndex + 1 | 0;
        $high = $testString.$charAt($stringIndex);
        if ($this.$contains($high)) {
            var$7 = $this.$next.$matches(var$5, $testString, $matchResult);
            if (var$7 > 0)
                return var$7;
        }
        if (var$5 < $strLength) {
            var$7 = var$5 + 1 | 0;
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low) && $this.$contains(jl_Character_toCodePoint($high, $low)))
                return $this.$next.$matches(var$7, $testString, $matchResult);
        }
    }
    return (-1);
}
function jur_SupplRangeSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(31)).$append(!$this.$alt1 ? $rt_s(32) : $rt_s(33)).$append($this.$chars.$toString()).$toString();
}
function jur_SupplRangeSet_contains($this, $ch) {
    return $this.$chars.$contains($ch);
}
function jur_SupplRangeSet_first($this, $set) {
    if ($set instanceof jur_SupplCharSet)
        return jur_AbstractCharClass_intersects($this.$chars, $set.$getCodePoint());
    if ($set instanceof jur_CharSet)
        return jur_AbstractCharClass_intersects($this.$chars, $set.$getChar());
    if ($set instanceof jur_SupplRangeSet)
        return jur_AbstractCharClass_intersects0($this.$chars, $set.$chars);
    if (!($set instanceof jur_RangeSet))
        return 1;
    return jur_AbstractCharClass_intersects0($this.$chars, $set.$getChars0());
}
function jur_SupplRangeSet_getChars($this) {
    return $this.$chars;
}
function jur_SupplRangeSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_SupplRangeSet_hasConsumed($this, $mr) {
    return 1;
}
function otcjl_TException() {
    otcjl_TThrowable.call(this);
}
function otcjl_TException__init_() {
    var var_0 = new otcjl_TException();
    otcjl_TException__init_0(var_0);
    return var_0;
}
function otcjl_TException__init_0($this) {
    otcjl_TThrowable__init_0($this);
}
function otcjl_TRuntimeException() {
    otcjl_TException.call(this);
}
function otcjl_TRuntimeException__init_() {
    var var_0 = new otcjl_TRuntimeException();
    otcjl_TRuntimeException__init_0(var_0);
    return var_0;
}
function otcjl_TRuntimeException__init_0($this) {
    otcjl_TException__init_0($this);
}
function otcjl_TIllegalArgumentException() {
    otcjl_TRuntimeException.call(this);
}
function otcjl_TIllegalArgumentException__init_() {
    var var_0 = new otcjl_TIllegalArgumentException();
    otcjl_TIllegalArgumentException__init_0(var_0);
    return var_0;
}
function otcjl_TIllegalArgumentException__init_0($this) {
    otcjl_TRuntimeException__init_0($this);
}
function it_Bullets$9$lambda$null$6$lambda$_8_0() {
    var a = this; jl_Object.call(a);
    a.$_026 = null;
    a.$_116 = 0.0;
}
function it_Bullets$9$lambda$null$6$lambda$_8_0__init_(var_0, var_1) {
    var var_2 = new it_Bullets$9$lambda$null$6$lambda$_8_0();
    it_Bullets$9$lambda$null$6$lambda$_8_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Bullets$9$lambda$null$6$lambda$_8_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_026 = var$1;
    var$0.$_116 = var$2;
}
function it_Bullets$9$lambda$null$6$lambda$_8_0_get(var$0, var$1) {
    it_Bullets$9_lambda$null$5(var$0.$_026, var$0.$_116, var$1);
}
function jl_String() {
    var a = this; jl_Object.call(a);
    a.$characters = null;
    a.$hashCode0 = 0;
}
var jl_String_CASE_INSENSITIVE_ORDER = null;
function jl_String_$callClinit() {
    jl_String_$callClinit = $rt_eraseClinit(jl_String);
    jl_String__clinit_();
}
function jl_String__init_(var_0) {
    var var_1 = new jl_String();
    jl_String__init_2(var_1, var_0);
    return var_1;
}
function jl_String__init_0(var_0, var_1, var_2) {
    var var_3 = new jl_String();
    jl_String__init_1(var_3, var_0, var_1, var_2);
    return var_3;
}
function jl_String__init_3(var_0, var_1, var_2) {
    var var_3 = new jl_String();
    jl_String__init_4(var_3, var_0, var_1, var_2);
    return var_3;
}
function jl_String__init_5(var_0) {
    var var_1 = new jl_String();
    jl_String__init_6(var_1, var_0);
    return var_1;
}
function jl_String__init_7(var_0, var_1, var_2) {
    var var_3 = new jl_String();
    jl_String__init_8(var_3, var_0, var_1, var_2);
    return var_3;
}
function jl_String__init_2($this, $characters) {
    var var$2, var$3, $i;
    jl_String_$callClinit();
    var$2 = $characters.data;
    jl_Object__init_0($this);
    var$3 = var$2.length;
    $this.$characters = $rt_createCharArray(var$3);
    $i = 0;
    while ($i < var$3) {
        $this.$characters.data[$i] = var$2[$i];
        $i = $i + 1 | 0;
    }
}
function jl_String__init_1($this, $value, $offset, $count) {
    var $i, var$5;
    jl_String_$callClinit();
    jl_Object__init_0($this);
    $this.$characters = $rt_createCharArray($count);
    $i = 0;
    while ($i < $count) {
        var$5 = $value.data;
        $this.$characters.data[$i] = var$5[$i + $offset | 0];
        $i = $i + 1 | 0;
    }
}
function jl_String__init_4($this, $bytes, $offset, $length) {
    jl_String_$callClinit();
    jl_Object__init_0($this);
    jl_String_initWithBytes($this, $bytes, $offset, $length, jnci_UTF8Charset__init_());
}
function jl_String__init_6($this, $bytes) {
    jl_String_$callClinit();
    jl_String__init_4($this, $bytes, 0, $bytes.data.length);
}
function jl_String__init_8($this, $codePoints, $offset, $count) {
    var $charCount, $i, var$6, var$7, $codePoint, var$9, var$10;
    jl_String_$callClinit();
    jl_Object__init_0($this);
    $this.$characters = $rt_createCharArray($count * 2 | 0);
    $charCount = 0;
    $i = 0;
    while ($i < $count) {
        var$6 = $codePoints.data;
        var$7 = $offset + 1 | 0;
        $codePoint = var$6[$offset];
        if ($codePoint < 65536) {
            var$6 = $this.$characters.data;
            var$9 = $charCount + 1 | 0;
            var$6[$charCount] = $codePoint & 65535;
        } else {
            var$6 = $this.$characters.data;
            var$10 = $charCount + 1 | 0;
            var$6[$charCount] = jl_Character_highSurrogate($codePoint);
            var$6 = $this.$characters.data;
            var$9 = var$10 + 1 | 0;
            var$6[var$10] = jl_Character_lowSurrogate($codePoint);
        }
        $i = $i + 1 | 0;
        $offset = var$7;
        $charCount = var$9;
    }
    if ($charCount < $this.$characters.data.length)
        $this.$characters = ju_Arrays_copyOf0($this.$characters, $charCount);
}
function jl_String_initWithBytes($this, $bytes, $offset, $length, $charset) {
    var $buffer;
    $buffer = jnc_Charset_decode($charset, jn_ByteBuffer_wrap0($bytes, $offset, $length));
    if (jn_CharBuffer_hasArray($buffer) && !jn_Buffer_position($buffer) && jn_Buffer_limit($buffer) == jn_Buffer_capacity($buffer))
        $this.$characters = jn_CharBuffer_array($buffer);
    else {
        $this.$characters = $rt_createCharArray(jn_Buffer_remaining($buffer));
        $buffer.$get18($this.$characters);
    }
}
function jl_String_charAt($this, $index) {
    if ($index >= 0 && $index < $this.$characters.data.length)
        return $this.$characters.data[$index];
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
}
function jl_String_length($this) {
    return $this.$characters.data.length;
}
function jl_String_isEmpty($this) {
    return $this.$characters.data.length ? 0 : 1;
}
function jl_String_compareTo($this, $anotherString) {
    var $l, $i, $a, $b, var$6;
    if ($this === $anotherString)
        return 0;
    $l = jl_Math_min1($this.$length(), $anotherString.$length());
    $i = 0;
    while (true) {
        if ($i >= $l)
            return $this.$length() - $anotherString.$length() | 0;
        $a = $this.$charAt($i);
        $b = $anotherString.$charAt($i);
        var$6 = $a - $b | 0;
        if (var$6)
            break;
        $i = $i + 1 | 0;
    }
    return var$6;
}
function jl_String_startsWith($this, $prefix, $toffset) {
    var $i, var$4, var$5;
    if (($toffset + $prefix.$length() | 0) > $this.$length())
        return 0;
    $i = 0;
    while ($i < $prefix.$length()) {
        var$4 = $prefix.$charAt($i);
        var$5 = $toffset + 1 | 0;
        if (var$4 != $this.$charAt($toffset))
            return 0;
        $i = $i + 1 | 0;
        $toffset = var$5;
    }
    return 1;
}
function jl_String_startsWith0($this, $prefix) {
    if ($this === $prefix)
        return 1;
    return $this.$startsWith0($prefix, 0);
}
function jl_String_endsWith($this, $suffix) {
    var $j, $i, var$4, var$5;
    if ($this === $suffix)
        return 1;
    if ($suffix.$length() > $this.$length())
        return 0;
    $j = 0;
    $i = $this.$length() - $suffix.$length() | 0;
    while ($i < $this.$length()) {
        var$4 = $this.$charAt($i);
        var$5 = $j + 1 | 0;
        if (var$4 != $suffix.$charAt($j))
            return 0;
        $i = $i + 1 | 0;
        $j = var$5;
    }
    return 1;
}
function jl_String_indexOf($this, $ch, $fromIndex) {
    var $i, $bmpChar, $hi, $lo;
    $i = jl_Math_max1(0, $fromIndex);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i >= $this.$characters.data.length)
                return (-1);
            if ($this.$characters.data[$i] == $bmpChar)
                break;
            $i = $i + 1 | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i >= ($this.$characters.data.length - 1 | 0))
            return (-1);
        if ($this.$characters.data[$i] == $hi && $this.$characters.data[$i + 1 | 0] == $lo)
            break;
        $i = $i + 1 | 0;
    }
    return $i;
}
function jl_String_indexOf0($this, $ch) {
    return $this.$indexOf1($ch, 0);
}
function jl_String_lastIndexOf($this, $ch, $fromIndex) {
    var $i, $bmpChar, $hi, $lo, var$7, var$8;
    $i = jl_Math_min1($fromIndex, $this.$length() - 1 | 0);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i < 0)
                return (-1);
            if ($this.$characters.data[$i] == $bmpChar)
                break;
            $i = $i + (-1) | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i < 1)
            return (-1);
        if ($this.$characters.data[$i] == $lo) {
            var$7 = $this.$characters.data;
            var$8 = $i - 1 | 0;
            if (var$7[var$8] == $hi)
                break;
        }
        $i = $i + (-1) | 0;
    }
    return var$8;
}
function jl_String_lastIndexOf0($this, $ch) {
    return $this.$lastIndexOf0($ch, $this.$length() - 1 | 0);
}
function jl_String_indexOf1($this, $str, $fromIndex) {
    var $i, $toIndex, $j;
    $i = jl_Math_max1(0, $fromIndex);
    $toIndex = $this.$length() - $str.$length() | 0;
    a: while (true) {
        if ($i > $toIndex)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= $str.$length())
                break a;
            if ($this.$charAt($i + $j | 0) != $str.$charAt($j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    return $i;
}
function jl_String_indexOf2($this, $str) {
    return $this.$indexOf0($str, 0);
}
function jl_String_lastIndexOf1($this, $str, $fromIndex) {
    var $i, $j;
    $i = jl_Math_min1($fromIndex, $this.$length() - $str.$length() | 0);
    a: while (true) {
        if ($i < 0)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= $str.$length())
                break a;
            if ($this.$charAt($i + $j | 0) != $str.$charAt($j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + (-1) | 0;
    }
    return $i;
}
function jl_String_lastIndexOf2($this, $str) {
    return $this.$lastIndexOf1($str, $this.$length());
}
function jl_String_substring($this, $beginIndex, $endIndex) {
    if ($beginIndex > $endIndex)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    return jl_String__init_0($this.$characters, $beginIndex, $endIndex - $beginIndex | 0);
}
function jl_String_substring0($this, $beginIndex) {
    return $this.$substring0($beginIndex, $this.$length());
}
function jl_String_subSequence($this, $beginIndex, $endIndex) {
    return $this.$substring0($beginIndex, $endIndex);
}
function jl_String_replace($this, $oldChar, $newChar) {
    var $buffer, $i, var$5;
    if ($oldChar == $newChar)
        return $this;
    $buffer = $rt_createCharArray($this.$length());
    $i = 0;
    while ($i < $this.$length()) {
        var$5 = $this.$charAt($i) != $oldChar ? $this.$charAt($i) : $newChar;
        $buffer.data[$i] = var$5;
        $i = $i + 1 | 0;
    }
    return jl_String__init_($buffer);
}
function jl_String_contains($this, $s) {
    var $sz, $i, $j;
    $sz = $this.$length() - $s.$length() | 0;
    $i = 0;
    while ($i <= $sz) {
        $j = 0;
        while (true) {
            if ($j >= $s.$length())
                return 1;
            if ($this.$charAt($i + $j | 0) != $s.$charAt($j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    return 0;
}
function jl_String_replace0($this, $target, $replacement) {
    var $sb, $sz, $i, $j;
    $sb = jl_StringBuilder__init_();
    $sz = $this.$length() - $target.$length() | 0;
    $i = 0;
    while ($i <= $sz) {
        $j = 0;
        a: {
            while (true) {
                if ($j >= $target.$length()) {
                    $sb.$append1($replacement);
                    $i = $i + ($target.$length() - 1 | 0) | 0;
                    break a;
                }
                if ($this.$charAt($i + $j | 0) != $target.$charAt($j))
                    break;
                $j = $j + 1 | 0;
            }
            $sb.$append0($this.$charAt($i));
        }
        $i = $i + 1 | 0;
    }
    $sb.$append1($this.$substring($i));
    return $sb.$toString();
}
function jl_String_trim($this) {
    var $lower, $upper;
    $lower = 0;
    $upper = $this.$length() - 1 | 0;
    a: {
        while ($lower <= $upper) {
            if ($this.$charAt($lower) > 32)
                break a;
            $lower = $lower + 1 | 0;
        }
    }
    while ($lower <= $upper && $this.$charAt($upper) <= 32) {
        $upper = $upper + (-1) | 0;
    }
    return $this.$substring0($lower, $upper + 1 | 0);
}
function jl_String_toString($this) {
    return $this;
}
function jl_String_toCharArray($this) {
    var $array, $i, var$3;
    $array = $rt_createCharArray($this.$characters.data.length);
    $i = 0;
    while (true) {
        var$3 = $array.data;
        if ($i >= var$3.length)
            break;
        var$3[$i] = $this.$characters.data[$i];
        $i = $i + 1 | 0;
    }
    return $array;
}
function jl_String_valueOf($obj) {
    jl_String_$callClinit();
    return $obj === null ? $rt_s(52) : $obj.$toString();
}
function jl_String_valueOf1($c) {
    var var$2, var$3;
    jl_String_$callClinit();
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1);
    var$3.data[0] = $c;
    jl_String__init_2(var$2, var$3);
    return var$2;
}
function jl_String_valueOf0($i) {
    jl_String_$callClinit();
    return jl_StringBuilder__init_().$append3($i).$toString();
}
function jl_String_equals($this, $other) {
    var $str, $i;
    if ($this === $other)
        return 1;
    if (!($other instanceof jl_String))
        return 0;
    $str = $other;
    if ($str.$length() != $this.$length())
        return 0;
    $i = 0;
    while ($i < $str.$length()) {
        if ($this.$charAt($i) != $str.$charAt($i))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
function jl_String_equalsIgnoreCase($this, $other) {
    var $i;
    if ($this === $other)
        return 1;
    if ($other === null)
        return 0;
    if ($this.$length() != $other.$length())
        return 0;
    $i = 0;
    while ($i < $this.$length()) {
        if (jl_Character_toLowerCase($this.$charAt($i)) != jl_Character_toLowerCase($other.$charAt($i)))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
function jl_String_hashCode($this) {
    var var$1, var$2, var$3, $c;
    a: {
        if (!$this.$hashCode0) {
            var$1 = $this.$characters.data;
            var$2 = var$1.length;
            var$3 = 0;
            while (true) {
                if (var$3 >= var$2)
                    break a;
                $c = var$1[var$3];
                $this.$hashCode0 = (31 * $this.$hashCode0 | 0) + $c | 0;
                var$3 = var$3 + 1 | 0;
            }
        }
    }
    return $this.$hashCode0;
}
function jl_String_toLowerCase($this) {
    var $codePoints, $codePointCount, $i, var$4, var$5, var$6, var$7, var$8;
    if ($this.$isEmpty())
        return $this;
    $codePoints = $rt_createIntArray($this.$characters.data.length);
    $codePointCount = 0;
    $i = 0;
    while ($i < $this.$characters.data.length) {
        a: {
            if ($i != ($this.$characters.data.length - 1 | 0) && jl_Character_isHighSurrogate($this.$characters.data[$i])) {
                var$4 = $this.$characters.data;
                var$5 = $i + 1 | 0;
                var$6 = var$4[var$5];
                if (jl_Character_isLowSurrogate(var$6)) {
                    var$7 = $codePoints.data;
                    var$8 = $codePointCount + 1 | 0;
                    var$7[$codePointCount] = jl_Character_toLowerCase0(jl_Character_toCodePoint($this.$characters.data[$i], $this.$characters.data[var$5]));
                    $i = var$5;
                    break a;
                }
            }
            var$7 = $codePoints.data;
            var$8 = $codePointCount + 1 | 0;
            var$7[$codePointCount] = jl_Character_toLowerCase($this.$characters.data[$i]);
        }
        $i = $i + 1 | 0;
        $codePointCount = var$8;
    }
    return jl_String__init_7($codePoints, 0, $codePointCount);
}
function jl_String_toUpperCase($this) {
    var $codePoints, $codePointCount, $i, var$4, var$5, var$6, var$7, var$8;
    if ($this.$isEmpty())
        return $this;
    $codePoints = $rt_createIntArray($this.$characters.data.length);
    $codePointCount = 0;
    $i = 0;
    while ($i < $this.$characters.data.length) {
        a: {
            if ($i != ($this.$characters.data.length - 1 | 0) && jl_Character_isHighSurrogate($this.$characters.data[$i])) {
                var$4 = $this.$characters.data;
                var$5 = $i + 1 | 0;
                var$6 = var$4[var$5];
                if (jl_Character_isLowSurrogate(var$6)) {
                    var$7 = $codePoints.data;
                    var$8 = $codePointCount + 1 | 0;
                    var$7[$codePointCount] = jl_Character_toUpperCase(jl_Character_toCodePoint($this.$characters.data[$i], $this.$characters.data[var$5]));
                    $i = var$5;
                    break a;
                }
            }
            var$7 = $codePoints.data;
            var$8 = $codePointCount + 1 | 0;
            var$7[$codePointCount] = jl_Character_toUpperCase0($this.$characters.data[$i]);
        }
        $i = $i + 1 | 0;
        $codePointCount = var$8;
    }
    return jl_String__init_7($codePoints, 0, $codePointCount);
}
function jl_String_split($this, $regex) {
    return jur_Pattern_split(jur_Pattern_compile($regex), $this.$toString());
}
function jl_String_split0($this, $regex, $limit) {
    return jur_Pattern_split0(jur_Pattern_compile($regex), $this.$toString(), $limit);
}
function jl_String_replaceAll($this, $regex, $replacement) {
    return jur_Matcher_replaceAll(jur_Pattern_matcher(jur_Pattern_compile($regex), $this.$toString()), $replacement);
}
function jl_String_compareTo0($this, var$1) {
    return $this.$compareTo0(var$1);
}
function jl_String__clinit_() {
    jl_String_CASE_INSENSITIVE_ORDER = jl_String$_clinit_$lambda$_81_0__init_();
}
function it_Phases$1$lambda$null$3$lambda$_21_0() {
    var a = this; jl_Object.call(a);
    a.$_027 = 0.0;
    a.$_117 = 0;
}
function it_Phases$1$lambda$null$3$lambda$_21_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$1$lambda$null$3$lambda$_21_0();
    it_Phases$1$lambda$null$3$lambda$_21_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$1$lambda$null$3$lambda$_21_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_027 = var$1;
    var$0.$_117 = var$2;
}
function it_Phases$1$lambda$null$3$lambda$_21_0_run(var$0) {
    it_Phases$1_lambda$null$2(var$0.$_027, var$0.$_117);
}
function jnci_BufferedEncoder() {
    jnc_CharsetEncoder.call(this);
}
function jnci_BufferedEncoder__init_(var_0, var_1, var_2) {
    var var_3 = new jnci_BufferedEncoder();
    jnci_BufferedEncoder__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jnci_BufferedEncoder__init_0($this, $cs, $averageBytesPerChar, $maxBytesPerChar) {
    jnc_CharsetEncoder__init_2($this, $cs, $averageBytesPerChar, $maxBytesPerChar);
}
function jnci_BufferedEncoder_encodeLoop($this, $in, $out) {
    var $inArray, $inPos, $inSize, $outArray, $i, var$8, var$9, var$10, $outSize, $controller;
    $inArray = $rt_createCharArray(jl_Math_min1(jn_Buffer_remaining($in), 512));
    $inPos = 0;
    $inSize = 0;
    $outArray = $rt_createByteArray(jl_Math_min1(jn_Buffer_remaining($out), 512));
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize && jn_Buffer_hasRemaining($in)) {
                $i = $inPos;
                while ($i < $inSize) {
                    var$8 = $inArray.data;
                    var$8[$i - $inPos | 0] = var$8[$i];
                    $i = $i + 1 | 0;
                }
                var$8 = $inArray.data;
                var$9 = $inSize - $inPos | 0;
                $inSize = jl_Math_min1(jn_Buffer_remaining($in) + var$9 | 0, var$8.length);
                $in.$get15($inArray, var$9, $inSize - var$9 | 0);
                $inPos = 0;
            }
            if (!jn_Buffer_hasRemaining($out)) {
                if (!jn_Buffer_hasRemaining($in) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    var$10 = jnc_CoderResult_UNDERFLOW;
                } else {
                    jnc_CoderResult_$callClinit();
                    var$10 = jnc_CoderResult_OVERFLOW;
                }
                break a;
            }
            var$8 = $outArray.data;
            $outSize = jl_Math_min1(jn_Buffer_remaining($out), var$8.length);
            $controller = jnci_BufferedEncoder$Controller__init_($in, $out);
            var$10 = $this.$arrayEncode($inArray, $inPos, $inSize, $outArray, 0, $outSize, $controller);
            $inPos = $controller.$inPosition;
            if (var$10 === null && 0 == $controller.$outPosition) {
                jnc_CoderResult_$callClinit();
                var$10 = jnc_CoderResult_UNDERFLOW;
            }
            var$9 = $controller.$outPosition;
            $out.$put3($outArray, 0, var$9);
            if (var$10 !== null)
                break;
        }
    }
    $in.$position1(jn_Buffer_position($in) - ($inSize - $inPos | 0) | 0);
    return var$10;
}
function jnci_UTF8Encoder() {
    jnci_BufferedEncoder.call(this);
}
function jnci_UTF8Encoder__init_(var_0) {
    var var_1 = new jnci_UTF8Encoder();
    jnci_UTF8Encoder__init_0(var_1, var_0);
    return var_1;
}
function jnci_UTF8Encoder__init_0($this, $cs) {
    jnci_BufferedEncoder__init_0($this, $cs, 2.0, 4.0);
}
function jnci_UTF8Encoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $ch, var$12, var$13, var$14, $low, $codePoint;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $ch = var$10[$inPos];
            if ($ch < 128) {
                var$10 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$10[$outPos] = $ch << 24 >> 24;
            } else if ($ch < 2048) {
                if (($outPos + 2 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    if ($controller.$hasMoreOutput(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                var$13 = $outPos + 1 | 0;
                var$10[$outPos] = (192 | $ch >> 6) << 24 >> 24;
                var$12 = var$13 + 1 | 0;
                var$10[var$13] = (128 | $ch & 63) << 24 >> 24;
            } else if (!jl_Character_isSurrogate($ch)) {
                if (($outPos + 3 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    if ($controller.$hasMoreOutput(3))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                var$14 = $outPos + 1 | 0;
                var$10[$outPos] = (224 | $ch >> 12) << 24 >> 24;
                var$13 = var$14 + 1 | 0;
                var$10[var$14] = (128 | $ch >> 6 & 63) << 24 >> 24;
                var$12 = var$13 + 1 | 0;
                var$10[var$13] = (128 | $ch & 63) << 24 >> 24;
            } else {
                if (!jl_Character_isHighSurrogate($ch)) {
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (var$9 >= $inSize) {
                    if ($controller.$hasMoreInput())
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                var$13 = var$9 + 1 | 0;
                $low = var$10[var$9];
                if (!jl_Character_isLowSurrogate($low)) {
                    var$9 = var$13 + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 4 | 0) > $outSize) {
                    var$9 = var$13 + (-2) | 0;
                    if ($controller.$hasMoreOutput(4))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                $codePoint = jl_Character_toCodePoint($ch, $low);
                var$9 = $outPos + 1 | 0;
                var$10[$outPos] = (240 | $codePoint >> 18) << 24 >> 24;
                var$14 = var$9 + 1 | 0;
                var$10[var$9] = (128 | $codePoint >> 12 & 63) << 24 >> 24;
                var$9 = var$14 + 1 | 0;
                var$10[var$14] = (128 | $codePoint >> 6 & 63) << 24 >> 24;
                var$12 = var$9 + 1 | 0;
                var$10[var$9] = (128 | $codePoint & 63) << 24 >> 24;
                var$9 = var$13;
            }
            $inPos = var$9;
            $outPos = var$12;
        }
        var$9 = $inPos;
    }
    $controller.$setInPosition(var$9);
    $controller.$setOutPosition($outPos);
    return $result;
}
function ju_Dictionary() {
    jl_Object.call(this);
}
function ju_Dictionary__init_() {
    var var_0 = new ju_Dictionary();
    ju_Dictionary__init_0(var_0);
    return var_0;
}
function ju_Dictionary__init_0($this) {
    jl_Object__init_0($this);
}
function ju_Map() {
}
function ju_Hashtable() {
    var a = this; ju_Dictionary.call(a);
    a.$elementCount = 0;
    a.$elementData = null;
    a.$loadFactor0 = 0.0;
    a.$threshold0 = 0;
    a.$firstSlot = 0;
    a.$lastSlot = 0;
    a.$modCount = 0;
}
var ju_Hashtable_EMPTY_ENUMERATION = null;
var ju_Hashtable_EMPTY_ITERATOR = null;
function ju_Hashtable_$callClinit() {
    ju_Hashtable_$callClinit = $rt_eraseClinit(ju_Hashtable);
    ju_Hashtable__clinit_();
}
function ju_Hashtable__init_() {
    var var_0 = new ju_Hashtable();
    ju_Hashtable__init_0(var_0);
    return var_0;
}
function ju_Hashtable__init_1(var_0) {
    var var_1 = new ju_Hashtable();
    ju_Hashtable__init_2(var_1, var_0);
    return var_1;
}
function ju_Hashtable_newEntry($key, $value, $hash) {
    ju_Hashtable_$callClinit();
    return ju_Hashtable$Entry__init_($key, $value);
}
function ju_Hashtable__init_0($this) {
    ju_Hashtable_$callClinit();
    ju_Hashtable__init_2($this, 11);
}
function ju_Hashtable__init_2($this, $capacity) {
    ju_Hashtable_$callClinit();
    ju_Dictionary__init_0($this);
    $this.$lastSlot = (-1);
    if ($capacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $this.$elementCount = 0;
    if (!$capacity)
        $capacity = 1;
    $this.$elementData = ju_Hashtable_newElementArray($this, $capacity);
    $this.$firstSlot = $this.$elementData.data.length;
    $this.$loadFactor0 = 0.75;
    ju_Hashtable_computeMaxSize($this);
}
function ju_Hashtable_newElementArray($this, $size) {
    return $rt_createArray(ju_Hashtable$Entry, $size);
}
function ju_Hashtable_computeMaxSize($this) {
    $this.$threshold0 = $this.$elementData.data.length * $this.$loadFactor0 | 0;
}
function ju_Hashtable_get($this, $key) {
    var $hash, $index, $entry;
    jl_Object_monitorEnterSync($this);
    try {
        $hash = $key.$hashCode();
        $index = ($hash & 2147483647) % $this.$elementData.data.length | 0;
        $entry = $this.$elementData.data[$index];
        while ($entry !== null) {
            if ($entry.$equalsKey($key, $hash))
                return $entry.$value2;
            $entry = $entry.$next1;
        }
        return null;
    } finally {
        jl_Object_monitorExitSync($this);
    }
}
function ju_Hashtable_put($this, $key, $value) {
    var $hash, var$4, $index, $entry, $result, var$8, var$9;
    jl_Object_monitorEnterSync($this);
    try {
        if ($key !== null && $value !== null) {
            $hash = $key.$hashCode();
            var$4 = $hash & 2147483647;
            $index = var$4 % $this.$elementData.data.length | 0;
            $entry = $this.$elementData.data[$index];
            while ($entry !== null && !$entry.$equalsKey($key, $hash)) {
                $entry = $entry.$next1;
            }
            if ($entry !== null) {
                $result = $entry.$value2;
                $entry.$value2 = $value;
                return $result;
            }
            $this.$modCount = $this.$modCount + 1 | 0;
            var$8 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$8;
            if (var$8 > $this.$threshold0) {
                $this.$rehash();
                $index = var$4 % $this.$elementData.data.length | 0;
            }
            if ($index < $this.$firstSlot)
                $this.$firstSlot = $index;
            if ($index > $this.$lastSlot)
                $this.$lastSlot = $index;
            var$9 = ju_Hashtable_newEntry($key, $value, $hash);
            var$9.$next1 = $this.$elementData.data[$index];
            $this.$elementData.data[$index] = var$9;
            return null;
        }
        $rt_throw(jl_NullPointerException__init_());
    } finally {
        jl_Object_monitorExitSync($this);
    }
}
function ju_Hashtable_rehash($this) {
    var $length, $newLast, $newData, $i, var$5, $entry, $index, var$8, $entry_0;
    $length = ($this.$elementData.data.length << 1) + 1 | 0;
    if (!$length)
        $length = 1;
    $newLast = (-1);
    $newData = ju_Hashtable_newElementArray($this, $length);
    $i = $this.$lastSlot + 1 | 0;
    var$5 = $length;
    while (true) {
        $i = $i + (-1) | 0;
        if ($i < $this.$firstSlot)
            break;
        $entry = $this.$elementData.data[$i];
        while ($entry !== null) {
            $index = ($entry.$getKeyHash() & 2147483647) % $length | 0;
            if ($index < var$5)
                var$5 = $index;
            if ($index > $newLast)
                $newLast = $index;
            var$8 = $newData.data;
            $entry_0 = $entry.$next1;
            $entry.$next1 = var$8[$index];
            var$8[$index] = $entry;
            $entry = $entry_0;
        }
    }
    $this.$firstSlot = var$5;
    $this.$lastSlot = $newLast;
    $this.$elementData = $newData;
    ju_Hashtable_computeMaxSize($this);
}
function ju_Hashtable__clinit_() {
    ju_Hashtable_EMPTY_ENUMERATION = ju_Hashtable$1__init_();
    ju_Hashtable_EMPTY_ITERATOR = ju_Hashtable$2__init_();
}
function ju_Properties() {
    ju_Hashtable.call(this);
    this.$defaults0 = null;
}
function ju_Properties__init_() {
    var var_0 = new ju_Properties();
    ju_Properties__init_0(var_0);
    return var_0;
}
function ju_Properties__init_1(var_0) {
    var var_1 = new ju_Properties();
    ju_Properties__init_2(var_1, var_0);
    return var_1;
}
function ju_Properties__init_0($this) {
    ju_Hashtable__init_0($this);
}
function ju_Properties__init_2($this, $properties) {
    ju_Hashtable__init_0($this);
    $this.$defaults0 = $properties;
}
function ju_Properties_getProperty($this, $name) {
    var $result, $property;
    $result = ju_Hashtable_get($this, $name);
    $property = !($result instanceof jl_String) ? null : $result;
    if ($property === null && $this.$defaults0 !== null)
        $property = $this.$defaults0.$getProperty($name);
    return $property;
}
function cjj_ZStream() {
    var a = this; jl_Object.call(a);
    a.$next_in = null;
    a.$next_in_index = 0;
    a.$avail_in = 0;
    a.$total_in = Long_ZERO;
    a.$next_out = null;
    a.$next_out_index = 0;
    a.$avail_out = 0;
    a.$total_out = Long_ZERO;
    a.$msg = null;
    a.$istate = null;
    a.$adler = null;
}
function cjj_ZStream__init_() {
    var var_0 = new cjj_ZStream();
    cjj_ZStream__init_0(var_0);
    return var_0;
}
function cjj_ZStream__init_1(var_0) {
    var var_1 = new cjj_ZStream();
    cjj_ZStream__init_2(var_1, var_0);
    return var_1;
}
function cjj_ZStream__init_0($this) {
    cjj_ZStream__init_2($this, cjj_Adler32__init_());
}
function cjj_ZStream__init_2($this, $adler) {
    jl_Object__init_0($this);
    $this.$adler = $adler;
}
function cjj_ZStream_setOutput($this, $buf, $off, $len) {
    $this.$next_out = $buf;
    $this.$next_out_index = $off;
    $this.$avail_out = $len;
}
function cjj_ZStream_setInput($this, $buf, $off, $len, $append) {
    var $tmp;
    if ($len <= 0 && $append && $this.$next_in !== null)
        return;
    if ($this.$avail_in > 0 && $append) {
        $tmp = $rt_createByteArray($this.$avail_in + $len | 0);
        jl_System_arraycopy($this.$next_in, $this.$next_in_index, $tmp, 0, $this.$avail_in);
        jl_System_arraycopy($buf, $off, $tmp, $this.$avail_in, $len);
        $this.$next_in = $tmp;
        $this.$next_in_index = 0;
        $this.$avail_in = $this.$avail_in + $len | 0;
    } else {
        $this.$next_in = $buf;
        $this.$next_in_index = $off;
        $this.$avail_in = $len;
    }
}
function cjj_ZStream_getTotalOut($this) {
    return $this.$total_out;
}
function iaa_ApplicationListener() {
}
function iaa_ApplicationListener_init($this) {
    return;
}
function iaa_ApplicationListener_resize($this, $width, $height) {
    return;
}
function iaa_ApplicationListener_update($this) {
    return;
}
function it_Phases$lambda$null$8$lambda$_59_0() {
    jl_Object.call(this);
    this.$_028 = null;
}
function it_Phases$lambda$null$8$lambda$_59_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$null$8$lambda$_59_0();
    it_Phases$lambda$null$8$lambda$_59_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$null$8$lambda$_59_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_028 = var$1;
}
function it_Phases$lambda$null$8$lambda$_59_0_get(var$0, var$1) {
    var$0.$_028.$shoot(var$1);
}
function jnci_UTF8Charset() {
    jnc_Charset.call(this);
}
function jnci_UTF8Charset__init_() {
    var var_0 = new jnci_UTF8Charset();
    jnci_UTF8Charset__init_0(var_0);
    return var_0;
}
function jnci_UTF8Charset__init_0($this) {
    jnc_Charset__init_0($this, $rt_s(27), $rt_createArray(jl_String, 0));
}
function jnci_UTF8Charset_newDecoder($this) {
    return jnci_UTF8Decoder__init_($this);
}
function jnci_UTF8Charset_newEncoder($this) {
    return jnci_UTF8Encoder__init_($this);
}
function otjde_EventTarget() {
}
function otjde_KeyboardEventTarget() {
}
function iaaus_BaseJsonReader() {
}
function jur_MultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter = 0;
}
function jur_MultiLineEOLSet__init_(var_0) {
    var var_1 = new jur_MultiLineEOLSet();
    jur_MultiLineEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_MultiLineEOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_0($this);
    $this.$consCounter = $counter;
}
function jur_MultiLineEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $strDif, $ch1, $ch2;
    $strDif = !$matchResult.$hasAnchoringBounds() ? $testString.$length() - $strIndex | 0 : $matchResult.$getLeftBound() - $strIndex | 0;
    if (!$strDif) {
        $matchResult.$setConsumed($this.$consCounter, 0);
        return $this.$next.$matches($strIndex, $testString, $matchResult);
    }
    if ($strDif < 2) {
        $ch1 = $testString.$charAt($strIndex);
        $ch2 = 97;
    } else {
        $ch1 = $testString.$charAt($strIndex);
        $ch2 = $testString.$charAt($strIndex + 1 | 0);
    }
    switch ($ch1) {
        case 10:
        case 133:
        case 8232:
        case 8233:
            $matchResult.$setConsumed($this.$consCounter, 0);
            return $this.$next.$matches($strIndex, $testString, $matchResult);
        case 13:
            if ($ch2 != 10) {
                $matchResult.$setConsumed($this.$consCounter, 0);
                return $this.$next.$matches($strIndex, $testString, $matchResult);
            }
            $matchResult.$setConsumed($this.$consCounter, 0);
            return $this.$next.$matches($strIndex, $testString, $matchResult);
        default:
    }
    return (-1);
}
function jur_MultiLineEOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter, (-1));
    return $res;
}
function jur_MultiLineEOLSet_getName($this) {
    return $rt_s(485);
}
function iaat_Parser$1() {
    jl_Object.call(this);
}
var iaat_Parser$1_$SwitchMap$io$anuke$arc$typelabel$TokenCategory = null;
function iaat_Parser$1_$callClinit() {
    iaat_Parser$1_$callClinit = $rt_eraseClinit(iaat_Parser$1);
    iaat_Parser$1__clinit_();
}
function iaat_Parser$1__clinit_() {
    var $$je;
    iaat_Parser$1_$SwitchMap$io$anuke$arc$typelabel$TokenCategory = $rt_createIntArray(iaat_TokenCategory_values().data.length);
    a: {
        try {
            iaat_Parser$1_$SwitchMap$io$anuke$arc$typelabel$TokenCategory.data[jl_Enum_ordinal(iaat_TokenCategory_WAIT)] = 1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    b: {
        try {
            iaat_Parser$1_$SwitchMap$io$anuke$arc$typelabel$TokenCategory.data[jl_Enum_ordinal(iaat_TokenCategory_EVENT)] = 2;
            break b;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    c: {
        try {
            iaat_Parser$1_$SwitchMap$io$anuke$arc$typelabel$TokenCategory.data[jl_Enum_ordinal(iaat_TokenCategory_SPEED)] = 3;
            break c;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    d: {
        try {
            iaat_Parser$1_$SwitchMap$io$anuke$arc$typelabel$TokenCategory.data[jl_Enum_ordinal(iaat_TokenCategory_EFFECT_START)] = 4;
            break d;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    e: {
        try {
            iaat_Parser$1_$SwitchMap$io$anuke$arc$typelabel$TokenCategory.data[jl_Enum_ordinal(iaat_TokenCategory_EFFECT_END)] = 5;
            break e;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
}
function ji_Reader() {
    jl_Object.call(this);
    this.$lock = null;
}
function ji_Reader__init_() {
    var var_0 = new ji_Reader();
    ji_Reader__init_0(var_0);
    return var_0;
}
function ji_Reader__init_1(var_0) {
    var var_1 = new ji_Reader();
    ji_Reader__init_2(var_1, var_0);
    return var_1;
}
function ji_Reader__init_0($this) {
    ji_Reader__init_2($this, jl_Object__init_());
}
function ji_Reader__init_2($this, $lock) {
    jl_Object__init_0($this);
    $this.$lock = $lock;
}
function ji_BufferedReader() {
    var a = this; ji_Reader.call(a);
    a.$innerReader = null;
    a.$buffer2 = null;
    a.$index3 = 0;
    a.$count2 = 0;
    a.$eof0 = 0;
    a.$mark0 = 0;
}
function ji_BufferedReader__init_(var_0, var_1) {
    var var_2 = new ji_BufferedReader();
    ji_BufferedReader__init_0(var_2, var_0, var_1);
    return var_2;
}
function ji_BufferedReader__init_0($this, $innerReader, $size) {
    ji_Reader__init_0($this);
    $this.$mark0 = (-1);
    if ($size < 0)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $this.$innerReader = $innerReader;
    $this.$buffer2 = $rt_createCharArray(jl_Math_max1(64, $size));
}
function ji_BufferedReader_readLine($this) {
    var $line, var$2, var$3, $ch;
    ji_BufferedReader_requireOpened($this);
    if ($this.$eof0 && $this.$index3 >= $this.$count2)
        return null;
    $line = jl_StringBuilder__init_();
    a: {
        while (true) {
            if ($this.$index3 >= $this.$count2 && !ji_BufferedReader_fillBuffer($this, 0))
                break a;
            var$2 = $this.$buffer2.data;
            var$3 = $this.$index3;
            $this.$index3 = var$3 + 1 | 0;
            $ch = var$2[var$3];
            if ($ch == 10)
                break;
            if ($ch == 13) {
                if ($this.$index3 >= $this.$count2 && !ji_BufferedReader_fillBuffer($this, 0))
                    break a;
                if ($this.$buffer2.data[$this.$index3] != 10)
                    break a;
                $this.$index3 = $this.$index3 + 1 | 0;
                break a;
            }
            $line.$append0($ch);
        }
    }
    return $line.$toString();
}
function ji_BufferedReader_fillBuffer($this, $offset) {
    var $charsRead;
    if ($this.$eof0)
        return 0;
    a: {
        while (true) {
            if ($offset >= $this.$buffer2.data.length)
                break a;
            $charsRead = $this.$innerReader.$read1($this.$buffer2, $offset, $this.$buffer2.data.length - $offset | 0);
            if ($charsRead == (-1)) {
                $this.$eof0 = 1;
                break a;
            }
            if (!$charsRead)
                break;
            $offset = $offset + $charsRead | 0;
        }
    }
    $this.$count2 = $offset;
    $this.$index3 = 0;
    $this.$mark0 = (-1);
    return 1;
}
function ji_BufferedReader_requireOpened($this) {
    if ($this.$innerReader !== null)
        return;
    $rt_throw(ji_IOException__init_1());
}
function ie_ScaleTrait() {
}
function ie_ScaleTrait_fout($this) {
    return 1.0 - $this.$fin();
}
function ie_ScaleTrait_fout0($this, $i) {
    return $i.$apply($this.$fout());
}
function ie_ScaleTrait_fin($this, $i) {
    return $i.$apply($this.$fin());
}
function ie_ScaleTrait_finpow($this) {
    iaam_Interpolation_$callClinit();
    return iaam_Interpolation_pow3Out.$apply($this.$fin());
}
function ie_ScaleTrait_fslope($this) {
    return (0.5 - jl_Math_abs0($this.$fin() - 0.5)) * 2.0;
}
function ju_Collection() {
}
function ju_AbstractCollection() {
    jl_Object.call(this);
}
function ju_AbstractCollection__init_() {
    var var_0 = new ju_AbstractCollection();
    ju_AbstractCollection__init_0(var_0);
    return var_0;
}
function ju_AbstractCollection__init_0($this) {
    jl_Object__init_0($this);
}
function ju_AbstractCollection_toArray($this, $a) {
    var var$2, $i, var$4, $iter;
    var$2 = $a.data;
    $i = $this.$size0();
    var$4 = var$2.length;
    if (var$4 < $i)
        $a = jlr_Array_newInstance(jl_Object_getClass($a).$getComponentType(), $i);
    else
        while ($i < var$4) {
            var$2[$i] = null;
            $i = $i + 1 | 0;
        }
    $i = 0;
    $iter = $this.$iterator();
    while ($iter.$hasNext()) {
        var$2 = $a.data;
        var$4 = $i + 1 | 0;
        var$2[$i] = $iter.$next0();
        $i = var$4;
    }
    return $a;
}
function ju_Queue() {
}
function ju_Deque() {
}
function ju_ArrayDeque() {
    var a = this; ju_AbstractCollection.call(a);
    a.$version = 0;
    a.$array2 = null;
    a.$head = 0;
    a.$tail = 0;
}
function ju_ArrayDeque__init_() {
    var var_0 = new ju_ArrayDeque();
    ju_ArrayDeque__init_0(var_0);
    return var_0;
}
function ju_ArrayDeque__init_1(var_0) {
    var var_1 = new ju_ArrayDeque();
    ju_ArrayDeque__init_2(var_1, var_0);
    return var_1;
}
function ju_ArrayDeque__init_0($this) {
    ju_ArrayDeque__init_2($this, 8);
}
function ju_ArrayDeque__init_2($this, $numElements) {
    ju_AbstractCollection__init_0($this);
    $this.$array2 = $rt_createArray(jl_Object, $numElements + 1 | 0);
}
function ju_ArrayDeque_addLast($this, $e) {
    var var$2, var$3;
    if ($e === null)
        $rt_throw(jl_NullPointerException__init_());
    ju_ArrayDeque_ensureCapacity($this, $this.$size0() + 1 | 0);
    var$2 = $this.$array2.data;
    var$3 = $this.$tail;
    $this.$tail = var$3 + 1 | 0;
    var$2[var$3] = $e;
    if ($this.$tail >= $this.$array2.data.length)
        $this.$tail = 0;
    $this.$version = $this.$version + 1 | 0;
}
function ju_ArrayDeque_pollFirst($this) {
    var $result;
    if ($this.$head == $this.$tail)
        return null;
    $result = $this.$array2.data[$this.$head];
    $this.$array2.data[$this.$head] = null;
    $this.$head = $this.$head + 1 | 0;
    if ($this.$head >= $this.$array2.data.length)
        $this.$head = 0;
    $this.$version = $this.$version + 1 | 0;
    return $result;
}
function ju_ArrayDeque_add($this, $e) {
    $this.$addLast($e);
    return 1;
}
function ju_ArrayDeque_poll($this) {
    return $this.$pollFirst();
}
function ju_ArrayDeque_size($this) {
    return $this.$tail >= $this.$head ? $this.$tail - $this.$head | 0 : ($this.$array2.data.length - $this.$head | 0) + $this.$tail | 0;
}
function ju_ArrayDeque_ensureCapacity($this, $capacity) {
    var $newArraySize, $newArray, $j, $i, var$6, var$7, var$8;
    if ($capacity < $this.$array2.data.length)
        return;
    $newArraySize = jl_Math_max1($this.$array2.data.length * 2 | 0, (($capacity * 3 | 0) / 2 | 0) + 1 | 0);
    if ($newArraySize < 1)
        $newArraySize = 2147483647;
    $newArray = $rt_createArray(jl_Object, $newArraySize);
    $j = 0;
    if ($this.$head <= $this.$tail) {
        $i = $this.$head;
        while ($i < $this.$tail) {
            var$6 = $newArray.data;
            var$7 = $j + 1 | 0;
            var$6[$j] = $this.$array2.data[$i];
            $i = $i + 1 | 0;
            $j = var$7;
        }
    } else {
        $i = $this.$head;
        while ($i < $this.$array2.data.length) {
            var$8 = $newArray.data;
            var$7 = $j + 1 | 0;
            var$8[$j] = $this.$array2.data[$i];
            $i = $i + 1 | 0;
            $j = var$7;
        }
        $i = 0;
        while ($i < $this.$tail) {
            var$6 = $newArray.data;
            var$7 = $j + 1 | 0;
            var$6[$j] = $this.$array2.data[$i];
            $i = $i + 1 | 0;
            $j = var$7;
        }
    }
    $this.$head = 0;
    $this.$tail = $j;
    $this.$array2 = $newArray;
}
function it_Phases$1$lambda$null$12$lambda$_12_0() {
    jl_Object.call(this);
    this.$_029 = 0.0;
}
function it_Phases$1$lambda$null$12$lambda$_12_0__init_(var_0) {
    var var_1 = new it_Phases$1$lambda$null$12$lambda$_12_0();
    it_Phases$1$lambda$null$12$lambda$_12_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$1$lambda$null$12$lambda$_12_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_029 = var$1;
}
function it_Phases$1$lambda$null$12$lambda$_12_0_get(var$0, var$1) {
    it_Phases$1_lambda$null$11(var$0.$_029, var$1);
}
function juz_Inflater() {
    var a = this; jl_Object.call(a);
    a.$finished0 = 0;
    a.$nowrap = 0;
    a.$inLength = 0;
    a.$inRead = 0;
    a.$needsDictionary0 = 0;
    a.$impl0 = null;
}
function juz_Inflater__init_() {
    var var_0 = new juz_Inflater();
    juz_Inflater__init_1(var_0);
    return var_0;
}
function juz_Inflater__init_0(var_0) {
    var var_1 = new juz_Inflater();
    juz_Inflater__init_2(var_1, var_0);
    return var_1;
}
function juz_Inflater__init_1($this) {
    juz_Inflater__init_2($this, 0);
}
function juz_Inflater__init_2($this, $noHeader) {
    var $$je;
    jl_Object__init_0($this);
    $this.$nowrap = $noHeader;
    a: {
        try {
            $this.$impl0 = cjj_Inflater__init_($noHeader);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof cjj_GZIPException) {
            } else {
                throw $$e;
            }
        }
    }
}
function juz_Inflater_finished($this) {
    return $this.$finished0;
}
function juz_Inflater_getBytesWritten($this) {
    if ($this.$impl0 !== null)
        return $this.$impl0.$getTotalOut0();
    $rt_throw(jl_IllegalStateException__init_0());
}
function juz_Inflater_getRemaining($this) {
    return $this.$inLength - $this.$inRead | 0;
}
function juz_Inflater_getTotalOut($this) {
    return $this.$getBytesWritten().lo;
}
function juz_Inflater_inflate($this, $buf, $off, $nbytes) {
    var var$4, $lastInSize, $lastOutSize, $neededDict, $errCode;
    var$4 = $buf.data.length;
    if ($off <= var$4 && $nbytes >= 0 && $off >= 0 && (var$4 - $off | 0) >= $nbytes) {
        if ($this.$impl0 === null)
            $rt_throw(jl_IllegalStateException__init_0());
        if ($this.$needsInput())
            return 0;
        a: {
            $lastInSize = $this.$impl0.$total_in;
            $lastOutSize = $this.$impl0.$total_out;
            $neededDict = $this.$needsDictionary0;
            $this.$needsDictionary0 = 0;
            $this.$impl0.$setOutput($buf, $off, $nbytes);
            $errCode = cjj_Inflater_inflate($this.$impl0, 0);
            switch ($errCode) {
                case 0:
                    break a;
                case 1:
                    $this.$finished0 = 1;
                    break a;
                case 2:
                    $this.$needsDictionary0 = 1;
                    break a;
                default:
            }
            $rt_throw(juz_DataFormatException__init_(jl_StringBuilder__init_().$append($rt_s(486)).$append3($errCode).$toString()));
        }
        if ($this.$needsDictionary0 && $neededDict)
            $rt_throw(juz_DataFormatException__init_0());
        $this.$inRead = Long_add(Long_fromInt($this.$inRead), Long_sub($this.$impl0.$total_in, $lastInSize)).lo;
        return Long_sub($this.$impl0.$total_out, $lastOutSize).lo;
    }
    $rt_throw(jl_ArrayIndexOutOfBoundsException__init_());
}
function juz_Inflater_needsDictionary($this) {
    return $this.$needsDictionary0;
}
function juz_Inflater_needsInput($this) {
    return $this.$inRead != $this.$inLength ? 0 : 1;
}
function juz_Inflater_setInput($this, $buf, $off, $nbytes) {
    var var$4;
    if ($this.$impl0 === null)
        $rt_throw(jl_IllegalStateException__init_0());
    var$4 = $buf.data.length;
    if ($off <= var$4 && $nbytes >= 0 && $off >= 0 && (var$4 - $off | 0) >= $nbytes) {
        $this.$inRead = 0;
        $this.$inLength = $nbytes;
        $this.$impl0.$setInput0($buf, $off, $nbytes, 0);
        return;
    }
    $rt_throw(jl_ArrayIndexOutOfBoundsException__init_());
}
function iaaf_Cons2() {
}
function ju_HashMap$AbstractMapIterator() {
    var a = this; jl_Object.call(a);
    a.$position5 = 0;
    a.$expectedModCount = 0;
    a.$futureEntry = null;
    a.$currentEntry = null;
    a.$prevEntry = null;
    a.$associatedMap = null;
}
function ju_HashMap$AbstractMapIterator__init_(var_0) {
    var var_1 = new ju_HashMap$AbstractMapIterator();
    ju_HashMap$AbstractMapIterator__init_0(var_1, var_0);
    return var_1;
}
function ju_HashMap$AbstractMapIterator__init_0($this, $hm) {
    jl_Object__init_0($this);
    $this.$associatedMap = $hm;
    $this.$expectedModCount = $hm.$modCount0;
    $this.$futureEntry = null;
}
function ju_HashMap$AbstractMapIterator_hasNext($this) {
    if ($this.$futureEntry !== null)
        return 1;
    while ($this.$position5 < $this.$associatedMap.$elementData0.data.length) {
        if ($this.$associatedMap.$elementData0.data[$this.$position5] !== null)
            return 1;
        $this.$position5 = $this.$position5 + 1 | 0;
    }
    return 0;
}
function ju_HashMap$AbstractMapIterator_checkConcurrentMod($this) {
    if ($this.$expectedModCount == $this.$associatedMap.$modCount0)
        return;
    $rt_throw(ju_ConcurrentModificationException__init_());
}
function ju_HashMap$AbstractMapIterator_makeNext($this) {
    var var$1, var$2;
    ju_HashMap$AbstractMapIterator_checkConcurrentMod($this);
    if (!$this.$hasNext())
        $rt_throw(ju_NoSuchElementException__init_0());
    if ($this.$futureEntry === null) {
        var$1 = $this.$associatedMap.$elementData0.data;
        var$2 = $this.$position5;
        $this.$position5 = var$2 + 1 | 0;
        $this.$currentEntry = var$1[var$2];
        $this.$futureEntry = $this.$currentEntry.$next2;
        $this.$prevEntry = null;
    } else {
        if ($this.$currentEntry !== null)
            $this.$prevEntry = $this.$currentEntry;
        $this.$currentEntry = $this.$futureEntry;
        $this.$futureEntry = $this.$futureEntry.$next2;
    }
}
function otcir_Converter() {
    jl_Object.call(this);
}
function iaam_Interpolation$BounceOut() {
    var a = this; iaam_Interpolation.call(a);
    a.$widths = null;
    a.$heights = null;
}
function iaam_Interpolation$BounceOut__init_(var_0) {
    var var_1 = new iaam_Interpolation$BounceOut();
    iaam_Interpolation$BounceOut__init_0(var_1, var_0);
    return var_1;
}
function iaam_Interpolation$BounceOut__init_0($this, $bounces) {
    var var$2;
    iaam_Interpolation__init_0($this);
    if ($bounces >= 2 && $bounces <= 5) {
        a: {
            $this.$widths = $rt_createFloatArray($bounces);
            $this.$heights = $rt_createFloatArray($bounces);
            $this.$heights.data[0] = 1.0;
            switch ($bounces) {
                case 2:
                    break;
                case 3:
                    $this.$widths.data[0] = 0.4000000059604645;
                    $this.$widths.data[1] = 0.4000000059604645;
                    $this.$widths.data[2] = 0.20000000298023224;
                    $this.$heights.data[1] = 0.33000001311302185;
                    $this.$heights.data[2] = 0.10000000149011612;
                    break a;
                case 4:
                    $this.$widths.data[0] = 0.3400000035762787;
                    $this.$widths.data[1] = 0.3400000035762787;
                    $this.$widths.data[2] = 0.20000000298023224;
                    $this.$widths.data[3] = 0.15000000596046448;
                    $this.$heights.data[1] = 0.25999999046325684;
                    $this.$heights.data[2] = 0.10999999940395355;
                    $this.$heights.data[3] = 0.029999999329447746;
                    break a;
                case 5:
                    $this.$widths.data[0] = 0.30000001192092896;
                    $this.$widths.data[1] = 0.30000001192092896;
                    $this.$widths.data[2] = 0.20000000298023224;
                    $this.$widths.data[3] = 0.10000000149011612;
                    $this.$widths.data[4] = 0.10000000149011612;
                    $this.$heights.data[1] = 0.44999998807907104;
                    $this.$heights.data[2] = 0.30000001192092896;
                    $this.$heights.data[3] = 0.15000000596046448;
                    $this.$heights.data[4] = 0.05999999865889549;
                    break a;
                default:
                    break a;
            }
            $this.$widths.data[0] = 0.6000000238418579;
            $this.$widths.data[1] = 0.4000000059604645;
            $this.$heights.data[1] = 0.33000001311302185;
        }
        var$2 = $this.$widths.data;
        var$2[0] = var$2[0] * 2.0;
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(487)).$append3($bounces).$toString()));
}
function iaam_Interpolation$BounceOut_apply($this, $a) {
    var var$2, $width, $height, $i, $n, var$7, $z;
    if ($a === 1.0)
        return 1.0;
    var$2 = $a + $this.$widths.data[0] / 2.0;
    $width = 0.0;
    $height = 0.0;
    $i = 0;
    $n = $this.$widths.data.length;
    a: {
        while ($i < $n) {
            $width = $this.$widths.data[$i];
            if (var$2 <= $width) {
                $height = $this.$heights.data[$i];
                break a;
            }
            var$2 = var$2 - $width;
            $i = $i + 1 | 0;
        }
    }
    var$7 = var$2 / $width;
    $z = 4.0 / $width * $height * var$7;
    return 1.0 - ($z - $z * var$7) * $width;
}
function iaam_Interpolation$Bounce() {
    iaam_Interpolation$BounceOut.call(this);
}
function iaam_Interpolation$Bounce__init_(var_0) {
    var var_1 = new iaam_Interpolation$Bounce();
    iaam_Interpolation$Bounce__init_0(var_1, var_0);
    return var_1;
}
function iaam_Interpolation$Bounce__init_0($this, $bounces) {
    iaam_Interpolation$BounceOut__init_0($this, $bounces);
}
function i_UI$1() {
    jl_Object.call(this);
    this.$this$05 = null;
}
function i_UI$1__init_(var_0) {
    var var_1 = new i_UI$1();
    i_UI$1__init_0(var_1, var_0);
    return var_1;
}
function i_UI$1__init_0($this, $this$0) {
    $this.$this$05 = $this$0;
    jl_Object__init_0($this);
}
function i_UI$1_event($this, $event) {
    var var$2;
    if (!$event.$startsWith($rt_s(488)))
        i_UI_access$102($this.$this$05, $event);
    else {
        var$2 = i_UI_access$000($this.$this$05);
        iaa_Core_$callClinit();
        var$2.$setDrawable(iaa_Core_atlas.$drawable($event.$substring($rt_s(488).$length())));
    }
}
function iaa_Application() {
}
function iaabt_TeaApplication() {
    var a = this; jl_Object.call(a);
    a.$config = null;
    a.$canvas0 = null;
    a.$graphics = null;
    a.$input = null;
    a.$lastWidth = 0;
    a.$lastHeight = 0;
    a.$clipboard = null;
    a.$queue = null;
    a.$listeners0 = null;
}
function iaabt_TeaApplication__init_(var_0, var_1) {
    var var_2 = new iaabt_TeaApplication();
    iaabt_TeaApplication__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaabt_TeaApplication__init_0($this, $listener, $config) {
    jl_Object__init_0($this);
    $this.$lastWidth = (-1);
    $this.$lastHeight = 1;
    $this.$clipboard = $rt_s(58);
    $this.$queue = iaau_TaskQueue__init_();
    $this.$listeners0 = iaac_Array__init_0();
    $this.$listeners0.$add1($listener);
    $this.$config = $config;
}
function iaabt_TeaApplication_start($this) {
    iaabt_TeaFileLoader_loadFiles(iaabt_TeaApplication$1__init_($this));
}
function iaabt_TeaApplication_startArc($this) {
    var var$1;
    $this.$canvas0 = $this.$config.$canvas1;
    iaau_Log_setLogger(iaabt_TeaApplication$TeaLogger__init_());
    iaa_Core_$callClinit();
    iaa_Core_app = $this;
    var$1 = iaabt_TeaGraphics__init_($this.$canvas0, $this.$config);
    $this.$graphics = var$1;
    iaa_Core_graphics = var$1;
    iaa_Core_gl = $this.$graphics.$getGL20();
    iaa_Core_gl20 = $this.$graphics.$getGL20();
    iaa_Core_files = iaabt_TeaFiles__init_();
    iaa_Core_net = iaabt_TeaNet__init_();
    iaa_Core_audio = iaabt_TeaAudio__init_();
    var$1 = iaabt_TeaInput__init_($this.$canvas0);
    $this.$input = var$1;
    iaa_Core_input = var$1;
    iaa_Core_settings = iaabt_TeaSettings__init_();
    iaabt_TeaApplication_listen($this, iaabt_TeaApplication$startArc$lambda$_2_0__init_());
    iaabt_TeaApplication_listen($this, iaabt_TeaApplication$startArc$lambda$_2_1__init_($this));
    iaabt_TeaApplication_delayedStep($this);
}
function iaabt_TeaApplication_delayedStep($this) {
    requestAnimationFrame(otji_JS_function(iaabt_TeaApplication$delayedStep$lambda$_3_0__init_($this), "onAnimationFrame"));
}
function iaabt_TeaApplication_step($this) {
    var var$1, $window, var$3;
    $this.$graphics.$update1();
    var$1 = $this.$graphics;
    var$1.$frameId = Long_add(var$1.$frameId, Long_fromInt(1));
    $this.$queue.$run();
    $window = window;
    if (!($window.innerWidth == $this.$canvas0.width && $window.innerHeight == $this.$canvas0.height)) {
        var$1 = $this.$canvas0;
        var$3 = $window.innerWidth;
        var$1.width = var$3;
        var$1 = $this.$canvas0;
        var$3 = $window.innerHeight;
        var$1.height = var$3;
    }
    if (!($this.$lastWidth == $this.$canvas0.width && $this.$lastHeight == $this.$canvas0.height)) {
        iaabt_TeaApplication_listen($this, iaabt_TeaApplication$step$lambda$_4_0__init_($this));
        $this.$lastWidth = $this.$canvas0.width;
        $this.$lastHeight = $this.$canvas0.height;
    }
    iaabt_TeaApplication_listen($this, iaabt_TeaApplication$step$lambda$_4_1__init_());
    $this.$input.$prepareNext();
    iaabt_TeaApplication_delayedStep($this);
}
function iaabt_TeaApplication_listen($this, $cons) {
    var var$2, $l;
    var$2 = $this.$listeners0.$iterator();
    while (var$2.$hasNext()) {
        $l = var$2.$next0();
        $cons.$get5($l);
    }
}
function iaabt_TeaApplication_post($this, $runnable) {
    $this.$queue.$post($runnable);
}
function iaabt_TeaApplication_getType($this) {
    iaa_Application$ApplicationType_$callClinit();
    return iaa_Application$ApplicationType_WebGL;
}
function iaabt_TeaApplication_exit($this) {
    return;
}
function iaabt_TeaApplication_lambda$step$2($this, $l) {
    $l.$resize1($this.$canvas0.width, $this.$canvas0.height);
}
function iaabt_TeaApplication_lambda$delayedStep$1($this, $d) {
    iaabt_TeaApplication_step($this);
}
function iaabt_TeaApplication_lambda$startArc$0($this, $l) {
    $l.$resize1($this.$canvas0.width, $this.$canvas0.height);
}
function iaabt_TeaApplication_access$000($x0) {
    iaabt_TeaApplication_startArc($x0);
}
function jl_Object$Monitor() {
    var a = this; jl_Object.call(a);
    a.$enteringThreads = null;
    a.$notifyListeners = null;
    a.$owner = null;
    a.$count = 0;
}
function jl_Object$Monitor__init_() {
    var var_0 = new jl_Object$Monitor();
    jl_Object$Monitor__init_0(var_0);
    return var_0;
}
function jl_Object$Monitor__init_0($this) {
    jl_Object__init_0($this);
    $this.$owner = jl_Thread_currentThread();
}
function it_Fx$_clinit_$lambda$_32_10() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_10__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_10();
    it_Fx$_clinit_$lambda$_32_10__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_10__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_10_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_10_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_10_get0(var$0, var$1) {
    it_Fx_lambda$static$14(var$1);
}
function it_Phases$lambda$null$7$lambda$_60_0() {
    var a = this; jl_Object.call(a);
    a.$_030 = 0;
    a.$_118 = 0;
    a.$_23 = 0.0;
}
function it_Phases$lambda$null$7$lambda$_60_0__init_(var_0, var_1, var_2) {
    var var_3 = new it_Phases$lambda$null$7$lambda$_60_0();
    it_Phases$lambda$null$7$lambda$_60_0__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function it_Phases$lambda$null$7$lambda$_60_0__init_0(var$0, var$1, var$2, var$3) {
    jl_Object__init_0(var$0);
    var$0.$_030 = var$1;
    var$0.$_118 = var$2;
    var$0.$_23 = var$3;
}
function it_Phases$lambda$null$7$lambda$_60_0_get(var$0, var$1) {
    it_Phases_lambda$null$6(var$0.$_030, var$0.$_118, var$0.$_23, var$1);
}
function iaa_Application$ApplicationType() {
    jl_Enum.call(this);
}
var iaa_Application$ApplicationType_Android = null;
var iaa_Application$ApplicationType_Desktop = null;
var iaa_Application$ApplicationType_HeadlessDesktop = null;
var iaa_Application$ApplicationType_WebGL = null;
var iaa_Application$ApplicationType_iOS = null;
var iaa_Application$ApplicationType_$VALUES = null;
function iaa_Application$ApplicationType_$callClinit() {
    iaa_Application$ApplicationType_$callClinit = $rt_eraseClinit(iaa_Application$ApplicationType);
    iaa_Application$ApplicationType__clinit_();
}
function iaa_Application$ApplicationType__init_(var_0, var_1) {
    var var_2 = new iaa_Application$ApplicationType();
    iaa_Application$ApplicationType__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaa_Application$ApplicationType_values() {
    iaa_Application$ApplicationType_$callClinit();
    return iaa_Application$ApplicationType_$VALUES.$clone();
}
function iaa_Application$ApplicationType__init_0($this, var$1, var$2) {
    iaa_Application$ApplicationType_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaa_Application$ApplicationType__clinit_() {
    var var$1, var$2;
    iaa_Application$ApplicationType_Android = iaa_Application$ApplicationType__init_($rt_s(489), 0);
    iaa_Application$ApplicationType_Desktop = iaa_Application$ApplicationType__init_($rt_s(490), 1);
    iaa_Application$ApplicationType_HeadlessDesktop = iaa_Application$ApplicationType__init_($rt_s(491), 2);
    iaa_Application$ApplicationType_WebGL = iaa_Application$ApplicationType__init_($rt_s(492), 3);
    iaa_Application$ApplicationType_iOS = iaa_Application$ApplicationType__init_($rt_s(493), 4);
    var$1 = $rt_createArray(iaa_Application$ApplicationType, 5);
    var$2 = var$1.data;
    var$2[0] = iaa_Application$ApplicationType_Android;
    var$2[1] = iaa_Application$ApplicationType_Desktop;
    var$2[2] = iaa_Application$ApplicationType_HeadlessDesktop;
    var$2[3] = iaa_Application$ApplicationType_WebGL;
    var$2[4] = iaa_Application$ApplicationType_iOS;
    iaa_Application$ApplicationType_$VALUES = var$1;
}
function it_TeaVMLauncher() {
    jl_Object.call(this);
}
function it_TeaVMLauncher_main($args) {
    var $config;
    $config = iaabt_TeaApplication$TeaApplicationConfig__init_();
    $config.$canvas1 = window.document.getElementById("main-canvas");
    iaabt_TeaApplication__init_(i_Inferno__init_(), $config).$start3();
}
function iaai_InputProcessor() {
}
function iaai_InputProcessor_keyTyped($this, $character) {
    return 0;
}
function iaai_InputProcessor_touchDragged($this, $screenX, $screenY, $pointer) {
    return 0;
}
function iaai_InputProcessor_mouseMoved($this, $screenX, $screenY) {
    return 0;
}
function iaai_KeyboardDevice() {
    var a = this; iaai_InputDevice.call(a);
    a.$pressed = null;
    a.$lastFramePressed = null;
    a.$axes = null;
}
function iaai_KeyboardDevice__init_() {
    var var_0 = new iaai_KeyboardDevice();
    iaai_KeyboardDevice__init_0(var_0);
    return var_0;
}
function iaai_KeyboardDevice__init_0($this) {
    iaai_InputDevice__init_0($this);
    $this.$pressed = iaac_IntSet__init_();
    $this.$lastFramePressed = iaac_IntSet__init_();
    $this.$axes = iaac_IntFloatMap__init_();
}
function iaai_KeyboardDevice_update($this) {
    $this.$lastFramePressed.$clear();
    $this.$lastFramePressed.$addAll1($this.$pressed);
    $this.$axes.$clear();
}
function iaai_KeyboardDevice_isKeyPressed($this, $key) {
    iaai_KeyCode_$callClinit();
    if ($key !== iaai_KeyCode_ANY_KEY)
        return $this.$pressed.$contains(jl_Enum_ordinal($key));
    return $this.$pressed.$size4 <= 0 ? 0 : 1;
}
function iaai_KeyboardDevice_isKeyTapped($this, $key) {
    return $this.$isKeyPressed($key) && !$this.$lastFramePressed.$contains(jl_Enum_ordinal($key)) ? 1 : 0;
}
function iaai_KeyboardDevice_getAxis($this, $keyCode) {
    return $this.$axes.$get19(jl_Enum_ordinal($keyCode), 0.0);
}
function iaai_KeyboardDevice_keyDown($this, $keycode) {
    $this.$pressed.$add5(jl_Enum_ordinal($keycode));
    return 0;
}
function iaai_KeyboardDevice_keyUp($this, $keycode) {
    $this.$pressed.$remove1(jl_Enum_ordinal($keycode));
    return 0;
}
function iaai_KeyboardDevice_touchDown($this, $screenX, $screenY, $pointer, $button) {
    $this.$keyDown($button);
    return 0;
}
function iaai_KeyboardDevice_touchUp($this, $screenX, $screenY, $pointer, $button) {
    if (!$pointer)
        $this.$keyUp($button);
    return 0;
}
function iaai_KeyboardDevice_scrolled($this, $amountX, $amountY) {
    var var$3;
    var$3 = $this.$axes;
    iaai_KeyCode_$callClinit();
    var$3.$put4(jl_Enum_ordinal(iaai_KeyCode_SCROLL),  -$amountY);
    return 0;
}
function iaai_KeyboardDevice_type($this) {
    iaai_InputDevice$DeviceType_$callClinit();
    return iaai_InputDevice$DeviceType_keyboard;
}
function ju_List() {
}
function it_Bullets$12$draw$lambda$_2_0() {
    var a = this; jl_Object.call(a);
    a.$_031 = 0.0;
    a.$_119 = null;
}
function it_Bullets$12$draw$lambda$_2_0__init_(var_0, var_1) {
    var var_2 = new it_Bullets$12$draw$lambda$_2_0();
    it_Bullets$12$draw$lambda$_2_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Bullets$12$draw$lambda$_2_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_031 = var$1;
    var$0.$_119 = var$2;
}
function it_Bullets$12$draw$lambda$_2_0_run(var$0) {
    it_Bullets$12_lambda$draw$0(var$0.$_031, var$0.$_119);
}
function ju_Comparator() {
}
function jl_String$_clinit_$lambda$_81_0() {
    jl_Object.call(this);
}
function jl_String$_clinit_$lambda$_81_0__init_() {
    var var_0 = new jl_String$_clinit_$lambda$_81_0();
    jl_String$_clinit_$lambda$_81_0__init_0(var_0);
    return var_0;
}
function jl_String$_clinit_$lambda$_81_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaagg_Draw() {
    jl_Object.call(this);
}
var iaagg_Draw_carr = null;
var iaagg_Draw_scl = 0.0;
function iaagg_Draw_$callClinit() {
    iaagg_Draw_$callClinit = $rt_eraseClinit(iaagg_Draw);
    iaagg_Draw__clinit_();
}
function iaagg_Draw_shader($shader) {
    iaagg_Draw_$callClinit();
    iaagg_Draw_shader0($shader, 1);
}
function iaagg_Draw_shader0($shader, $apply) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_batch.$setShader($shader, $apply);
}
function iaagg_Draw_shader1() {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_batch.$setShader0(null);
}
function iaagg_Draw_getColor() {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    return iaa_Core_batch.$getColor();
}
function iaagg_Draw_mixcol($color, $a) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_batch.$setMixColor($color.$r0, $color.$g, $color.$b, iaam_Mathf_clamp0($a));
}
function iaagg_Draw_mixcol0() {
    var var$1;
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    var$1 = iaa_Core_batch;
    iaag_Color_$callClinit();
    var$1.$setPackedMixColor(iaag_Color_clearFloatBits);
}
function iaagg_Draw_colorMul($color, $mul) {
    iaagg_Draw_$callClinit();
    iaagg_Draw_color1($color.$r0 * $mul, $color.$g * $mul, $color.$b * $mul, 1.0);
}
function iaagg_Draw_color($color) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_batch.$setColor($color);
}
function iaagg_Draw_color2($color, $alpha) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_batch.$setColor0($color.$r0, $color.$g, $color.$b, $alpha);
}
function iaagg_Draw_color3($color) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_batch.$setPackedColor($color);
}
function iaagg_Draw_color4($a, $b, $s) {
    var var$4;
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    var$4 = iaa_Core_batch;
    iaau_Tmp_$callClinit();
    var$4.$setColor(iaau_Tmp_c1.$set($a).$lerp($b, $s));
}
function iaagg_Draw_color0() {
    var var$1;
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    var$1 = iaa_Core_batch;
    iaag_Color_$callClinit();
    var$1.$setPackedColor(iaag_Color_whiteFloatBits);
}
function iaagg_Draw_color5($r, $g, $b) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_batch.$setColor0($r, $g, $b, 1.0);
}
function iaagg_Draw_color1($r, $g, $b, $a) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_batch.$setColor0($r, $g, $b, $a);
}
function iaagg_Draw_colorl($l) {
    iaagg_Draw_$callClinit();
    iaagg_Draw_color5($l, $l, $l);
}
function iaagg_Draw_blend($blending) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_batch.$setBlending($blending);
}
function iaagg_Draw_blend0() {
    iaagg_Draw_$callClinit();
    iaag_Blending_$callClinit();
    iaagg_Draw_blend(iaag_Blending_normal);
}
function iaagg_Draw_reset() {
    iaagg_Draw_$callClinit();
    iaagg_Draw_color0();
    iaagg_Draw_mixcol0();
    iaagg_Lines_stroke0(1.0);
}
function iaagg_Draw_alpha($alpha) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_batch.$setColor0(iaa_Core_batch.$getColor().$r0, iaa_Core_batch.$getColor().$g, iaa_Core_batch.$getColor().$b, $alpha);
}
function iaagg_Draw_fbo($texture, $worldWidth, $worldHeight, $tilesize) {
    var $ww, $wh, var$7, var$8, $x, $y, $u, $v, $u2, $v2;
    iaagg_Draw_$callClinit();
    $ww = $rt_imul($worldWidth, $tilesize);
    $wh = $rt_imul($worldHeight, $tilesize);
    iaa_Core_$callClinit();
    var$7 = iaa_Core_camera.$position6.$x0;
    var$8 = $tilesize / 2.0;
    $x = var$7 + var$8;
    $y = iaa_Core_camera.$position6.$y0 + var$8;
    $u = ($x - iaa_Core_camera.$width3 / 2.0) / $ww;
    $v = ($y - iaa_Core_camera.$height3 / 2.0) / $wh;
    $u2 = ($x + iaa_Core_camera.$width3 / 2.0) / $ww;
    $v2 = ($y + iaa_Core_camera.$height3 / 2.0) / $wh;
    iaau_Tmp_$callClinit();
    iaau_Tmp_tr1.$set8($texture);
    iaau_Tmp_tr1.$set9($u, $v2, $u2, $v);
    iaagg_Draw_rect3(iaau_Tmp_tr1, iaa_Core_camera.$position6.$x0, iaa_Core_camera.$position6.$y0, iaa_Core_camera.$width3, iaa_Core_camera.$height3);
}
function iaagg_Draw_rect2($region, $x, $y, $w, $h) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaagg_Draw_rect3(iaa_Core_atlas.$find($region), $x, $y, $w, $h);
}
function iaagg_Draw_rect3($region, $x, $y, $w, $h) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_batch.$draw1($region, $x - $w / 2.0, $y - $h / 2.0, $w, $h);
}
function iaagg_Draw_rect($region, $x, $y) {
    iaagg_Draw_$callClinit();
    iaagg_Draw_rect3($region, $x, $y, $region.$getWidth0() * iaagg_Draw_scl, $region.$getHeight0() * iaagg_Draw_scl);
}
function iaagg_Draw_rect1($region, $x, $y) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaagg_Draw_rect(iaa_Core_atlas.$find($region), $x, $y);
}
function iaagg_Draw_rect4($region, $x, $y, $w, $h, $originX, $originY, $rotation) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_batch.$draw2($region, $x - $w / 2.0, $y - $h / 2.0, $originX, $originY, $w, $h, $rotation);
}
function iaagg_Draw_rect5($region, $x, $y, $w, $h, $originX, $originY, $rotation) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_batch.$draw2(iaa_Core_atlas.$find($region), $x - $w / 2.0, $y - $h / 2.0, $originX, $originY, $w, $h, $rotation);
}
function iaagg_Draw_rect6($region, $x, $y, $w, $h, $rotation) {
    iaagg_Draw_$callClinit();
    iaagg_Draw_rect4($region, $x, $y, $w, $h, $w / 2.0, $h / 2.0, $rotation);
}
function iaagg_Draw_rect7($region, $x, $y, $w, $h, $rotation) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaagg_Draw_rect4(iaa_Core_atlas.$find($region), $x, $y, $w, $h, $w / 2.0, $h / 2.0, $rotation);
}
function iaagg_Draw_rect0($region, $x, $y, $rotation) {
    iaagg_Draw_$callClinit();
    iaagg_Draw_rect6($region, $x, $y, $region.$getWidth0() * iaagg_Draw_scl, $region.$getHeight0() * iaagg_Draw_scl, $rotation);
}
function iaagg_Draw_vert($texture, $vertices, $offset, $length) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_batch.$draw3($texture, $vertices, $offset, $length);
}
function iaagg_Draw_flush() {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_batch.$flush0();
}
function iaagg_Draw_proj($proj) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_batch.$setProjection($proj);
}
function iaagg_Draw_proj0() {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    return iaa_Core_batch.$getProjection();
}
function iaagg_Draw_trans0($trans) {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_batch.$setTransform0($trans);
}
function iaagg_Draw_trans() {
    iaagg_Draw_$callClinit();
    iaa_Core_$callClinit();
    return iaa_Core_batch.$getTransform();
}
function iaagg_Draw_wrap($texture) {
    iaagg_Draw_$callClinit();
    iaau_Tmp_$callClinit();
    iaau_Tmp_tr2.$set8($texture);
    return iaau_Tmp_tr2;
}
function iaagg_Draw__clinit_() {
    iaagg_Draw_carr = $rt_createArray(iaag_Color, 3);
    iaagg_Draw_scl = 1.0;
}
function it_Phases$2() {
    it_Phases$Phase.call(this);
    this.$attacks = null;
}
function it_Phases$2__init_(var_0) {
    var var_1 = new it_Phases$2();
    it_Phases$2__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$2__init_0($this, $text) {
    var var$2, var$3;
    it_Phases$Phase__init_0($this, $text);
    var$2 = $rt_createArray(jl_Runnable, 4);
    var$3 = var$2.data;
    var$3[0] = it_Phases$2$_init_$lambda$_0_0__init_();
    var$3[1] = it_Phases$2$_init_$lambda$_0_1__init_();
    var$3[2] = it_Phases$2$_init_$lambda$_0_2__init_();
    var$3[3] = it_Phases$2$_init_$lambda$_0_3__init_();
    $this.$attacks = iaac_Array_with(var$2);
}
function it_Phases$2_update($this) {
    var var$1, var$2, $last;
    if ($this.$time0.$get20(900.0)) {
        var$1 = it_Phases_access$000();
        it_Phases$Phase_$callClinit();
        var$2 = it_Phases$Phase_special;
        it_Phases$Phase_special = var$2 + 1 | 0;
        var$1.$get(var$2 % it_Phases_access$000().$size | 0).$run();
    }
    a: {
        if (!($this.$currentAttack !== null && !$this.$time0.$get4(3, 60.0 * iaam_Mathf_random0(15.0, 40.0)))) {
            $last = $this.$currentAttack;
            while (true) {
                if ($this.$currentAttack !== $last)
                    break a;
                if ($this.$attacks.$size == 1)
                    break a;
                $this.$currentAttack = $this.$attacks.$random1();
            }
        }
    }
    $this.$currentAttack.$run();
    i_Inferno_boss.$toward(i_Inferno_player, i_Inferno_boss.$dst(i_Inferno_player) >= 200.0 ? 0.6000000238418579 : (-0.6000000238418579));
    $this.$teleport();
}
function it_Phases$2_lambda$$22() {
    it_Phases_access$100(30.0, it_Phases$2$lambda$$22$lambda$_2_0__init_());
}
function it_Phases$2_lambda$null$21() {
    var $aim;
    $aim = i_Inferno_boss.$aim();
    it_Phases_access$200(13, 3.0, it_Phases$2$lambda$null$21$lambda$_3_0__init_($aim));
    it_Phases_access$300();
}
function it_Phases$2_lambda$null$20($aim, $i) {
    var var$3, var$4, var$5, $s;
    iaam_Mathf_$callClinit();
    var$3 = iaam_Mathf_signs.data;
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $s = var$3[var$5];
        i_Inferno_boss.$shoot0($aim, it_Phases$2$lambda$null$20$lambda$_4_0__init_($s));
        var$5 = var$5 + 1 | 0;
    }
}
function it_Phases$2_lambda$null$19($s, $t) {
    return it_Phases_access$400(0.0, iaam_Mathf_cos0($t, 5.0, 6.0 * $s));
}
function it_Phases$2_lambda$$18() {
    it_Phases_access$100(72.0, it_Phases$2$lambda$$18$lambda$_6_0__init_());
}
function it_Phases$2_lambda$null$17() {
    var var$1, $shots, $space, $aim;
    it_Phases_$callClinit();
    var$1 = it_Phases_data;
    it_Phases_data = var$1 + 1 | 0;
    $shots = (var$1 % 2 | 0) + 1 | 0;
    $space = 70.0;
    $aim = i_Inferno_boss.$aim();
    it_Fx_$callClinit();
    iaau_Time_run(it_Fx_indline.$lifetime, it_Phases$2$lambda$null$17$lambda$_7_0__init_($shots, $space, $aim));
    iaam_Angles_shotgun($shots, $space, $aim, it_Phases$2$lambda$null$17$lambda$_7_1__init_());
    iaau_Time_run(it_Fx_indline.$lifetime + 10.0, it_Phases$2$lambda$null$17$lambda$_7_2__init_());
}
function it_Phases$2_lambda$null$16() {
    var var$1;
    var$1 = i_Inferno_boss;
    it_Boss_$callClinit();
    var$1.$anim(it_Boss_adash, 1.600000023841858 * i_Inferno_boss.$dash(i_Inferno_boss.$dst(i_Inferno_player) / 2.0, it_Phases$2$lambda$null$16$lambda$_8_0__init_()));
}
function it_Phases$2_lambda$null$15() {
    return;
}
function it_Phases$2_lambda$null$14($f) {
    it_Fx_$callClinit();
    it_Fx_indline.$at1(i_Inferno_boss.$x2, i_Inferno_boss.$y2, $f);
}
function it_Phases$2_lambda$null$13($shots, $space, $aim) {
    iaam_Angles_shotgun($shots, $space, $aim, it_Phases$2$lambda$null$13$lambda$_11_0__init_());
}
function it_Phases$2_lambda$null$12($f) {
    it_Phases_access$200(4, 3.0, it_Phases$2$lambda$null$12$lambda$_12_0__init_($f));
}
function it_Phases$2_lambda$null$11($f, $i) {
    var var$3, var$4, var$5;
    var$3 = 1 + $i | 0;
    var$4 = 6.0 - $i;
    var$5 = i_Inferno_boss;
    jl_Object_getClass(var$5);
    iaam_Angles_shotgun(var$3, var$4, $f, it_Phases$2$lambda$null$11$lambda$_13_0__init_(var$5));
}
function it_Phases$2_lambda$$10() {
    it_Phases_access$100(66.0, it_Phases$2$lambda$$10$lambda$_14_0__init_());
}
function it_Phases$2_lambda$null$9() {
    var var$1;
    var$1 = i_Inferno_boss;
    it_Boss_$callClinit();
    var$1.$anim(it_Boss_adash, 1.600000023841858 * i_Inferno_boss.$dash(i_Inferno_boss.$dst(i_Inferno_player) / 2.0, it_Phases$2$lambda$null$9$lambda$_15_0__init_()));
}
function it_Phases$2_lambda$null$8() {
    var $aim;
    $aim = i_Inferno_boss.$aim();
    iaam_Angles_loop(5, it_Phases$2$lambda$null$8$lambda$_16_0__init_($aim));
}
function it_Phases$2_lambda$null$7($aim, $i) {
    iaau_Time_run($i * 3.0, it_Phases$2$lambda$null$7$lambda$_17_0__init_($i, $aim));
}
function it_Phases$2_lambda$null$6($i, $aim) {
    var var$3, var$4;
    var$3 = 3 + $i | 0;
    var$4 = i_Inferno_boss;
    jl_Object_getClass(var$4);
    iaam_Angles_shotgun(var$3, 8.0, $aim, it_Phases$2$lambda$null$6$lambda$_18_0__init_(var$4));
}
function it_Phases$2_lambda$$5() {
    it_Phases_access$100(120.0, it_Phases$2$lambda$$5$lambda$_19_0__init_());
}
function it_Phases$2_lambda$null$4() {
    var $aim;
    $aim = i_Inferno_boss.$aim();
    iaam_Angles_loop(5, it_Phases$2$lambda$null$4$lambda$_20_0__init_($aim));
    it_Phases_access$300();
}
function it_Phases$2_lambda$null$3($aim, $i) {
    iaau_Time_run($i * 3.0, it_Phases$2$lambda$null$3$lambda$_21_0__init_($aim, $i));
}
function it_Phases$2_lambda$null$2($aim, $i) {
    iaam_Angles_circle(20, $aim + ($i * 6 | 0), it_Phases$2$lambda$null$2$lambda$_22_0__init_($i));
}
function it_Phases$2_lambda$null$1($i, $f) {
    i_Inferno_boss.$shoot0($f, it_Phases$2$lambda$null$1$lambda$_23_0__init_($i));
}
function it_Phases$2_lambda$null$0($i, $t) {
    return it_Phases_access$400(0.0, iaam_Mathf_sin($t, 11.0 + $i, 1.399999976158142));
}
function it_Phases$1() {
    it_Phases$Phase.call(this);
    this.$attacks0 = null;
}
function it_Phases$1__init_(var_0) {
    var var_1 = new it_Phases$1();
    it_Phases$1__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$1__init_0($this, $text) {
    var var$2, var$3;
    it_Phases$Phase__init_0($this, $text);
    var$2 = $rt_createArray(jl_Runnable, 4);
    var$3 = var$2.data;
    var$3[0] = it_Phases$1$_init_$lambda$_0_0__init_();
    var$3[1] = it_Phases$1$_init_$lambda$_0_1__init_();
    var$3[2] = it_Phases$1$_init_$lambda$_0_2__init_();
    var$3[3] = it_Phases$1$_init_$lambda$_0_3__init_();
    $this.$attacks0 = iaac_Array_with(var$2);
}
function it_Phases$1_update($this) {
    var var$1, var$2, $last;
    if ($this.$time0.$get20(1080.0)) {
        var$1 = it_Phases_access$000();
        it_Phases$Phase_$callClinit();
        var$2 = it_Phases$Phase_special;
        it_Phases$Phase_special = var$2 + 1 | 0;
        var$1.$get(var$2 % it_Phases_access$000().$size | 0).$run();
    }
    a: {
        if (!($this.$currentAttack !== null && !$this.$time0.$get4(3, 60.0 * iaam_Mathf_random0(15.0, 40.0)))) {
            $last = $this.$currentAttack;
            while (true) {
                if ($this.$currentAttack !== $last)
                    break a;
                if ($this.$attacks0.$size == 1)
                    break a;
                $this.$currentAttack = $this.$attacks0.$random1();
            }
        }
    }
    $this.$currentAttack.$run();
    $this.$teleport();
    if (i_Inferno_boss.$health / i_Inferno_boss.$maxHealth() < 0.5)
        i_Inferno_boss.$midPhase();
}
function it_Phases$1_lambda$$22() {
    it_Phases_access$100(39.0, it_Phases$1$lambda$$22$lambda$_2_0__init_());
}
function it_Phases$1_lambda$null$21() {
    var $aim;
    $aim = i_Inferno_boss.$aim();
    it_Phases_access$200(10, 3.0, it_Phases$1$lambda$null$21$lambda$_3_0__init_($aim));
    it_Phases_access$300();
}
function it_Phases$1_lambda$null$20($aim, $i) {
    var var$3, var$4, var$5, $s;
    iaam_Mathf_$callClinit();
    var$3 = iaam_Mathf_signs.data;
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $s = var$3[var$5];
        i_Inferno_boss.$shoot0($aim, it_Phases$1$lambda$null$20$lambda$_4_0__init_($s));
        var$5 = var$5 + 1 | 0;
    }
}
function it_Phases$1_lambda$null$19($s, $t) {
    return it_Phases_access$400(0.0, iaam_Mathf_cos0($t, 5.0, 6.0 * $s));
}
function it_Phases$1_lambda$$18() {
    it_Phases_access$100(90.0, it_Phases$1$lambda$$18$lambda$_6_0__init_());
}
function it_Phases$1_lambda$null$17() {
    var var$1, $shots, $space, $aim;
    it_Phases_$callClinit();
    var$1 = it_Phases_data;
    it_Phases_data = var$1 + 1 | 0;
    $shots = (var$1 % 2 | 0) + 1 | 0;
    $space = 70.0;
    $aim = i_Inferno_boss.$aim();
    it_Fx_$callClinit();
    iaau_Time_run(it_Fx_indline.$lifetime, it_Phases$1$lambda$null$17$lambda$_7_0__init_($shots, $space, $aim));
    iaam_Angles_shotgun($shots, $space, $aim, it_Phases$1$lambda$null$17$lambda$_7_1__init_());
    iaau_Time_run(it_Fx_indline.$lifetime + 10.0, it_Phases$1$lambda$null$17$lambda$_7_2__init_());
}
function it_Phases$1_lambda$null$16() {
    var var$1;
    var$1 = i_Inferno_boss;
    it_Boss_$callClinit();
    var$1.$anim(it_Boss_adash, 1.600000023841858 * i_Inferno_boss.$dash(i_Inferno_boss.$dst(i_Inferno_player) / 2.0, it_Phases$1$lambda$null$16$lambda$_8_0__init_()));
}
function it_Phases$1_lambda$null$15() {
    return;
}
function it_Phases$1_lambda$null$14($f) {
    it_Fx_$callClinit();
    it_Fx_indline.$at1(i_Inferno_boss.$x2, i_Inferno_boss.$y2, $f);
}
function it_Phases$1_lambda$null$13($shots, $space, $aim) {
    iaam_Angles_shotgun($shots, $space, $aim, it_Phases$1$lambda$null$13$lambda$_11_0__init_());
}
function it_Phases$1_lambda$null$12($f) {
    it_Phases_access$200(3, 3.0, it_Phases$1$lambda$null$12$lambda$_12_0__init_($f));
}
function it_Phases$1_lambda$null$11($f, $i) {
    var var$3, var$4, var$5;
    var$3 = 1 + $i | 0;
    var$4 = 6.0 - $i;
    var$5 = i_Inferno_boss;
    jl_Object_getClass(var$5);
    iaam_Angles_shotgun(var$3, var$4, $f, it_Phases$1$lambda$null$11$lambda$_13_0__init_(var$5));
}
function it_Phases$1_lambda$$10() {
    it_Phases_access$100(90.0, it_Phases$1$lambda$$10$lambda$_14_0__init_());
}
function it_Phases$1_lambda$null$9() {
    var var$1;
    var$1 = i_Inferno_boss;
    it_Boss_$callClinit();
    var$1.$anim(it_Boss_adash, 1.600000023841858 * i_Inferno_boss.$dash(i_Inferno_boss.$dst(i_Inferno_player) / 2.0, it_Phases$1$lambda$null$9$lambda$_15_0__init_()));
}
function it_Phases$1_lambda$null$8() {
    var $aim;
    $aim = i_Inferno_boss.$aim();
    iaam_Angles_loop(4, it_Phases$1$lambda$null$8$lambda$_16_0__init_($aim));
}
function it_Phases$1_lambda$null$7($aim, $i) {
    iaau_Time_run($i * 3.0, it_Phases$1$lambda$null$7$lambda$_17_0__init_($i, $aim));
}
function it_Phases$1_lambda$null$6($i, $aim) {
    var var$3, var$4;
    var$3 = 3 + $i | 0;
    var$4 = i_Inferno_boss;
    jl_Object_getClass(var$4);
    iaam_Angles_shotgun(var$3, 8.0, $aim, it_Phases$1$lambda$null$6$lambda$_18_0__init_(var$4));
}
function it_Phases$1_lambda$$5() {
    it_Phases_access$100(144.0, it_Phases$1$lambda$$5$lambda$_19_0__init_());
    i_Inferno_boss.$toward(i_Inferno_player, 0.6000000238418579 * iaau_Time_delta());
}
function it_Phases$1_lambda$null$4() {
    var $aim;
    $aim = i_Inferno_boss.$aim();
    iaam_Angles_loop(3, it_Phases$1$lambda$null$4$lambda$_20_0__init_($aim));
    it_Phases_access$300();
}
function it_Phases$1_lambda$null$3($aim, $i) {
    iaau_Time_run($i * 3.0, it_Phases$1$lambda$null$3$lambda$_21_0__init_($aim, $i));
}
function it_Phases$1_lambda$null$2($aim, $i) {
    iaam_Angles_circle(20, $aim + ($i * 6 | 0), it_Phases$1$lambda$null$2$lambda$_22_0__init_($i));
}
function it_Phases$1_lambda$null$1($i, $f) {
    i_Inferno_boss.$shoot0($f, it_Phases$1$lambda$null$1$lambda$_23_0__init_($i));
}
function it_Phases$1_lambda$null$0($i, $t) {
    return it_Phases_access$400(0.0, iaam_Mathf_sin($t, 11.0 + $i, 1.0));
}
function it_Phases$4() {
    var a = this; it_Phases$Phase.call(a);
    a.$windup = 0.0;
    a.$attacks1 = null;
}
function it_Phases$4__init_(var_0) {
    var var_1 = new it_Phases$4();
    it_Phases$4__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$4__init_0($this, $text) {
    var var$2, var$3;
    it_Phases$Phase__init_0($this, $text);
    var$2 = $rt_createArray(jl_Runnable, 3);
    var$3 = var$2.data;
    var$3[0] = it_Phases$4$_init_$lambda$_0_0__init_();
    var$3[1] = it_Phases$4$_init_$lambda$_0_1__init_();
    var$3[2] = it_Phases$4$_init_$lambda$_0_2__init_();
    $this.$attacks1 = iaac_Array_with(var$2);
}
function it_Phases$4_update($this) {
    var var$1, var$2, $x, $y, $ang;
    if ($this.$time0.$get20(900.0)) {
        var$1 = it_Phases_access$000();
        it_Phases$Phase_$callClinit();
        var$2 = it_Phases$Phase_special;
        it_Phases$Phase_special = var$2 + 1 | 0;
        var$1.$get(var$2 % it_Phases_access$000().$size | 0).$run();
    }
    if (!($this.$currentAttack !== null && !$this.$time0.$get4(3, 60.0 * iaam_Mathf_random0(10.0, 30.0))))
        $this.$currentAttack = $this.$attacks1.$random2($this.$currentAttack);
    $this.$currentAttack.$run();
    $this.$windup = $this.$windup + iaau_Time_delta();
    if (($this.$windup < 3000.0 + it_Phases_access$500(70) ? 0 : 1) & $this.$time0.$get4(2, 40.0)) {
        $x = i_Inferno_player.$x2;
        $y = i_Inferno_player.$y2 + 10.0;
        $ang = iaam_Mathf_random1(30.0);
        iaam_Angles_circleVectors(17, 200.0, $ang, it_Phases$4$update$lambda$_1_0__init_($x, $y));
    }
    $this.$teleport();
}
function it_Phases$4_begin($this) {
    i_Inferno_world.$wallExtinguish();
}
function it_Phases$4_reset($this) {
    it_Phases$Phase_reset($this);
    $this.$windup = 0.0;
}
function it_Phases$4_lambda$update$13($x, $y, $cx, $cy) {
    var var$5;
    var$5 = i_Inferno_boss;
    it_Bullets_$callClinit();
    var$5.$shoot1(it_Bullets_lbasicslow, $x + $cx, $y + $cy, iaam_Mathf_angle($cx, $cy) + 180.0);
}
function it_Phases$4_lambda$$12() {
    it_Phases_access$100(120.0, it_Phases$4$lambda$$12$lambda$_5_0__init_());
}
function it_Phases$4_lambda$null$11() {
    var $aim, var$2, $s;
    $aim = i_Inferno_boss.$aim() + 45.0;
    it_Phases_$callClinit();
    var$2 = it_Phases_data;
    it_Phases_data = var$2 + 1 | 0;
    $s = iaam_Mathf_sign((var$2 % 2 | 0) - 0.5);
    it_Phases_access$200(20, 4.0, it_Phases$4$lambda$null$11$lambda$_6_0__init_($aim, $s));
}
function it_Phases$4_lambda$null$10($aim, $s, $i) {
    iaam_Angles_shotgun(2, 180.0, ($i * 8.0 + $aim) * $s, it_Phases$4$lambda$null$10$lambda$_7_0__init_());
}
function it_Phases$4_lambda$null$9($f) {
    var var$2;
    var$2 = i_Inferno_boss;
    jl_Object_getClass(var$2);
    iaam_Angles_shotgun(6, 10.0, $f, it_Phases$4$lambda$null$9$lambda$_8_0__init_(var$2));
}
function it_Phases$4_lambda$$8() {
    it_Phases_access$100(180.0, it_Phases$4$lambda$$8$lambda$_9_0__init_());
}
function it_Phases$4_lambda$null$7() {
    it_Phases_access$200(10, 20.0, it_Phases$4$lambda$null$7$lambda$_10_0__init_());
}
function it_Phases$4_lambda$null$6($i) {
    var $ang, $dst, $x, $y;
    $ang = iaam_Mathf_random1(360.0);
    $dst = 100.0;
    $x = i_Inferno_player.$x2;
    $y = i_Inferno_player.$y2 + 10.0;
    iaam_Angles_loop(6, it_Phases$4$lambda$null$6$lambda$_11_0__init_($ang, $dst, $x, $y));
    iaau_Tmp_$callClinit();
    iaau_Tmp_v1.$trns($ang, 156.0);
    it_Fx_$callClinit();
    it_Fx_ghost.$at2($x + iaau_Tmp_v1.$x0, $y + iaau_Tmp_v1.$y0, it_Direction_fromAngle(180.0 + i_Inferno_player.$angleTo($x + iaau_Tmp_v1.$x0, $y + iaau_Tmp_v1.$y0)));
}
function it_Phases$4_lambda$null$5($ang, $dst, $x, $y, $j) {
    iaau_Time_run($j, it_Phases$4$lambda$null$5$lambda$_12_0__init_($ang, $dst, $j, $x, $y));
}
function it_Phases$4_lambda$null$4($ang, $dst, $j, $x, $y) {
    var var$6;
    iaau_Tmp_$callClinit();
    iaau_Tmp_v1.$trns($ang, $dst + $j * 8.0);
    var$6 = i_Inferno_boss;
    it_Bullets_$callClinit();
    var$6.$shoot2(it_Bullets_lbasicslow, $x + iaau_Tmp_v1.$x0, $y + iaau_Tmp_v1.$y0, $ang + 180.0, it_Phases$4$lambda$null$4$lambda$_13_0__init_());
}
function it_Phases$4_lambda$null$3($v) {
    return it_Phases_access$400(0.0, 0.0);
}
function it_Phases$4_lambda$$2() {
    it_Phases_access$100(30.0, it_Phases$4$lambda$$2$lambda$_15_0__init_());
}
function it_Phases$4_lambda$null$1() {
    var var$1, $f, $aim, $sign;
    it_Phases_$callClinit();
    var$1 = it_Phases_data;
    it_Phases_data = var$1 + 1 | 0;
    $f = ((var$1 % 2 | 0) - 0.5) * 50.0;
    $aim = i_Inferno_boss.$aim() + $f;
    $sign =  -iaam_Mathf_sign($f);
    it_Phases_access$200(6, 3.0, it_Phases$4$lambda$null$1$lambda$_16_0__init_($aim, $sign));
}
function it_Phases$4_lambda$null$0($aim, $sign, $i) {
    var var$4, var$5;
    var$4 = $aim + ($rt_imul($i, $sign) * 5 | 0);
    var$5 = i_Inferno_boss;
    jl_Object_getClass(var$5);
    iaam_Angles_shotgun(4, 3.0, var$4, it_Phases$4$lambda$null$0$lambda$_17_0__init_(var$5));
}
function it_Phases$3() {
    var a = this; it_Phases$Phase.call(a);
    a.$detonated = 0;
    a.$detonating = 0;
    a.$attacks2 = null;
}
function it_Phases$3__init_(var_0) {
    var var_1 = new it_Phases$3();
    it_Phases$3__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$3__init_0($this, $text) {
    var var$2, var$3;
    it_Phases$Phase__init_0($this, $text);
    $this.$detonated = 0;
    $this.$detonating = 0;
    var$2 = $rt_createArray(jl_Runnable, 4);
    var$3 = var$2.data;
    var$3[0] = it_Phases$3$_init_$lambda$_0_0__init_();
    var$3[1] = it_Phases$3$_init_$lambda$_0_1__init_();
    var$3[2] = it_Phases$3$_init_$lambda$_0_2__init_();
    var$3[3] = it_Phases$3$_init_$lambda$_0_3__init_();
    $this.$attacks2 = iaac_Array_with(var$2);
}
function it_Phases$3_update($this) {
    var $last, var$2, $candle;
    i_Inferno_boss.$set5((i_Inferno_world.$width4() * 16 | 0) / 2.0, (i_Inferno_world.$height4() * 16 | 0) / 2.0);
    if (!$this.$detonated && !$this.$detonating) {
        $this.$detonating = 1;
        it_Fx_$callClinit();
        it_Fx_lspiral.$at(i_Inferno_boss.$x2, i_Inferno_boss.$y2 + 10.0);
        it_Fx_blastind.$at(i_Inferno_boss.$x2, i_Inferno_boss.$y2);
        i_Inferno_boss.$anim(it_Boss_awave, it_Fx_lspiral.$lifetime);
        iaau_Time_run(it_Fx_lspiral.$lifetime, it_Phases$3$update$lambda$_1_0__init_($this));
    }
    a: {
        if ($this.$detonated) {
            b: {
                if (!($this.$currentAttack !== null && !$this.$time0.$get4(3, 60.0 * iaam_Mathf_random0(15.0, 40.0)))) {
                    $last = $this.$currentAttack;
                    while (true) {
                        if ($this.$currentAttack !== $last)
                            break b;
                        if ($this.$attacks2.$size == 1 && $this.$currentAttack !== null)
                            break b;
                        $this.$currentAttack = $this.$attacks2.$random1();
                    }
                }
            }
            $this.$currentAttack.$run();
            if ($this.$time0.$get4(5, 1020.0)) {
                var$2 = i_Inferno_world.$candles().$iterator();
                while (true) {
                    if (!var$2.$hasNext())
                        break a;
                    $candle = var$2.$next0();
                    if (iaam_Mathf_chance(0.4))
                        continue;
                    iaau_Time_run(iaam_Mathf_range(300.0), it_Phases$3$update$lambda$_1_1__init_($candle));
                }
            }
        }
    }
}
function it_Phases$3_reset($this) {
    it_Phases$Phase_reset($this);
    $this.$detonated = 0;
    $this.$detonating = 0;
}
function it_Phases$3_lambda$update$29($candle) {
    var $cx, $cy;
    $cx = $candle.$x3 * 16 | 0;
    $cy = ($candle.$y3 * 16 | 0) + 14.0;
    it_Fx_$callClinit();
    it_Fx_candlespiral.$at($cx, $cy);
    iaau_Time_runTask(it_Fx_candlespiral.$lifetime, it_Phases$3$lambda$update$29$lambda$_3_0__init_($cx, $cy));
}
function it_Phases$3_lambda$update$25($this) {
    i_Inferno_control.$slowmo(3.0);
    it_Fx_$callClinit();
    it_Fx_blast.$at(i_Inferno_boss.$x2, i_Inferno_boss.$y2);
    it_Fx_blastspark.$at(i_Inferno_boss.$x2, i_Inferno_boss.$y2);
    i_Inferno_renderer.$shake1(30.0);
    iaau_Time_run(5.0, it_Phases$3$lambda$update$25$lambda$_7_0__init_($this));
    if (i_Inferno_player.$withinDst(i_Inferno_boss.$x2, i_Inferno_boss.$y2, 200.0))
        i_Inferno_player.$damage1(i_Inferno_player.$health + 1.0);
}
function it_Phases$3_lambda$null$24($this) {
    i_Inferno_world.$wallDetonate();
    $this.$detonating = 0;
    $this.$detonated = 1;
}
function it_Phases$3_lambda$$23() {
    it_Phases_access$100(54.0 - it_Phases_access$500(20), it_Phases$3$lambda$$23$lambda$_9_0__init_());
}
function it_Phases$3_lambda$null$22() {
    var var$1, $space, $shots, $aim;
    it_Phases_$callClinit();
    var$1 = it_Phases_data;
    it_Phases_data = var$1 + 1 | 0;
    $space = 25 + ((var$1 % 3 | 0) * 15 | 0) | 0;
    $shots = 360.0 / $space | 0;
    $aim = i_Inferno_boss.$aim() + $space / 2.0;
    iaam_Angles_shotgun($shots, $space, $aim, it_Phases$3$lambda$null$22$lambda$_10_0__init_());
    it_Phases_access$300();
}
function it_Phases$3_lambda$null$21($f) {
    it_Phases_access$200(4 + it_Phases_access$500(2) | 0, 3.0, it_Phases$3$lambda$null$21$lambda$_11_0__init_($f));
}
function it_Phases$3_lambda$null$20($f, $i) {
    var var$3, var$4, var$5;
    var$3 = (1 + $i | 0) + it_Phases_access$500(2) | 0;
    var$4 = 8.0 - $i;
    var$5 = i_Inferno_boss;
    jl_Object_getClass(var$5);
    iaam_Angles_shotgun(var$3, var$4, $f, it_Phases$3$lambda$null$20$lambda$_12_0__init_(var$5));
}
function it_Phases$3_lambda$$19() {
    it_Phases_access$100(15.0 - it_Phases_access$500(5), it_Phases$3$lambda$$19$lambda$_13_0__init_());
}
function it_Phases$3_lambda$null$18() {
    var $aim, $d;
    $aim = 0.0;
    it_Phases_$callClinit();
    $d = it_Phases_data;
    it_Phases_data = $d + 1 | 0;
    it_Phases_access$200(5, 3.0, it_Phases$3$lambda$null$18$lambda$_14_0__init_($aim, $d));
    it_Phases_access$300();
}
function it_Phases$3_lambda$null$17($aim, $d, $l) {
    iaam_Angles_shotgun(3, 120.0, $aim + $d * 20.0, it_Phases$3$lambda$null$17$lambda$_15_0__init_());
}
function it_Phases$3_lambda$null$16($f) {
    i_Inferno_boss.$shoot0($f, it_Phases$3$lambda$null$16$lambda$_16_0__init_());
}
function it_Phases$3_lambda$null$15($v) {
    return it_Phases_access$400(0.0, iaam_Mathf_cos0($v, 9.0, 2.0));
}
function it_Phases$3_lambda$$14() {
    it_Phases_access$100(180.0, it_Phases$3$lambda$$14$lambda$_18_0__init_());
}
function it_Phases$3_lambda$null$13() {
    var $aim;
    $aim = i_Inferno_boss.$aim();
    iaam_Angles_loop(7, it_Phases$3$lambda$null$13$lambda$_19_0__init_($aim));
    it_Phases_access$300();
}
function it_Phases$3_lambda$null$12($aim, $i) {
    var var$3;
    var$3 = $i * 4 | 0;
    iaau_Time_run(20.0 + var$3, it_Phases$3$lambda$null$12$lambda$_20_0__init_($aim));
    iaau_Time_run(var$3, it_Phases$3$lambda$null$12$lambda$_20_1__init_($aim));
}
function it_Phases$3_lambda$null$11($aim) {
    iaam_Angles_circle0(10, it_Phases$3$lambda$null$11$lambda$_21_0__init_($aim));
}
function it_Phases$3_lambda$null$10($aim, $f) {
    i_Inferno_boss.$shoot($f + $aim);
}
function it_Phases$3_lambda$null$9($aim) {
    iaam_Angles_circle0(10, it_Phases$3$lambda$null$9$lambda$_23_0__init_($aim));
}
function it_Phases$3_lambda$null$8($aim, $f) {
    i_Inferno_boss.$shoot($f + 18.0 + $aim);
}
function it_Phases$3_lambda$$7() {
    it_Phases_access$100(240.0 - it_Phases_access$500(60), it_Phases$3$lambda$$7$lambda$_25_0__init_());
}
function it_Phases$3_lambda$null$6() {
    var $aim, $length;
    $aim = i_Inferno_boss.$aim();
    $length = 15;
    iaam_Angles_loop(14, it_Phases$3$lambda$null$6$lambda$_26_0__init_($length, $aim));
    it_Phases_access$300();
}
function it_Phases$3_lambda$null$5($length, $aim, $i) {
    iaam_Angles_loop(2, it_Phases$3$lambda$null$5$lambda$_27_0__init_($i, $length, $aim));
}
function it_Phases$3_lambda$null$4($i, $length, $aim, $sp) {
    iaau_Time_run(($i * 2 | 0) + ($sp * 5 | 0) | 0, it_Phases$3$lambda$null$4$lambda$_28_0__init_($i, $length, $aim, $sp));
}
function it_Phases$3_lambda$null$3($i, $length, $aim, $sp) {
    iaam_Angles_circle0(5, it_Phases$3$lambda$null$3$lambda$_29_0__init_($i, $length, $aim, $sp));
}
function it_Phases$3_lambda$null$2($i, $length, $aim, $sp, $f) {
    iaam_Angles_shotgun(2, 22.5 * $i / $length, $f + $aim + $sp * 180.0, it_Phases$3$lambda$null$2$lambda$_30_0__init_());
}
function it_Phases$3_lambda$null$1($a) {
    i_Inferno_boss.$shoot0($a, it_Phases$3$lambda$null$1$lambda$_31_0__init_());
}
function it_Phases$3_lambda$null$0($v) {
    return it_Phases_access$400(0.0, iaam_Mathf_cos0($v, 20.0, 2.0));
}
function it_Phases$6() {
    it_Phases$Phase.call(this);
}
function it_Phases$6__init_(var_0) {
    var var_1 = new it_Phases$6();
    it_Phases$6__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$6__init_0($this, $text) {
    it_Phases$Phase__init_0($this, $text);
}
function it_Phases$6_update($this) {
    return;
}
function it_Phases$6_begin($this) {
    var $fire;
    iw_Blocks_$callClinit();
    $fire = iw_Blocks_blocks.$find1(it_Phases$6$begin$lambda$_2_0__init_());
    i_Inferno_world.$each(it_Phases$6$begin$lambda$_2_1__init_($fire));
}
function it_Phases$6_reset($this) {
    i_Inferno_world.$each(it_Phases$6$reset$lambda$_3_0__init_());
}
function it_Phases$6_lambda$reset$2($tile) {
    if ($tile.$wall !== null && $tile.$wall.$name6.$equals($rt_s(293)))
        $tile.$wall = null;
}
function it_Phases$6_lambda$begin$1($fire, $tile) {
    if ($tile.$overlay !== null && $tile.$overlay.$name6.$contains0($rt_s(296)) && $tile.$wall === null)
        $tile.$wall = $fire;
}
function it_Phases$6_lambda$begin$0($b) {
    return $b.$name6.$equals($rt_s(293));
}
function it_Phases$5() {
    it_Phases$Phase.call(this);
    this.$attacks3 = null;
}
function it_Phases$5__init_(var_0) {
    var var_1 = new it_Phases$5();
    it_Phases$5__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$5__init_0($this, $text) {
    var var$2, var$3;
    it_Phases$Phase__init_0($this, $text);
    var$2 = $rt_createArray(jl_Runnable, 3);
    var$3 = var$2.data;
    var$3[0] = it_Phases$5$_init_$lambda$_0_0__init_();
    var$3[1] = it_Phases$5$_init_$lambda$_0_1__init_();
    var$3[2] = it_Phases$5$_init_$lambda$_0_2__init_();
    $this.$attacks3 = iaac_Array_with(var$2);
}
function it_Phases$5_update($this) {
    var var$1, $current, $r, $x, $y;
    if ($this.$time0.$get20(900.0)) {
        it_Phases$Phase_$callClinit();
        var$1 = it_Phases$Phase_special;
        it_Phases$Phase_special = var$1 + 1 | 0;
        $current = var$1 % it_Phases_access$000().$size | 0;
        if ($current)
            it_Phases_access$000().$get($current).$run();
        else {
            iaa_Core_$callClinit();
            $r = iaa_Core_atlas.$find($rt_s(494));
            $x = 648.0;
            $y = (i_Inferno_world.$height4() - 10.5) * 16.0 + $r.$getHeight0() / 2.0;
            it_Fx_$callClinit();
            it_Fx_lspiral.$at($x, $y);
            it_Fx_blastind.$at($x, $y);
            it_Fx_eyes.$at($x, $y);
            iaau_Time_run(it_Fx_lspiral.$lifetime, it_Phases$5$update$lambda$_1_0__init_($x, $y));
        }
    }
    i_Inferno_boss.$set5(i_Inferno_world.$statue().$x0, i_Inferno_world.$statue().$y0);
    if ($this.$time0.$get4(6, 540.0))
        iaau_Time_run(300.0, it_Phases$5$update$lambda$_1_1__init_());
    if (!($this.$currentAttack !== null && !$this.$time0.$get4(3, 60.0 * iaam_Mathf_random0(10.0, 30.0))))
        $this.$currentAttack = $this.$attacks3.$random2($this.$currentAttack);
    $this.$currentAttack.$run();
}
function it_Phases$5_lambda$update$20() {
    it_Phases_access$200(5, 26.0, it_Phases$5$lambda$update$20$lambda$_2_0__init_());
}
function it_Phases$5_lambda$null$19($i) {
    var $aim, var$3;
    $aim = iaam_Mathf_clamp(i_Inferno_boss.$angleTo0(i_Inferno_player), 225.0, 315.0);
    var$3 = i_Inferno_boss;
    it_Bullets_$callClinit();
    var$3.$laser(it_Bullets_laser, $aim + iaam_Mathf_random1(20.0));
}
function it_Phases$5_lambda$update$18($x, $y) {
    i_Inferno_control.$slowmo(3.0);
    it_Fx_$callClinit();
    it_Fx_blast.$at($x, $y);
    it_Fx_blastspark.$at($x, $y);
    i_Inferno_renderer.$shake1(30.0);
    if (i_Inferno_player.$withinDst($x, $y, 200.0))
        i_Inferno_player.$damage1(i_Inferno_player.$health + 1.0);
}
function it_Phases$5_lambda$$17() {
    it_Phases_access$100(120.0, it_Phases$5$lambda$$17$lambda$_5_0__init_());
}
function it_Phases$5_lambda$null$16() {
    var $aim;
    $aim = i_Inferno_boss.$aim();
    it_Fx_$callClinit();
    it_Fx_indwave.$at1(i_Inferno_boss.$x2, i_Inferno_boss.$y2, $aim);
    iaau_Time_run(it_Fx_indline.$lifetime, it_Phases$5$lambda$null$16$lambda$_6_0__init_($aim));
}
function it_Phases$5_lambda$null$15($aim) {
    iaam_Angles_loop(8, it_Phases$5$lambda$null$15$lambda$_7_0__init_($aim));
}
function it_Phases$5_lambda$null$14($aim, $i) {
    iaau_Time_run($i * 3.0, it_Phases$5$lambda$null$14$lambda$_8_0__init_($i, $aim));
}
function it_Phases$5_lambda$null$13($i, $aim) {
    iaam_Angles_shotgun(2 + $i | 0, 8.0, $aim, it_Phases$5$lambda$null$13$lambda$_9_0__init_());
}
function it_Phases$5_lambda$null$12($f) {
    var var$2;
    var$2 = i_Inferno_boss;
    it_Bullets_$callClinit();
    var$2.$shoot3(it_Bullets_breathfast, $f);
}
function it_Phases$5_lambda$$11() {
    it_Phases_access$100(54.0, it_Phases$5$lambda$$11$lambda$_11_0__init_());
}
function it_Phases$5_lambda$null$10() {
    var $s;
    $s = i_Inferno_world.$statue();
    iaam_Angles_loop(9, it_Phases$5$lambda$null$10$lambda$_12_0__init_($s));
    iaau_Time_run(30.0, it_Phases$5$lambda$null$10$lambda$_12_1__init_());
}
function it_Phases$5_lambda$null$9() {
    var var$1;
    var$1 = i_Inferno_boss;
    it_Bullets_$callClinit();
    var$1.$laser(it_Bullets_laser, i_Inferno_boss.$aim() + iaam_Mathf_range0(30));
}
function it_Phases$5_lambda$null$8($s, $i) {
    iaam_Angles_shotgun(2, 80.0 - $i * 6.0, 0.0, it_Phases$5$lambda$null$8$lambda$_14_0__init_($i, $s));
}
function it_Phases$5_lambda$null$7($i, $s, $c) {
    iaau_Time_run($i * 3.0, it_Phases$5$lambda$null$7$lambda$_15_0__init_($i, $c, $s));
}
function it_Phases$5_lambda$null$6($i, $c, $s) {
    iaam_Angles_shotgun(2, 4.0 + (($i + 5 | 0) % 10 | 0), $c, it_Phases$5$lambda$null$6$lambda$_16_0__init_($s));
}
function it_Phases$5_lambda$null$5($s, $f) {
    var var$3;
    var$3 = i_Inferno_boss;
    it_Bullets_$callClinit();
    var$3.$shoot1(it_Bullets_breath2, $s.$x0, $s.$y0, $f + i_Inferno_boss.$aim());
}
function it_Phases$5_lambda$$4() {
    it_Phases_access$100(36.0, it_Phases$5$lambda$$4$lambda$_18_0__init_());
}
function it_Phases$5_lambda$null$3() {
    var $s;
    $s = i_Inferno_world.$statue();
    iaam_Angles_loop(7, it_Phases$5$lambda$null$3$lambda$_19_0__init_($s));
}
function it_Phases$5_lambda$null$2($s, $i) {
    iaau_Time_run($i * 3.0, it_Phases$5$lambda$null$2$lambda$_20_0__init_($i, $s));
}
function it_Phases$5_lambda$null$1($i, $s) {
    iaam_Angles_shotgun(2 + ($i % 10 | 0) | 0, 4.0 + (($i + 5 | 0) % 10 | 0), 0.0, it_Phases$5$lambda$null$1$lambda$_21_0__init_($s));
}
function it_Phases$5_lambda$null$0($s, $f) {
    var var$3;
    var$3 = i_Inferno_boss;
    it_Bullets_$callClinit();
    var$3.$shoot1(it_Bullets_breath2, $s.$x0, $s.$y0, $f + i_Inferno_boss.$aim());
}
function otcju_TCollection() {
}
function it_Fx$_clinit_$lambda$_32_22() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_22__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_22();
    it_Fx$_clinit_$lambda$_32_22__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_22__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_22_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_22_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_22_get0(var$0, var$1) {
    it_Fx_lambda$static$30(var$1);
}
function jn_BufferOverflowException() {
    jl_RuntimeException.call(this);
}
function jn_BufferOverflowException__init_() {
    var var_0 = new jn_BufferOverflowException();
    jn_BufferOverflowException__init_0(var_0);
    return var_0;
}
function jn_BufferOverflowException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function iaagg_GlyphLayout() {
    var a = this; jl_Object.call(a);
    a.$runs = null;
    a.$colorStack = null;
    a.$width5 = 0.0;
    a.$height5 = 0.0;
}
function iaagg_GlyphLayout__init_() {
    var var_0 = new iaagg_GlyphLayout();
    iaagg_GlyphLayout__init_0(var_0);
    return var_0;
}
function iaagg_GlyphLayout__init_0($this) {
    jl_Object__init_0($this);
    $this.$runs = iaac_Array__init_0();
    $this.$colorStack = iaac_Array__init_(4);
}
function iaagg_GlyphLayout_setText($this, $font, $str, $color, $targetWidth, $halign, $wrap) {
    $this.$setText0($font, $str, 0, $str.$length(), $color, $targetWidth, $halign, $wrap, null);
}
function iaagg_GlyphLayout_setText0($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate) {
    var $fontData, $markupEnabled, $glyphRunPool, $runs, $x, $y, $width, $lines, $blankLines, $lastGlyph, $colorStack, $colorPool, $runStart, var$23, $runEnd, $newline, var$26, $length, var$28, $run, $xAdvances, $n, $runWidth, $i, var$34, var$35, var$36, $glyph, $glyphWidth, $wrapIndex, $next, $glyphCount, $previous, $lastIndex, $g, $down, var$46, $center, $lineWidth, $lineY, $lineStart, $shift;
    $fontData = $font.$data1;
    if ($truncate !== null)
        $wrap = 1;
    else if ($targetWidth <= $fontData.$spaceXadvance * 3.0)
        $wrap = 0;
    $markupEnabled = $fontData.$markupEnabled;
    $glyphRunPool = iaaup_Pools_get0($rt_cls(iaagg_GlyphLayout$GlyphRun), iaagg_GlyphLayout$setText$lambda$_6_0__init_());
    $runs = $this.$runs;
    $glyphRunPool.$freeAll0($runs);
    $runs.$clear();
    $x = 0.0;
    $y = 0.0;
    $width = 0.0;
    $lines = 0;
    $blankLines = 0;
    $lastGlyph = null;
    $colorStack = $this.$colorStack;
    $colorStack.$add1($color);
    $colorPool = iaaup_Pools_get0($rt_cls(iaag_Color), iaagg_GlyphLayout$setText$lambda$_6_1__init_());
    $runStart = $start;
    var$23 = $color;
    a: {
        b: while (true) {
            c: {
                $runEnd = (-1);
                $newline = 0;
                if ($start == $end) {
                    if ($runStart == $end)
                        break b;
                    $runEnd = $end;
                } else {
                    var$26 = $start + 1 | 0;
                    switch ($str.$charAt($start)) {
                        case 10:
                            $runEnd = var$26 - 1 | 0;
                            $newline = 1;
                            $start = var$26;
                            break c;
                        case 91:
                            if (!$markupEnabled) {
                                $start = var$26;
                                break c;
                            }
                            $length = iaagg_GlyphLayout_parseColorMarkup($this, $str, var$26, $end, $colorPool);
                            if ($length >= 0) {
                                $runEnd = var$26 - 1 | 0;
                                $start = var$26 + ($length + 1 | 0) | 0;
                                $color = $colorStack.$peek();
                                break c;
                            }
                            if ($length == (-2)) {
                                $start = var$26 + 1 | 0;
                                continue b;
                            }
                            $start = var$26;
                            break c;
                        default:
                    }
                    $start = var$26;
                }
            }
            if ($runEnd != (-1)) {
                d: {
                    var$28 = $rt_compare($runEnd, $runStart);
                    if (var$28) {
                        $run = $glyphRunPool.$obtain0();
                        $run.$color5.$set(var$23);
                        $fontData.$getGlyphs($run, $str, $runStart, $runEnd, $lastGlyph);
                        if (!$run.$glyphs.$size)
                            $glyphRunPool.$free($run);
                        else {
                            if ($lastGlyph !== null)
                                $x = $x - ($lastGlyph.$fixedWidth ? $lastGlyph.$xadvance * $fontData.$scaleX1 : ($lastGlyph.$width6 + $lastGlyph.$xoffset | 0) * $fontData.$scaleX1 - $fontData.$padRight1);
                            $lastGlyph = $run.$glyphs.$peek();
                            $run.$x5 = $x;
                            $run.$y5 = $y;
                            if (!(!$newline && $runEnd != $end))
                                iaagg_GlyphLayout_adjustLastGlyph($this, $fontData, $run);
                            $runs.$add1($run);
                            $xAdvances = $run.$xAdvances.$items1;
                            $n = $run.$xAdvances.$size2;
                            if (!$wrap) {
                                $runWidth = 0.0;
                                $i = 0;
                                while ($i < $n) {
                                    $runWidth = $runWidth + $xAdvances.data[$i];
                                    $i = $i + 1 | 0;
                                }
                                $x = $x + $runWidth;
                                $run.$width7 = $runWidth;
                            } else {
                                var$34 = $xAdvances.data;
                                $x = $x + var$34[0];
                                $run.$width7 = var$34[0];
                                if ($n >= 1) {
                                    $x = $x + var$34[1];
                                    $run.$width7 = $run.$width7 + var$34[1];
                                    $i = 2;
                                    while ($i < $n) {
                                        var$35 = $run.$glyphs;
                                        var$36 = $i - 1 | 0;
                                        $glyph = var$35.$get(var$36);
                                        $glyphWidth = ($glyph.$width6 + $glyph.$xoffset | 0) * $fontData.$scaleX1 - $fontData.$padRight1;
                                        if ($x + $glyphWidth <= $targetWidth) {
                                            var$34 = $xAdvances.data;
                                            $x = $x + var$34[$i];
                                            $run.$width7 = $run.$width7 + var$34[$i];
                                        } else {
                                            if ($truncate !== null) {
                                                iaagg_GlyphLayout_truncate($this, $fontData, $run, $targetWidth, $truncate, $i, $glyphRunPool);
                                                $x = $run.$x5 + $run.$width7;
                                                break a;
                                            }
                                            $wrapIndex = $fontData.$getWrapIndex($run.$glyphs, $i);
                                            if (!($run.$x5 === 0.0 && !$wrapIndex) && $wrapIndex < $run.$glyphs.$size)
                                                var$36 = $wrapIndex;
                                            if (var$36) {
                                                $next = iaagg_GlyphLayout_wrap($this, $fontData, $run, $glyphRunPool, var$36, $i);
                                                $width = jl_Math_max($width, $run.$x5 + $run.$width7);
                                                if ($next === null) {
                                                    $x = 0.0;
                                                    $y = $y + $fontData.$down;
                                                    $lines = $lines + 1 | 0;
                                                    $lastGlyph = null;
                                                    break d;
                                                }
                                                $runs.$add1($next);
                                                $run = $next;
                                            } else {
                                                $run.$width7 = 0.0;
                                                $glyphCount = $run.$glyphs.$size;
                                                e: {
                                                    while (true) {
                                                        if (var$36 >= $glyphCount)
                                                            break e;
                                                        if (!$fontData.$isWhitespace($run.$glyphs.$get(var$36).$id0 & 65535))
                                                            break;
                                                        var$36 = var$36 + 1 | 0;
                                                    }
                                                }
                                                if (var$36 > 0) {
                                                    $run.$glyphs.$removeRange(0, var$36 - 1 | 0);
                                                    $run.$xAdvances.$removeRange(1, var$36);
                                                }
                                                $run.$xAdvances.$set10(0,  -$run.$glyphs.$first0().$xoffset * $fontData.$scaleX1 - $fontData.$padLeft1);
                                                if ($runs.$size > 1) {
                                                    $previous = $runs.$get($runs.$size - 2 | 0);
                                                    $lastIndex = $previous.$glyphs.$size - 1 | 0;
                                                    f: {
                                                        while (true) {
                                                            if ($lastIndex <= 0)
                                                                break f;
                                                            $g = $previous.$glyphs.$get($lastIndex);
                                                            if (!$fontData.$isWhitespace($g.$id0 & 65535))
                                                                break;
                                                            $previous.$width7 = $previous.$width7 - $previous.$xAdvances.$get21($lastIndex + 1 | 0);
                                                            $lastIndex = $lastIndex + (-1) | 0;
                                                        }
                                                    }
                                                    $previous.$glyphs.$truncate0($lastIndex + 1 | 0);
                                                    $previous.$xAdvances.$truncate0($lastIndex + 2 | 0);
                                                    iaagg_GlyphLayout_adjustLastGlyph($this, $fontData, $previous);
                                                    $width = jl_Math_max($width, $previous.$x5 + $previous.$width7);
                                                }
                                            }
                                            $n = $run.$xAdvances.$size2;
                                            $xAdvances = $run.$xAdvances.$items1;
                                            var$34 = $xAdvances.data;
                                            $x = var$34[0];
                                            if ($n > 1)
                                                $x = $x + var$34[1];
                                            $run.$width7 = $run.$width7 + $x;
                                            $y = $y + $fontData.$down;
                                            $lines = $lines + 1 | 0;
                                            $run.$x5 = 0.0;
                                            $run.$y5 = $y;
                                            $i = 1;
                                            $lastGlyph = null;
                                        }
                                        $i = $i + 1 | 0;
                                    }
                                }
                            }
                        }
                    }
                }
                if ($newline) {
                    $width = jl_Math_max($width, $x);
                    $x = 0.0;
                    $down = $fontData.$down;
                    if (var$28)
                        $lines = $lines + 1 | 0;
                    else {
                        $down = $down * $fontData.$blankLineScale;
                        $blankLines = $blankLines + 1 | 0;
                    }
                    $y = $y + $down;
                    $lastGlyph = null;
                }
                $runStart = $start;
                var$23 = $color;
            }
        }
    }
    var$46 = jl_Math_max($width, $x);
    $i = 1;
    $n = $colorStack.$size;
    while ($i < $n) {
        $colorPool.$free($colorStack.$get($i));
        $i = $i + 1 | 0;
    }
    g: {
        $colorStack.$clear();
        if (!($halign & 8)) {
            $center = !($halign & 1) ? 0 : 1;
            $lineWidth = 0.0;
            $lineY = (-2.147483648E9);
            $lineStart = 0;
            $n = $runs.$size;
            $i = 0;
            while ($i < $n) {
                $run = $runs.$get($i);
                if ($run.$y5 !== $lineY) {
                    $lineY = $run.$y5;
                    $shift = $targetWidth - $lineWidth;
                    if ($center)
                        $shift = $shift / 2.0;
                    while ($lineStart < $i) {
                        var$36 = $lineStart + 1 | 0;
                        var$35 = $runs.$get($lineStart);
                        var$35.$x5 = var$35.$x5 + $shift;
                        $lineStart = var$36;
                    }
                    $lineWidth = 0.0;
                }
                $lineWidth = jl_Math_max($lineWidth, $run.$x5 + $run.$width7);
                $i = $i + 1 | 0;
            }
            $shift = $targetWidth - $lineWidth;
            if ($center)
                $shift = $shift / 2.0;
            while (true) {
                if ($lineStart >= $n)
                    break g;
                var$36 = $lineStart + 1 | 0;
                var$35 = $runs.$get($lineStart);
                var$35.$x5 = var$35.$x5 + $shift;
                $lineStart = var$36;
            }
        }
    }
    $this.$width5 = var$46;
    $this.$height5 = $fontData.$capHeight - $lines * $fontData.$down - $blankLines * $fontData.$down * $fontData.$blankLineScale;
}
function iaagg_GlyphLayout_truncate($this, $fontData, $run, $targetWidth, $truncate, $widthIndex, $glyphRunPool) {
    var $truncateRun, $truncateWidth, $i, $n, var$11, $count, $width, $xAdvance;
    $truncateRun = $glyphRunPool.$obtain0();
    $fontData.$getGlyphs($truncateRun, $truncate, 0, $truncate.$length(), null);
    $truncateWidth = 0.0;
    if ($truncateRun.$xAdvances.$size2 > 0) {
        iaagg_GlyphLayout_adjustLastGlyph($this, $fontData, $truncateRun);
        $i = 1;
        $n = $truncateRun.$xAdvances.$size2;
        while ($i < $n) {
            $truncateWidth = $truncateWidth + $truncateRun.$xAdvances.$get21($i);
            $i = $i + 1 | 0;
        }
    }
    var$11 = $targetWidth - $truncateWidth;
    $count = 0;
    $width = $run.$x5;
    a: {
        while (true) {
            if ($count >= $run.$xAdvances.$size2)
                break a;
            $xAdvance = $run.$xAdvances.$get21($count);
            $width = $width + $xAdvance;
            if ($width > var$11)
                break;
            $count = $count + 1 | 0;
        }
        $run.$width7 = $width - $run.$x5 - $xAdvance;
    }
    if ($count <= 1) {
        $run.$glyphs.$clear();
        $run.$xAdvances.$clear();
        $run.$xAdvances.$addAll2($truncateRun.$xAdvances);
        if ($truncateRun.$xAdvances.$size2 > 0)
            $run.$width7 = $run.$width7 + $truncateRun.$xAdvances.$get21(0);
    } else {
        $run.$glyphs.$truncate0($count - 1 | 0);
        $run.$xAdvances.$truncate0($count);
        iaagg_GlyphLayout_adjustLastGlyph($this, $fontData, $run);
        if ($truncateRun.$xAdvances.$size2 > 0)
            $run.$xAdvances.$addAll3($truncateRun.$xAdvances, 1, $truncateRun.$xAdvances.$size2 - 1 | 0);
    }
    $run.$glyphs.$addAll($truncateRun.$glyphs);
    $run.$width7 = $run.$width7 + $truncateWidth;
    $glyphRunPool.$free($truncateRun);
}
function iaagg_GlyphLayout_wrap($this, $fontData, $first, $glyphRunPool, $secondStart, $widthIndex) {
    var $glyphs2, $glyphCount, $xAdvances2, $firstEnd, var$10, var$11, var$12, $n, $second, $glyphs1, $xAdvances1;
    $glyphs2 = $first.$glyphs;
    $glyphCount = $first.$glyphs.$size;
    $xAdvances2 = $first.$xAdvances;
    $firstEnd = $secondStart;
    a: {
        while (true) {
            if ($firstEnd <= 0)
                break a;
            if (!$fontData.$isWhitespace($glyphs2.$get($firstEnd - 1 | 0).$id0 & 65535))
                break;
            $firstEnd = $firstEnd + (-1) | 0;
        }
    }
    b: {
        while (true) {
            var$10 = $rt_compare($secondStart, $glyphCount);
            if (var$10 >= 0)
                break;
            if (!$fontData.$isWhitespace($glyphs2.$get($secondStart).$id0 & 65535))
                break b;
            $secondStart = $secondStart + 1 | 0;
        }
    }
    while ($widthIndex < $firstEnd) {
        var$11 = $first.$width7;
        var$12 = $widthIndex + 1 | 0;
        $first.$width7 = var$11 + $xAdvances2.$get21($widthIndex);
        $widthIndex = var$12;
    }
    $n = $firstEnd + 1 | 0;
    while ($widthIndex > $n) {
        var$11 = $first.$width7;
        $widthIndex = $widthIndex + (-1) | 0;
        $first.$width7 = var$11 - $xAdvances2.$get21($widthIndex);
    }
    $second = null;
    if (var$10 >= 0) {
        $glyphs2.$truncate0($firstEnd);
        $xAdvances2.$truncate0($n);
    } else {
        $second = $glyphRunPool.$obtain0();
        $second.$color5.$set($first.$color5);
        $glyphs1 = $second.$glyphs;
        $glyphs1.$addAll4($glyphs2, 0, $firstEnd);
        $glyphs2.$removeRange(0, $secondStart - 1 | 0);
        $first.$glyphs = $glyphs1;
        $second.$glyphs = $glyphs2;
        $xAdvances1 = $second.$xAdvances;
        $xAdvances1.$addAll3($xAdvances2, 0, $n);
        $xAdvances2.$removeRange(1, $secondStart);
        $xAdvances2.$set10(0,  -$glyphs2.$first0().$xoffset * $fontData.$scaleX1 - $fontData.$padLeft1);
        $first.$xAdvances = $xAdvances1;
        $second.$xAdvances = $xAdvances2;
    }
    if ($firstEnd)
        iaagg_GlyphLayout_adjustLastGlyph($this, $fontData, $first);
    else {
        $glyphRunPool.$free($first);
        $this.$runs.$pop();
    }
    return $second;
}
function iaagg_GlyphLayout_adjustLastGlyph($this, $fontData, $run) {
    var $last, $width;
    $last = $run.$glyphs.$peek();
    if ($last.$fixedWidth)
        return;
    $width = ($last.$width6 + $last.$xoffset | 0) * $fontData.$scaleX1 - $fontData.$padRight1;
    $run.$width7 = $run.$width7 + $width - $run.$xAdvances.$peek0();
    $run.$xAdvances.$set10($run.$xAdvances.$size2 - 1 | 0, $width);
}
function iaagg_GlyphLayout_parseColorMarkup($this, $str, $start, $end, $colorPool) {
    var $colorInt, $i, $ch, var$8, $ii, $nn, $color, $namedColor;
    if ($start == $end)
        return (-1);
    switch ($str.$charAt($start)) {
        case 35:
            $colorInt = 0;
            $i = $start + 1 | 0;
            a: {
                while (true) {
                    if ($i >= $end)
                        break a;
                    $ch = $str.$charAt($i);
                    if ($ch == 93)
                        break;
                    if ($ch >= 48 && $ch <= 57)
                        $colorInt = ($colorInt * 16 | 0) + ($ch - 48 | 0) | 0;
                    else if ($ch >= 97 && $ch <= 102)
                        $colorInt = ($colorInt * 16 | 0) + ($ch - 87 | 0) | 0;
                    else {
                        if ($ch < 65)
                            break a;
                        if ($ch > 70)
                            break a;
                        $colorInt = ($colorInt * 16 | 0) + ($ch - 55 | 0) | 0;
                    }
                    $i = $i + 1 | 0;
                }
                if ($i >= ($start + 2 | 0) && $i <= ($start + 9 | 0)) {
                    var$8 = $i - $start | 0;
                    if (var$8 <= 7) {
                        $ii = 0;
                        $nn = 9 - var$8 | 0;
                        while ($ii < $nn) {
                            $colorInt = $colorInt << 4;
                            $ii = $ii + 1 | 0;
                        }
                        $colorInt = $colorInt | 255;
                    }
                    $color = $colorPool.$obtain0();
                    $this.$colorStack.$add1($color);
                    iaag_Color_rgba8888ToColor($color, $colorInt);
                    return var$8;
                }
            }
            return (-1);
        case 91:
            break;
        case 93:
            if ($this.$colorStack.$size > 1)
                $colorPool.$free($this.$colorStack.$pop());
            return 0;
        default:
            $i = $start + 1 | 0;
            while ($i < $end) {
                $ch = $str.$charAt($i);
                if ($ch == 93) {
                    $namedColor = iaag_Colors_get($str.$subSequence($start, $i).$toString());
                    if ($namedColor === null)
                        return (-1);
                    $color = $colorPool.$obtain0();
                    $this.$colorStack.$add1($color);
                    $color.$set($namedColor);
                    return $i - $start | 0;
                }
                $i = $i + 1 | 0;
            }
            return (-1);
    }
    return (-2);
}
function iaagg_GlyphLayout_reset($this) {
    iaaup_Pools_get0($rt_cls(iaagg_GlyphLayout$GlyphRun), iaagg_GlyphLayout$reset$lambda$_11_0__init_()).$freeAll0($this.$runs);
    $this.$runs.$clear();
    $this.$width5 = 0.0;
    $this.$height5 = 0.0;
}
function iaagg_GlyphLayout_toString($this) {
    var $buffer, $i, $n;
    if (!$this.$runs.$size)
        return $rt_s(58);
    $buffer = jl_StringBuilder__init_0(128);
    $buffer.$append13($this.$width5);
    $buffer.$append0(120);
    $buffer.$append13($this.$height5);
    $buffer.$append0(10);
    $i = 0;
    $n = $this.$runs.$size;
    while ($i < $n) {
        $buffer.$append($this.$runs.$get($i).$toString());
        $buffer.$append0(10);
        $i = $i + 1 | 0;
    }
    $buffer.$setLength($buffer.$length() - 1 | 0);
    return $buffer.$toString();
}
function jn_ShortBuffer() {
    jn_Buffer.call(this);
}
function jn_ShortBuffer__init_(var_0, var_1, var_2) {
    var var_3 = new jn_ShortBuffer();
    jn_ShortBuffer__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jn_ShortBuffer__init_0($this, $capacity, $position, $limit) {
    jn_Buffer__init_0($this, $capacity);
    $this.$position0 = $position;
    $this.$limit1 = $limit;
}
function jn_ShortBuffer_get($this, $dst, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i;
    if ($offset >= 0) {
        var$4 = $dst.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(495)).$append3(var$6).$append($rt_s(418)).$append3(var$5).$toString()));
            if (jn_Buffer_remaining($this) < $length)
                $rt_throw(jn_BufferUnderflowException__init_());
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(419)).$append3($length).$append($rt_s(420)).$toString()));
            $pos = $this.$position0;
            $i = 0;
            while ($i < $length) {
                var$6 = $offset + 1 | 0;
                var$5 = $pos + 1 | 0;
                var$4[$offset] = $this.$getElement1($pos);
                $i = $i + 1 | 0;
                $offset = var$6;
                $pos = var$5;
            }
            $this.$position0 = $this.$position0 + $length | 0;
            return $this;
        }
    }
    var$4 = $dst.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(421)).$append3($offset).$append($rt_s(55)).$append3(var$4.length).$append($rt_s(364)).$toString()));
}
function jn_ShortBuffer_get0($this, $dst) {
    return $this.$get23($dst, 0, $dst.data.length);
}
function jn_ShortBuffer_put($this, $src, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($offset >= 0) {
        var$4 = $src.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(496)).$append3(var$6).$append($rt_s(418)).$append3(var$5).$toString()));
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(419)).$append3($length).$append($rt_s(420)).$toString()));
            $pos = $this.$position0;
            $i = 0;
            while ($i < $length) {
                var$6 = $pos + 1 | 0;
                var$5 = $offset + 1 | 0;
                $this.$putElement1($pos, var$4[$offset]);
                $i = $i + 1 | 0;
                $pos = var$6;
                $offset = var$5;
            }
            $this.$position0 = $this.$position0 + $length | 0;
            return $this;
        }
    }
    var$4 = $src.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(421)).$append3($offset).$append($rt_s(55)).$append3(var$4.length).$append($rt_s(364)).$toString()));
}
function jn_ShortBuffer_hasArray($this) {
    return $this.$isArrayPresent();
}
function jn_ShortBuffer_array($this) {
    return $this.$getArray1();
}
function jn_ShortBuffer_clear($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_ShortBuffer_flip($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_ShortBuffer_limit($this, $newLimit) {
    jn_Buffer_limit0($this, $newLimit);
    return $this;
}
function jn_ShortBuffer_position($this, $newPosition) {
    jn_Buffer_position0($this, $newPosition);
    return $this;
}
function jn_ShortBuffer_flip0($this) {
    return jn_ShortBuffer_flip($this);
}
function jn_ShortBuffer_clear0($this) {
    return jn_ShortBuffer_clear($this);
}
function jn_ShortBuffer_limit0($this, var$1) {
    return $this.$limit3(var$1);
}
function jn_ShortBuffer_position0($this, var$1) {
    return $this.$position7(var$1);
}
function iaas_Action() {
    jl_Object.call(this);
}
function it_Phases$4$lambda$null$4$lambda$_13_0() {
    jl_Object.call(this);
}
function it_Phases$4$lambda$null$4$lambda$_13_0__init_() {
    var var_0 = new it_Phases$4$lambda$null$4$lambda$_13_0();
    it_Phases$4$lambda$null$4$lambda$_13_0__init_0(var_0);
    return var_0;
}
function it_Phases$4$lambda$null$4$lambda$_13_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$4$lambda$null$4$lambda$_13_0_move(var$0, var$1) {
    return it_Phases$4_lambda$null$3(var$1);
}
function iaa_KeyBinds() {
    var a = this; jl_Object.call(a);
    a.$defaultSection = null;
    a.$defaultCache = null;
    a.$definitions = null;
    a.$sections = null;
}
function iaa_KeyBinds__init_() {
    var var_0 = new iaa_KeyBinds();
    iaa_KeyBinds__init_0(var_0);
    return var_0;
}
function iaa_KeyBinds__init_0($this) {
    jl_Object__init_0($this);
    $this.$defaultCache = iaac_ObjectMap__init_();
}
function iaa_KeyBinds_setDefaults($this, $defs, $sectionArr) {
    var var$3, var$4, var$5, var$6, var$7, $def, var$9, $type, var$11, var$12;
    var$3 = $defs.data;
    var$4 = $sectionArr.data;
    $this.$defaultSection = iaa_KeyBinds$Section__init_($this, $rt_s(497));
    $this.$definitions = $defs;
    var$5 = var$4.length;
    $this.$sections = $rt_createArray(iaa_KeyBinds$Section, var$5 + 1 | 0);
    $this.$sections.data[0] = $this.$defaultSection;
    jl_System_arraycopy($sectionArr, 0, $this.$sections, 1, var$5);
    var$6 = var$3.length;
    var$7 = 0;
    while (var$7 < var$6) {
        $def = var$3[var$7];
        $this.$defaultCache.$put($def, iaac_ObjectMap__init_());
        var$4 = iaai_InputDevice$DeviceType_values().data;
        var$5 = var$4.length;
        var$9 = 0;
        while (var$9 < var$5) {
            $type = var$4[var$9];
            var$11 = $this.$defaultCache.$get9($def);
            var$12 = $def.$defaultValue($type) instanceof iaa_KeyBinds$Axis ? $def.$defaultValue($type) : iaa_KeyBinds$Axis__init_($def.$defaultValue($type));
            var$11.$put($type, var$12);
            var$9 = var$9 + 1 | 0;
        }
        var$7 = var$7 + 1 | 0;
    }
}
function iaa_KeyBinds_load($this) {
    var var$1, var$2, var$3, $sec, var$5, var$6, var$7, $type, var$9, var$10, var$11, $def, $rname, $loaded;
    if ($this.$definitions === null)
        return;
    var$1 = $this.$sections.data;
    var$2 = var$1.length;
    var$3 = 0;
    while (var$3 < var$2) {
        $sec = var$1[var$3];
        var$5 = iaai_InputDevice$DeviceType_values().data;
        var$6 = var$5.length;
        var$7 = 0;
        while (var$7 < var$6) {
            $type = var$5[var$7];
            var$9 = $this.$definitions.data;
            var$10 = var$9.length;
            var$11 = 0;
            while (var$11 < var$10) {
                $def = var$9[var$11];
                $rname = jl_StringBuilder__init_().$append($rt_s(498)).$append($sec.$name10).$append($rt_s(260)).$append(jl_Enum_name($type)).$append($rt_s(260)).$append($def.$name3()).$toString();
                $loaded = iaa_KeyBinds_load0($this, $rname);
                if ($loaded !== null)
                    $sec.$binds.$getOr($type, iaa_KeyBinds$load$lambda$_3_0__init_()).$put($def, $loaded);
                var$11 = var$11 + 1 | 0;
            }
            var$7 = var$7 + 1 | 0;
        }
        iaa_Core_$callClinit();
        $sec.$device = iaa_Core_input.$getDevices().$get(iaam_Mathf_clamp1(iaa_Core_settings.$getInt(jl_StringBuilder__init_().$append($sec.$name10).$append($rt_s(499)).$toString(), 0), 0, iaa_Core_input.$getDevices().$size - 1 | 0));
        var$3 = var$3 + 1 | 0;
    }
}
function iaa_KeyBinds_load0($this, $name) {
    var var$2, var$3, $key, $min, $max;
    iaa_Core_$callClinit();
    if (iaa_Core_settings.$getBool(jl_StringBuilder__init_().$append($name).$append($rt_s(500)).$toString(), 1)) {
        var$2 = iaa_Core_settings;
        var$3 = jl_StringBuilder__init_().$append($name).$append($rt_s(501)).$toString();
        iaai_KeyCode_$callClinit();
        $key = iaai_KeyCode_byOrdinal(var$2.$getInt(var$3, jl_Enum_ordinal(iaai_KeyCode_UNSET)));
        return $key === iaai_KeyCode_UNSET ? null : iaa_KeyBinds$Axis__init_($key);
    }
    var$2 = iaa_Core_settings;
    var$3 = jl_StringBuilder__init_().$append($name).$append($rt_s(502)).$toString();
    iaai_KeyCode_$callClinit();
    $min = iaai_KeyCode_byOrdinal(var$2.$getInt(var$3, jl_Enum_ordinal(iaai_KeyCode_UNSET)));
    $max = iaai_KeyCode_byOrdinal(iaa_Core_settings.$getInt(jl_StringBuilder__init_().$append($name).$append($rt_s(503)).$toString(), jl_Enum_ordinal(iaai_KeyCode_UNSET)));
    return $min !== iaai_KeyCode_UNSET && $max !== iaai_KeyCode_UNSET ? iaa_KeyBinds$Axis__init_0($min, $max) : null;
}
function iaa_KeyBinds_get($this, $name) {
    return $this.$get24($this.$defaultSection, $name);
}
function iaa_KeyBinds_get0($this, $section, $def) {
    if ($this.$definitions !== null)
        return $this.$get25($section, $section.$device.$type3(), $def);
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(504)));
}
function iaa_KeyBinds_get1($this, $section, $type, $def) {
    if ($section.$binds.$containsKey($type) && $section.$binds.$get9($type).$containsKey($def))
        return $section.$binds.$get9($type).$get9($def);
    return $this.$defaultCache.$get9($def).$get9($type);
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLetterOrDigit();
    jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function otciu_UnicodeHelper$Range() {
    var a = this; jl_Object.call(a);
    a.$start4 = 0;
    a.$end3 = 0;
    a.$data2 = null;
}
function otciu_UnicodeHelper$Range__init_(var_0, var_1, var_2) {
    var var_3 = new otciu_UnicodeHelper$Range();
    otciu_UnicodeHelper$Range__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function otciu_UnicodeHelper$Range__init_0($this, $start, $end, $data) {
    jl_Object__init_0($this);
    $this.$start4 = $start;
    $this.$end3 = $end;
    $this.$data2 = $data;
}
function iaagg_HdpiUtils() {
    jl_Object.call(this);
}
var iaagg_HdpiUtils_mode = null;
function iaagg_HdpiUtils_$callClinit() {
    iaagg_HdpiUtils_$callClinit = $rt_eraseClinit(iaagg_HdpiUtils);
    iaagg_HdpiUtils__clinit_();
}
function iaagg_HdpiUtils_glScissor($x, $y, $width, $height) {
    var var$5;
    iaagg_HdpiUtils_$callClinit();
    a: {
        b: {
            var$5 = iaagg_HdpiUtils_mode;
            iaagg_HdpiMode_$callClinit();
            if (var$5 === iaagg_HdpiMode_Logical) {
                iaa_Core_$callClinit();
                if (iaa_Core_graphics.$getWidth0() != iaa_Core_graphics.$getBackBufferWidth())
                    break b;
                var$5 = iaa_Core_graphics;
                if (var$5.$getHeight0() != iaa_Core_graphics.$getBackBufferHeight())
                    break b;
            }
            iaa_Core_$callClinit();
            iaa_Core_gl.$glScissor($x, $y, $width, $height);
            break a;
        }
        iaa_Core_gl.$glScissor(iaagg_HdpiUtils_toBackBufferX($x), iaagg_HdpiUtils_toBackBufferY($y), iaagg_HdpiUtils_toBackBufferX($width), iaagg_HdpiUtils_toBackBufferY($height));
    }
}
function iaagg_HdpiUtils_glViewport($x, $y, $width, $height) {
    var var$5;
    iaagg_HdpiUtils_$callClinit();
    a: {
        b: {
            var$5 = iaagg_HdpiUtils_mode;
            iaagg_HdpiMode_$callClinit();
            if (var$5 === iaagg_HdpiMode_Logical) {
                iaa_Core_$callClinit();
                if (iaa_Core_graphics.$getWidth0() != iaa_Core_graphics.$getBackBufferWidth())
                    break b;
                var$5 = iaa_Core_graphics;
                if (var$5.$getHeight0() != iaa_Core_graphics.$getBackBufferHeight())
                    break b;
            }
            iaa_Core_$callClinit();
            iaa_Core_gl.$glViewport($x, $y, $width, $height);
            break a;
        }
        iaa_Core_gl.$glViewport(iaagg_HdpiUtils_toBackBufferX($x), iaagg_HdpiUtils_toBackBufferY($y), iaagg_HdpiUtils_toBackBufferX($width), iaagg_HdpiUtils_toBackBufferY($height));
    }
}
function iaagg_HdpiUtils_toBackBufferX($logicalX) {
    iaagg_HdpiUtils_$callClinit();
    iaa_Core_$callClinit();
    return $rt_imul($logicalX, iaa_Core_graphics.$getBackBufferWidth()) / iaa_Core_graphics.$getWidth0() | 0;
}
function iaagg_HdpiUtils_toBackBufferY($logicalY) {
    iaagg_HdpiUtils_$callClinit();
    iaa_Core_$callClinit();
    return $rt_imul($logicalY, iaa_Core_graphics.$getBackBufferHeight()) / iaa_Core_graphics.$getHeight0() | 0;
}
function iaagg_HdpiUtils__clinit_() {
    iaagg_HdpiMode_$callClinit();
    iaagg_HdpiUtils_mode = iaagg_HdpiMode_Logical;
}
function iaau_NetJavaImpl() {
    jl_Object.call(this);
    this.$asyncExecutor = null;
}
function iaau_NetJavaImpl__init_() {
    var var_0 = new iaau_NetJavaImpl();
    iaau_NetJavaImpl__init_0(var_0);
    return var_0;
}
function iaau_NetJavaImpl__init_0($this) {
    jl_Object__init_0($this);
    $this.$asyncExecutor = iaaua_AsyncExecutor__init_(6);
}
function jur_AbstractLineTerminator() {
    jl_Object.call(this);
}
var jur_AbstractLineTerminator_unixLT = null;
var jur_AbstractLineTerminator_unicodeLT = null;
function jur_AbstractLineTerminator__init_() {
    var var_0 = new jur_AbstractLineTerminator();
    jur_AbstractLineTerminator__init_0(var_0);
    return var_0;
}
function jur_AbstractLineTerminator__init_0($this) {
    jl_Object__init_0($this);
}
function jur_AbstractLineTerminator_getInstance($flag) {
    if (!($flag & 1)) {
        if (jur_AbstractLineTerminator_unicodeLT !== null)
            return jur_AbstractLineTerminator_unicodeLT;
        jur_AbstractLineTerminator_unicodeLT = jur_AbstractLineTerminator$2__init_();
        return jur_AbstractLineTerminator_unicodeLT;
    }
    if (jur_AbstractLineTerminator_unixLT !== null)
        return jur_AbstractLineTerminator_unixLT;
    jur_AbstractLineTerminator_unixLT = jur_AbstractLineTerminator$1__init_();
    return jur_AbstractLineTerminator_unixLT;
}
function jur_AbstractLineTerminator$2() {
    jur_AbstractLineTerminator.call(this);
}
function jur_AbstractLineTerminator$2__init_() {
    var var_0 = new jur_AbstractLineTerminator$2();
    jur_AbstractLineTerminator$2__init_0(var_0);
    return var_0;
}
function jur_AbstractLineTerminator$2__init_0($this) {
    jur_AbstractLineTerminator__init_0($this);
}
function jur_AbstractLineTerminator$2_isLineTerminator($this, $ch) {
    return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
}
function jur_AbstractLineTerminator$2_isAfterLineTerminator($this, $ch, $ch2) {
    var var$3;
    a: {
        b: {
            if ($ch != 10 && $ch != 133 && ($ch | 1) != 8233) {
                if ($ch != 13)
                    break b;
                if ($ch2 == 10)
                    break b;
            }
            var$3 = 1;
            break a;
        }
        var$3 = 0;
    }
    return var$3;
}
function iaas_Element$fire$lambda$_9_0() {
    jl_Object.call(this);
}
function iaas_Element$fire$lambda$_9_0__init_() {
    var var_0 = new iaas_Element$fire$lambda$_9_0();
    iaas_Element$fire$lambda$_9_0__init_0(var_0);
    return var_0;
}
function iaas_Element$fire$lambda$_9_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaas_Element$fire$lambda$_9_0_get(var$0) {
    return iaas_Element$fire$lambda$_9_0_get0(var$0);
}
function iaas_Element$fire$lambda$_9_0_get0(var$0) {
    return iaac_Array__init_0();
}
function jur_AbstractLineTerminator$1() {
    jur_AbstractLineTerminator.call(this);
}
function jur_AbstractLineTerminator$1__init_() {
    var var_0 = new jur_AbstractLineTerminator$1();
    jur_AbstractLineTerminator$1__init_0(var_0);
    return var_0;
}
function jur_AbstractLineTerminator$1__init_0($this) {
    jur_AbstractLineTerminator__init_0($this);
}
function jur_AbstractLineTerminator$1_isLineTerminator($this, $ch) {
    return $ch != 10 ? 0 : 1;
}
function jur_AbstractLineTerminator$1_isAfterLineTerminator($this, $ch, $ch2) {
    return $ch != 10 ? 0 : 1;
}
function jl_NoClassDefFoundError() {
    jl_LinkageError.call(this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function it_Phases$3$lambda$$19$lambda$_13_0() {
    jl_Object.call(this);
}
function it_Phases$3$lambda$$19$lambda$_13_0__init_() {
    var var_0 = new it_Phases$3$lambda$$19$lambda$_13_0();
    it_Phases$3$lambda$$19$lambda$_13_0__init_0(var_0);
    return var_0;
}
function it_Phases$3$lambda$$19$lambda$_13_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$3$lambda$$19$lambda$_13_0_run(var$0) {
    it_Phases$3_lambda$null$18();
}
function iaau_Time$run$lambda$_1_0() {
    jl_Object.call(this);
}
function iaau_Time$run$lambda$_1_0__init_() {
    var var_0 = new iaau_Time$run$lambda$_1_0();
    iaau_Time$run$lambda$_1_0__init_0(var_0);
    return var_0;
}
function iaau_Time$run$lambda$_1_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaau_Time$run$lambda$_1_0_get(var$0) {
    return iaau_Time$run$lambda$_1_0_get0(var$0);
}
function iaau_Time$run$lambda$_1_0_get0(var$0) {
    return iaau_Time$DelayRun__init_();
}
function it_Phases$1$lambda$null$21$lambda$_3_0() {
    jl_Object.call(this);
    this.$_032 = 0.0;
}
function it_Phases$1$lambda$null$21$lambda$_3_0__init_(var_0) {
    var var_1 = new it_Phases$1$lambda$null$21$lambda$_3_0();
    it_Phases$1$lambda$null$21$lambda$_3_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$1$lambda$null$21$lambda$_3_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_032 = var$1;
}
function it_Phases$1$lambda$null$21$lambda$_3_0_get(var$0, var$1) {
    it_Phases$1_lambda$null$20(var$0.$_032, var$1);
}
function it_Fx$_clinit_$lambda$_32_15() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_15__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_15();
    it_Fx$_clinit_$lambda$_32_15__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_15__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_15_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_15_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_15_get0(var$0, var$1) {
    it_Fx_lambda$static$21(var$1);
}
function it_Fx$_clinit_$lambda$_32_16() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_16__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_16();
    it_Fx$_clinit_$lambda$_32_16__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_16__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_16_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_16_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_16_get0(var$0, var$1) {
    it_Fx_lambda$static$22(var$1);
}
function it_Fx$_clinit_$lambda$_32_17() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_17__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_17();
    it_Fx$_clinit_$lambda$_32_17__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_17__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_17_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_17_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_17_get0(var$0, var$1) {
    it_Fx_lambda$static$24(var$1);
}
function otci_CharFlow() {
    var a = this; jl_Object.call(a);
    a.$characters0 = null;
    a.$pointer1 = 0;
}
function otci_CharFlow__init_(var_0) {
    var var_1 = new otci_CharFlow();
    otci_CharFlow__init_0(var_1, var_0);
    return var_1;
}
function otci_CharFlow__init_0($this, $characters) {
    jl_Object__init_0($this);
    $this.$characters0 = $characters;
}
function it_Fx$_clinit_$lambda$_32_18() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_18__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_18();
    it_Fx$_clinit_$lambda$_32_18__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_18__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_18_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_18_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_18_get0(var$0, var$1) {
    it_Fx_lambda$static$26(var$1);
}
function jur_RangeSet() {
    var a = this; jur_LeafSet.call(a);
    a.$chars0 = null;
    a.$alt2 = 0;
}
function jur_RangeSet__init_(var_0) {
    var var_1 = new jur_RangeSet();
    jur_RangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_RangeSet__init_0($this, $cc) {
    jur_LeafSet__init_2($this);
    $this.$chars0 = $cc.$getInstance();
    $this.$alt2 = $cc.$alt0;
}
function jur_RangeSet_accepts($this, $strIndex, $testString) {
    return !$this.$chars0.$contains($testString.$charAt($strIndex)) ? (-1) : 1;
}
function jur_RangeSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(31)).$append(!$this.$alt2 ? $rt_s(32) : $rt_s(33)).$append($this.$chars0.$toString()).$toString();
}
function jur_RangeSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return jur_AbstractCharClass_intersects($this.$chars0, $set.$getChar());
    if ($set instanceof jur_RangeSet)
        return jur_AbstractCharClass_intersects0($this.$chars0, $set.$chars0);
    if ($set instanceof jur_SupplRangeSet)
        return jur_AbstractCharClass_intersects0($this.$chars0, $set.$getChars0());
    if (!($set instanceof jur_SupplCharSet))
        return 1;
    return 0;
}
function jur_RangeSet_getChars($this) {
    return $this.$chars0;
}
function i_World() {
    var a = this; jl_Object.call(a);
    a.$tiles = null;
    a.$blocks0 = null;
    a.$blockNames = null;
    a.$brokenWalls = null;
    a.$candles0 = null;
    a.$map0 = null;
    a.$floorLayer = null;
    a.$wallLayer = null;
    a.$overLayer = null;
    a.$objectLayer = null;
    a.$statue0 = null;
}
function i_World__init_() {
    var var_0 = new i_World();
    i_World__init_0(var_0);
    return var_0;
}
function i_World__init_0($this) {
    var var$1, $tile, $name, $destination, $x, $y, $floor, $overlay, $wall;
    jl_Object__init_0($this);
    $this.$blocks0 = iaac_ObjectMap__init_();
    $this.$blockNames = iaac_ObjectMap__init_();
    $this.$brokenWalls = iaac_Array__init_0();
    $this.$candles0 = iaac_Array__init_0();
    $this.$statue0 = iaamg_Vector2__init_0();
    $this.$map0 = iw_MapLoader__init_().$load3($rt_s(505));
    $this.$floorLayer = $this.$map0.$getLayer($rt_s(506));
    $this.$wallLayer = $this.$map0.$getLayer($rt_s(507));
    $this.$overLayer = $this.$map0.$getLayer($rt_s(508));
    $this.$objectLayer = $this.$map0.$getLayer($rt_s(509));
    $this.$tiles = $rt_createMultiArray($rt_arraycls($rt_arraycls(iw_Tile)), [$this.$floorLayer.$height6, $this.$floorLayer.$width8]);
    var$1 = $this.$map0.$tilesets.$getTileSet(0).$iterator();
    while (var$1.$hasNext()) {
        $tile = var$1.$next0();
        $name = $tile.$region0.$name11;
        if ($name.$endsWith($rt_s(510)))
            $name = $name.$substring0(0, $name.$length() - 1 | 0);
        iw_Blocks_$callClinit();
        $destination = iw_Blocks_blocks.$find1(i_World$_init_$lambda$_0_0__init_($name));
        if ($destination === null)
            $destination = iw_Block__init_($name);
        $destination.$solid = $tile.$getProperties().$containsKey0($rt_s(511));
        $destination.$clear0 = $tile.$getProperties().$containsKey0($rt_s(512));
        $destination.$id = $tile.$id1;
        $this.$blocks0.$put($tile, $destination);
        $this.$blockNames.$put($name, $destination);
    }
    $x = 0;
    while ($x < $this.$width4()) {
        $y = 0;
        while ($y < $this.$height4()) {
            $floor = $this.$blocks0.$getNull($this.$floorLayer.$getTile0($x, $y));
            $overlay = $this.$blocks0.$getNull($this.$overLayer.$getTile0($x, $y));
            $wall = $this.$blocks0.$getNull($this.$wallLayer.$getTile0($x, $y));
            $this.$tiles.data[$x].data[$y] = iw_Tile__init_($floor, $overlay, $wall);
            $this.$tiles.data[$x].data[$y].$rotation2 = $this.$overLayer.$getCell0($x, $y) === null ? 0 : $this.$overLayer.$getCell0($x, $y).$rotation1 * 90 | 0;
            if ($wall !== null && $wall.$name6.$equals($rt_s(289)))
                $this.$candles0.$add1(iaamg_Point2__init_($x, $y));
            if ($wall !== null && $wall.$name6.$equals($rt_s(291)))
                $this.$statue0.$set2(($x * 16 | 0) + 8.0, ($y * 16 | 0) + 32.0);
            $y = $y + 1 | 0;
        }
        $x = $x + 1 | 0;
    }
    i_Inferno_bulletGroup.$resize2(0.0, 0.0, $this.$width4() * 16 | 0, $this.$height4() * 16 | 0);
    i_Inferno_charGroup.$resize2(0.0, 0.0, $this.$width4() * 16 | 0, $this.$height4() * 16 | 0);
    $this.$updateShadowed();
}
function i_World_each($this, $cons) {
    var $x, $y;
    $x = 0;
    while ($x < $this.$width4()) {
        $y = 0;
        while ($y < $this.$height4()) {
            $cons.$get5($this.$tiles.data[$x].data[$y]);
            $y = $y + 1 | 0;
        }
        $x = $x + 1 | 0;
    }
}
function i_World_updateShadowed($this) {
    var $x, $y, $tile, var$4, var$5, var$6, $near;
    $x = 0;
    while ($x < $this.$width4()) {
        $y = 0;
        while ($y < $this.$height4()) {
            a: {
                b: {
                    $tile = $this.$tiles.data[$x].data[$y];
                    if ($tile.$solid1()) {
                        if ($tile.$wall === null)
                            break b;
                        if (!$tile.$wall.$clear0)
                            break b;
                    }
                    if ($tile.$wall === null)
                        break a;
                    $tile.$shadowed = 1;
                    break a;
                }
                iaamg_Geometry_$callClinit();
                var$4 = iaamg_Geometry_d4.data;
                var$5 = var$4.length;
                var$6 = 0;
                c: {
                    while (true) {
                        if (var$6 >= var$5)
                            break c;
                        $near = var$4[var$6];
                        if (!$this.$tile($x + $near.$x3 | 0, $y + $near.$y3 | 0).$solid1())
                            break;
                        var$6 = var$6 + 1 | 0;
                    }
                    $tile.$shadowed = 1;
                }
            }
            $y = $y + 1 | 0;
        }
        $x = $x + 1 | 0;
    }
}
function i_World_wallDetonate($this) {
    var $x, $y, $tile, $rx, $ry, var$6, var$7, var$8;
    $x = 0;
    while ($x < $this.$width4()) {
        $y = 0;
        while ($y < $this.$height4()) {
            if (iaam_Mathf_within($x, $y, $this.$width4() / 2 | 0, $this.$height4() / 2 | 0, 14.0)) {
                $tile = $this.$tile($x, $y);
                if ($tile.$wall !== null && $tile.$wall.$name6.$equals($rt_s(513))) {
                    $rx = $rt_imul(iaam_Mathf_clamp1($x - ($this.$width4() / 2 | 0) | 0, (-1), 1), iaam_Mathf_random2(0, 1));
                    $ry = $rt_imul(iaam_Mathf_clamp1($y - ($this.$height4() / 2 | 0) | 0, (-1), 1), iaam_Mathf_random2(0, 1));
                    $tile.$wall = null;
                    var$6 = $this.$tiles.data;
                    var$7 = $x + $rx | 0;
                    var$6 = var$6[var$7].data;
                    var$8 = $y + $ry | 0;
                    if (var$6[var$8].$wall !== null && $this.$tiles.data[var$7].data[var$8].$wall.$name6.$equals($rt_s(513)))
                        $this.$brokenWalls.$add1(iaamg_Point2__init_(var$7, var$8));
                    $this.$tiles.data[var$7].data[var$8].$wall = $this.$blockNames.$get9($rt_s(292));
                    $this.$brokenWalls.$add1(iaamg_Point2__init_($x, $y));
                }
            }
            $y = $y + 1 | 0;
        }
        $x = $x + 1 | 0;
    }
    $this.$updateShadowed();
    i_Inferno_renderer.$updateShadows();
}
function i_World_wallExtinguish($this) {
    var $x, $y, $tile;
    $x = 0;
    while ($x < $this.$width4()) {
        $y = 0;
        while ($y < $this.$height4()) {
            $tile = $this.$tile($x, $y);
            if (iaam_Mathf_within($x, $y, $this.$width4() / 2 | 0, $this.$height4() / 2 | 0, 14.0) && $tile.$wall !== null && !(!$tile.$wall.$name6.$equals($rt_s(513)) && !$tile.$wall.$name6.$equals($rt_s(292)))) {
                if ($tile.$wall.$name6.$equals($rt_s(513)))
                    $this.$brokenWalls.$add1(iaamg_Point2__init_($x, $y));
                $tile.$wall = $this.$blockNames.$get9($rt_s(294));
            }
            $y = $y + 1 | 0;
        }
        $x = $x + 1 | 0;
    }
    $this.$updateShadowed();
    i_Inferno_renderer.$updateShadows();
}
function i_World_wallUndetonate($this) {
    var $x, $y, $tile, var$4, $p;
    $x = 0;
    while ($x < $this.$width4()) {
        $y = 0;
        while ($y < $this.$height4()) {
            $tile = $this.$tile($x, $y);
            if ($tile.$wall !== null && !(!$tile.$wall.$name6.$equals($rt_s(292)) && !$tile.$wall.$name6.$equals($rt_s(294))))
                $tile.$wall = null;
            $y = $y + 1 | 0;
        }
        $x = $x + 1 | 0;
    }
    var$4 = $this.$brokenWalls.$iterator();
    while (var$4.$hasNext()) {
        $p = var$4.$next0();
        $tile = $this.$tile($p.$x3, $p.$y3);
        $tile.$wall = $this.$blockNames.$get9($rt_s(513));
    }
    $this.$brokenWalls.$clear();
    $this.$updateShadowed();
    i_Inferno_renderer.$updateShadows();
}
function i_World_statue($this) {
    return $this.$statue0;
}
function i_World_candles($this) {
    return $this.$candles0;
}
function i_World_getObjects($this) {
    return $this.$objectLayer.$objects0;
}
function i_World_width($this) {
    return $this.$wallLayer.$width8;
}
function i_World_height($this) {
    return $this.$wallLayer.$height6;
}
function i_World_world($this, $f) {
    return $f / 16.0 | 0;
}
function i_World_solid($this, $x, $y) {
    return $this.$tileOpt($x, $y) !== null && !$this.$tile($x, $y).$solid1() ? 0 : 1;
}
function i_World_tile($this, $x, $y) {
    return $this.$tiles.data[iaam_Mathf_clamp1($x, 0, $this.$width4() - 1 | 0)].data[iaam_Mathf_clamp1($y, 0, $this.$height4() - 1 | 0)];
}
function i_World_tileOpt($this, $x, $y) {
    return !iaau_Structs_inBounds($x, $y, $this.$width4(), $this.$height4()) ? null : $this.$tiles.data[$x].data[$y];
}
function i_World_lambda$new$0($fname, $b) {
    return $b.$name6.$equalsIgnoreCase($fname);
}
function it_Fx$_clinit_$lambda$_32_11() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_11__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_11();
    it_Fx$_clinit_$lambda$_32_11__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_11__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_11_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_11_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_11_get0(var$0, var$1) {
    it_Fx_lambda$static$15(var$1);
}
function it_Bullets$12() {
    it_BulletType.call(this);
}
function it_Bullets$12__init_() {
    var var_0 = new it_Bullets$12();
    it_Bullets$12__init_0(var_0);
    return var_0;
}
function it_Bullets$12__init_0($this) {
    it_BulletType__init_0($this);
    $this.$damage0 = 15.0;
    $this.$lifetime0 = 30.0;
    $this.$shake0 = 5.0;
}
function it_Bullets$12_init($this, $bullet) {
    it_BulletType_init($this, $bullet);
}
function it_Bullets$12_draw($this, $laser) {
    var $f, var$3;
    iaam_Interpolation_$callClinit();
    $f = $laser.$fout0(iaam_Interpolation_exp5Out);
    var$3 = 14.0 * $f;
    ig_Pal_$callClinit();
    iaagg_Lines_stroke(var$3, ig_Pal_fireball);
    iaagg_Lines_lineAngle($laser.$x2, $laser.$y2, $laser.$angle, 1300.0);
    var$3 = 6.0 * $f;
    iaag_Color_$callClinit();
    iaagg_Lines_stroke(var$3, iaag_Color_white);
    iaagg_Lines_lineAngle($laser.$x2, $laser.$y2, $laser.$angle, 1300.0);
    iaau_Tmp_$callClinit();
    iaau_Tmp_v1.$trns($laser.$angle, 1300.0);
    ig_Drawf_light0(iaag_Color_white, 1.0, it_Bullets$12$draw$lambda$_2_0__init_($f, $laser));
}
function it_Bullets$12_lambda$draw$0($f, $laser) {
    var var$3, var$4, var$5;
    iaagg_Lines_stroke0(20.0 * $f);
    var$3 = $laser.$x2;
    var$4 = $laser.$y2;
    var$5 = $laser.$angle;
    iaagg_CapStyle_$callClinit();
    iaagg_Lines_lineAngle0(var$3, var$4, var$5, 1300.0, iaagg_CapStyle_round);
}
function iaac_ObjectIntMap$MapIterator() {
    jl_Object.call(this);
}
function iaac_ObjectIntMap$Keys() {
    iaac_ObjectIntMap$MapIterator.call(this);
}
function it_Fx$_clinit_$lambda$_32_12() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_12__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_12();
    it_Fx$_clinit_$lambda$_32_12__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_12__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_12_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_12_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_12_get0(var$0, var$1) {
    it_Fx_lambda$static$17(var$1);
}
function it_Bullets$11() {
    it_BulletType.call(this);
}
function it_Bullets$11__init_() {
    var var_0 = new it_Bullets$11();
    it_Bullets$11__init_0(var_0);
    return var_0;
}
function it_Bullets$11__init_0($this) {
    it_BulletType__init_0($this);
    $this.$pierce = 1;
    $this.$speed = 0.0010000000474974513;
    $this.$light = 60.0;
    $this.$lifetime0 = 10.0;
    $this.$size3 = 50.0;
    $this.$shake0 = 4.0;
    $this.$deflect = 0;
    ig_Pal_$callClinit();
    $this.$lightColor = ig_Pal_lucine;
    $this.$damage0 = 15.0;
}
function it_Bullets$11_init($this, $bullet) {
    it_BulletType_init($this, $bullet);
    it_Fx_$callClinit();
    it_Fx_meteorpost.$at($bullet.$x2, $bullet.$y2);
}
function it_Bullets$11_draw($this, $b) {
    var var$2;
    ig_Drawf_z(100000.0);
    iaag_Color_$callClinit();
    var$2 = iaag_Color_white;
    ig_Pal_$callClinit();
    iaagg_Draw_color4(var$2, ig_Pal_lucine, $b.$fin());
    iaagg_Lines_circle($b.$x2, $b.$y2, 40.0 * $b.$fin());
    iaagg_Draw_color(iaag_Color_white);
    iaagg_Draw_alpha($b.$fout());
    iaagg_Fill_circle($b.$x2, $b.$y2, $b.$fout() * 40.0);
    iaagg_Draw_color(ig_Pal_lucine);
    iaagg_Draw_alpha($b.$fout());
    ig_Drawf_symbols($b.$id2, $b.$x2, $b.$y2, 40.0);
}
function it_Fx$_clinit_$lambda$_32_13() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_13__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_13();
    it_Fx$_clinit_$lambda$_32_13__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_13__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_13_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_13_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_13_get0(var$0, var$1) {
    it_Fx_lambda$static$18(var$1);
}
function it_Fx$_clinit_$lambda$_32_14() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_14__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_14();
    it_Fx$_clinit_$lambda$_32_14__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_14__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_14_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_14_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_14_get0(var$0, var$1) {
    it_Fx_lambda$static$20(var$1);
}
function otcjl_TObject() {
    jl_Object.call(this);
}
function otcjl_TObject__init_() {
    var var_0 = new otcjl_TObject();
    otcjl_TObject__init_0(var_0);
    return var_0;
}
function otcjl_TObject__init_0($this) {
    jl_Object__init_0($this);
}
function otcju_TMap() {
}
function otcju_TAbstractMap() {
    otcjl_TObject.call(this);
}
function otcju_TAbstractMap__init_() {
    var var_0 = new otcju_TAbstractMap();
    otcju_TAbstractMap__init_0(var_0);
    return var_0;
}
function otcju_TAbstractMap__init_0($this) {
    otcjl_TObject__init_0($this);
}
function otjt_Float32Array() {
    otjt_ArrayBufferView.call(this);
}
function iaam_Interpolation$SwingIn() {
    iaam_Interpolation.call(this);
    this.$scale0 = 0.0;
}
function iaam_Interpolation$SwingIn__init_(var_0) {
    var var_1 = new iaam_Interpolation$SwingIn();
    iaam_Interpolation$SwingIn__init_0(var_1, var_0);
    return var_1;
}
function iaam_Interpolation$SwingIn__init_0($this, $scale) {
    iaam_Interpolation__init_0($this);
    $this.$scale0 = $scale;
}
function iaac_Array() {
    var a = this; jl_Object.call(a);
    a.$items = null;
    a.$size = 0;
    a.$ordered2 = 0;
    a.$iterable = null;
}
var iaac_Array_iteratorsAllocated = 0;
function iaac_Array_$callClinit() {
    iaac_Array_$callClinit = $rt_eraseClinit(iaac_Array);
    iaac_Array__clinit_();
}
function iaac_Array__init_0() {
    var var_0 = new iaac_Array();
    iaac_Array__init_1(var_0);
    return var_0;
}
function iaac_Array__init_(var_0) {
    var var_1 = new iaac_Array();
    iaac_Array__init_2(var_1, var_0);
    return var_1;
}
function iaac_Array__init_3(var_0, var_1) {
    var var_2 = new iaac_Array();
    iaac_Array__init_4(var_2, var_0, var_1);
    return var_2;
}
function iaac_Array__init_5(var_0, var_1, var_2) {
    var var_3 = new iaac_Array();
    iaac_Array__init_6(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaac_Array__init_7(var_0) {
    var var_1 = new iaac_Array();
    iaac_Array__init_8(var_1, var_0);
    return var_1;
}
function iaac_Array__init_9(var_0, var_1, var_2, var_3) {
    var var_4 = new iaac_Array();
    iaac_Array__init_10(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaac_Array__init_1($this) {
    iaac_Array_$callClinit();
    iaac_Array__init_4($this, 1, 16);
}
function iaac_Array__init_2($this, $capacity) {
    iaac_Array_$callClinit();
    iaac_Array__init_4($this, 1, $capacity);
}
function iaac_Array__init_4($this, $ordered, $capacity) {
    iaac_Array_$callClinit();
    jl_Object__init_0($this);
    $this.$ordered2 = $ordered;
    $this.$items = $rt_createArray(jl_Object, $capacity);
}
function iaac_Array__init_6($this, $ordered, $capacity, $arrayType) {
    iaac_Array_$callClinit();
    jl_Object__init_0($this);
    $this.$ordered2 = $ordered;
    $this.$items = jlr_Array_newInstance($arrayType, $capacity);
}
function iaac_Array__init_8($this, $array) {
    iaac_Array_$callClinit();
    iaac_Array__init_10($this, 1, $array, 0, $array.data.length);
}
function iaac_Array__init_10($this, $ordered, $array, $start, $count) {
    iaac_Array_$callClinit();
    iaac_Array__init_6($this, $ordered, $count, jl_Object_getClass($array).$getComponentType());
    $this.$size = $count;
    jl_System_arraycopy($array, $start, $this.$items, 0, $this.$size);
}
function iaac_Array_with($array) {
    iaac_Array_$callClinit();
    return iaac_Array__init_7($array);
}
function iaac_Array_each($this, $consumer) {
    var $i;
    $i = 0;
    while ($i < $this.$size) {
        $consumer.$get5($this.$items.data[$i]);
        $i = $i + 1 | 0;
    }
}
function iaac_Array_replace($this, $mapper) {
    var $i;
    $i = 0;
    while ($i < $this.$size) {
        $this.$items.data[$i] = $mapper.$get9($this.$items.data[$i]);
        $i = $i + 1 | 0;
    }
}
function iaac_Array_find($this, $predicate) {
    var $i;
    $i = 0;
    while ($i < $this.$size) {
        if ($predicate.$get28($this.$items.data[$i]))
            return $this.$items.data[$i];
        $i = $i + 1 | 0;
    }
    return null;
}
function iaac_Array_add($this, $value) {
    var $items, var$3, var$4;
    $items = $this.$items;
    var$3 = $items.data;
    if ($this.$size == var$3.length)
        $items = $this.$resize3(jl_Math_max1(8, $this.$size * 1.75 | 0));
    var$3 = $items.data;
    var$4 = $this.$size;
    $this.$size = var$4 + 1 | 0;
    var$3[var$4] = $value;
}
function iaac_Array_addAll($this, $array) {
    $this.$addAll5($array.$items, 0, $array.$size);
}
function iaac_Array_addAll0($this, $array, $start, $count) {
    if (($start + $count | 0) <= $array.$size) {
        $this.$addAll5($array.$items, $start, $count);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(514)).$append3($start).$append($rt_s(300)).$append3($count).$append($rt_s(301)).$append3($array.$size).$toString()));
}
function iaac_Array_addAll1($this, $array) {
    $this.$addAll5($array, 0, $array.data.length);
}
function iaac_Array_addAll2($this, $array, $start, $count) {
    var $items, var$5, $sizeNeeded;
    $items = $this.$items;
    var$5 = $items.data;
    $sizeNeeded = $this.$size + $count | 0;
    if ($sizeNeeded > var$5.length)
        $items = $this.$resize3(jl_Math_max1(8, $sizeNeeded * 1.75 | 0));
    jl_System_arraycopy($array, $start, $items, $this.$size, $count);
    $this.$size = $this.$size + $count | 0;
}
function iaac_Array_get($this, $index) {
    if ($index < $this.$size)
        return $this.$items.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(302)).$append3($index).$append($rt_s(303)).$append3($this.$size).$toString()));
}
function iaac_Array_set($this, $index, $value) {
    if ($index < $this.$size) {
        $this.$items.data[$index] = $value;
        return;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(302)).$append3($index).$append($rt_s(303)).$append3($this.$size).$toString()));
}
function iaac_Array_contains($this, $value, $identity) {
    var $items, $i, var$5, var$6;
    a: {
        $items = $this.$items;
        $i = $this.$size - 1 | 0;
        if (!(!$identity && $value !== null)) {
            while (true) {
                if ($i < 0)
                    break a;
                var$5 = $items.data;
                var$6 = $i + (-1) | 0;
                if (var$5[$i] === $value)
                    break;
                $i = var$6;
            }
            return 1;
        }
        while (true) {
            if ($i < 0)
                break a;
            var$5 = $items.data;
            var$6 = $i + (-1) | 0;
            if ($value.$equals(var$5[$i]))
                return 1;
            $i = var$6;
        }
    }
    return 0;
}
function iaac_Array_indexOf($this, $value) {
    return $this.$indexOf($value, 0);
}
function iaac_Array_indexOf0($this, $value, $identity) {
    var $items, $i, $n;
    a: {
        $items = $this.$items;
        if (!$identity && $value !== null) {
            $i = 0;
            $n = $this.$size;
            while (true) {
                if ($i >= $n)
                    break a;
                if ($value.$equals($items.data[$i]))
                    break;
                $i = $i + 1 | 0;
            }
            return $i;
        }
        $i = 0;
        $n = $this.$size;
        while (true) {
            if ($i >= $n)
                break a;
            if ($items.data[$i] === $value)
                break;
            $i = $i + 1 | 0;
        }
        return $i;
    }
    return (-1);
}
function iaac_Array_removeValue($this, $value, $identity) {
    var $items, $i, $n;
    a: {
        $items = $this.$items;
        if (!(!$identity && $value !== null)) {
            $i = 0;
            $n = $this.$size;
            while ($i < $n) {
                if ($items.data[$i] === $value) {
                    $this.$remove($i);
                    return 1;
                }
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            $n = $this.$size;
            while (true) {
                if ($i >= $n)
                    break a;
                if ($value.$equals($items.data[$i])) {
                    $this.$remove($i);
                    return 1;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    return 0;
}
function iaac_Array_remove($this, $index) {
    var $items, var$3, $value;
    if ($index >= $this.$size)
        $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(302)).$append3($index).$append($rt_s(303)).$append3($this.$size).$toString()));
    $items = $this.$items;
    var$3 = $items.data;
    $value = var$3[$index];
    $this.$size = $this.$size - 1 | 0;
    if (!$this.$ordered2)
        var$3[$index] = var$3[$this.$size];
    else
        jl_System_arraycopy($items, $index + 1 | 0, $items, $index, $this.$size - $index | 0);
    var$3[$this.$size] = null;
    return $value;
}
function iaac_Array_removeRange($this, $start, $end) {
    var $items, $count, var$5, $lastIndex, $i, var$8;
    if ($end >= $this.$size)
        $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(304)).$append3($end).$append($rt_s(303)).$append3($this.$size).$toString()));
    if ($start > $end)
        $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(305)).$append3($start).$append($rt_s(306)).$append3($end).$toString()));
    a: {
        $items = $this.$items;
        $count = ($end - $start | 0) + 1 | 0;
        if ($this.$ordered2) {
            var$5 = $start + $count | 0;
            jl_System_arraycopy($items, var$5, $items, $start, $this.$size - var$5 | 0);
        } else {
            $lastIndex = $this.$size - 1 | 0;
            $i = 0;
            while (true) {
                if ($i >= $count)
                    break a;
                var$8 = $items.data;
                var$8[$start + $i | 0] = var$8[$lastIndex - $i | 0];
                $i = $i + 1 | 0;
            }
        }
    }
    $this.$size = $this.$size - $count | 0;
}
function iaac_Array_removeAll($this, $array) {
    return $this.$removeAll($array, 0);
}
function iaac_Array_removeAll0($this, $array, $identity) {
    var $size, $items, $i, $n, var$7, $item, $ii;
    $size = $this.$size;
    $items = $this.$items;
    if ($identity) {
        $i = 0;
        $n = $array.$size;
        var$7 = $size;
        while ($i < $n) {
            $item = $array.$get($i);
            $ii = 0;
            a: {
                while ($ii < var$7) {
                    if ($item === $items.data[$ii]) {
                        $this.$remove($ii);
                        var$7 = var$7 + (-1) | 0;
                        break a;
                    }
                    $ii = $ii + 1 | 0;
                }
            }
            $i = $i + 1 | 0;
        }
    } else {
        $i = 0;
        $n = $array.$size;
        var$7 = $size;
        while ($i < $n) {
            $item = $array.$get($i);
            $ii = 0;
            b: {
                while ($ii < var$7) {
                    if ($item.$equals($items.data[$ii])) {
                        $this.$remove($ii);
                        var$7 = var$7 + (-1) | 0;
                        break b;
                    }
                    $ii = $ii + 1 | 0;
                }
            }
            $i = $i + 1 | 0;
        }
    }
    return var$7 == $size ? 0 : 1;
}
function iaac_Array_pop($this) {
    var $item;
    if (!$this.$size)
        $rt_throw(jl_IllegalStateException__init_($rt_s(515)));
    $this.$size = $this.$size - 1 | 0;
    $item = $this.$items.data[$this.$size];
    $this.$items.data[$this.$size] = null;
    return $item;
}
function iaac_Array_peek($this) {
    if (!$this.$size)
        $rt_throw(jl_IllegalStateException__init_($rt_s(515)));
    return $this.$items.data[$this.$size - 1 | 0];
}
function iaac_Array_first($this) {
    if (!$this.$size)
        $rt_throw(jl_IllegalStateException__init_($rt_s(515)));
    return $this.$items.data[0];
}
function iaac_Array_isEmpty($this) {
    return $this.$size ? 0 : 1;
}
function iaac_Array_clear($this) {
    var $items, $i, $n;
    $items = $this.$items;
    $i = 0;
    $n = $this.$size;
    while ($i < $n) {
        $items.data[$i] = null;
        $i = $i + 1 | 0;
    }
    $this.$size = 0;
}
function iaac_Array_ensureCapacity($this, $additionalCapacity) {
    var $sizeNeeded;
    if ($additionalCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(307)).$append3($additionalCapacity).$toString()));
    $sizeNeeded = $this.$size + $additionalCapacity | 0;
    if ($sizeNeeded > $this.$items.data.length)
        $this.$resize3(jl_Math_max1(8, $sizeNeeded));
    return $this.$items;
}
function iaac_Array_setSize($this, $newSize) {
    $this.$truncate0($newSize);
    if ($newSize > $this.$items.data.length)
        $this.$resize3(jl_Math_max1(8, $newSize));
    $this.$size = $newSize;
    return $this.$items;
}
function iaac_Array_resize($this, $newSize) {
    var $items, $newItems, var$4;
    $items = $this.$items;
    $newItems = jlr_Array_newInstance(jl_Object_getClass($items).$getComponentType(), $newSize);
    var$4 = $newItems.data;
    jl_System_arraycopy($items, 0, $newItems, 0, jl_Math_min1($this.$size, var$4.length));
    $this.$items = $newItems;
    return $newItems;
}
function iaac_Array_sort($this) {
    iaac_Sort_instance().$sort0($this.$items, 0, $this.$size);
}
function iaac_Array_sort0($this, $comparator) {
    iaac_Sort_instance().$sort1($this.$items, $comparator, 0, $this.$size);
}
function iaac_Array_reverse($this) {
    var $items, $i, $lastIndex, $n, var$5, $ii, $temp;
    $items = $this.$items;
    $i = 0;
    $lastIndex = $this.$size - 1 | 0;
    $n = $this.$size / 2 | 0;
    while ($i < $n) {
        var$5 = $items.data;
        $ii = $lastIndex - $i | 0;
        $temp = var$5[$i];
        var$5[$i] = var$5[$ii];
        var$5[$ii] = $temp;
        $i = $i + 1 | 0;
    }
}
function iaac_Array_truncate($this, $newSize) {
    var $i;
    if ($newSize < 0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(308)).$append3($newSize).$toString()));
    if ($this.$size <= $newSize)
        return;
    $i = $newSize;
    while ($i < $this.$size) {
        $this.$items.data[$i] = null;
        $i = $i + 1 | 0;
    }
    $this.$size = $newSize;
}
function iaac_Array_random($this) {
    if (!$this.$size)
        return null;
    return $this.$items.data[iaam_Mathf_random2(0, $this.$size - 1 | 0)];
}
function iaac_Array_random0($this, $exclude) {
    var $eidx, $index;
    if ($exclude === null)
        return $this.$random1();
    if (!$this.$size)
        return null;
    if ($this.$size == 1)
        return $this.$first0();
    $eidx = $this.$indexOf2($exclude);
    if ($eidx == (-1))
        return $this.$random1();
    $index = iaam_Mathf_random2(0, $this.$size - 2 | 0);
    if ($index >= $eidx)
        $index = $index + 1 | 0;
    return $this.$items.data[$index];
}
function iaac_Array_toArray($this, $type) {
    var $result;
    $result = jlr_Array_newInstance($type, $this.$size);
    jl_System_arraycopy($this.$items, 0, $result, 0, $this.$size);
    return $result;
}
function iaac_Array_equals($this, $object) {
    var $array, $n, $items1, $items2, $i, var$7, $o1, $o2;
    if ($object === $this)
        return 1;
    if (!$this.$ordered2)
        return 0;
    if (!($object instanceof iaac_Array))
        return 0;
    $array = $object;
    if (!$array.$ordered2)
        return 0;
    $n = $this.$size;
    if ($n != $array.$size)
        return 0;
    $items1 = $this.$items;
    $items2 = $array.$items;
    $i = 0;
    a: {
        while ($i < $n) {
            b: {
                var$7 = $items2.data;
                $o1 = $items1.data[$i];
                $o2 = var$7[$i];
                if ($o1 !== null) {
                    if ($o1.$equals($o2))
                        break b;
                    else
                        break a;
                }
                if ($o2 !== null)
                    break a;
            }
            $i = $i + 1 | 0;
        }
        return 1;
    }
    return 0;
}
function iaac_Array_toString($this) {
    var $items, var$2, $buffer, $i;
    if (!$this.$size)
        return $rt_s(368);
    $items = $this.$items;
    var$2 = $items.data;
    $buffer = jl_StringBuilder__init_0(32);
    $buffer.$append0(91);
    $buffer.$append1(var$2[0]);
    $i = 1;
    while ($i < $this.$size) {
        $buffer.$append($rt_s(516));
        $buffer.$append1(var$2[$i]);
        $i = $i + 1 | 0;
    }
    $buffer.$append0(93);
    return $buffer.$toString();
}
function iaac_Array_iterator($this) {
    if ($this.$iterable === null)
        $this.$iterable = iaac_Array$ArrayIterable__init_($this);
    return $this.$iterable.$iterator();
}
function iaac_Array__clinit_() {
    iaac_Array_iteratorsAllocated = 0;
}
function iaac_DelayedRemovalArray() {
    var a = this; iaac_Array.call(a);
    a.$iterating = 0;
    a.$remove2 = null;
    a.$clear6 = 0;
}
function iaac_DelayedRemovalArray__init_(var_0) {
    var var_1 = new iaac_DelayedRemovalArray();
    iaac_DelayedRemovalArray__init_0(var_1, var_0);
    return var_1;
}
function iaac_DelayedRemovalArray__init_0($this, $capacity) {
    iaac_Array__init_2($this, $capacity);
    $this.$remove2 = iaac_IntArray__init_(0);
}
function iaac_DelayedRemovalArray_begin($this) {
    $this.$iterating = $this.$iterating + 1 | 0;
}
function iaac_DelayedRemovalArray_end($this) {
    var $i, $n, $index;
    if (!$this.$iterating)
        $rt_throw(jl_IllegalStateException__init_($rt_s(517)));
    $this.$iterating = $this.$iterating - 1 | 0;
    if (!$this.$iterating) {
        a: {
            if ($this.$clear6 > 0 && $this.$clear6 == $this.$size) {
                $this.$remove2.$clear();
                $this.$clear();
            } else {
                $i = 0;
                $n = $this.$remove2.$size5;
                while ($i < $n) {
                    $index = $this.$remove2.$pop0();
                    if ($index >= $this.$clear6)
                        $this.$remove($index);
                    $i = $i + 1 | 0;
                }
                $i = $this.$clear6 - 1 | 0;
                while (true) {
                    if ($i < 0)
                        break a;
                    $this.$remove($i);
                    $i = $i + (-1) | 0;
                }
            }
        }
        $this.$clear6 = 0;
    }
}
function iaac_DelayedRemovalArray_removeIntern($this, $index) {
    var $i, $n, $removeIndex, var$5;
    if ($index < $this.$clear6)
        return;
    $i = 0;
    $n = $this.$remove2.$size5;
    while (true) {
        if ($i >= $n) {
            $this.$remove2.$add6($index);
            return;
        }
        $removeIndex = $this.$remove2.$get29($i);
        var$5 = $rt_compare($index, $removeIndex);
        if (!var$5)
            break;
        if (var$5 < 0) {
            $this.$remove2.$insert12($i, $index);
            return;
        }
        $i = $i + 1 | 0;
    }
}
function iaac_DelayedRemovalArray_remove($this, $index) {
    if ($this.$iterating <= 0)
        return iaac_Array_remove($this, $index);
    iaac_DelayedRemovalArray_removeIntern($this, $index);
    return $this.$get($index);
}
function iaac_DelayedRemovalArray_clear($this) {
    if ($this.$iterating <= 0) {
        iaac_Array_clear($this);
        return;
    }
    $this.$clear6 = $this.$size;
}
function it_Bullets$10() {
    it_BulletType.call(this);
}
function it_Bullets$10__init_() {
    var var_0 = new it_Bullets$10();
    it_Bullets$10__init_0(var_0);
    return var_0;
}
function it_Bullets$10__init_0($this) {
    it_BulletType__init_0($this);
    $this.$speed = 2.5;
    ig_Pal_$callClinit();
    $this.$lightColor = ig_Pal_candle;
    $this.$damage0 = 8.0;
    $this.$lifetime0 = 500.0;
}
function it_Bullets$10_draw($this, $bullet) {
    ig_Pal_$callClinit();
    iaagg_Draw_color(ig_Pal_candle);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 5.0);
    iaag_Color_$callClinit();
    iaagg_Draw_color(iaag_Color_white);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 2.0);
}
function jur_CharClass() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$ci = 0;
    a.$uci = 0;
    a.$hasUCI = 0;
    a.$invertedSurrogates = 0;
    a.$inverted = 0;
    a.$hideBits = 0;
    a.$bits = null;
    a.$nonBitSet = null;
}
function jur_CharClass__init_() {
    var var_0 = new jur_CharClass();
    jur_CharClass__init_0(var_0);
    return var_0;
}
function jur_CharClass__init_1(var_0, var_1) {
    var var_2 = new jur_CharClass();
    jur_CharClass__init_2(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass__init_3(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass();
    jur_CharClass__init_4(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass__init_0($this) {
    jur_AbstractCharClass__init_0($this);
    $this.$bits = ju_BitSet__init_0();
}
function jur_CharClass__init_2($this, $ci, $uci) {
    jur_AbstractCharClass__init_0($this);
    $this.$bits = ju_BitSet__init_0();
    $this.$ci = $ci;
    $this.$uci = $uci;
}
function jur_CharClass__init_4($this, $negative, $ci, $uci) {
    jur_CharClass__init_2($this, $ci, $uci);
    $this.$setNegative($negative);
}
function jur_CharClass_add($this, $ch) {
    a: {
        if ($this.$ci) {
            b: {
                if (!($ch >= 97 && $ch <= 122)) {
                    if ($ch < 65)
                        break b;
                    if ($ch > 90)
                        break b;
                }
                if ($this.$inverted) {
                    $this.$bits.$clear7(jur_Pattern_getSupplement($ch & 65535));
                    break a;
                }
                $this.$bits.$set11(jur_Pattern_getSupplement($ch & 65535));
                break a;
            }
            if ($this.$uci && $ch > 128) {
                $this.$hasUCI = 1;
                $ch = jl_Character_toLowerCase0(jl_Character_toUpperCase($ch));
            }
        }
    }
    if (!(!jur_Lexer_isHighSurrogate($ch) && !jur_Lexer_isLowSurrogate($ch))) {
        if ($this.$invertedSurrogates)
            $this.$lowHighSurrogates.$clear7($ch - 55296 | 0);
        else
            $this.$lowHighSurrogates.$set11($ch - 55296 | 0);
    }
    if ($this.$inverted)
        $this.$bits.$clear7($ch);
    else
        $this.$bits.$set11($ch);
    if (!$this.$mayContainSupplCodepoints && jl_Character_isSupplementaryCodePoint($ch))
        $this.$mayContainSupplCodepoints = 1;
    return $this;
}
function jur_CharClass_add0($this, $cc) {
    var $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints && $cc.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($this.$invertedSurrogates) {
        if (!$cc.$altSurrogates)
            $this.$lowHighSurrogates.$andNot($cc.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$and($cc.$getLowHighSurrogates());
    } else if (!$cc.$altSurrogates)
        $this.$lowHighSurrogates.$or($cc.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($cc.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($cc.$getLowHighSurrogates());
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
        $this.$invertedSurrogates = 1;
    }
    if (!$this.$hideBits && $cc.$getBits() !== null) {
        if ($this.$inverted) {
            if (!$cc.$isNegative())
                $this.$bits.$andNot($cc.$getBits());
            else
                $this.$bits.$and($cc.$getBits());
        } else if (!$cc.$isNegative())
            $this.$bits.$or($cc.$getBits());
        else {
            $this.$bits.$xor($cc.$getBits());
            $this.$bits.$and($cc.$getBits());
            $this.$alt0 = $this.$alt0 ? 0 : 1;
            $this.$inverted = 1;
        }
    } else {
        $curAlt = $this.$alt0;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$5__init_($this, $curAlt, $nb, $cc);
            else
                $this.$nonBitSet = jur_CharClass$4__init_($this, $curAlt, $nb, $cc);
        } else {
            if ($curAlt && !$this.$inverted && $this.$bits.$isEmpty())
                $this.$nonBitSet = jur_CharClass$1__init_($this, $cc);
            else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$3__init_($this, $curAlt, $cc);
            else
                $this.$nonBitSet = jur_CharClass$2__init_($this, $curAlt, $cc);
            $this.$hideBits = 1;
        }
    }
    return $this;
}
function jur_CharClass_add1($this, $i, $end) {
    if ($i > $end)
        $rt_throw(jl_IllegalArgumentException__init_0());
    a: {
        if (!$this.$ci && !($end >= 55296 && $i <= 57343)) {
            if ($this.$inverted)
                $this.$bits.$clear8($i, $end + 1 | 0);
            else
                $this.$bits.$set4($i, $end + 1 | 0);
        } else
            while (true) {
                if ($i >= ($end + 1 | 0))
                    break a;
                $this.$add($i);
                $i = $i + 1 | 0;
            }
    }
    return $this;
}
function jur_CharClass_union($this, $clazz) {
    var $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($clazz.$hasUCI0())
        $this.$hasUCI = 1;
    if (!($this.$altSurrogates ^ $clazz.$altSurrogates)) {
        if (!$this.$altSurrogates)
            $this.$lowHighSurrogates.$or($clazz.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
    } else if ($this.$altSurrogates)
        $this.$lowHighSurrogates.$andNot($clazz.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($clazz.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        $this.$altSurrogates = 1;
    }
    if (!$this.$hideBits && $clazz.$getBits() !== null) {
        if (!($this.$alt0 ^ $clazz.$isNegative())) {
            if (!$this.$alt0)
                $this.$bits.$or($clazz.$getBits());
            else
                $this.$bits.$and($clazz.$getBits());
        } else if ($this.$alt0)
            $this.$bits.$andNot($clazz.$getBits());
        else {
            $this.$bits.$xor($clazz.$getBits());
            $this.$bits.$and($clazz.$getBits());
            $this.$alt0 = 1;
        }
    } else {
        $curAlt = $this.$alt0;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$11__init_($this, $curAlt, $nb, $clazz);
            else
                $this.$nonBitSet = jur_CharClass$10__init_($this, $curAlt, $nb, $clazz);
        } else {
            if (!$this.$inverted && $this.$bits.$isEmpty()) {
                if (!$curAlt)
                    $this.$nonBitSet = jur_CharClass$7__init_($this, $clazz);
                else
                    $this.$nonBitSet = jur_CharClass$6__init_($this, $clazz);
            } else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$9__init_($this, $clazz, $curAlt);
            else
                $this.$nonBitSet = jur_CharClass$8__init_($this, $clazz, $curAlt);
            $this.$hideBits = 1;
        }
    }
}
function jur_CharClass_intersection($this, $clazz) {
    var $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($clazz.$hasUCI0())
        $this.$hasUCI = 1;
    if (!($this.$altSurrogates ^ $clazz.$altSurrogates)) {
        if (!$this.$altSurrogates)
            $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$or($clazz.$getLowHighSurrogates());
    } else if (!$this.$altSurrogates)
        $this.$lowHighSurrogates.$andNot($clazz.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($clazz.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        $this.$altSurrogates = 0;
    }
    if (!$this.$hideBits && $clazz.$getBits() !== null) {
        if (!($this.$alt0 ^ $clazz.$isNegative())) {
            if (!$this.$alt0)
                $this.$bits.$and($clazz.$getBits());
            else
                $this.$bits.$or($clazz.$getBits());
        } else if (!$this.$alt0)
            $this.$bits.$andNot($clazz.$getBits());
        else {
            $this.$bits.$xor($clazz.$getBits());
            $this.$bits.$and($clazz.$getBits());
            $this.$alt0 = 0;
        }
    } else {
        $curAlt = $this.$alt0;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$17__init_($this, $curAlt, $nb, $clazz);
            else
                $this.$nonBitSet = jur_CharClass$16__init_($this, $curAlt, $nb, $clazz);
        } else {
            if (!$this.$inverted && $this.$bits.$isEmpty()) {
                if (!$curAlt)
                    $this.$nonBitSet = jur_CharClass$13__init_($this, $clazz);
                else
                    $this.$nonBitSet = jur_CharClass$12__init_($this, $clazz);
            } else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$15__init_($this, $clazz, $curAlt);
            else
                $this.$nonBitSet = jur_CharClass$14__init_($this, $clazz, $curAlt);
            $this.$hideBits = 1;
        }
    }
}
function jur_CharClass_contains($this, $ch) {
    if ($this.$nonBitSet !== null)
        return $this.$alt0 ^ $this.$nonBitSet.$contains($ch);
    return $this.$alt0 ^ $this.$bits.$get30($ch);
}
function jur_CharClass_getBits($this) {
    if (!$this.$hideBits)
        return $this.$bits;
    return null;
}
function jur_CharClass_getLowHighSurrogates($this) {
    return $this.$lowHighSurrogates;
}
function jur_CharClass_getInstance($this) {
    var $bs, $res;
    if ($this.$nonBitSet !== null)
        return $this;
    $bs = $this.$getBits();
    $res = jur_CharClass$18__init_($this, $bs);
    return $res.$setNegative($this.$isNegative());
}
function jur_CharClass_toString($this) {
    var $temp, $i;
    $temp = jl_StringBuilder__init_();
    $i = $this.$bits.$nextSetBit(0);
    while ($i >= 0) {
        $temp.$append14(jl_Character_toChars($i));
        $temp.$append0(124);
        $i = $this.$bits.$nextSetBit($i + 1 | 0);
    }
    if ($temp.$length() > 0)
        $temp.$deleteCharAt($temp.$length() - 1 | 0);
    return $temp.$toString();
}
function jur_CharClass_hasUCI($this) {
    return $this.$hasUCI;
}
function it_Fx$_clinit_$lambda$_32_19() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_19__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_19();
    it_Fx$_clinit_$lambda$_32_19__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_19__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_19_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_19_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_19_get0(var$0, var$1) {
    it_Fx_lambda$static$27(var$1);
}
function jn_BufferUnderflowException() {
    jl_RuntimeException.call(this);
}
function jn_BufferUnderflowException__init_() {
    var var_0 = new jn_BufferUnderflowException();
    jn_BufferUnderflowException__init_0(var_0);
    return var_0;
}
function jn_BufferUnderflowException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function iaagg_HdpiMode() {
    jl_Enum.call(this);
}
var iaagg_HdpiMode_Logical = null;
var iaagg_HdpiMode_Pixels = null;
var iaagg_HdpiMode_$VALUES = null;
function iaagg_HdpiMode_$callClinit() {
    iaagg_HdpiMode_$callClinit = $rt_eraseClinit(iaagg_HdpiMode);
    iaagg_HdpiMode__clinit_();
}
function iaagg_HdpiMode__init_(var_0, var_1) {
    var var_2 = new iaagg_HdpiMode();
    iaagg_HdpiMode__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaagg_HdpiMode_values() {
    iaagg_HdpiMode_$callClinit();
    return iaagg_HdpiMode_$VALUES.$clone();
}
function iaagg_HdpiMode__init_0($this, var$1, var$2) {
    iaagg_HdpiMode_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaagg_HdpiMode__clinit_() {
    var var$1, var$2;
    iaagg_HdpiMode_Logical = iaagg_HdpiMode__init_($rt_s(518), 0);
    iaagg_HdpiMode_Pixels = iaagg_HdpiMode__init_($rt_s(519), 1);
    var$1 = $rt_createArray(iaagg_HdpiMode, 2);
    var$2 = var$1.data;
    var$2[0] = iaagg_HdpiMode_Logical;
    var$2[1] = iaagg_HdpiMode_Pixels;
    iaagg_HdpiMode_$VALUES = var$1;
}
function iaagg_Fill() {
    jl_Object.call(this);
}
var iaagg_Fill_vertices = null;
var iaagg_Fill_circleRegion = null;
function iaagg_Fill_$callClinit() {
    iaagg_Fill_$callClinit = $rt_eraseClinit(iaagg_Fill);
    iaagg_Fill__clinit_();
}
function iaagg_Fill_quad($x1, $y1, $x2, $y2, $x3, $y3, $x4, $y4) {
    var $color;
    iaagg_Fill_$callClinit();
    iaa_Core_$callClinit();
    $color = iaa_Core_batch.$getPackedColor();
    iaagg_Fill_quad0($x1, $y1, $color, $x2, $y2, $color, $x3, $y3, $color, $x4, $y4, $color);
}
function iaagg_Fill_quad0($x1, $y1, $c1, $x2, $y2, $c2, $x3, $y3, $c3, $x4, $y4, $c4) {
    var $region, $mcolor, $u, $v;
    iaagg_Fill_$callClinit();
    iaa_Core_$callClinit();
    $region = iaa_Core_atlas.$white();
    $mcolor = iaa_Core_batch.$getPackedMixColor();
    $u = $region.$getU();
    $v = $region.$getV();
    iaagg_Fill_vertices.data[0] = $x1;
    iaagg_Fill_vertices.data[1] = $y1;
    iaagg_Fill_vertices.data[2] = $c1;
    iaagg_Fill_vertices.data[3] = $u;
    iaagg_Fill_vertices.data[4] = $v;
    iaagg_Fill_vertices.data[5] = $mcolor;
    iaagg_Fill_vertices.data[6] = $x2;
    iaagg_Fill_vertices.data[7] = $y2;
    iaagg_Fill_vertices.data[8] = $c2;
    iaagg_Fill_vertices.data[9] = $u;
    iaagg_Fill_vertices.data[10] = $v;
    iaagg_Fill_vertices.data[11] = $mcolor;
    iaagg_Fill_vertices.data[12] = $x3;
    iaagg_Fill_vertices.data[13] = $y3;
    iaagg_Fill_vertices.data[14] = $c3;
    iaagg_Fill_vertices.data[15] = $u;
    iaagg_Fill_vertices.data[16] = $v;
    iaagg_Fill_vertices.data[17] = $mcolor;
    iaagg_Fill_vertices.data[18] = $x4;
    iaagg_Fill_vertices.data[19] = $y4;
    iaagg_Fill_vertices.data[20] = $c4;
    iaagg_Fill_vertices.data[21] = $u;
    iaagg_Fill_vertices.data[22] = $v;
    iaagg_Fill_vertices.data[23] = $mcolor;
    iaagg_Draw_vert($region.$getTexture(), iaagg_Fill_vertices, 0, iaagg_Fill_vertices.data.length);
}
function iaagg_Fill_circle($x, $y, $radius) {
    var var$4, var$5;
    iaagg_Fill_$callClinit();
    if (!(iaagg_Fill_circleRegion !== null && !iaagg_Fill_circleRegion.$getTexture().$isDisposed())) {
        iaa_Core_$callClinit();
        iaagg_Fill_circleRegion = iaa_Core_atlas.$find($rt_s(311));
    }
    var$4 = iaagg_Fill_circleRegion;
    var$5 = $radius * 2.0;
    iaagg_Draw_rect3(var$4, $x, $y, var$5, var$5);
}
function iaagg_Fill_rect($x, $y, $w, $h) {
    iaagg_Fill_$callClinit();
    iaa_Core_$callClinit();
    iaagg_Draw_rect3(iaa_Core_atlas.$white(), $x, $y, $w, $h);
}
function iaagg_Fill_rect0($x, $y, $w, $h, $rot) {
    iaagg_Fill_$callClinit();
    iaa_Core_$callClinit();
    iaagg_Draw_rect6(iaa_Core_atlas.$white(), $x, $y, $w, $h, $rot);
}
function iaagg_Fill_crect($x, $y, $w, $h) {
    iaagg_Fill_$callClinit();
    iaa_Core_$callClinit();
    iaagg_Draw_rect3(iaa_Core_atlas.$white(), $x + $w / 2.0, $y + $h / 2.0, $w, $h);
}
function iaagg_Fill_square($x, $y, $radius) {
    var var$4;
    iaagg_Fill_$callClinit();
    var$4 = $radius * 2.0;
    iaagg_Fill_rect($x, $y, var$4, var$4);
}
function iaagg_Fill__clinit_() {
    iaagg_Fill_vertices = $rt_createFloatArray(24);
}
function iaac_ObjectIntMap$Entries() {
    iaac_ObjectIntMap$MapIterator.call(this);
}
function iaaa_AssetLoaderParameters() {
    jl_Object.call(this);
}
function iaaa_AssetLoaderParameters__init_() {
    var var_0 = new iaaa_AssetLoaderParameters();
    iaaa_AssetLoaderParameters__init_0(var_0);
    return var_0;
}
function iaaa_AssetLoaderParameters__init_0($this) {
    jl_Object__init_0($this);
}
function iaac_ObjectIntMap() {
    var a = this; jl_Object.call(a);
    a.$size6 = 0;
    a.$keyTable1 = null;
    a.$valueTable0 = null;
    a.$capacity3 = 0;
    a.$stashSize1 = 0;
    a.$loadFactor1 = 0.0;
    a.$hashShift0 = 0;
    a.$mask0 = 0;
    a.$threshold1 = 0;
    a.$stashCapacity0 = 0;
    a.$pushIterations0 = 0;
}
function iaac_ObjectIntMap__init_() {
    var var_0 = new iaac_ObjectIntMap();
    iaac_ObjectIntMap__init_0(var_0);
    return var_0;
}
function iaac_ObjectIntMap__init_1(var_0, var_1) {
    var var_2 = new iaac_ObjectIntMap();
    iaac_ObjectIntMap__init_2(var_2, var_0, var_1);
    return var_2;
}
function iaac_ObjectIntMap__init_0($this) {
    iaac_ObjectIntMap__init_2($this, 51, 0.800000011920929);
}
function iaac_ObjectIntMap__init_2($this, $initialCapacity, $loadFactor) {
    var var$3;
    jl_Object__init_0($this);
    if ($initialCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(280)).$append3($initialCapacity).$toString()));
    var$3 = iaam_Mathf_nextPowerOfTwo(jl_Math_ceil($initialCapacity / $loadFactor) | 0);
    if (var$3 > 1073741824)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(281)).$append3(var$3).$toString()));
    $this.$capacity3 = var$3;
    if ($loadFactor <= 0.0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(282)).$append13($loadFactor).$toString()));
    $this.$loadFactor1 = $loadFactor;
    $this.$threshold1 = $this.$capacity3 * $loadFactor | 0;
    $this.$mask0 = $this.$capacity3 - 1 | 0;
    $this.$hashShift0 = 31 - jl_Integer_numberOfTrailingZeros($this.$capacity3) | 0;
    $this.$stashCapacity0 = jl_Math_max1(3, (jl_Math_ceil(jl_Math_log($this.$capacity3)) | 0) * 2 | 0);
    $this.$pushIterations0 = jl_Math_max1(jl_Math_min1($this.$capacity3, 8), (jl_Math_sqrt($this.$capacity3) | 0) / 8 | 0);
    $this.$keyTable1 = $rt_createArray(jl_Object, $this.$capacity3 + $this.$stashCapacity0 | 0);
    $this.$valueTable0 = $rt_createIntArray($this.$keyTable1.data.length);
}
function iaac_ObjectIntMap_put($this, $key, $value) {
    var $keyTable, var$4, $hashCode, $index1, $key1, $index2, $key2, $index3, $key3, $i, $n, var$14;
    if ($key === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(283)));
    $keyTable = $this.$keyTable1;
    var$4 = $keyTable.data;
    $hashCode = $key.$hashCode();
    $index1 = $hashCode & $this.$mask0;
    $key1 = var$4[$index1];
    if ($key.$equals($key1)) {
        $this.$valueTable0.data[$index1] = $value;
        return;
    }
    $index2 = iaac_ObjectIntMap_hash2($this, $hashCode);
    $key2 = var$4[$index2];
    if ($key.$equals($key2)) {
        $this.$valueTable0.data[$index2] = $value;
        return;
    }
    $index3 = iaac_ObjectIntMap_hash3($this, $hashCode);
    $key3 = var$4[$index3];
    if ($key.$equals($key3)) {
        $this.$valueTable0.data[$index3] = $value;
        return;
    }
    $i = $this.$capacity3;
    $n = $i + $this.$stashSize1 | 0;
    while (true) {
        if ($i >= $n) {
            if ($key1 === null) {
                var$4[$index1] = $key;
                $this.$valueTable0.data[$index1] = $value;
                var$14 = $this.$size6;
                $this.$size6 = var$14 + 1 | 0;
                if (var$14 >= $this.$threshold1)
                    iaac_ObjectIntMap_resize($this, $this.$capacity3 << 1);
                return;
            }
            if ($key2 === null) {
                var$4[$index2] = $key;
                $this.$valueTable0.data[$index2] = $value;
                var$14 = $this.$size6;
                $this.$size6 = var$14 + 1 | 0;
                if (var$14 >= $this.$threshold1)
                    iaac_ObjectIntMap_resize($this, $this.$capacity3 << 1);
                return;
            }
            if ($key3 !== null) {
                iaac_ObjectIntMap_push($this, $key, $value, $index1, $key1, $index2, $key2, $index3, $key3);
                return;
            }
            var$4[$index3] = $key;
            $this.$valueTable0.data[$index3] = $value;
            var$14 = $this.$size6;
            $this.$size6 = var$14 + 1 | 0;
            if (var$14 >= $this.$threshold1)
                iaac_ObjectIntMap_resize($this, $this.$capacity3 << 1);
            return;
        }
        if ($key.$equals(var$4[$i]))
            break;
        $i = $i + 1 | 0;
    }
    $this.$valueTable0.data[$i] = $value;
}
function iaac_ObjectIntMap_putResize($this, $key, $value) {
    var $hashCode, $index1, $key1, var$6, $index2, $key2, $index3, $key3;
    $hashCode = $key.$hashCode();
    $index1 = $hashCode & $this.$mask0;
    $key1 = $this.$keyTable1.data[$index1];
    if ($key1 === null) {
        $this.$keyTable1.data[$index1] = $key;
        $this.$valueTable0.data[$index1] = $value;
        var$6 = $this.$size6;
        $this.$size6 = var$6 + 1 | 0;
        if (var$6 >= $this.$threshold1)
            iaac_ObjectIntMap_resize($this, $this.$capacity3 << 1);
        return;
    }
    $index2 = iaac_ObjectIntMap_hash2($this, $hashCode);
    $key2 = $this.$keyTable1.data[$index2];
    if ($key2 === null) {
        $this.$keyTable1.data[$index2] = $key;
        $this.$valueTable0.data[$index2] = $value;
        var$6 = $this.$size6;
        $this.$size6 = var$6 + 1 | 0;
        if (var$6 >= $this.$threshold1)
            iaac_ObjectIntMap_resize($this, $this.$capacity3 << 1);
        return;
    }
    $index3 = iaac_ObjectIntMap_hash3($this, $hashCode);
    $key3 = $this.$keyTable1.data[$index3];
    if ($key3 !== null) {
        iaac_ObjectIntMap_push($this, $key, $value, $index1, $key1, $index2, $key2, $index3, $key3);
        return;
    }
    $this.$keyTable1.data[$index3] = $key;
    $this.$valueTable0.data[$index3] = $value;
    var$6 = $this.$size6;
    $this.$size6 = var$6 + 1 | 0;
    if (var$6 >= $this.$threshold1)
        iaac_ObjectIntMap_resize($this, $this.$capacity3 << 1);
}
function iaac_ObjectIntMap_push($this, $insertKey, $insertValue, $index1, $key1, $index2, $key2, $index3, $key3) {
    var $keyTable, $valueTable, $mask, $i, $pushIterations, var$14, var$15, $evictedValue, $hashCode, var$18, var$19, var$20;
    $keyTable = $this.$keyTable1;
    $valueTable = $this.$valueTable0;
    $mask = $this.$mask0;
    $i = 0;
    $pushIterations = $this.$pushIterations0;
    while (true) {
        a: {
            switch (iaam_Mathf_random(2)) {
                case 0:
                    break;
                case 1:
                    var$14 = $valueTable.data;
                    var$15 = $keyTable.data;
                    $evictedValue = var$14[$index2];
                    var$15[$index2] = $insertKey;
                    var$14[$index2] = $insertValue;
                    $key1 = $key2;
                    break a;
                default:
                    var$14 = $valueTable.data;
                    var$15 = $keyTable.data;
                    $evictedValue = var$14[$index3];
                    var$15[$index3] = $insertKey;
                    var$14[$index3] = $insertValue;
                    $key1 = $key3;
                    break a;
            }
            var$14 = $valueTable.data;
            var$15 = $keyTable.data;
            $evictedValue = var$14[$index1];
            var$15[$index1] = $insertKey;
            var$14[$index1] = $insertValue;
        }
        var$15 = $keyTable.data;
        $hashCode = $key1.$hashCode();
        $index1 = $hashCode & $mask;
        var$18 = var$15[$index1];
        if (var$18 === null) {
            var$14 = $valueTable.data;
            var$15[$index1] = $key1;
            var$14[$index1] = $evictedValue;
            var$19 = $this.$size6;
            $this.$size6 = var$19 + 1 | 0;
            if (var$19 >= $this.$threshold1)
                iaac_ObjectIntMap_resize($this, $this.$capacity3 << 1);
            return;
        }
        $index2 = iaac_ObjectIntMap_hash2($this, $hashCode);
        $key2 = var$15[$index2];
        if ($key2 === null) {
            var$14 = $valueTable.data;
            var$15[$index2] = $key1;
            var$14[$index2] = $evictedValue;
            var$19 = $this.$size6;
            $this.$size6 = var$19 + 1 | 0;
            if (var$19 >= $this.$threshold1)
                iaac_ObjectIntMap_resize($this, $this.$capacity3 << 1);
            return;
        }
        $index3 = iaac_ObjectIntMap_hash3($this, $hashCode);
        $key3 = var$15[$index3];
        if ($key3 === null) {
            var$14 = $valueTable.data;
            var$15[$index3] = $key1;
            var$14[$index3] = $evictedValue;
            var$20 = $this.$size6;
            $this.$size6 = var$20 + 1 | 0;
            if (var$20 >= $this.$threshold1)
                iaac_ObjectIntMap_resize($this, $this.$capacity3 << 1);
            return;
        }
        $i = $i + 1 | 0;
        if ($i == $pushIterations)
            break;
        $insertKey = $key1;
        $key1 = var$18;
        $insertValue = $evictedValue;
    }
    iaac_ObjectIntMap_putStash($this, $key1, $evictedValue);
}
function iaac_ObjectIntMap_putStash($this, $key, $value) {
    var $index;
    if ($this.$stashSize1 == $this.$stashCapacity0) {
        iaac_ObjectIntMap_resize($this, $this.$capacity3 << 1);
        iaac_ObjectIntMap_putResize($this, $key, $value);
        return;
    }
    $index = $this.$capacity3 + $this.$stashSize1 | 0;
    $this.$keyTable1.data[$index] = $key;
    $this.$valueTable0.data[$index] = $value;
    $this.$stashSize1 = $this.$stashSize1 + 1 | 0;
    $this.$size6 = $this.$size6 + 1 | 0;
}
function iaac_ObjectIntMap_get($this, $key, $defaultValue) {
    var $hashCode, $index;
    $hashCode = $key.$hashCode();
    $index = $hashCode & $this.$mask0;
    if (!$key.$equals($this.$keyTable1.data[$index])) {
        $index = iaac_ObjectIntMap_hash2($this, $hashCode);
        if (!$key.$equals($this.$keyTable1.data[$index])) {
            $index = iaac_ObjectIntMap_hash3($this, $hashCode);
            if (!$key.$equals($this.$keyTable1.data[$index]))
                return iaac_ObjectIntMap_getStash($this, $key, $defaultValue);
        }
    }
    return $this.$valueTable0.data[$index];
}
function iaac_ObjectIntMap_getStash($this, $key, $defaultValue) {
    var $keyTable, $i, $n;
    $keyTable = $this.$keyTable1;
    $i = $this.$capacity3;
    $n = $i + $this.$stashSize1 | 0;
    while ($i < $n) {
        if ($key.$equals($keyTable.data[$i]))
            return $this.$valueTable0.data[$i];
        $i = $i + 1 | 0;
    }
    return $defaultValue;
}
function iaac_ObjectIntMap_resize($this, $newSize) {
    var $oldEndIndex, var$3, $oldKeyTable, $oldValueTable, $oldSize, $i, $key;
    a: {
        $oldEndIndex = $this.$capacity3 + $this.$stashSize1 | 0;
        $this.$capacity3 = $newSize;
        $this.$threshold1 = $newSize * $this.$loadFactor1 | 0;
        $this.$mask0 = $newSize - 1 | 0;
        $this.$hashShift0 = 31 - jl_Integer_numberOfTrailingZeros($newSize) | 0;
        var$3 = $newSize;
        $this.$stashCapacity0 = jl_Math_max1(3, (jl_Math_ceil(jl_Math_log(var$3)) | 0) * 2 | 0);
        $this.$pushIterations0 = jl_Math_max1(jl_Math_min1($newSize, 8), (jl_Math_sqrt(var$3) | 0) / 8 | 0);
        $oldKeyTable = $this.$keyTable1;
        $oldValueTable = $this.$valueTable0;
        $this.$keyTable1 = $rt_createArray(jl_Object, $newSize + $this.$stashCapacity0 | 0);
        $this.$valueTable0 = $rt_createIntArray($newSize + $this.$stashCapacity0 | 0);
        $oldSize = $this.$size6;
        $this.$size6 = 0;
        $this.$stashSize1 = 0;
        if ($oldSize > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldEndIndex)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key !== null)
                    iaac_ObjectIntMap_putResize($this, $key, $oldValueTable.data[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
}
function iaac_ObjectIntMap_hash2($this, $h) {
    var var$2;
    var$2 = $rt_imul($h, (-1262997959));
    return (var$2 ^ var$2 >>> $this.$hashShift0) & $this.$mask0;
}
function iaac_ObjectIntMap_hash3($this, $h) {
    var var$2;
    var$2 = $rt_imul($h, (-825114047));
    return (var$2 ^ var$2 >>> $this.$hashShift0) & $this.$mask0;
}
function jn_FloatBufferOverByteBufferLittleEndian() {
    jn_FloatBufferOverByteBuffer.call(this);
}
function jn_FloatBufferOverByteBufferLittleEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_FloatBufferOverByteBufferLittleEndian();
    jn_FloatBufferOverByteBufferLittleEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_FloatBufferOverByteBufferLittleEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_FloatBufferOverByteBuffer__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_FloatBufferOverByteBufferLittleEndian_duplicate($this, $start, $capacity, $position, $limit, $readOnly) {
    return jn_FloatBufferOverByteBufferLittleEndian__init_($this.$start2 + ($start * 4 | 0) | 0, $capacity, $this.$byteByffer0, $position, $limit, $readOnly);
}
function jn_FloatBufferOverByteBufferLittleEndian_getElement($this, $index) {
    var var$2, var$3, var$4, $value;
    var$2 = $this.$byteByffer0.$array.data;
    var$3 = $this.$start2;
    var$4 = $index * 4 | 0;
    $value = (var$2[var$3 + var$4 | 0] & 255) << 24 | ($this.$byteByffer0.$array.data[($this.$start2 + var$4 | 0) + 1 | 0] & 255) << 16 | ($this.$byteByffer0.$array.data[($this.$start2 + var$4 | 0) + 2 | 0] & 255) << 8 | $this.$byteByffer0.$array.data[($this.$start2 + var$4 | 0) + 3 | 0] & 255;
    return $rt_intBitsToFloat($value);
}
function jn_FloatBufferOverByteBufferLittleEndian_putElement($this, $index, $f) {
    var $value, var$4, var$5, var$6;
    $value = $rt_floatToIntBits($f);
    var$4 = $this.$byteByffer0.$array.data;
    var$5 = $this.$start2;
    var$6 = $index * 4 | 0;
    var$4[var$5 + var$6 | 0] = $value >> 24 << 24 >> 24;
    $this.$byteByffer0.$array.data[($this.$start2 + var$6 | 0) + 1 | 0] = $value >> 16 << 24 >> 24;
    $this.$byteByffer0.$array.data[($this.$start2 + var$6 | 0) + 2 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer0.$array.data[($this.$start2 + var$6 | 0) + 3 | 0] = $value << 24 >> 24;
}
function it_Fx$_clinit_$lambda$_32_20() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_20__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_20();
    it_Fx$_clinit_$lambda$_32_20__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_20__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_20_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_20_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_20_get0(var$0, var$1) {
    it_Fx_lambda$static$28(var$1);
}
function it_Fx$_clinit_$lambda$_32_21() {
    jl_Object.call(this);
}
function it_Fx$_clinit_$lambda$_32_21__init_() {
    var var_0 = new it_Fx$_clinit_$lambda$_32_21();
    it_Fx$_clinit_$lambda$_32_21__init_0(var_0);
    return var_0;
}
function it_Fx$_clinit_$lambda$_32_21__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Fx$_clinit_$lambda$_32_21_get(var$0, var$1) {
    it_Fx$_clinit_$lambda$_32_21_get0(var$0, var$1);
}
function it_Fx$_clinit_$lambda$_32_21_get0(var$0, var$1) {
    it_Fx_lambda$static$29(var$1);
}
function ji_IOException() {
    jl_Exception.call(this);
}
function ji_IOException__init_1() {
    var var_0 = new ji_IOException();
    ji_IOException__init_2(var_0);
    return var_0;
}
function ji_IOException__init_(var_0) {
    var var_1 = new ji_IOException();
    ji_IOException__init_3(var_1, var_0);
    return var_1;
}
function ji_IOException__init_0(var_0) {
    var var_1 = new ji_IOException();
    ji_IOException__init_4(var_1, var_0);
    return var_1;
}
function ji_IOException__init_2($this) {
    jl_Exception__init_0($this);
}
function ji_IOException__init_3($this, $message) {
    jl_Exception__init_4($this, $message);
}
function ji_IOException__init_4($this, $cause) {
    jl_Exception__init_6($this, $cause);
}
function jnc_CharacterCodingException() {
    ji_IOException.call(this);
}
function jnc_CharacterCodingException__init_() {
    var var_0 = new jnc_CharacterCodingException();
    jnc_CharacterCodingException__init_0(var_0);
    return var_0;
}
function jnc_CharacterCodingException__init_0($this) {
    ji_IOException__init_2($this);
}
function jnc_MalformedInputException() {
    jnc_CharacterCodingException.call(this);
    this.$length2 = 0;
}
function jnc_MalformedInputException__init_(var_0) {
    var var_1 = new jnc_MalformedInputException();
    jnc_MalformedInputException__init_0(var_1, var_0);
    return var_1;
}
function jnc_MalformedInputException__init_0($this, $length) {
    jnc_CharacterCodingException__init_0($this);
    $this.$length2 = $length;
}
function jnc_MalformedInputException_getMessage($this) {
    return jl_StringBuilder__init_().$append($rt_s(520)).$append3($this.$length2).$toString();
}
function iaas_Scene$setKeyboardFocus$lambda$_43_0() {
    jl_Object.call(this);
}
function iaas_Scene$setKeyboardFocus$lambda$_43_0__init_() {
    var var_0 = new iaas_Scene$setKeyboardFocus$lambda$_43_0();
    iaas_Scene$setKeyboardFocus$lambda$_43_0__init_0(var_0);
    return var_0;
}
function iaas_Scene$setKeyboardFocus$lambda$_43_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaas_Scene$setKeyboardFocus$lambda$_43_0_get(var$0) {
    return iaas_Scene$setKeyboardFocus$lambda$_43_0_get0(var$0);
}
function iaas_Scene$setKeyboardFocus$lambda$_43_0_get0(var$0) {
    return iaase_FocusListener$FocusEvent__init_();
}
function iaau_ScreenRecorder() {
    jl_Object.call(this);
}
var iaau_ScreenRecorder_record = null;
function iaau_ScreenRecorder_$callClinit() {
    iaau_ScreenRecorder_$callClinit = $rt_eraseClinit(iaau_ScreenRecorder);
    iaau_ScreenRecorder__clinit_();
}
function iaau_ScreenRecorder_record0() {
    iaau_ScreenRecorder_$callClinit();
    if (iaau_ScreenRecorder_record === null)
        return;
    iaau_ScreenRecorder_record.$run();
}
function iaau_ScreenRecorder_lambda$static$0($r, $recorder, $args) {
    var $$je;
    iaau_ScreenRecorder_$callClinit();
    a: {
        try {
            $r.$invoke($recorder, $args);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
            } else {
                throw $$e;
            }
        }
    }
}
function iaau_ScreenRecorder__clinit_() {
    var $recorderClass, $recorder, var$3, $method, var$5, $r, $args, $$je;
    a: {
        try {
            $recorderClass = $rt_cls(iaar_GifRecorder);
            jl_Class_initialize($recorderClass);
            $recorder = $recorderClass.$getConstructor($rt_createArray(jl_Class, 0)).$newInstance0($rt_createArray(jl_Object, 0));
            var$3 = $rt_createArray(jl_Class, 1);
            var$3.data[0] = $rt_cls(iaaf_Fi);
            $method = $recorderClass.$getMethod($rt_s(521), var$3);
            var$3 = $rt_createArray(jl_Object, 1);
            var$5 = var$3.data;
            iaa_Core_$callClinit();
            var$5[0] = iaa_Core_files.$local($rt_s(522));
            $method.$invoke($recorder, var$3);
            $r = $recorderClass.$getMethod($rt_s(523), $rt_createArray(jl_Class, 0));
            $args = $rt_createArray(jl_Object, 0);
            iaau_ScreenRecorder_record = iaau_ScreenRecorder$_clinit_$lambda$_3_0__init_($r, $recorder, $args);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
            } else {
                throw $$e;
            }
        }
    }
}
function iaam_MapObject() {
    var a = this; jl_Object.call(a);
    a.$name9 = null;
    a.$opacity0 = 0.0;
    a.$visible2 = 0;
    a.$properties1 = null;
    a.$color7 = null;
}
function iaam_MapObject__init_() {
    var var_0 = new iaam_MapObject();
    iaam_MapObject__init_0(var_0);
    return var_0;
}
function iaam_MapObject__init_0($this) {
    jl_Object__init_0($this);
    $this.$name9 = $rt_s(58);
    $this.$opacity0 = 1.0;
    $this.$visible2 = 1;
    $this.$properties1 = iaam_MapProperties__init_();
    iaag_Color_$callClinit();
    $this.$color7 = iaag_Color_white.$cpy();
}
function iaamo_TextureMapObject() {
    var a = this; iaam_MapObject.call(a);
    a.$x4 = 0.0;
    a.$y4 = 0.0;
    a.$originX0 = 0.0;
    a.$originY0 = 0.0;
    a.$scaleX0 = 0.0;
    a.$scaleY0 = 0.0;
    a.$rotation0 = 0.0;
    a.$textureRegion = null;
}
function iaamo_TextureMapObject__init_() {
    var var_0 = new iaamo_TextureMapObject();
    iaamo_TextureMapObject__init_0(var_0);
    return var_0;
}
function iaamo_TextureMapObject__init_0($this) {
    iaam_MapObject__init_0($this);
    $this.$x4 = 0.0;
    $this.$y4 = 0.0;
    $this.$originX0 = 0.0;
    $this.$originY0 = 0.0;
    $this.$scaleX0 = 1.0;
    $this.$scaleY0 = 1.0;
    $this.$rotation0 = 0.0;
}
function iaamo_TileMapObject() {
    var a = this; iaamo_TextureMapObject.call(a);
    a.$flipHorizontally0 = 0;
    a.$flipVertically0 = 0;
    a.$tile1 = null;
}
function iaamo_TileMapObject__init_(var_0, var_1, var_2) {
    var var_3 = new iaamo_TileMapObject();
    iaamo_TileMapObject__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaamo_TileMapObject__init_0($this, $tile, $flipHorizontally, $flipVertically) {
    var $textureRegion;
    iaamo_TextureMapObject__init_0($this);
    $this.$flipHorizontally0 = $flipHorizontally;
    $this.$flipVertically0 = $flipVertically;
    $this.$tile1 = $tile;
    $textureRegion = iaagg_TextureRegion__init_0($tile.$region0);
    $textureRegion.$flip4($flipHorizontally, $flipVertically);
    $this.$textureRegion = $textureRegion;
}
function ig_Effects$Effect() {
    var a = this; jl_Object.call(a);
    a.$id3 = 0;
    a.$draw4 = null;
    a.$lifetime = 0.0;
    a.$size7 = 0.0;
}
var ig_Effects$Effect_lastid = 0;
function ig_Effects$Effect_$callClinit() {
    ig_Effects$Effect_$callClinit = $rt_eraseClinit(ig_Effects$Effect);
    ig_Effects$Effect__clinit_();
}
function ig_Effects$Effect__init_(var_0, var_1, var_2) {
    var var_3 = new ig_Effects$Effect();
    ig_Effects$Effect__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function ig_Effects$Effect__init_1(var_0, var_1) {
    var var_2 = new ig_Effects$Effect();
    ig_Effects$Effect__init_2(var_2, var_0, var_1);
    return var_2;
}
function ig_Effects$Effect__init_0($this, $life, $clipsize, $draw) {
    var var$4;
    ig_Effects$Effect_$callClinit();
    jl_Object__init_0($this);
    var$4 = ig_Effects$Effect_lastid;
    ig_Effects$Effect_lastid = var$4 + 1 | 0;
    $this.$id3 = var$4;
    $this.$lifetime = $life;
    $this.$draw4 = $draw;
    $this.$size7 = $clipsize;
}
function ig_Effects$Effect__init_2($this, $life, $draw) {
    ig_Effects$Effect_$callClinit();
    ig_Effects$Effect__init_0($this, $life, 28.0, $draw);
}
function ig_Effects$Effect_at($this, $x, $y) {
    ig_Effects_effect($this, $x, $y);
}
function ig_Effects$Effect_at0($this, $x, $y, $color) {
    ig_Effects_effect0($this, $color, $x, $y, 0.0);
}
function ig_Effects$Effect_at1($this, $x, $y, $rotation) {
    ig_Effects_effect1($this, $x, $y, $rotation);
}
function ig_Effects$Effect_at2($this, $x, $y, $data) {
    ig_Effects_effect2($this, $x, $y, 0.0, $data);
}
function ig_Effects$Effect_at3($this, $x, $y, $rotation, $color) {
    ig_Effects_effect0($this, $color, $x, $y, $rotation);
}
function ig_Effects$Effect__clinit_() {
    ig_Effects$Effect_lastid = 0;
}
function jl_CloneNotSupportedException() {
    jl_Exception.call(this);
}
function jl_CloneNotSupportedException__init_() {
    var var_0 = new jl_CloneNotSupportedException();
    jl_CloneNotSupportedException__init_0(var_0);
    return var_0;
}
function jl_CloneNotSupportedException__init_0($this) {
    jl_Exception__init_0($this);
}
function jn_ShortBufferImpl() {
    jn_ShortBuffer.call(this);
}
function jn_ShortBufferImpl__init_(var_0, var_1, var_2) {
    var var_3 = new jn_ShortBufferImpl();
    jn_ShortBufferImpl__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jn_ShortBufferImpl__init_0($this, $capacity, $position, $limit) {
    jn_ShortBuffer__init_0($this, $capacity, $position, $limit);
}
function jn_ShortBufferImpl_duplicate($this) {
    return $this.$duplicate0(0, $this.$capacity, $this.$position0, $this.$limit1, $this.$isReadOnly());
}
function jn_ShortBufferImpl_isReadOnly($this) {
    return $this.$readOnly();
}
function jn_ShortBufferOverByteBuffer() {
    var a = this; jn_ShortBufferImpl.call(a);
    a.$byteByffer1 = null;
    a.$readOnly3 = 0;
    a.$start5 = 0;
}
function jn_ShortBufferOverByteBuffer__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_ShortBufferOverByteBuffer();
    jn_ShortBufferOverByteBuffer__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_ShortBufferOverByteBuffer__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_ShortBufferImpl__init_0($this, $capacity, $position, $limit);
    $this.$start5 = $start;
    $this.$byteByffer1 = $byteBuffer;
    $this.$readOnly3 = $readOnly;
}
function jn_ShortBufferOverByteBuffer_isArrayPresent($this) {
    return 0;
}
function jn_ShortBufferOverByteBuffer_getArray($this) {
    $rt_throw(jl_UnsupportedOperationException__init_());
}
function jn_ShortBufferOverByteBuffer_readOnly($this) {
    return $this.$readOnly3;
}
function iaaus_Base64Coder() {
    jl_Object.call(this);
}
var iaaus_Base64Coder_regularMap = null;
var iaaus_Base64Coder_urlsafeMap = null;
function iaaus_Base64Coder_$callClinit() {
    iaaus_Base64Coder_$callClinit = $rt_eraseClinit(iaaus_Base64Coder);
    iaaus_Base64Coder__clinit_();
}
function iaaus_Base64Coder_decode($s) {
    iaaus_Base64Coder_$callClinit();
    return iaaus_Base64Coder_decode0($s.$toCharArray());
}
function iaaus_Base64Coder_decode0($in) {
    iaaus_Base64Coder_$callClinit();
    return iaaus_Base64Coder_decode1($in, 0, $in.data.length, iaaus_Base64Coder_regularMap.$decodingMap);
}
function iaaus_Base64Coder_decode1($in, $iOff, $iLen, $inverseCharMap) {
    var $oLen, $out, $iEnd, $op, var$9, var$10, $i0, $i1, $i2, $i3, $b0, $b1, $b2, $b3, $o0, $o1, $o2, var$22;
    iaaus_Base64Coder_$callClinit();
    if ($iLen % 4 | 0)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(524)));
    while ($iLen > 0 && $in.data[($iOff + $iLen | 0) - 1 | 0] == 61) {
        $iLen = $iLen + (-1) | 0;
    }
    $oLen = ($iLen * 3 | 0) / 4 | 0;
    $out = $rt_createByteArray($oLen);
    $iEnd = $iOff + $iLen | 0;
    $op = 0;
    a: {
        b: {
            while ($iOff < $iEnd) {
                var$9 = $in.data;
                var$10 = $iOff + 1 | 0;
                $i0 = var$9[$iOff];
                $iOff = var$10 + 1 | 0;
                $i1 = var$9[var$10];
                if ($iOff >= $iEnd)
                    $i2 = 65;
                else {
                    var$10 = $iOff + 1 | 0;
                    $i2 = var$9[$iOff];
                    $iOff = var$10;
                }
                if ($iOff >= $iEnd)
                    $i3 = 65;
                else {
                    var$10 = $iOff + 1 | 0;
                    $i3 = var$9[$iOff];
                    $iOff = var$10;
                }
                if ($i0 > 127)
                    break a;
                if ($i1 > 127)
                    break a;
                if ($i2 > 127)
                    break a;
                if ($i3 > 127)
                    break a;
                var$9 = $inverseCharMap.data;
                $b0 = var$9[$i0];
                $b1 = var$9[$i1];
                $b2 = var$9[$i2];
                $b3 = var$9[$i3];
                if ($b0 < 0)
                    break b;
                if ($b1 < 0)
                    break b;
                if ($b2 < 0)
                    break b;
                if ($b3 < 0)
                    break b;
                var$9 = $out.data;
                $o0 = $b0 << 2 | $b1 >>> 4;
                $o1 = ($b1 & 15) << 4 | $b2 >>> 2;
                $o2 = ($b2 & 3) << 6 | $b3;
                var$10 = $op + 1 | 0;
                var$9[$op] = $o0 << 24 >> 24;
                if (var$10 >= $oLen)
                    var$22 = var$10;
                else {
                    var$22 = var$10 + 1 | 0;
                    var$9[var$10] = $o1 << 24 >> 24;
                }
                if (var$22 >= $oLen)
                    $op = var$22;
                else {
                    $op = var$22 + 1 | 0;
                    var$9[var$22] = $o2 << 24 >> 24;
                }
            }
            return $out;
        }
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(525)));
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(525)));
}
function iaaus_Base64Coder__clinit_() {
    iaaus_Base64Coder_regularMap = iaaus_Base64Coder$CharMap__init_(43, 47);
    iaaus_Base64Coder_urlsafeMap = iaaus_Base64Coder$CharMap__init_(45, 95);
}
function iaabt_TeaFileLoader$QueuedTaskExecutor() {
    var a = this; jl_Object.call(a);
    a.$tasks = null;
    a.$handler0 = null;
}
function iaabt_TeaFileLoader$QueuedTaskExecutor__init_(var_0, var_1) {
    var var_2 = new iaabt_TeaFileLoader$QueuedTaskExecutor();
    iaabt_TeaFileLoader$QueuedTaskExecutor__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaabt_TeaFileLoader$QueuedTaskExecutor__init_0($this, $tasks, $handler) {
    jl_Object__init_0($this);
    $this.$tasks = $tasks;
    $this.$handler0 = $handler;
}
function iaabt_TeaFileLoader$QueuedTaskExecutor_complete($this) {
    var $next;
    $next = $this.$tasks.$poll();
    if ($next !== null)
        $next.$run1($this);
    else
        $this.$handler0.$complete0();
}
function iaabt_TeaFileLoader$QueuedTaskExecutor_error($this) {
    $this.$handler0.$error0();
}
function it_Bullets$9$lambda$hit$8$lambda$_6_0() {
    var a = this; jl_Object.call(a);
    a.$_033 = null;
    a.$_120 = 0.0;
}
function it_Bullets$9$lambda$hit$8$lambda$_6_0__init_(var_0, var_1) {
    var var_2 = new it_Bullets$9$lambda$hit$8$lambda$_6_0();
    it_Bullets$9$lambda$hit$8$lambda$_6_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Bullets$9$lambda$hit$8$lambda$_6_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_033 = var$1;
    var$0.$_120 = var$2;
}
function it_Bullets$9$lambda$hit$8$lambda$_6_0_get(var$0, var$1) {
    it_Bullets$9_lambda$null$7(var$0.$_033, var$0.$_120, var$1);
}
function jur_AbstractCharClass$LazyNonDigit() {
    jur_AbstractCharClass$LazyDigit.call(this);
}
function jur_AbstractCharClass$LazyNonDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyNonDigit();
    jur_AbstractCharClass$LazyNonDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonDigit__init_0($this) {
    jur_AbstractCharClass$LazyDigit__init_0($this);
}
function jur_AbstractCharClass$LazyNonDigit_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyDigit_computeValue($this).$setNegative(1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function it_Fx$lambda$static$20$lambda$_11_0() {
    jl_Object.call(this);
    this.$_034 = null;
}
function it_Fx$lambda$static$20$lambda$_11_0__init_(var_0) {
    var var_1 = new it_Fx$lambda$static$20$lambda$_11_0();
    it_Fx$lambda$static$20$lambda$_11_0__init_0(var_1, var_0);
    return var_1;
}
function it_Fx$lambda$static$20$lambda$_11_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_034 = var$1;
}
function it_Fx$lambda$static$20$lambda$_11_0_get(var$0, var$1, var$2) {
    it_Fx_lambda$null$19(var$0.$_034, var$1, var$2);
}
function jur_CIBackReferenceSet() {
    var a = this; jur_JointSet.call(a);
    a.$referencedGroup = 0;
    a.$consCounter0 = 0;
}
function jur_CIBackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_CIBackReferenceSet();
    jur_CIBackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CIBackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    jur_JointSet__init_0($this);
    $this.$referencedGroup = $groupIndex;
    $this.$consCounter0 = $consCounter;
}
function jur_CIBackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $group, $i, var$6, var$7;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $i = 0;
        while (true) {
            if ($i >= $group.$length()) {
                $matchResult.$setConsumed($this.$consCounter0, $group.$length());
                return $this.$next.$matches($stringIndex + $group.$length() | 0, $testString, $matchResult);
            }
            var$6 = $group.$charAt($i);
            var$7 = $stringIndex + $i | 0;
            if (var$6 != $testString.$charAt(var$7) && jur_Pattern_getSupplement($group.$charAt($i)) != $testString.$charAt(var$7))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
}
function jur_CIBackReferenceSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_CIBackReferenceSet_getString($this, $matchResult) {
    var $res;
    $res = $matchResult.$getGroupNoCheck($this.$referencedGroup);
    return $res;
}
function jur_CIBackReferenceSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(526)).$append3($this.$groupIndex0).$toString();
}
function jur_CIBackReferenceSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter0) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter0, (-1));
    return $res;
}
function jur_AbstractCharClass$1() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS = null;
    a.$this$06 = null;
}
function jur_AbstractCharClass$1__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$1();
    jur_AbstractCharClass$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$1__init_0($this, $this$0, var$2) {
    $this.$this$06 = $this$0;
    $this.$val$lHS = var$2;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$1_contains($this, $ch) {
    var $index, var$3, var$4;
    $index = $ch - 55296 | 0;
    if ($index >= 0 && $index < 2048) {
        var$3 = $this.$altSurrogates;
        var$4 = $this.$val$lHS;
        var$3 = var$3 ^ var$4.$get30($index);
    } else
        var$3 = 0;
    return var$3;
}
function jur_AbstractCharClass$2() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS0 = null;
    a.$val$thisClass = null;
    a.$this$07 = null;
}
function jur_AbstractCharClass$2__init_(var_0, var_1, var_2) {
    var var_3 = new jur_AbstractCharClass$2();
    jur_AbstractCharClass$2__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AbstractCharClass$2__init_0($this, $this$0, var$2, var$3) {
    $this.$this$07 = $this$0;
    $this.$val$lHS0 = var$2;
    $this.$val$thisClass = var$3;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$2_contains($this, $ch) {
    var $index, var$3, var$4, $containslHS;
    $index = $ch - 55296 | 0;
    if ($index >= 0 && $index < 2048) {
        var$3 = $this.$altSurrogates;
        var$4 = $this.$val$lHS0;
        $containslHS = var$3 ^ var$4.$get30($index);
    } else
        $containslHS = 0;
    return $this.$val$thisClass.$contains($ch) && !$containslHS ? 1 : 0;
}
function iaag_VertexAttributes() {
    var a = this; jl_Object.call(a);
    a.$vertexSize = 0;
    a.$attributes0 = null;
    a.$mask1 = Long_ZERO;
}
function iaag_VertexAttributes__init_(var_0) {
    var var_1 = new iaag_VertexAttributes();
    iaag_VertexAttributes__init_0(var_1, var_0);
    return var_1;
}
function iaag_VertexAttributes__init_0($this, $attributes) {
    var var$2, var$3, $list;
    var$2 = $attributes.data;
    jl_Object__init_0($this);
    $this.$mask1 = Long_fromInt(-1);
    var$3 = var$2.length;
    if (!var$3)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(527)));
    $list = $rt_createArray(iaag_VertexAttribute, var$3);
    if (var$3 >= 0)
        jl_System_arraycopy($attributes, 0, $list, 0, var$3);
    $this.$attributes0 = $list;
    $this.$vertexSize = iaag_VertexAttributes_calculateOffsets($this);
}
function iaag_VertexAttributes_calculateOffsets($this) {
    var $count, $i, $attribute;
    $count = 0;
    $i = 0;
    while ($i < $this.$attributes0.data.length) {
        $attribute = $this.$attributes0.data[$i];
        $attribute.$offset = $count;
        $count = $count + iaag_VertexAttribute_getSizeInBytes($attribute) | 0;
        $i = $i + 1 | 0;
    }
    return $count;
}
function iaag_VertexAttributes_size($this) {
    return $this.$attributes0.data.length;
}
function iaag_VertexAttributes_get($this, $index) {
    return $this.$attributes0.data[$index];
}
function otcjl_TCloneable() {
}
function jur_PossessiveCompositeQuantifierSet() {
    jur_CompositeQuantifierSet.call(this);
}
function jur_PossessiveCompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_PossessiveCompositeQuantifierSet();
    jur_PossessiveCompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_PossessiveCompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
    jur_CompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type);
}
function jur_PossessiveCompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $min, $max, $i, $shift;
    $min = $this.$quantifier.$min3();
    $max = $this.$quantifier.$max3();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound())
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            return $this.$next.$matches($stringIndex, $testString, $matchResult);
        }
        if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function it_Phases$5$lambda$null$10$lambda$_12_1() {
    jl_Object.call(this);
}
function it_Phases$5$lambda$null$10$lambda$_12_1__init_() {
    var var_0 = new it_Phases$5$lambda$null$10$lambda$_12_1();
    it_Phases$5$lambda$null$10$lambda$_12_1__init_0(var_0);
    return var_0;
}
function it_Phases$5$lambda$null$10$lambda$_12_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$5$lambda$null$10$lambda$_12_1_run(var$0) {
    it_Phases$5_lambda$null$9();
}
function it_Phases$5$lambda$null$10$lambda$_12_0() {
    jl_Object.call(this);
    this.$_035 = null;
}
function it_Phases$5$lambda$null$10$lambda$_12_0__init_(var_0) {
    var var_1 = new it_Phases$5$lambda$null$10$lambda$_12_0();
    it_Phases$5$lambda$null$10$lambda$_12_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$5$lambda$null$10$lambda$_12_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_035 = var$1;
}
function it_Phases$5$lambda$null$10$lambda$_12_0_get(var$0, var$1) {
    it_Phases$5_lambda$null$8(var$0.$_035, var$1);
}
function otjde_LoadEventTarget() {
}
function iaabt_TeaFileLoader$1() {
    jl_Object.call(this);
    this.$val$listener = null;
}
function iaabt_TeaFileLoader$1__init_(var_0) {
    var var_1 = new iaabt_TeaFileLoader$1();
    iaabt_TeaFileLoader$1__init_0(var_1, var_0);
    return var_1;
}
function iaabt_TeaFileLoader$1__init_0($this, var$1) {
    $this.$val$listener = var$1;
    jl_Object__init_0($this);
}
function iaabt_TeaFileLoader$1_complete($this) {
    $this.$val$listener.$complete0();
}
function iaabt_TeaFileLoader$1_error($this) {
    $this.$val$listener.$error0();
}
function iaamg_Position() {
}
function iaamg_Position_angleTo($this, $other) {
    return iaam_Angles_angle($this.$getX(), $this.$getY(), $other.$getX(), $other.$getY());
}
function iaamg_Position_angleTo0($this, $x, $y) {
    return iaam_Angles_angle($this.$getX(), $this.$getY(), $x, $y);
}
function iaamg_Position_dst($this, $other) {
    return $this.$dst0($other.$getX(), $other.$getY());
}
function iaamg_Position_dst0($this, $x, $y) {
    var $xd, $yd;
    $xd = $this.$getX() - $x;
    $yd = $this.$getY() - $y;
    return iaam_Mathf_sqrt($xd * $xd + $yd * $yd);
}
function iaamg_Position_withinDst($this, $x, $y, $dst) {
    return iaam_Mathf_dst2($this.$getX(), $this.$getY(), $x, $y) >= $dst * $dst ? 0 : 1;
}
function iaa_Graphics() {
    jl_Object.call(this);
}
function iaa_Graphics__init_() {
    var var_0 = new iaa_Graphics();
    iaa_Graphics__init_0(var_0);
    return var_0;
}
function iaa_Graphics__init_0($this) {
    jl_Object__init_0($this);
}
function iaa_Graphics_clear($this, $r, $g, $b, $a) {
    iaa_Core_$callClinit();
    iaa_Core_gl.$glClearColor($r, $g, $b, $a);
    iaa_Core_gl.$glClear(16384);
}
function iaa_Graphics_clear0($this, $color) {
    $this.$clear9($color.$r0, $color.$g, $color.$b, $color.$a);
}
function iaabt_TeaGraphics() {
    var a = this; iaa_Graphics.call(a);
    a.$element0 = null;
    a.$config0 = null;
    a.$context = null;
    a.$frameId = Long_ZERO;
    a.$deltaTime = 0.0;
    a.$lastTimeStamp = Long_ZERO;
    a.$time2 = 0.0;
    a.$frames0 = 0;
    a.$fps = 0;
    a.$gl20 = null;
    a.$glVersion = null;
}
function iaabt_TeaGraphics__init_(var_0, var_1) {
    var var_2 = new iaabt_TeaGraphics();
    iaabt_TeaGraphics__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaabt_TeaGraphics__init_0($this, $element, $config) {
    var $attr, var$4, var$5, var$6, $versionString, $vendorString, $rendererString;
    iaa_Graphics__init_0($this);
    $this.$frameId = Long_fromInt(-1);
    $this.$element0 = $element;
    $this.$config0 = $config;
    $attr = otjw_WebGLContextAttributes_create$js_body$_13();
    var$4 = !!$config.$alphaEnabled;
    $attr.alpha = var$4;
    var$4 = !!$config.$antialiasEnabled;
    $attr.antialias = var$4;
    var$4 = !!$config.$stencilEnabled;
    $attr.stencil = var$4;
    var$4 = !!$config.$premultipliedAlpha;
    $attr.premultipliedAlpha = var$4;
    var$4 = !!$config.$drawingBufferPreserved;
    $attr.preserveDrawingBuffer = var$4;
    $this.$context = $element.getContext("webgl", $attr);
    var$4 = $this.$context;
    var$5 = $element.width;
    var$6 = $element.height;
    var$4.viewport(0, 0, var$5, var$6);
    $this.$gl20 = iaabt_TeaGL20__init_($this.$context);
    $versionString = $this.$gl20.$glGetString(7938);
    $vendorString = $this.$gl20.$glGetString(7936);
    $rendererString = $this.$gl20.$glGetString(7937);
    var$4 = new iaagg_GLVersion;
    iaa_Application$ApplicationType_$callClinit();
    iaagg_GLVersion__init_(var$4, iaa_Application$ApplicationType_WebGL, $versionString, $vendorString, $rendererString);
    $this.$glVersion = var$4;
}
function iaabt_TeaGraphics_getBackBufferWidth($this) {
    return $this.$getWidth0();
}
function iaabt_TeaGraphics_getBackBufferHeight($this) {
    return $this.$getHeight0();
}
function iaabt_TeaGraphics_isGL30Available($this) {
    return 0;
}
function iaabt_TeaGraphics_getGL20($this) {
    return $this.$gl20;
}
function iaabt_TeaGraphics_getWidth($this) {
    return $this.$element0.width;
}
function iaabt_TeaGraphics_getHeight($this) {
    return $this.$element0.height;
}
function iaabt_TeaGraphics_getDeltaTime($this) {
    return $this.$deltaTime;
}
function iaabt_TeaGraphics_getFramesPerSecond($this) {
    return $this.$fps;
}
function iaabt_TeaGraphics_getDensity($this) {
    return 0.0;
}
function iaabt_TeaGraphics_supportsExtension($this, $extension) {
    var $array, $i;
    $array = $this.$context.getSupportedExtensions();
    $i = 0;
    while ($i < $array.length) {
        if (otjc_JSString_stringValue$static($array[$i]).$equals($extension))
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
}
function iaabt_TeaGraphics_requestRendering($this) {
    return;
}
function iaabt_TeaGraphics_update($this) {
    var $currTimeStamp;
    $currTimeStamp = jl_System_currentTimeMillis();
    $this.$deltaTime = Long_toNumber(Long_sub($currTimeStamp, $this.$lastTimeStamp)) / 1000.0;
    $this.$lastTimeStamp = $currTimeStamp;
    $this.$time2 = $this.$time2 + $this.$deltaTime;
    $this.$frames0 = $this.$frames0 + 1 | 0;
    if ($this.$time2 > 1.0) {
        $this.$fps = $this.$frames0;
        $this.$time2 = 0.0;
        $this.$frames0 = 0;
    }
}
function iaam_Mathf() {
    jl_Object.call(this);
}
var iaam_Mathf_signs = null;
var iaam_Mathf_booleans = null;
var iaam_Mathf_sqrt2 = 0.0;
var iaam_Mathf_sqrt3 = 0.0;
var iaam_Mathf_seedr = null;
var iaam_Mathf_random3 = null;
function iaam_Mathf_$callClinit() {
    iaam_Mathf_$callClinit = $rt_eraseClinit(iaam_Mathf);
    iaam_Mathf__clinit_();
}
function iaam_Mathf_sin0($radians) {
    iaam_Mathf_$callClinit();
    iaam_Mathf$Sin_$callClinit();
    return iaam_Mathf$Sin_table.data[($radians * 2607.594482421875 | 0) & 16383];
}
function iaam_Mathf_cos($radians) {
    iaam_Mathf_$callClinit();
    iaam_Mathf$Sin_$callClinit();
    return iaam_Mathf$Sin_table.data[(($radians + 1.5707963705062866) * 2607.594482421875 | 0) & 16383];
}
function iaam_Mathf_sinDeg($degrees) {
    iaam_Mathf_$callClinit();
    iaam_Mathf$Sin_$callClinit();
    return iaam_Mathf$Sin_table.data[($degrees * 45.511112213134766 | 0) & 16383];
}
function iaam_Mathf_cosDeg($degrees) {
    iaam_Mathf_$callClinit();
    iaam_Mathf$Sin_$callClinit();
    return iaam_Mathf$Sin_table.data[(($degrees + 90.0) * 45.511112213134766 | 0) & 16383];
}
function iaam_Mathf_absin($in, $scl, $mag) {
    iaam_Mathf_$callClinit();
    return (iaam_Mathf_sin($in, $scl * 2.0, $mag) + $mag) / 2.0;
}
function iaam_Mathf_sin($radians, $scl, $mag) {
    iaam_Mathf_$callClinit();
    return iaam_Mathf_sin0($radians / $scl) * $mag;
}
function iaam_Mathf_cos0($radians, $scl, $mag) {
    iaam_Mathf_$callClinit();
    return iaam_Mathf_cos($radians / $scl) * $mag;
}
function iaam_Mathf_angle($x, $y) {
    var $result;
    iaam_Mathf_$callClinit();
    $result = iaam_Mathf_atan2($x, $y) * 57.2957763671875;
    if ($result < 0.0)
        $result = $result + 360.0;
    return $result;
}
function iaam_Mathf_atan2($x, $y) {
    var var$3, $z, $atan;
    iaam_Mathf_$callClinit();
    if (jl_Math_abs0($x) < 1.0000000116860974E-7) {
        var$3 = $rt_compare($y, 0.0);
        if (var$3 > 0)
            return 1.5707963705062866;
        if (var$3)
            return (-1.5707963705062866);
        return 0.0;
    }
    $z = $y / $x;
    if (jl_Math_abs0($z) >= 1.0) {
        $atan = 1.5707963705062866 - $z / ($z * $z + 0.2800000011920929);
        if ($y < 0.0)
            $atan = $atan - 3.1415927410125732;
        return $atan;
    }
    $atan = $z / (1.0 + 0.2800000011920929 * $z * $z);
    if ($x >= 0.0)
        return $atan;
    return $atan + ($y >= 0.0 ? 3.1415927410125732 : (-3.1415927410125732));
}
function iaam_Mathf_sqrt($x) {
    iaam_Mathf_$callClinit();
    return jl_Math_sqrt($x);
}
function iaam_Mathf_sign($f) {
    iaam_Mathf_$callClinit();
    return $f >= 0.0 ? 1 : (-1);
}
function iaam_Mathf_sign0($b) {
    iaam_Mathf_$callClinit();
    return !$b ? (-1) : 1;
}
function iaam_Mathf_num($b) {
    iaam_Mathf_$callClinit();
    return !$b ? 0 : 1;
}
function iaam_Mathf_range($range) {
    iaam_Mathf_$callClinit();
    return iaam_Mathf_random0( -$range, $range);
}
function iaam_Mathf_range0($range) {
    iaam_Mathf_$callClinit();
    return iaam_Mathf_random2( -$range, $range);
}
function iaam_Mathf_chance($d) {
    iaam_Mathf_$callClinit();
    return iaam_Mathf_random3.$nextFloat() >= $d ? 0 : 1;
}
function iaam_Mathf_random($range) {
    iaam_Mathf_$callClinit();
    return iaam_Mathf_random3.$nextInt($range + 1 | 0);
}
function iaam_Mathf_random2($start, $end) {
    iaam_Mathf_$callClinit();
    return $start + iaam_Mathf_random3.$nextInt(($end - $start | 0) + 1 | 0) | 0;
}
function iaam_Mathf_random1($range) {
    iaam_Mathf_$callClinit();
    return iaam_Mathf_random3.$nextFloat() * $range;
}
function iaam_Mathf_random0($start, $end) {
    iaam_Mathf_$callClinit();
    return $start + iaam_Mathf_random3.$nextFloat() * ($end - $start);
}
function iaam_Mathf_randomSeed($seed, $min, $max) {
    iaam_Mathf_$callClinit();
    iaam_Mathf_seedr.$setSeed($seed);
    if (iaam_Mathf_isPowerOfTwo($max))
        iaam_Mathf_seedr.$nextInt0();
    return iaam_Mathf_seedr.$nextInt(($max - $min | 0) + 1 | 0) + $min | 0;
}
function iaam_Mathf_randomSeed0($seed) {
    iaam_Mathf_$callClinit();
    iaam_Mathf_seedr.$setSeed(Long_mul($seed, Long_fromInt(99999)));
    return iaam_Mathf_seedr.$nextFloat();
}
function iaam_Mathf_nextPowerOfTwo($value) {
    var var$2, var$3;
    iaam_Mathf_$callClinit();
    if (!$value)
        return 1;
    var$2 = $value + (-1) | 0;
    var$3 = var$2 | var$2 >> 1;
    var$3 = var$3 | var$3 >> 2;
    var$3 = var$3 | var$3 >> 4;
    var$3 = var$3 | var$3 >> 8;
    var$3 = var$3 | var$3 >> 16;
    return var$3 + 1 | 0;
}
function iaam_Mathf_isPowerOfTwo($value) {
    iaam_Mathf_$callClinit();
    return $value && !($value & ($value - 1 | 0)) ? 1 : 0;
}
function iaam_Mathf_clamp1($value, $min, $max) {
    iaam_Mathf_$callClinit();
    if ($value < $min)
        return $min;
    if ($value <= $max)
        return $value;
    return $max;
}
function iaam_Mathf_clamp($value, $min, $max) {
    iaam_Mathf_$callClinit();
    if ($value < $min)
        return $min;
    if ($value <= $max)
        return $value;
    return $max;
}
function iaam_Mathf_clamp0($value) {
    iaam_Mathf_$callClinit();
    return iaam_Mathf_clamp($value, 0.0, 1.0);
}
function iaam_Mathf_lerp($fromValue, $toValue, $progress) {
    iaam_Mathf_$callClinit();
    return $fromValue + ($toValue - $fromValue) * $progress;
}
function iaam_Mathf_lerpDelta($fromValue, $toValue, $progress) {
    iaam_Mathf_$callClinit();
    return iaam_Mathf_lerp($fromValue, $toValue, iaam_Mathf_clamp0($progress * iaau_Time_delta()));
}
function iaam_Mathf_slerp($fromDegrees, $toDegrees, $progress) {
    var $delta;
    iaam_Mathf_$callClinit();
    $delta = ($toDegrees - $fromDegrees + 360.0 + 180.0) % 360.0 - 180.0;
    return ($fromDegrees + $delta * $progress + 360.0) % 360.0;
}
function iaam_Mathf_slerpDelta($fromDegrees, $toDegrees, $progress) {
    iaam_Mathf_$callClinit();
    return iaam_Mathf_slerp($fromDegrees, $toDegrees, iaam_Mathf_clamp0($progress * iaau_Time_delta()));
}
function iaam_Mathf_floor($value) {
    iaam_Mathf_$callClinit();
    return ($value + 16384.0 | 0) - 16384 | 0;
}
function iaam_Mathf_round($value) {
    iaam_Mathf_$callClinit();
    return ($value + 16384.5 | 0) - 16384 | 0;
}
function iaam_Mathf_zero($value) {
    iaam_Mathf_$callClinit();
    return jl_Math_abs0($value) > 9.999999974752427E-7 ? 0 : 1;
}
function iaam_Mathf_equal($a, $b) {
    iaam_Mathf_$callClinit();
    return jl_Math_abs0($a - $b) > 9.999999974752427E-7 ? 0 : 1;
}
function iaam_Mathf_dst($x1, $y1, $x2, $y2) {
    var $x_d, $y_d;
    iaam_Mathf_$callClinit();
    $x_d = $x2 - $x1;
    $y_d = $y2 - $y1;
    return jl_Math_sqrt($x_d * $x_d + $y_d * $y_d);
}
function iaam_Mathf_dst2($x1, $y1, $x2, $y2) {
    var $x_d, $y_d;
    iaam_Mathf_$callClinit();
    $x_d = $x2 - $x1;
    $y_d = $y2 - $y1;
    return $x_d * $x_d + $y_d * $y_d;
}
function iaam_Mathf_within($x1, $y1, $x2, $y2, $dst) {
    iaam_Mathf_$callClinit();
    return iaam_Mathf_dst2($x1, $y1, $x2, $y2) >= $dst * $dst ? 0 : 1;
}
function iaam_Mathf__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(2);
    var$2 = var$1.data;
    var$2[0] = (-1);
    var$2[1] = 1;
    iaam_Mathf_signs = var$1;
    var$1 = $rt_createBooleanArray(2);
    var$2 = var$1.data;
    var$2[0] = 1;
    var$2[1] = 0;
    iaam_Mathf_booleans = var$1;
    iaam_Mathf_sqrt2 = iaam_Mathf_sqrt(2.0);
    iaam_Mathf_sqrt3 = iaam_Mathf_sqrt(3.0);
    iaam_Mathf_seedr = iaam_RandomXS128__init_();
    iaam_Mathf_random3 = iaam_RandomXS128__init_();
}
function otci_Base46() {
    jl_Object.call(this);
}
function otci_Base46_decodeUnsigned($seq) {
    var $number, $pos, var$4, var$5, $digit, $hasMore;
    $number = 0;
    $pos = 1;
    while (true) {
        var$4 = $seq.$characters0.data;
        var$5 = $seq.$pointer1;
        $seq.$pointer1 = var$5 + 1 | 0;
        $digit = otci_Base46_decodeDigit(var$4[var$5]);
        $hasMore = ($digit % 2 | 0) != 1 ? 0 : 1;
        $number = $number + $rt_imul($pos, $digit / 2 | 0) | 0;
        $pos = $pos * 46 | 0;
        if (!$hasMore)
            break;
    }
    return $number;
}
function otci_Base46_decode($seq) {
    var $number, $result;
    $number = otci_Base46_decodeUnsigned($seq);
    $result = $number / 2 | 0;
    if ($number % 2 | 0)
        $result =  -$result;
    return $result;
}
function otci_Base46_decodeDigit($c) {
    if ($c < 34)
        return $c - 32 | 0;
    if ($c >= 92)
        return ($c - 32 | 0) - 2 | 0;
    return ($c - 32 | 0) - 1 | 0;
}
function cbgu_Disposable() {
}
function jur_UCISequenceSet() {
    jur_LeafSet.call(this);
    this.$string1 = null;
}
function jur_UCISequenceSet__init_(var_0) {
    var var_1 = new jur_UCISequenceSet();
    jur_UCISequenceSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCISequenceSet__init_0($this, $substring) {
    var $res, $i;
    jur_LeafSet__init_2($this);
    $res = jl_StringBuilder__init_();
    $i = 0;
    while ($i < $substring.$length()) {
        $res.$append0(jl_Character_toLowerCase(jl_Character_toUpperCase0($substring.$charAt($i))));
        $i = $i + 1 | 0;
    }
    $this.$string1 = $res.$toString();
    $this.$charCount = $res.$length();
}
function jur_UCISequenceSet_accepts($this, $strIndex, $testString) {
    var $i;
    $i = 0;
    while (true) {
        if ($i >= $this.$string1.$length())
            return $this.$string1.$length();
        if ($this.$string1.$charAt($i) != jl_Character_toLowerCase(jl_Character_toUpperCase0($testString.$charAt($strIndex + $i | 0))))
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_UCISequenceSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(528)).$append($this.$string1).$toString();
}
function jur_AbstractCharClass$LazyJavaDefined$1() {
    jur_AbstractCharClass.call(this);
    this.$this$08 = null;
}
function jur_AbstractCharClass$LazyJavaDefined$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaDefined$1();
    jur_AbstractCharClass$LazyJavaDefined$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaDefined$1__init_0($this, $this$0) {
    $this.$this$08 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaDefined$1_contains($this, $ch) {
    return jl_Character_isDefined($ch);
}
function otjt_Int8Array() {
    otjt_ArrayBufferView.call(this);
}
function i_Renderer$update$lambda$_2_2() {
    jl_Object.call(this);
    this.$_036 = null;
}
function i_Renderer$update$lambda$_2_2__init_(var_0) {
    var var_1 = new i_Renderer$update$lambda$_2_2();
    i_Renderer$update$lambda$_2_2__init_0(var_1, var_0);
    return var_1;
}
function i_Renderer$update$lambda$_2_2__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_036 = var$1;
}
function i_Renderer$update$lambda$_2_2_get(var$0, var$1) {
    i_Renderer$update$lambda$_2_2_get0(var$0, var$1);
}
function i_Renderer$update$lambda$_2_2_get0(var$0, var$1) {
    i_Renderer_draw(var$0.$_036, var$1);
}
function i_Renderer$update$lambda$_2_1() {
    jl_Object.call(this);
    this.$_037 = null;
}
function i_Renderer$update$lambda$_2_1__init_(var_0) {
    var var_1 = new i_Renderer$update$lambda$_2_1();
    i_Renderer$update$lambda$_2_1__init_0(var_1, var_0);
    return var_1;
}
function i_Renderer$update$lambda$_2_1__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_037 = var$1;
}
function i_Renderer$update$lambda$_2_1_get(var$0, var$1) {
    i_Renderer$update$lambda$_2_1_get0(var$0, var$1);
}
function i_Renderer$update$lambda$_2_1_get0(var$0, var$1) {
    i_Renderer_draw(var$0.$_037, var$1);
}
function i_Renderer$update$lambda$_2_0() {
    jl_Object.call(this);
    this.$_038 = null;
}
function i_Renderer$update$lambda$_2_0__init_(var_0) {
    var var_1 = new i_Renderer$update$lambda$_2_0();
    i_Renderer$update$lambda$_2_0__init_0(var_1, var_0);
    return var_1;
}
function i_Renderer$update$lambda$_2_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_038 = var$1;
}
function i_Renderer$update$lambda$_2_0_get(var$0, var$1) {
    i_Renderer$update$lambda$_2_0_get0(var$0, var$1);
}
function i_Renderer$update$lambda$_2_0_get0(var$0, var$1) {
    i_Renderer_draw(var$0.$_038, var$1);
}
function iaac_ObjectMap$MapIterator() {
    var a = this; jl_Object.call(a);
    a.$map1 = null;
    a.$hasNext1 = 0;
    a.$nextIndex0 = 0;
    a.$currentIndex0 = 0;
    a.$valid0 = 0;
}
function iaac_ObjectMap$MapIterator__init_(var_0) {
    var var_1 = new iaac_ObjectMap$MapIterator();
    iaac_ObjectMap$MapIterator__init_0(var_1, var_0);
    return var_1;
}
function iaac_ObjectMap$MapIterator__init_0($this, $map) {
    jl_Object__init_0($this);
    $this.$valid0 = 1;
    $this.$map1 = $map;
    $this.$reset();
}
function iaac_ObjectMap$MapIterator_reset($this) {
    $this.$currentIndex0 = (-1);
    $this.$nextIndex0 = (-1);
    $this.$findNextIndex();
}
function iaac_ObjectMap$MapIterator_findNextIndex($this) {
    var $keyTable, $n, var$3;
    $this.$hasNext1 = 0;
    $keyTable = $this.$map1.$keyTable0;
    $n = $this.$map1.$capacity1 + $this.$map1.$stashSize0 | 0;
    a: {
        while (true) {
            var$3 = $this.$nextIndex0 + 1 | 0;
            $this.$nextIndex0 = var$3;
            if (var$3 >= $n)
                break a;
            if ($keyTable.data[$this.$nextIndex0] === null)
                continue;
            else
                break;
        }
        $this.$hasNext1 = 1;
    }
}
function iaac_ObjectMap$Values() {
    iaac_ObjectMap$MapIterator.call(this);
}
function jur_CompositeRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$withoutSurrogates = null;
    a.$withSurrogates = null;
}
function jur_CompositeRangeSet__init_(var_0, var_1) {
    var var_2 = new jur_CompositeRangeSet();
    jur_CompositeRangeSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CompositeRangeSet__init_0($this, $withoutSurrogates, $withSurrogates) {
    jur_JointSet__init_0($this);
    $this.$withoutSurrogates = $withoutSurrogates;
    $this.$withSurrogates = $withSurrogates;
}
function jur_CompositeRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$withoutSurrogates.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = $this.$withSurrogates.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return (-1);
}
function jur_CompositeRangeSet_setNext($this, $next) {
    $this.$next = $next;
    $this.$withSurrogates.$setNext($next);
    $this.$withoutSurrogates.$setNext($next);
}
function jur_CompositeRangeSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(529)).$append1($this.$withoutSurrogates).$append($rt_s(530)).$append1($this.$withSurrogates).$toString();
}
function jur_CompositeRangeSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_CompositeRangeSet_first($this, $set) {
    return 1;
}
function it_Fx$lambda$static$26$lambda$_5_0() {
    jl_Object.call(this);
    this.$_039 = null;
}
function it_Fx$lambda$static$26$lambda$_5_0__init_(var_0) {
    var var_1 = new it_Fx$lambda$static$26$lambda$_5_0();
    it_Fx$lambda$static$26$lambda$_5_0__init_0(var_1, var_0);
    return var_1;
}
function it_Fx$lambda$static$26$lambda$_5_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_039 = var$1;
}
function it_Fx$lambda$static$26$lambda$_5_0_get(var$0, var$1, var$2) {
    it_Fx_lambda$null$25(var$0.$_039, var$1, var$2);
}
function ju_Map$Entry() {
}
function ju_MapEntry() {
    var a = this; jl_Object.call(a);
    a.$key0 = null;
    a.$value2 = null;
}
function ju_MapEntry__init_(var_0, var_1) {
    var var_2 = new ju_MapEntry();
    ju_MapEntry__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_MapEntry__init_0($this, $theKey, $theValue) {
    jl_Object__init_0($this);
    $this.$key0 = $theKey;
    $this.$value2 = $theValue;
}
function ju_Hashtable$Entry() {
    var a = this; ju_MapEntry.call(a);
    a.$next1 = null;
    a.$hashcode = 0;
}
function ju_Hashtable$Entry__init_(var_0, var_1) {
    var var_2 = new ju_Hashtable$Entry();
    ju_Hashtable$Entry__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_Hashtable$Entry__init_0($this, $theKey, $theValue) {
    ju_MapEntry__init_0($this, $theKey, $theValue);
    $this.$hashcode = $theKey.$hashCode();
}
function ju_Hashtable$Entry_getKeyHash($this) {
    return $this.$key0.$hashCode();
}
function ju_Hashtable$Entry_equalsKey($this, $aKey, $hash) {
    return $this.$hashcode == $aKey.$hashCode() && $this.$key0.$equals($aKey) ? 1 : 0;
}
function iaabt_TeaApplication$startArc$lambda$_2_1() {
    jl_Object.call(this);
    this.$_040 = null;
}
function iaabt_TeaApplication$startArc$lambda$_2_1__init_(var_0) {
    var var_1 = new iaabt_TeaApplication$startArc$lambda$_2_1();
    iaabt_TeaApplication$startArc$lambda$_2_1__init_0(var_1, var_0);
    return var_1;
}
function iaabt_TeaApplication$startArc$lambda$_2_1__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_040 = var$1;
}
function iaabt_TeaApplication$startArc$lambda$_2_1_get(var$0, var$1) {
    iaabt_TeaApplication$startArc$lambda$_2_1_get0(var$0, var$1);
}
function iaabt_TeaApplication$startArc$lambda$_2_1_get0(var$0, var$1) {
    iaabt_TeaApplication_lambda$startArc$0(var$0.$_040, var$1);
}
function iaabt_TeaApplication$startArc$lambda$_2_0() {
    jl_Object.call(this);
}
function iaabt_TeaApplication$startArc$lambda$_2_0__init_() {
    var var_0 = new iaabt_TeaApplication$startArc$lambda$_2_0();
    iaabt_TeaApplication$startArc$lambda$_2_0__init_0(var_0);
    return var_0;
}
function iaabt_TeaApplication$startArc$lambda$_2_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaabt_TeaApplication$startArc$lambda$_2_0_get(var$0, var$1) {
    iaabt_TeaApplication$startArc$lambda$_2_0_get0(var$0, var$1);
}
function iaabt_TeaApplication$startArc$lambda$_2_0_get0(var$0, var$1) {
    var$1.$init0();
}
function it_Phases$5$lambda$$4$lambda$_18_0() {
    jl_Object.call(this);
}
function it_Phases$5$lambda$$4$lambda$_18_0__init_() {
    var var_0 = new it_Phases$5$lambda$$4$lambda$_18_0();
    it_Phases$5$lambda$$4$lambda$_18_0__init_0(var_0);
    return var_0;
}
function it_Phases$5$lambda$$4$lambda$_18_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$5$lambda$$4$lambda$_18_0_run(var$0) {
    it_Phases$5_lambda$null$3();
}
function iaas_Scene$keyTyped$lambda$_27_0() {
    jl_Object.call(this);
}
function iaas_Scene$keyTyped$lambda$_27_0__init_() {
    var var_0 = new iaas_Scene$keyTyped$lambda$_27_0();
    iaas_Scene$keyTyped$lambda$_27_0__init_0(var_0);
    return var_0;
}
function iaas_Scene$keyTyped$lambda$_27_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaas_Scene$keyTyped$lambda$_27_0_get(var$0) {
    return iaas_Scene$keyTyped$lambda$_27_0_get0(var$0);
}
function iaas_Scene$keyTyped$lambda$_27_0_get0(var$0) {
    return iaase_InputEvent__init_();
}
function iaag_GLTexture() {
    var a = this; jl_Object.call(a);
    a.$glTarget = 0;
    a.$glHandle = 0;
    a.$minFilter = null;
    a.$magFilter = null;
    a.$uWrap = null;
    a.$vWrap = null;
}
function iaag_GLTexture__init_(var_0, var_1) {
    var var_2 = new iaag_GLTexture();
    iaag_GLTexture__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaag_GLTexture__init_0($this, $glTarget, $glHandle) {
    jl_Object__init_0($this);
    iaag_Texture$TextureFilter_$callClinit();
    $this.$minFilter = iaag_Texture$TextureFilter_Nearest;
    $this.$magFilter = iaag_Texture$TextureFilter_Nearest;
    iaag_Texture$TextureWrap_$callClinit();
    $this.$uWrap = iaag_Texture$TextureWrap_ClampToEdge;
    $this.$vWrap = iaag_Texture$TextureWrap_ClampToEdge;
    $this.$glTarget = $glTarget;
    $this.$glHandle = $glHandle;
}
function iaag_GLTexture_uploadImageData($target, $data) {
    iaag_GLTexture_uploadImageData0($target, $data, 0);
}
function iaag_GLTexture_uploadImageData0($target, $data, $miplevel) {
    var $type, $pixmap, $disposePixmap, $tmp, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    if ($data === null)
        return;
    if (!$data.$isPrepared())
        $data.$prepare();
    $type = $data.$getType1();
    iaag_TextureData$TextureDataType_$callClinit();
    if ($type === iaag_TextureData$TextureDataType_Custom) {
        $data.$consumeCustomData($target);
        return;
    }
    $pixmap = $data.$consumePixmap();
    $disposePixmap = $data.$disposePixmap();
    if ($data.$getFormat() === $pixmap.$getFormat())
        $tmp = $pixmap;
    else {
        $tmp = iaag_Pixmap__init_($pixmap.$getWidth0(), $pixmap.$getHeight0(), $data.$getFormat());
        iaag_Pixmap$Blending_$callClinit();
        $tmp.$setBlending0(iaag_Pixmap$Blending_None);
        $tmp.$drawPixmap($pixmap, 0, 0, 0, 0, $pixmap.$getWidth0(), $pixmap.$getHeight0());
        if ($data.$disposePixmap())
            $pixmap.$dispose();
        $disposePixmap = 1;
    }
    iaa_Core_$callClinit();
    iaa_Core_gl.$glPixelStorei(3317, 1);
    if ($data.$useMipMaps())
        iaagg_MipMapGenerator_generateMipMap($target, $tmp, $tmp.$getWidth0(), $tmp.$getHeight0());
    else {
        var$8 = iaa_Core_gl;
        var$9 = $tmp.$getGLInternalFormat();
        var$10 = $tmp.$getWidth0();
        var$11 = $tmp.$getHeight0();
        var$12 = $tmp.$getGLFormat();
        var$13 = $tmp.$getGLType();
        var$14 = $tmp.$getPixels();
        var$8.$glTexImage2D($target, $miplevel, var$9, var$10, var$11, 0, var$12, var$13, var$14);
    }
    if ($disposePixmap)
        $tmp.$dispose();
}
function iaag_GLTexture_bind($this) {
    iaa_Core_$callClinit();
    iaa_Core_gl.$glBindTexture($this.$glTarget, $this.$glHandle);
}
function iaag_GLTexture_bind0($this, $unit) {
    iaa_Core_$callClinit();
    iaa_Core_gl.$glActiveTexture(33984 + $unit | 0);
    iaa_Core_gl.$glBindTexture($this.$glTarget, $this.$glHandle);
}
function iaag_GLTexture_getMinFilter($this) {
    return $this.$minFilter;
}
function iaag_GLTexture_getMagFilter($this) {
    return $this.$magFilter;
}
function iaag_GLTexture_getTextureObjectHandle($this) {
    return $this.$glHandle;
}
function iaag_GLTexture_unsafeSetWrap($this, $u, $v, $force) {
    if ($u !== null && !(!$force && $this.$uWrap === $u)) {
        iaa_Core_$callClinit();
        iaa_Core_gl.$glTexParameteri($this.$glTarget, 10242, iaag_Texture$TextureWrap_getGLEnum($u));
        $this.$uWrap = $u;
    }
    if ($v !== null && !(!$force && $this.$vWrap === $v)) {
        iaa_Core_$callClinit();
        iaa_Core_gl.$glTexParameteri($this.$glTarget, 10243, iaag_Texture$TextureWrap_getGLEnum($v));
        $this.$vWrap = $v;
    }
}
function iaag_GLTexture_setWrap($this, $u, $v) {
    $this.$uWrap = $u;
    $this.$vWrap = $v;
    $this.$bind();
    iaa_Core_$callClinit();
    iaa_Core_gl.$glTexParameteri($this.$glTarget, 10242, iaag_Texture$TextureWrap_getGLEnum($u));
    iaa_Core_gl.$glTexParameteri($this.$glTarget, 10243, iaag_Texture$TextureWrap_getGLEnum($v));
}
function iaag_GLTexture_unsafeSetFilter($this, $minFilter, $magFilter, $force) {
    if ($minFilter !== null && !(!$force && $this.$minFilter === $minFilter)) {
        iaa_Core_$callClinit();
        iaa_Core_gl.$glTexParameteri($this.$glTarget, 10241, iaag_Texture$TextureFilter_getGLEnum($minFilter));
        $this.$minFilter = $minFilter;
    }
    if ($magFilter !== null && !(!$force && $this.$magFilter === $magFilter)) {
        iaa_Core_$callClinit();
        iaa_Core_gl.$glTexParameteri($this.$glTarget, 10240, iaag_Texture$TextureFilter_getGLEnum($magFilter));
        $this.$magFilter = $magFilter;
    }
}
function iaag_GLTexture_setFilter($this, $filter) {
    $this.$setFilter($filter, $filter);
}
function iaag_GLTexture_setFilter0($this, $minFilter, $magFilter) {
    $this.$minFilter = $minFilter;
    $this.$magFilter = $magFilter;
    $this.$bind();
    iaa_Core_$callClinit();
    iaa_Core_gl.$glTexParameteri($this.$glTarget, 10241, iaag_Texture$TextureFilter_getGLEnum($minFilter));
    iaa_Core_gl.$glTexParameteri($this.$glTarget, 10240, iaag_Texture$TextureFilter_getGLEnum($magFilter));
}
function iaag_GLTexture_delete($this) {
    if ($this.$glHandle) {
        iaa_Core_$callClinit();
        iaa_Core_gl.$glDeleteTexture($this.$glHandle);
        $this.$glHandle = 0;
    }
}
function iaag_Texture() {
    iaag_GLTexture.call(this);
    this.$data3 = null;
}
var iaag_Texture_managedTextures = null;
function iaag_Texture_$callClinit() {
    iaag_Texture_$callClinit = $rt_eraseClinit(iaag_Texture);
    iaag_Texture__clinit_();
}
function iaag_Texture__init_(var_0, var_1) {
    var var_2 = new iaag_Texture();
    iaag_Texture__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaag_Texture__init_1(var_0, var_1, var_2) {
    var var_3 = new iaag_Texture();
    iaag_Texture__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaag_Texture__init_3(var_0) {
    var var_1 = new iaag_Texture();
    iaag_Texture__init_4(var_1, var_0);
    return var_1;
}
function iaag_Texture__init_5(var_0, var_1, var_2) {
    var var_3 = new iaag_Texture();
    iaag_Texture__init_6(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaag_Texture__init_0($this, $file, $useMipMaps) {
    iaag_Texture_$callClinit();
    iaag_Texture__init_2($this, $file, null, $useMipMaps);
}
function iaag_Texture__init_2($this, $file, $format, $useMipMaps) {
    iaag_Texture_$callClinit();
    iaag_Texture__init_4($this, iaag_TextureData$Factory_loadFromFile($file, $format, $useMipMaps));
}
function iaag_Texture__init_4($this, $data) {
    iaag_Texture_$callClinit();
    iaa_Core_$callClinit();
    iaag_Texture__init_6($this, 3553, iaa_Core_gl.$glGenTexture(), $data);
}
function iaag_Texture__init_6($this, $glTarget, $glHandle, $data) {
    iaag_Texture_$callClinit();
    iaag_GLTexture__init_0($this, $glTarget, $glHandle);
    $this.$load4($data);
    if ($data.$isManaged()) {
        iaa_Core_$callClinit();
        iaag_Texture_addManagedTexture(iaa_Core_app, $this);
    }
}
function iaag_Texture_addManagedTexture($app, $texture) {
    var $managedTextureArray;
    iaag_Texture_$callClinit();
    $managedTextureArray = iaag_Texture_managedTextures.$get9($app);
    if ($managedTextureArray === null)
        $managedTextureArray = iaac_Array__init_0();
    $managedTextureArray.$add1($texture);
    iaag_Texture_managedTextures.$put($app, $managedTextureArray);
}
function iaag_Texture_load($this, $data) {
    if ($this.$data3 !== null && $data.$isManaged() != $this.$data3.$isManaged())
        $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(531)));
    $this.$data3 = $data;
    if (!$data.$isPrepared())
        $data.$prepare();
    $this.$bind();
    iaag_GLTexture_uploadImageData(3553, $data);
    $this.$unsafeSetFilter($this.$minFilter, $this.$magFilter, 1);
    $this.$unsafeSetWrap($this.$uWrap, $this.$vWrap, 1);
    iaa_Core_$callClinit();
    iaa_Core_gl.$glBindTexture($this.$glTarget, 0);
}
function iaag_Texture_getWidth($this) {
    return $this.$data3.$getWidth0();
}
function iaag_Texture_getHeight($this) {
    return $this.$data3.$getHeight0();
}
function iaag_Texture_dispose($this) {
    var var$1;
    if (!$this.$glHandle)
        return;
    $this.$delete();
    if ($this.$data3.$isManaged()) {
        var$1 = iaag_Texture_managedTextures;
        iaa_Core_$callClinit();
        if (var$1.$get9(iaa_Core_app) !== null)
            iaag_Texture_managedTextures.$get9(iaa_Core_app).$removeValue($this, 1);
    }
}
function iaag_Texture_isDisposed($this) {
    return $this.$glHandle ? 0 : 1;
}
function iaag_Texture_toString($this) {
    if (!($this.$data3 instanceof iaagg_FileTextureData))
        return jl_Object_toString($this);
    return $this.$data3.$toString();
}
function iaag_Texture__clinit_() {
    iaag_Texture_managedTextures = ju_HashMap__init_();
}
function iaagg_GLVersion() {
    var a = this; jl_Object.call(a);
    a.$vendorString = null;
    a.$rendererString = null;
    a.$type4 = null;
    a.$TAG = $rt_s(532);
    a.$majorVersion = 0;
    a.$minorVersion = 0;
    a.$releaseVersion = 0;
}
function iaagg_GLVersion__init_0(var_0, var_1, var_2, var_3) {
    var var_4 = new iaagg_GLVersion();
    iaagg_GLVersion__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaagg_GLVersion__init_($this, $appType, $versionString, $vendorString, $rendererString) {
    var var$5;
    jl_Object__init_0($this);
    $this.$TAG = $rt_s(532);
    iaa_Application$ApplicationType_$callClinit();
    if ($appType === iaa_Application$ApplicationType_Android) {
        iaagg_GLVersion$Type_$callClinit();
        $this.$type4 = iaagg_GLVersion$Type_GLES;
    } else if ($appType === iaa_Application$ApplicationType_iOS) {
        iaagg_GLVersion$Type_$callClinit();
        $this.$type4 = iaagg_GLVersion$Type_GLES;
    } else if ($appType === iaa_Application$ApplicationType_Desktop) {
        iaagg_GLVersion$Type_$callClinit();
        $this.$type4 = iaagg_GLVersion$Type_OpenGL;
    } else if ($appType !== iaa_Application$ApplicationType_WebGL) {
        iaagg_GLVersion$Type_$callClinit();
        $this.$type4 = iaagg_GLVersion$Type_NONE;
    } else {
        iaagg_GLVersion$Type_$callClinit();
        $this.$type4 = iaagg_GLVersion$Type_WebGL;
    }
    var$5 = $this.$type4;
    iaagg_GLVersion$Type_$callClinit();
    if (var$5 === iaagg_GLVersion$Type_GLES)
        iaagg_GLVersion_extractVersion($this, $rt_s(533), $versionString);
    else if ($this.$type4 === iaagg_GLVersion$Type_WebGL)
        iaagg_GLVersion_extractVersion($this, $rt_s(534), $versionString);
    else if ($this.$type4 === iaagg_GLVersion$Type_OpenGL)
        iaagg_GLVersion_extractVersion($this, $rt_s(535), $versionString);
    else {
        $this.$majorVersion = (-1);
        $this.$minorVersion = (-1);
        $this.$releaseVersion = (-1);
        $vendorString = $rt_s(58);
        $rendererString = $rt_s(58);
    }
    $this.$vendorString = $vendorString;
    $this.$rendererString = $rendererString;
}
function iaagg_GLVersion_extractVersion($this, $patternString, $versionString) {
    var $pattern, $matcher, $found, $result, $resultSplit, var$8, var$9;
    $pattern = jur_Pattern_compile($patternString);
    $matcher = jur_Pattern_matcher($pattern, $versionString);
    $found = jur_Matcher_find($matcher);
    if (!$found) {
        iaau_Log_err(jl_StringBuilder__init_().$append($rt_s(536)).$append($versionString).$toString(), $rt_createArray(jl_Object, 0));
        $this.$majorVersion = 2;
        $this.$minorVersion = 0;
        $this.$releaseVersion = 0;
    } else {
        $result = jur_Matcher_group($matcher, 1);
        $resultSplit = $result.$split($rt_s(537));
        var$8 = $resultSplit.data;
        $this.$majorVersion = iaagg_GLVersion_parseInt($this, var$8[0], 2);
        var$9 = var$8.length;
        $this.$minorVersion = var$9 < 2 ? 0 : iaagg_GLVersion_parseInt($this, var$8[1], 0);
        $this.$releaseVersion = var$9 < 3 ? 0 : iaagg_GLVersion_parseInt($this, var$8[2], 0);
    }
}
function iaagg_GLVersion_parseInt($this, $v, $defaultValue) {
    var var$3, $$je;
    a: {
        try {
            var$3 = jl_Integer_parseInt0($v);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NumberFormatException) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    iaau_Log_err(jl_StringBuilder__init_().$append($rt_s(538)).$append($v).$append($rt_s(539)).$append3($defaultValue).$toString(), $rt_createArray(jl_Object, 0));
    return $defaultValue;
}
function jur_FinalSet() {
    jur_FSet.call(this);
}
function jur_FinalSet__init_() {
    var var_0 = new jur_FinalSet();
    jur_FinalSet__init_0(var_0);
    return var_0;
}
function jur_FinalSet__init_0($this) {
    jur_FSet__init_0($this, 0);
}
function jur_FinalSet_matches($this, $stringIndex, $testString, $matchResult) {
    if ($matchResult.$mode2() != 1 && $stringIndex != $matchResult.$getRightBound())
        return (-1);
    $matchResult.$setValid();
    $matchResult.$setEnd(0, $stringIndex);
    return $stringIndex;
}
function jur_FinalSet_getName($this) {
    return $rt_s(540);
}
function it_Phases$2$lambda$null$16$lambda$_8_0() {
    jl_Object.call(this);
}
function it_Phases$2$lambda$null$16$lambda$_8_0__init_() {
    var var_0 = new it_Phases$2$lambda$null$16$lambda$_8_0();
    it_Phases$2$lambda$null$16$lambda$_8_0__init_0(var_0);
    return var_0;
}
function it_Phases$2$lambda$null$16$lambda$_8_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$2$lambda$null$16$lambda$_8_0_run(var$0) {
    it_Phases$2_lambda$null$15();
}
function iaat_Parser$TokenHandler() {
}
function it_Phases$4$_init_$lambda$_0_2() {
    jl_Object.call(this);
}
function it_Phases$4$_init_$lambda$_0_2__init_() {
    var var_0 = new it_Phases$4$_init_$lambda$_0_2();
    it_Phases$4$_init_$lambda$_0_2__init_0(var_0);
    return var_0;
}
function it_Phases$4$_init_$lambda$_0_2__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$4$_init_$lambda$_0_2_run(var$0) {
    it_Phases$4_lambda$$12();
}
function iaat_TokenCategory() {
    jl_Enum.call(this);
}
var iaat_TokenCategory_WAIT = null;
var iaat_TokenCategory_SPEED = null;
var iaat_TokenCategory_COLOR = null;
var iaat_TokenCategory_VARIABLE = null;
var iaat_TokenCategory_EVENT = null;
var iaat_TokenCategory_RESET = null;
var iaat_TokenCategory_SKIP = null;
var iaat_TokenCategory_EFFECT_START = null;
var iaat_TokenCategory_EFFECT_END = null;
var iaat_TokenCategory_$VALUES = null;
function iaat_TokenCategory_$callClinit() {
    iaat_TokenCategory_$callClinit = $rt_eraseClinit(iaat_TokenCategory);
    iaat_TokenCategory__clinit_();
}
function iaat_TokenCategory__init_(var_0, var_1) {
    var var_2 = new iaat_TokenCategory();
    iaat_TokenCategory__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaat_TokenCategory_values() {
    iaat_TokenCategory_$callClinit();
    return iaat_TokenCategory_$VALUES.$clone();
}
function iaat_TokenCategory__init_0($this, var$1, var$2) {
    iaat_TokenCategory_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaat_TokenCategory__clinit_() {
    var var$1, var$2;
    iaat_TokenCategory_WAIT = iaat_TokenCategory__init_($rt_s(541), 0);
    iaat_TokenCategory_SPEED = iaat_TokenCategory__init_($rt_s(542), 1);
    iaat_TokenCategory_COLOR = iaat_TokenCategory__init_($rt_s(543), 2);
    iaat_TokenCategory_VARIABLE = iaat_TokenCategory__init_($rt_s(544), 3);
    iaat_TokenCategory_EVENT = iaat_TokenCategory__init_($rt_s(545), 4);
    iaat_TokenCategory_RESET = iaat_TokenCategory__init_($rt_s(546), 5);
    iaat_TokenCategory_SKIP = iaat_TokenCategory__init_($rt_s(547), 6);
    iaat_TokenCategory_EFFECT_START = iaat_TokenCategory__init_($rt_s(548), 7);
    iaat_TokenCategory_EFFECT_END = iaat_TokenCategory__init_($rt_s(549), 8);
    var$1 = $rt_createArray(iaat_TokenCategory, 9);
    var$2 = var$1.data;
    var$2[0] = iaat_TokenCategory_WAIT;
    var$2[1] = iaat_TokenCategory_SPEED;
    var$2[2] = iaat_TokenCategory_COLOR;
    var$2[3] = iaat_TokenCategory_VARIABLE;
    var$2[4] = iaat_TokenCategory_EVENT;
    var$2[5] = iaat_TokenCategory_RESET;
    var$2[6] = iaat_TokenCategory_SKIP;
    var$2[7] = iaat_TokenCategory_EFFECT_START;
    var$2[8] = iaat_TokenCategory_EFFECT_END;
    iaat_TokenCategory_$VALUES = var$1;
}
function jur_EmptySet() {
    jur_LeafSet.call(this);
}
function jur_EmptySet__init_(var_0) {
    var var_1 = new jur_EmptySet();
    jur_EmptySet__init_0(var_1, var_0);
    return var_1;
}
function jur_EmptySet__init_0($this, $next) {
    jur_LeafSet__init_0($this, $next);
    $this.$charCount = 0;
}
function jur_EmptySet_accepts($this, $stringIndex, $testString) {
    return 0;
}
function jur_EmptySet_find($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $startStr, var$6, $low, $high;
    $strLength = $matchResult.$getRightBound();
    $startStr = $matchResult.$getLeftBound();
    while (true) {
        var$6 = $rt_compare($stringIndex, $strLength);
        if (var$6 > 0)
            return (-1);
        if (var$6 < 0) {
            $low = $testString.$charAt($stringIndex);
            if (jl_Character_isLowSurrogate($low) && $stringIndex > $startStr) {
                $high = $testString.$charAt($stringIndex - 1 | 0);
                if (jl_Character_isHighSurrogate($high)) {
                    $stringIndex = $stringIndex + 1 | 0;
                    continue;
                }
            }
        }
        if ($this.$next.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
}
function jur_EmptySet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    var $strLength, $startStr, $low, $high;
    $strLength = $matchResult.$getRightBound();
    $startStr = $matchResult.$getLeftBound();
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($startSearch < $strLength) {
            $low = $testString.$charAt($startSearch);
            if (jl_Character_isLowSurrogate($low) && $startSearch > $startStr) {
                $high = $testString.$charAt($startSearch - 1 | 0);
                if (jl_Character_isHighSurrogate($high)) {
                    $startSearch = $startSearch + (-1) | 0;
                    continue;
                }
            }
        }
        if ($this.$next.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
}
function jur_EmptySet_getName($this) {
    return $rt_s(550);
}
function jur_EmptySet_hasConsumed($this, $mr) {
    return 0;
}
function it_Phases$4$_init_$lambda$_0_0() {
    jl_Object.call(this);
}
function it_Phases$4$_init_$lambda$_0_0__init_() {
    var var_0 = new it_Phases$4$_init_$lambda$_0_0();
    it_Phases$4$_init_$lambda$_0_0__init_0(var_0);
    return var_0;
}
function it_Phases$4$_init_$lambda$_0_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$4$_init_$lambda$_0_0_run(var$0) {
    it_Phases$4_lambda$$2();
}
function it_Phases$4$_init_$lambda$_0_1() {
    jl_Object.call(this);
}
function it_Phases$4$_init_$lambda$_0_1__init_() {
    var var_0 = new it_Phases$4$_init_$lambda$_0_1();
    it_Phases$4$_init_$lambda$_0_1__init_0(var_0);
    return var_0;
}
function it_Phases$4$_init_$lambda$_0_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$4$_init_$lambda$_0_1_run(var$0) {
    it_Phases$4_lambda$$8();
}
function ju_Enumeration() {
}
function ju_StringTokenizer() {
    var a = this; jl_Object.call(a);
    a.$string2 = null;
    a.$delimiters = null;
    a.$returnDelimiters = 0;
    a.$position8 = 0;
}
function ju_StringTokenizer__init_(var_0, var_1) {
    var var_2 = new ju_StringTokenizer();
    ju_StringTokenizer__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_StringTokenizer__init_1(var_0, var_1, var_2) {
    var var_3 = new ju_StringTokenizer();
    ju_StringTokenizer__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function ju_StringTokenizer__init_0($this, $string, $delimiters) {
    ju_StringTokenizer__init_2($this, $string, $delimiters, 0);
}
function ju_StringTokenizer__init_2($this, $string, $delimiters, $returnDelimiters) {
    jl_Object__init_0($this);
    if ($string === null)
        $rt_throw(jl_NullPointerException__init_());
    $this.$string2 = $string;
    $this.$delimiters = $delimiters;
    $this.$returnDelimiters = $returnDelimiters;
    $this.$position8 = 0;
}
function ju_StringTokenizer_hasMoreElements($this) {
    return $this.$hasMoreTokens();
}
function ju_StringTokenizer_hasMoreTokens($this) {
    var $length, $i;
    if ($this.$delimiters === null)
        $rt_throw(jl_NullPointerException__init_());
    a: {
        $length = $this.$string2.$length();
        if ($this.$position8 < $length) {
            if ($this.$returnDelimiters)
                return 1;
            $i = $this.$position8;
            while (true) {
                if ($i >= $length)
                    break a;
                if ($this.$delimiters.$indexOf1($this.$string2.$charAt($i), 0) == (-1))
                    return 1;
                $i = $i + 1 | 0;
            }
        }
    }
    return 0;
}
function ju_StringTokenizer_nextToken($this) {
    var $i, $length, var$3, var$4, var$5;
    if ($this.$delimiters === null)
        $rt_throw(jl_NullPointerException__init_());
    $i = $this.$position8;
    $length = $this.$string2.$length();
    if ($i < $length) {
        if ($this.$returnDelimiters) {
            if ($this.$delimiters.$indexOf1($this.$string2.$charAt($this.$position8), 0) >= 0) {
                var$3 = $this.$string2;
                var$4 = $this.$position8;
                $this.$position8 = var$4 + 1 | 0;
                return jl_String_valueOf1(var$3.$charAt(var$4));
            }
            $this.$position8 = $this.$position8 + 1 | 0;
            while ($this.$position8 < $length) {
                if ($this.$delimiters.$indexOf1($this.$string2.$charAt($this.$position8), 0) >= 0)
                    return $this.$string2.$substring0($i, $this.$position8);
                $this.$position8 = $this.$position8 + 1 | 0;
            }
            return $this.$string2.$substring($i);
        }
        while (true) {
            var$5 = $rt_compare($i, $length);
            if (var$5 >= 0)
                break;
            if ($this.$delimiters.$indexOf1($this.$string2.$charAt($i), 0) < 0)
                break;
            $i = $i + 1 | 0;
        }
        $this.$position8 = $i;
        if (var$5 < 0) {
            $this.$position8 = $this.$position8 + 1 | 0;
            while ($this.$position8 < $length) {
                if ($this.$delimiters.$indexOf1($this.$string2.$charAt($this.$position8), 0) >= 0)
                    return $this.$string2.$substring0($i, $this.$position8);
                $this.$position8 = $this.$position8 + 1 | 0;
            }
            return $this.$string2.$substring($i);
        }
    }
    $rt_throw(ju_NoSuchElementException__init_0());
}
function jn_FloatBufferOverByteBufferBigEndian() {
    jn_FloatBufferOverByteBuffer.call(this);
}
function jn_FloatBufferOverByteBufferBigEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_FloatBufferOverByteBufferBigEndian();
    jn_FloatBufferOverByteBufferBigEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_FloatBufferOverByteBufferBigEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_FloatBufferOverByteBuffer__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_FloatBufferOverByteBufferBigEndian_duplicate($this, $start, $capacity, $position, $limit, $readOnly) {
    return jn_FloatBufferOverByteBufferBigEndian__init_($this.$start2 + ($start * 4 | 0) | 0, $capacity, $this.$byteByffer0, $position, $limit, $readOnly);
}
function jn_FloatBufferOverByteBufferBigEndian_getElement($this, $index) {
    var var$2, var$3, var$4, $value;
    var$2 = $this.$byteByffer0.$array.data;
    var$3 = $this.$start2;
    var$4 = $index * 4 | 0;
    $value = var$2[var$3 + var$4 | 0] & 255 | ($this.$byteByffer0.$array.data[($this.$start2 + var$4 | 0) + 1 | 0] & 255) << 8 | ($this.$byteByffer0.$array.data[($this.$start2 + var$4 | 0) + 2 | 0] & 255) << 16 | ($this.$byteByffer0.$array.data[($this.$start2 + var$4 | 0) + 3 | 0] & 255) << 24;
    return $rt_intBitsToFloat($value);
}
function jn_FloatBufferOverByteBufferBigEndian_putElement($this, $index, $f) {
    var $value, var$4, var$5, var$6;
    $value = $rt_floatToIntBits($f);
    var$4 = $this.$byteByffer0.$array.data;
    var$5 = $this.$start2;
    var$6 = $index * 4 | 0;
    var$4[var$5 + var$6 | 0] = $value << 24 >> 24;
    $this.$byteByffer0.$array.data[($this.$start2 + var$6 | 0) + 1 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer0.$array.data[($this.$start2 + var$6 | 0) + 2 | 0] = $value >> 16 << 24 >> 24;
    $this.$byteByffer0.$array.data[($this.$start2 + var$6 | 0) + 3 | 0] = $value >> 24 << 24 >> 24;
}
function it_Phases$3$update$lambda$_1_0() {
    jl_Object.call(this);
    this.$_041 = null;
}
function it_Phases$3$update$lambda$_1_0__init_(var_0) {
    var var_1 = new it_Phases$3$update$lambda$_1_0();
    it_Phases$3$update$lambda$_1_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$3$update$lambda$_1_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_041 = var$1;
}
function it_Phases$3$update$lambda$_1_0_run(var$0) {
    it_Phases$3_lambda$update$25(var$0.$_041);
}
function it_Phases$3$update$lambda$_1_1() {
    jl_Object.call(this);
    this.$_042 = null;
}
function it_Phases$3$update$lambda$_1_1__init_(var_0) {
    var var_1 = new it_Phases$3$update$lambda$_1_1();
    it_Phases$3$update$lambda$_1_1__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$3$update$lambda$_1_1__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_042 = var$1;
}
function it_Phases$3$update$lambda$_1_1_run(var$0) {
    it_Phases$3_lambda$update$29(var$0.$_042);
}
function iaaf_Floatf() {
}
function iaaf_Fi() {
    jl_Object.call(this);
}
function iaaf_Fi__init_() {
    var var_0 = new iaaf_Fi();
    iaaf_Fi__init_0(var_0);
    return var_0;
}
function iaaf_Fi__init_0($this) {
    jl_Object__init_0($this);
}
function iaaf_Fi_reader($this, $charset) {
    var var$2, $e, $$je;
    a: {
        try {
            var$2 = ji_InputStreamReader__init_0($this.$read2(), $charset);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_UnsupportedEncodingException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$2;
    }
    $rt_throw(jl_RuntimeException__init_5($e));
}
function iaabt_TeaFi() {
    var a = this; iaaf_Fi.call(a);
    a.$file = null;
    a.$type5 = null;
}
var iaabt_TeaFi_root = null;
function iaabt_TeaFi_$callClinit() {
    iaabt_TeaFi_$callClinit = $rt_eraseClinit(iaabt_TeaFi);
    iaabt_TeaFi__clinit_();
}
function iaabt_TeaFi__init_(var_0, var_1) {
    var var_2 = new iaabt_TeaFi();
    iaabt_TeaFi__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaabt_TeaFi__init_0($this, $fileName, $type) {
    iaabt_TeaFi_$callClinit();
    iaaf_Fi__init_0($this);
    iaa_Files$FileType_$callClinit();
    if ($type !== iaa_Files$FileType_internal && $type !== iaa_Files$FileType_classpath)
        $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(551)).$append1($type).$append($rt_s(552)).$toString()));
    $this.$file = iaabt_TeaFi_fixSlashes($fileName);
    $this.$type5 = $type;
}
function iaabt_TeaFi_path($this) {
    return $this.$file;
}
function iaabt_TeaFi_name($this) {
    var $index;
    $index = $this.$file.$lastIndexOf(47);
    if ($index < 0)
        return $this.$file;
    return $this.$file.$substring($index + 1 | 0);
}
function iaabt_TeaFi_extension($this) {
    var $name, $dotIndex;
    $name = $this.$name3();
    $dotIndex = $name.$lastIndexOf(46);
    if ($dotIndex == (-1))
        return $rt_s(58);
    return $name.$substring($dotIndex + 1 | 0);
}
function iaabt_TeaFi_type($this) {
    return $this.$type5;
}
function iaabt_TeaFi_read($this) {
    var $entry;
    $entry = $this.$entry0();
    if ($entry !== null && $entry.$data0 !== null)
        return ji_ByteArrayInputStream__init_($entry.$data0);
    $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($this.$file).$append($rt_s(553)).$toString()));
}
function iaabt_TeaFi_entry($this) {
    var $entry, var$2, var$3, var$4, $part;
    $entry = iaabt_TeaFi_root;
    var$2 = iaabt_TeaFi_split($this).data;
    var$3 = var$2.length;
    var$4 = 0;
    a: {
        while (var$4 < var$3) {
            $part = var$2[var$4];
            $entry = $entry.$childEntries.$get9($part);
            if ($entry === null)
                break a;
            var$4 = var$4 + 1 | 0;
        }
    }
    return $entry;
}
function iaabt_TeaFi_split($this) {
    var $result, $index, $next;
    $result = ju_ArrayList__init_();
    $index = 0;
    a: {
        while (true) {
            if ($index >= $this.$file.$length())
                break a;
            $next = $this.$file.$indexOf1(47, $index);
            if ($next == (-1))
                break;
            iaabt_TeaFi_addPart($this, $index, $next, $result);
            $index = $next + 1 | 0;
        }
    }
    iaabt_TeaFi_addPart($this, $index, $this.$file.$length(), $result);
    return $result.$toArray($rt_createArray(jl_String, $result.$size0()));
}
function iaabt_TeaFi_addPart($this, $index, $next, $result) {
    var $part;
    $part = $this.$file.$substring0($index, $next);
    if (!$part.$isEmpty() && !$part.$equals($rt_s(554))) {
        if (!$part.$equals($rt_s(441)))
            $result.$add7($part);
        else
            $result.$remove($result.$size0() - 1 | 0);
    }
}
function iaabt_TeaFi_readString($this) {
    return jl_String__init_5($this.$readBytes1());
}
function iaabt_TeaFi_readBytes($this) {
    var $entry;
    $entry = $this.$entry0();
    if ($entry !== null && $entry.$data0 !== null)
        return ju_Arrays_copyOf($entry.$data0, $entry.$data0.data.length);
    $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(555)).$append($this.$file).$toString()));
}
function iaabt_TeaFi_child($this, $name) {
    return iaabt_TeaFi__init_(jl_StringBuilder__init_().$append($this.$file).$append($rt_s(556)).$append(iaabt_TeaFi_fixSlashes($name)).$toString(), $this.$type5);
}
function iaabt_TeaFi_parent($this) {
    var $index;
    $index = $this.$file.$lastIndexOf0(47, !$this.$file.$endsWith($rt_s(556)) ? $this.$file.$length() : $this.$file.$length() - 1 | 0);
    if ($index > 1)
        $this = iaabt_TeaFi__init_($this.$file.$substring0(0, $index), $this.$type5);
    return $this;
}
function iaabt_TeaFi_toString($this) {
    return $this.$file;
}
function iaabt_TeaFi_fixSlashes($path) {
    var var$2;
    iaabt_TeaFi_$callClinit();
    var$2 = $path.$replace0(92, 47);
    if (var$2.$endsWith($rt_s(556)))
        var$2 = var$2.$substring0(0, var$2.$length() - 1 | 0);
    return var$2;
}
function iaabt_TeaFi__clinit_() {
    iaabt_TeaFi_root = iaabt_TeaFi$FSEntry__init_();
}
function jl_NoSuchMethodError() {
    jl_IncompatibleClassChangeError.call(this);
}
function jl_NoSuchMethodError__init_(var_0) {
    var var_1 = new jl_NoSuchMethodError();
    jl_NoSuchMethodError__init_0(var_1, var_0);
    return var_1;
}
function jl_NoSuchMethodError__init_0($this, $message) {
    jl_IncompatibleClassChangeError__init_0($this, $message);
}
function iaag_Camera() {
    var a = this; jl_Object.call(a);
    a.$position6 = null;
    a.$combined = null;
    a.$invProjectionView = null;
    a.$width3 = 0.0;
    a.$height3 = 0.0;
}
var iaag_Camera_tmpVector = null;
function iaag_Camera_$callClinit() {
    iaag_Camera_$callClinit = $rt_eraseClinit(iaag_Camera);
    iaag_Camera__clinit_();
}
function iaag_Camera__init_() {
    var var_0 = new iaag_Camera();
    iaag_Camera__init_0(var_0);
    return var_0;
}
function iaag_Camera__init_0($this) {
    iaag_Camera_$callClinit();
    jl_Object__init_0($this);
    $this.$position6 = iaamg_Vector2__init_0();
    $this.$combined = iaam_Matrix3__init_();
    $this.$invProjectionView = iaam_Matrix3__init_();
}
function iaag_Camera_update($this) {
    $this.$combined.$setOrtho($this.$position6.$x0 - $this.$width3 / 2.0, $this.$position6.$y0 - $this.$height3 / 2.0, $this.$width3, $this.$height3);
    $this.$invProjectionView.$set1($this.$combined).$inv();
}
function iaag_Camera_resize($this, $viewportWidth, $viewportHeight) {
    $this.$width3 = $viewportWidth;
    $this.$height3 = $viewportHeight;
    $this.$update1();
}
function iaag_Camera_projection($this) {
    return $this.$combined;
}
function iaag_Camera_unproject($this, $screenCoords, $viewportX, $viewportY, $viewportWidth, $viewportHeight) {
    var $x, $y, var$8, var$9;
    $x = $screenCoords.$x0;
    $y = $screenCoords.$y0;
    var$8 = $x - $viewportX;
    var$9 = $y - $viewportY;
    $screenCoords.$x0 = 2.0 * var$8 / $viewportWidth - 1.0;
    $screenCoords.$y0 = 2.0 * var$9 / $viewportHeight - 1.0;
    $screenCoords.$mul0($this.$invProjectionView);
    return $screenCoords;
}
function iaag_Camera_unproject0($this, $screenCoords) {
    iaa_Core_$callClinit();
    $this.$unproject0($screenCoords, 0.0, 0.0, iaa_Core_graphics.$getWidth0(), iaa_Core_graphics.$getHeight0());
    return $screenCoords;
}
function iaag_Camera_project($this, $screenX, $screenY) {
    var var$3;
    var$3 = iaag_Camera_tmpVector.$set2($screenX, $screenY);
    iaa_Core_$callClinit();
    $this.$project(var$3, 0.0, 0.0, iaa_Core_graphics.$getWidth0(), iaa_Core_graphics.$getHeight0());
    return iaag_Camera_tmpVector;
}
function iaag_Camera_project0($this, $worldCoords, $viewportX, $viewportY, $viewportWidth, $viewportHeight) {
    $worldCoords.$mul0($this.$combined);
    $worldCoords.$x0 = $viewportWidth * ($worldCoords.$x0 + 1.0) / 2.0 + $viewportX;
    $worldCoords.$y0 = $viewportHeight * ($worldCoords.$y0 + 1.0) / 2.0 + $viewportY;
    return $worldCoords;
}
function iaag_Camera__clinit_() {
    iaag_Camera_tmpVector = iaamg_Vector2__init_0();
}
function it_Phases$5$lambda$null$15$lambda$_7_0() {
    jl_Object.call(this);
    this.$_043 = 0.0;
}
function it_Phases$5$lambda$null$15$lambda$_7_0__init_(var_0) {
    var var_1 = new it_Phases$5$lambda$null$15$lambda$_7_0();
    it_Phases$5$lambda$null$15$lambda$_7_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$5$lambda$null$15$lambda$_7_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_043 = var$1;
}
function it_Phases$5$lambda$null$15$lambda$_7_0_get(var$0, var$1) {
    it_Phases$5_lambda$null$14(var$0.$_043, var$1);
}
function i_Renderer() {
    var a = this; jl_Object.call(a);
    a.$zbatch = null;
    a.$lbatch = null;
    a.$buffer3 = null;
    a.$shadow = null;
    a.$lights = null;
    a.$fogs = null;
    a.$lim = 0.0;
    a.$shakeIntensity = 0.0;
    a.$shaketime = 0.0;
    a.$ambient = null;
    a.$fog = null;
    a.$light2 = null;
    a.$cache = null;
    a.$bloom = null;
}
function i_Renderer__init_() {
    var var_0 = new i_Renderer();
    i_Renderer__init_0(var_0);
    return var_0;
}
function i_Renderer__init_0($this) {
    var var$1;
    jl_Object__init_0($this);
    $this.$buffer3 = iaagg_FrameBuffer__init_(2, 2);
    $this.$shadow = iaagg_FrameBuffer__init_(2, 2);
    $this.$lights = iaagg_FrameBuffer__init_(2, 2);
    $this.$lim = 10.0;
    $this.$ambient = iaag_Color__init_(0.20000000298023224, 0.05999999865889549, 0.019999999552965164, 0.5);
    var$1 = new iaagg_Shader;
    iaa_Core_$callClinit();
    iaagg_Shader__init_0(var$1, iaa_Core_files.$internal($rt_s(557)), iaa_Core_files.$internal($rt_s(558)));
    $this.$fog = var$1;
    $this.$light2 = i_Renderer$1__init_($this, iaa_Core_files.$internal($rt_s(557)), iaa_Core_files.$internal($rt_s(559)));
    iaa_Core_atlas = iaagg_TextureAtlas__init_(iaa_Core_files.$internal($rt_s(560)));
    var$1 = ig_LayerBatch__init_();
    $this.$zbatch = var$1;
    iaa_Core_batch = var$1;
    iaa_Core_camera = iaag_Camera__init_();
    $this.$lbatch = ig_QueueBatch__init_();
    var$1 = $this.$buffer3.$getTexture0();
    iaag_Texture$TextureFilter_$callClinit();
    var$1.$setFilter0(iaag_Texture$TextureFilter_Nearest);
    $this.$bloom = ig_Bloom__init_();
}
function i_Renderer_init($this) {
    $this.$makeShadow();
    $this.$makeFloor();
}
function i_Renderer_update($this) {
    var $target, $px, $py, var$4;
    ig_Drawf_sort(1);
    $target = !i_Inferno_ui.$hasDialogue() ? i_Inferno_player : i_Inferno_ui.$getDialogueFace();
    if ($target !== null) {
        iaa_Core_$callClinit();
        iaa_Core_camera.$position6.$lerpDelta($target.$x2, $target.$y2, $target === i_Inferno_player && i_Inferno_ui.$hasDialogue() ? 0.10000000149011612 : 0.029999999329447746);
    }
    if (!i_Inferno_ui.$hasDialogue()) {
        iaa_Core_$callClinit();
        iaa_Core_camera.$position6.$clamp3(i_Inferno_player.$x2 - $this.$lim, i_Inferno_player.$x2 + $this.$lim, i_Inferno_player.$y2 - $this.$lim, i_Inferno_player.$y2 + $this.$lim);
    }
    $this.$updateShake(1.0);
    iaa_Core_$callClinit();
    $px = iaa_Core_camera.$position6.$x0;
    $py = iaa_Core_camera.$position6.$y0;
    iaa_Core_camera.$position6.$snap();
    if (((iaa_Core_graphics.$getHeight0() / 4 | 0) % 2 | 0) == 1) {
        var$4 = iaa_Core_camera.$position6;
        var$4.$y0 = var$4.$y0 + 0.5;
    }
    iaa_Core_camera.$update1();
    iaa_Core_batch = $this.$lbatch;
    iaagg_Draw_proj(iaa_Core_camera.$projection());
    iaa_Core_batch = $this.$zbatch;
    iaagg_Draw_proj(iaa_Core_camera.$projection());
    var$4 = $this.$shadow;
    iaag_Color_$callClinit();
    var$4.$beginDraw(iaag_Color_clear);
    $this.$drawShadows();
    $this.$shadow.$endDraw();
    $this.$buffer3.$beginDraw(iaag_Color_black);
    $this.$drawWorld();
    i_Inferno_charGroup.$draw6(i_Renderer$update$lambda$_2_0__init_($this));
    i_Inferno_bulletGroup.$draw6(i_Renderer$update$lambda$_2_1__init_($this));
    i_Inferno_effectGroup.$draw6(i_Renderer$update$lambda$_2_2__init_($this));
    ig_Drawf_sort(0);
    iaagg_Draw_shader($this.$fog);
    iaagg_Draw_fbo($this.$fogs.$getTexture0(), i_Inferno_world.$width4(), i_Inferno_world.$height4(), 16);
    iaagg_Draw_shader1();
    $this.$buffer3.$endDraw();
    iaagg_Draw_color0();
    $this.$lights.$beginDraw(iaag_Color_clear);
    var$4 = $this.$lbatch;
    iaag_Blending_$callClinit();
    var$4.$blend(iaag_Blending_additive);
    $this.$lbatch.$flush0();
    $this.$lights.$endDraw();
    $this.$buffer3.$begin();
    iaagg_Draw_color0();
    iaagg_Draw_shader($this.$light2);
    iaagg_Draw_rect3(iaagg_Draw_wrap($this.$lights.$getTexture0()), iaa_Core_camera.$position6.$x0, iaa_Core_camera.$position6.$y0, iaa_Core_camera.$width3,  -iaa_Core_camera.$height3);
    iaagg_Draw_shader1();
    $this.$buffer3.$endDraw();
    $this.$bloom.$capture0();
    iaagg_Draw_color0();
    iaagg_Draw_blend(iaag_Blending_disabled);
    iaagg_Draw_rect3(iaagg_Draw_wrap($this.$buffer3.$getTexture0()), iaa_Core_camera.$position6.$x0, iaa_Core_camera.$position6.$y0, iaa_Core_camera.$width3,  -iaa_Core_camera.$height3);
    iaagg_Draw_blend0();
    $this.$bloom.$render();
    iaa_Core_camera.$position6.$set2($px, $py);
    iaau_ScreenRecorder_record0();
}
function i_Renderer_resize($this, $width, $height) {
    var var$3, var$4, var$5;
    var$3 = $this.$buffer3;
    var$4 = $width / 4 | 0;
    var$5 = $height / 4 | 0;
    var$3.$resize1(var$4, var$5);
    $this.$shadow.$resize1(var$4, var$5);
    $this.$lights.$resize1(var$4, var$5);
    $this.$bloom.$dispose();
    $this.$bloom = ig_Bloom__init_();
    iaa_Core_$callClinit();
    iaa_Core_camera.$resize4(var$4, var$5);
}
function i_Renderer_shake($this, $intensity) {
    $this.$shake($intensity, $intensity);
}
function i_Renderer_shake0($this, $intensity, $duration) {
    $this.$shakeIntensity = jl_Math_max($intensity, $this.$shakeIntensity);
    $this.$shaketime = jl_Math_max($this.$shaketime, $duration);
}
function i_Renderer_jump($this, $angle, $intensity) {
    var var$3;
    iaa_Core_$callClinit();
    var$3 = iaa_Core_camera.$position6;
    iaau_Tmp_$callClinit();
    var$3.$add8(iaau_Tmp_v4.$trns($angle, $intensity));
}
function i_Renderer_updateShake($this, $scale) {
    var var$2, $intensity;
    if ($this.$shaketime <= 0.0)
        $this.$shakeIntensity = 0.0;
    else {
        var$2 = $this.$shakeIntensity;
        iaa_Core_$callClinit();
        $intensity = var$2 * iaa_Core_settings.$getInt($rt_s(561), 4) / 4.0 * $scale;
        iaa_Core_camera.$position6.$add9(iaam_Mathf_range($intensity), iaam_Mathf_range($intensity));
        $this.$shakeIntensity = $this.$shakeIntensity - 0.25 * iaau_Time_delta();
        $this.$shaketime = $this.$shaketime - iaau_Time_delta();
        $this.$shakeIntensity = iaam_Mathf_clamp($this.$shakeIntensity, 0.0, 100.0);
    }
}
function i_Renderer_drawShadows($this) {
    iaagg_Draw_color0();
    $this.$cull(i_Renderer$drawShadows$lambda$_8_0__init_());
    i_Inferno_charGroup.$draw6(i_Renderer$drawShadows$lambda$_8_1__init_());
}
function i_Renderer_drawWorld($this) {
    var var$1;
    iaagg_Draw_color0();
    iaagg_Draw_flush();
    var$1 = $this.$cache;
    iaa_Core_$callClinit();
    var$1.$setProjectionMatrix(iaa_Core_camera.$projection());
    $this.$cache.$begin();
    $this.$cache.$draw7(0);
    $this.$cache.$end();
    ig_Drawf_sort(0);
    $this.$cull(i_Renderer$drawWorld$lambda$_9_0__init_());
    iaagg_Draw_color1(0.0, 0.0, 0.0, 0.30000001192092896);
    iaagg_Draw_rect3(iaagg_Draw_wrap($this.$shadow.$getTexture0()), iaa_Core_camera.$position6.$x0, iaa_Core_camera.$position6.$y0, iaa_Core_camera.$width3,  -iaa_Core_camera.$height3);
    iaagg_Draw_color0();
    ig_Drawf_sort(1);
    $this.$cull(i_Renderer$drawWorld$lambda$_9_1__init_());
}
function i_Renderer_cull($this, $cons) {
    var $xrange, $yrange, $wx, $wy, $x, $y, $cx, $cy;
    iaa_Core_$callClinit();
    $xrange = iaa_Core_camera.$width3 / 16.0 / 2.0 + 3.0 | 0;
    $yrange = iaa_Core_camera.$height3 / 16.0 / 2.0 + 3.0 | 0;
    $wx = iaa_Core_camera.$position6.$x0 / 16.0 | 0;
    $wy = iaa_Core_camera.$position6.$y0 / 16.0 | 0;
    $x =  -$xrange;
    while ($x < $xrange) {
        $y =  -$yrange;
        while ($y < $yrange) {
            $cx = $wx + $x | 0;
            $cy = $wy + $y | 0;
            if (iaau_Structs_inBounds($cx, $cy, i_Inferno_world.$width4(), i_Inferno_world.$height4()))
                $cons.$get36($cx, $cy);
            $y = $y + 1 | 0;
        }
        $x = $x + 1 | 0;
    }
}
function i_Renderer_makeFloor($this) {
    var $batch, $x, $y, $tile, var$5, $object, $tex;
    $this.$cache = iaagg_SpriteCache__init_(($rt_imul(i_Inferno_world.$width4(), i_Inferno_world.$height4()) + (i_Inferno_world.$getObjects().$size * 2 | 0) | 0) + 500 | 0, 0);
    $batch = iaagg_CacheBatch__init_($this.$cache);
    iaa_Core_$callClinit();
    iaa_Core_batch = $batch;
    $batch.$beginCache();
    iaagg_Draw_color0();
    $x = 0;
    while ($x < i_Inferno_world.$width4()) {
        $y = 0;
        while ($y < i_Inferno_world.$height4()) {
            a: {
                $tile = i_Inferno_world.$tile($x, $y);
                if (i_Inferno_world.$solid0($x, $y) && !($tile.$wall !== null && $tile.$wall.$clear0)) {
                    if ($tile.$wall === null)
                        break a;
                    if (!$tile.$wall.$name6.$equals($rt_s(513)))
                        break a;
                }
                if ($tile.$floor0 !== null)
                    iaagg_Draw_rect0($tile.$floor0.$regions0.data[iw_Block_rand($x, $y, $tile.$floor0.$regions0.data.length) - 1 | 0], $x * 16 | 0, $y * 16 | 0, $tile.$rotation2);
            }
            $y = $y + 1 | 0;
        }
        $x = $x + 1 | 0;
    }
    iaagg_Draw_colorl(0.2370000034570694);
    iaagg_Lines_stroke0(2.0);
    $this.$circle((i_Inferno_world.$width4() * 16 | 0) / 2.0, (i_Inferno_world.$height4() * 16 | 0) / 2.0, 290.0);
    $this.$circle((i_Inferno_world.$width4() * 16 | 0) / 2.0, (i_Inferno_world.$height4() * 16 | 0) / 2.0, 370.0);
    $this.$circle((i_Inferno_world.$width4() * 16 | 0) / 2.0, (i_Inferno_world.$height4() * 16 | 0) / 2.0, 450.0);
    iaagg_Draw_color0();
    var$5 = i_Inferno_world.$getObjects().$iterator();
    while (var$5.$hasNext()) {
        $object = var$5.$next0();
        $tex = $object;
        iaagg_Draw_rect($tex.$textureRegion, $tex.$x4 + $tex.$textureRegion.$getWidth0() / 2.0, $tex.$y4 + $tex.$textureRegion.$getHeight0() / 2.0);
    }
    $batch.$endCache();
    iaa_Core_batch = $this.$zbatch;
}
function i_Renderer_updateShadows($this) {
    $this.$makeShadow();
}
function i_Renderer_circle($this, $x, $y, $radius) {
    var $vertices, $step, $i, var$7, $rand, $object, $tex, $w;
    $vertices = $radius * 1.5 | 0;
    $step = 360.0 / $vertices;
    $i = 0;
    while ($i < $vertices) {
        a: {
            iaau_Tmp_$callClinit();
            iaau_Tmp_v1.$trns($i * $step, $radius);
            if (iaaun_Noise_nnoise(iaau_Tmp_v1.$x0 + $x | 0, iaau_Tmp_v1.$y0 + $y | 0, 2.0, 1.0) + iaaun_Noise_nnoise(iaau_Tmp_v1.$x0 + $x | 0, iaau_Tmp_v1.$y0 + $y | 0, 20.0, 1.0) * 2.0 >= (-0.04)) {
                var$7 = i_Inferno_world.$getObjects().$iterator();
                while (true) {
                    if (!var$7.$hasNext()) {
                        $rand = iaaun_Noise_nnoise(iaau_Tmp_v1.$x0 | 0,  -(iaau_Tmp_v1.$y0 | 0), 20.0, 5.0);
                        iaau_Tmp_v2.$trns(($i + 1 | 0) * $step, $radius);
                        iaau_Tmp_v1.$add9(iaam_Mathf_range($rand), iaam_Mathf_range($rand));
                        iaau_Tmp_v2.$add9(iaam_Mathf_range($rand), iaam_Mathf_range($rand));
                        iaagg_Lines_line($x + iaau_Tmp_v1.$x0, $y + iaau_Tmp_v1.$y0, $x + iaau_Tmp_v2.$x0, $y + iaau_Tmp_v2.$y0);
                        break a;
                    }
                    $object = var$7.$next0();
                    $tex = $object;
                    $w = $tex.$textureRegion.$getWidth0() / 2.0 - 4.0;
                    if (iaau_Tmp_v1.$dst20($tex.$x4 + $tex.$textureRegion.$getWidth0() / 2.0 - $x, $tex.$y4 + $tex.$textureRegion.$getHeight0() / 2.0 - $y) < $w * $w)
                        break;
                }
            }
        }
        $i = $i + 1 | 0;
    }
}
function i_Renderer_makeShadow($this) {
    var var$1, $dark, $writeBuffer, $darkIterations, $x, $y, $tile, $i, $min, var$10, var$11, $point, $newX, $newY, var$15, var$16;
    if ($this.$fogs === null)
        $this.$fogs = iaagg_FrameBuffer__init_(i_Inferno_world.$width4(), i_Inferno_world.$height4());
    var$1 = i_Inferno_world.$width4();
    $dark = $rt_createByteMultiArray([i_Inferno_world.$height4(), var$1]);
    var$1 = i_Inferno_world.$width4();
    $writeBuffer = $rt_createByteMultiArray([i_Inferno_world.$height4(), var$1]);
    $darkIterations = 1;
    $x = 0;
    while ($x < i_Inferno_world.$width4()) {
        $y = 0;
        while ($y < i_Inferno_world.$height4()) {
            $tile = i_Inferno_world.$tile($x, $y);
            if ($tile.$solid1() && !($tile.$wall !== null && $tile.$wall.$clear0))
                $dark.data[$x].data[$y] = $darkIterations;
            $y = $y + 1 | 0;
        }
        $x = $x + 1 | 0;
    }
    $i = 0;
    while ($i < $darkIterations) {
        $x = 0;
        while ($x < i_Inferno_world.$width4()) {
            $y = 0;
            while ($y < i_Inferno_world.$height4()) {
                $min = 0;
                iaamg_Geometry_$callClinit();
                var$10 = iaamg_Geometry_d4.data;
                var$1 = var$10.length;
                var$11 = 0;
                a: {
                    while (var$11 < var$1) {
                        $point = var$10[var$11];
                        $newX = $x + $point.$x3 | 0;
                        $newY = $y + $point.$y3 | 0;
                        if (iaau_Structs_inBounds($newX, $newY, i_Inferno_world.$width4(), i_Inferno_world.$height4())) {
                            var$15 = $dark.data;
                            if (var$15[$newX].data[$newY] < var$15[$x].data[$y]) {
                                $min = 1;
                                break a;
                            }
                        }
                        var$11 = var$11 + 1 | 0;
                    }
                }
                var$15 = $dark.data;
                $writeBuffer.data[$x].data[$y] = jl_Math_max1(0, var$15[$x].data[$y] - iaam_Mathf_num($min) | 0) << 24 >> 24;
                $y = $y + 1 | 0;
            }
            $x = $x + 1 | 0;
        }
        $x = 0;
        while ($x < i_Inferno_world.$width4()) {
            var$15 = $dark.data;
            jl_System_arraycopy($writeBuffer.data[$x], 0, var$15[$x], 0, i_Inferno_world.$height4());
            $x = $x + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    iaagg_Draw_proj0().$setOrtho(0.0, 0.0, $this.$fogs.$getWidth0(), $this.$fogs.$getHeight0());
    var$16 = $this.$fogs;
    iaag_Color_$callClinit();
    var$16.$beginDraw(iaag_Color_white);
    $x = 0;
    while ($x < i_Inferno_world.$width4()) {
        $y = 0;
        while ($y < i_Inferno_world.$height4()) {
            var$10 = $dark.data;
            if (var$10[$x].data[$y] > 0) {
                iaagg_Draw_color1(0.0, 0.0, 0.0, var$10[$x].data[$y] / 1.0 + iaam_Mathf_random1(0.11999999731779099));
                iaagg_Fill_square($x + 0.5, $y + 1.5, 0.5);
            }
            $y = $y + 1 | 0;
        }
        $x = $x + 1 | 0;
    }
    $this.$fogs.$endDraw();
    iaagg_Draw_color0();
}
function i_Renderer_draw($this, $entity) {
    ig_Drawf_z($entity.$y2);
    $entity.$draw();
}
function i_Renderer_lambda$drawWorld$2($x, $y) {
    var $tile;
    ig_Drawf_z(($y * 16 | 0) - 8.0);
    $tile = i_Inferno_world.$tile($x, $y);
    if ($tile.$wall !== null)
        $tile.$wall.$draw8($x, $y);
}
function i_Renderer_lambda$drawWorld$1($x, $y) {
    var $tile;
    $tile = i_Inferno_world.$tile($x, $y);
    if (!i_Inferno_world.$solid0($x, $y) && $tile.$overlay !== null)
        $tile.$overlay.$draw8($x, $y);
}
function i_Renderer_lambda$drawShadows$0($x, $y) {
    var $tile;
    $tile = i_Inferno_world.$tile($x, $y);
    if ($tile.$shadowed && $tile.$wall !== null)
        $tile.$wall.$drawShadow($x, $y);
}
function i_Renderer_access$000($x0) {
    return $x0.$ambient;
}
function i_Renderer_access$100($x0) {
    return $x0.$light2;
}
function ig_Bloom() {
    var a = this; jl_Object.call(a);
    a.$blurPasses = 0;
    a.$tresholdShader = null;
    a.$bloomShader = null;
    a.$fullScreenQuad = null;
    a.$pingPongTex1 = null;
    a.$pingPongTex2 = null;
    a.$original = null;
    a.$frameBuffer = null;
    a.$pingPongBuffer1 = null;
    a.$pingPongBuffer2 = null;
    a.$blurShader = null;
    a.$bloomIntensity = 0.0;
    a.$originalIntensity = 0.0;
    a.$threshold2 = 0.0;
    a.$w = 0;
    a.$h = 0;
    a.$blending = 0;
    a.$capturing = 0;
    a.$r1 = 0.0;
    a.$g0 = 0.0;
    a.$b0 = 0.0;
    a.$a0 = 0.0;
    a.$disposeFBO = 0;
}
var ig_Bloom_useAlphaChannelAsMask = 0;
function ig_Bloom_$callClinit() {
    ig_Bloom_$callClinit = $rt_eraseClinit(ig_Bloom);
    ig_Bloom__clinit_();
}
function ig_Bloom__init_() {
    var var_0 = new ig_Bloom();
    ig_Bloom__init_0(var_0);
    return var_0;
}
function ig_Bloom__init_0($this) {
    ig_Bloom_$callClinit();
    jl_Object__init_0($this);
    $this.$blurPasses = 1;
    $this.$blending = 0;
    $this.$capturing = 0;
    $this.$r1 = 0.0;
    $this.$g0 = 0.0;
    $this.$b0 = 0.0;
    $this.$a0 = 1.0;
    $this.$disposeFBO = 1;
    iaa_Core_$callClinit();
    ig_Bloom_initialize($this, iaa_Core_graphics.$getWidth0() / 4 | 0, iaa_Core_graphics.$getHeight0() / 4 | 0, null, 0, 0, 1);
}
function ig_Bloom_initialize($this, $FBO_W, $FBO_H, $fbo, $hasDepth, $useBlending, $use32bitFBO) {
    var var$7, var$8, $alpha;
    $this.$blending = $useBlending;
    if (!$use32bitFBO) {
        if (!$useBlending) {
            iaag_Pixmap$Format_$callClinit();
            var$7 = iaag_Pixmap$Format_RGB565;
        } else {
            iaag_Pixmap$Format_$callClinit();
            var$7 = iaag_Pixmap$Format_RGBA4444;
        }
    } else if (!$useBlending) {
        iaag_Pixmap$Format_$callClinit();
        var$7 = iaag_Pixmap$Format_RGB888;
    } else {
        iaag_Pixmap$Format_$callClinit();
        var$7 = iaag_Pixmap$Format_RGBA8888;
    }
    if ($fbo !== null)
        $this.$frameBuffer = $fbo;
    else {
        var$8 = new iaagg_FrameBuffer;
        iaa_Core_$callClinit();
        iaagg_FrameBuffer__init_0(var$8, var$7, iaa_Core_graphics.$getWidth0(), iaa_Core_graphics.$getHeight0(), $hasDepth);
        $this.$frameBuffer = var$8;
    }
    $this.$pingPongBuffer1 = iaagg_FrameBuffer__init_1(var$7, $FBO_W, $FBO_H, 0);
    $this.$pingPongBuffer2 = iaagg_FrameBuffer__init_1(var$7, $FBO_W, $FBO_H, 0);
    $this.$original = $this.$frameBuffer.$getTexture0();
    $this.$pingPongTex1 = $this.$pingPongBuffer1.$getTexture0();
    $this.$pingPongTex2 = $this.$pingPongBuffer2.$getTexture0();
    $this.$fullScreenQuad = ig_Bloom_createFullScreenQuad();
    $alpha = !$useBlending ? $rt_s(58) : $rt_s(562);
    $this.$bloomShader = ig_Bloom_createShader($rt_s(563), jl_StringBuilder__init_().$append($alpha).$append($rt_s(564)).$toString());
    if (ig_Bloom_useAlphaChannelAsMask)
        $this.$tresholdShader = ig_Bloom_createShader($rt_s(563), $rt_s(565));
    else
        $this.$tresholdShader = ig_Bloom_createShader($rt_s(563), jl_StringBuilder__init_().$append($alpha).$append($rt_s(566)).$toString());
    $this.$blurShader = ig_Bloom_createShader($rt_s(567), jl_StringBuilder__init_().$append($alpha).$append($rt_s(568)).$toString());
    ig_Bloom_setSize($this, $FBO_W, $FBO_H);
    $this.$setBloomIntesity(2.5);
    $this.$setOriginalIntesity(0.800000011920929);
    $this.$setThreshold(0.699999988079071);
    $this.$bloomShader.$begin();
    $this.$bloomShader.$setUniformi($rt_s(569), 0);
    $this.$bloomShader.$setUniformi($rt_s(570), 1);
    $this.$bloomShader.$end();
}
function ig_Bloom_capture($this) {
    if (!$this.$capturing) {
        $this.$capturing = 1;
        $this.$frameBuffer.$begin();
        iaa_Core_$callClinit();
        iaa_Core_gl.$glClearColor($this.$r1, $this.$g0, $this.$b0, $this.$a0);
        iaa_Core_gl.$glClear(16384);
    }
}
function ig_Bloom_render($this) {
    if ($this.$capturing) {
        $this.$capturing = 0;
        $this.$frameBuffer.$end();
    }
    iaa_Core_$callClinit();
    iaa_Core_gl.$glDisable(3042);
    iaa_Core_gl.$glDisable(2929);
    iaa_Core_gl.$glDepthMask(0);
    ig_Bloom_gaussianBlur($this);
    if ($this.$blending) {
        iaa_Core_gl.$glEnable(3042);
        iaa_Core_gl.$glBlendFunc(770, 771);
    }
    $this.$pingPongTex1.$bind0(1);
    $this.$original.$bind0(0);
    $this.$bloomShader.$begin();
    $this.$fullScreenQuad.$render0($this.$bloomShader, 6);
    $this.$bloomShader.$end();
}
function ig_Bloom_gaussianBlur($this) {
    var $i;
    $this.$original.$bind0(0);
    $this.$pingPongBuffer1.$begin();
    $this.$tresholdShader.$begin();
    $this.$fullScreenQuad.$render1($this.$tresholdShader, 6, 0, 4);
    $this.$tresholdShader.$end();
    $this.$pingPongBuffer1.$end();
    $i = 0;
    while ($i < $this.$blurPasses) {
        $this.$pingPongTex1.$bind0(0);
        $this.$pingPongBuffer2.$begin();
        $this.$blurShader.$begin();
        $this.$blurShader.$setUniformf($rt_s(571), 1.0, 0.0);
        $this.$fullScreenQuad.$render1($this.$blurShader, 6, 0, 4);
        $this.$blurShader.$end();
        $this.$pingPongBuffer2.$end();
        $this.$pingPongTex2.$bind0(0);
        $this.$pingPongBuffer1.$begin();
        $this.$blurShader.$begin();
        $this.$blurShader.$setUniformf($rt_s(571), 0.0, 1.0);
        $this.$fullScreenQuad.$render1($this.$blurShader, 6, 0, 4);
        $this.$blurShader.$end();
        $this.$pingPongBuffer1.$end();
        $i = $i + 1 | 0;
    }
}
function ig_Bloom_setBloomIntesity($this, $intensity) {
    $this.$bloomIntensity = $intensity;
    $this.$bloomShader.$begin();
    $this.$bloomShader.$setUniformf0($rt_s(572), $intensity);
    $this.$bloomShader.$end();
}
function ig_Bloom_setOriginalIntesity($this, $intensity) {
    $this.$originalIntensity = $intensity;
    $this.$bloomShader.$begin();
    $this.$bloomShader.$setUniformf0($rt_s(573), $intensity);
    $this.$bloomShader.$end();
}
function ig_Bloom_setThreshold($this, $threshold) {
    $this.$threshold2 = $threshold;
    $this.$tresholdShader.$begin();
    $this.$tresholdShader.$setUniformf($rt_s(566), $threshold, 1.0 / (1.0 - $threshold));
    $this.$tresholdShader.$end();
}
function ig_Bloom_setSize($this, $FBO_W, $FBO_H) {
    $this.$w = $FBO_W;
    $this.$h = $FBO_H;
    $this.$blurShader.$begin();
    $this.$blurShader.$setUniformf($rt_s(574), $FBO_W, $FBO_H);
    $this.$blurShader.$end();
}
function ig_Bloom_dispose($this) {
    if ($this.$disposeFBO)
        $this.$frameBuffer.$dispose();
    $this.$fullScreenQuad.$dispose();
    $this.$pingPongBuffer1.$dispose();
    $this.$pingPongBuffer2.$dispose();
    $this.$blurShader.$dispose();
    $this.$bloomShader.$dispose();
    $this.$tresholdShader.$dispose();
}
function ig_Bloom_createFullScreenQuad() {
    var $verts, var$2, $tmpMesh, var$4;
    ig_Bloom_$callClinit();
    $verts = $rt_createFloatArray(16);
    var$2 = $verts.data;
    var$2[0] = (-1.0);
    var$2[1] = (-1.0);
    var$2[2] = 0.0;
    var$2[3] = 0.0;
    var$2[4] = 1.0;
    var$2[5] = (-1.0);
    var$2[6] = 1.0;
    var$2[7] = 0.0;
    var$2[8] = 1.0;
    var$2[9] = 1.0;
    var$2[10] = 1.0;
    var$2[11] = 1.0;
    var$2[12] = (-1.0);
    var$2[13] = 1.0;
    var$2[14] = 0.0;
    var$2[15] = 1.0;
    $tmpMesh = new iaag_Mesh;
    var$2 = $rt_createArray(iaag_VertexAttribute, 2);
    var$4 = var$2.data;
    var$4[0] = iaag_VertexAttribute__init_(1, 2, $rt_s(575));
    var$4[1] = iaag_VertexAttribute__init_(16, 2, $rt_s(576));
    iaag_Mesh__init_($tmpMesh, 1, 4, 0, var$2);
    $tmpMesh.$setVertices($verts);
    return $tmpMesh;
}
function ig_Bloom_createShader($vertexName, $fragmentName) {
    var $vertexShader, $fragmentShader;
    ig_Bloom_$callClinit();
    iaa_Core_$callClinit();
    $vertexShader = iaa_Core_files.$internal(jl_StringBuilder__init_().$append($rt_s(577)).$append($vertexName).$append($rt_s(578)).$toString()).$readString0();
    $fragmentShader = iaa_Core_files.$internal(jl_StringBuilder__init_().$append($rt_s(577)).$append($fragmentName).$append($rt_s(579)).$toString()).$readString0();
    return iaagg_Shader__init_($vertexShader, $fragmentShader);
}
function ig_Bloom__clinit_() {
    ig_Bloom_useAlphaChannelAsMask = 0;
}
function jl_IndexOutOfBoundsException() {
    jl_RuntimeException.call(this);
}
function jl_IndexOutOfBoundsException__init_() {
    var var_0 = new jl_IndexOutOfBoundsException();
    jl_IndexOutOfBoundsException__init_2(var_0);
    return var_0;
}
function jl_IndexOutOfBoundsException__init_0(var_0) {
    var var_1 = new jl_IndexOutOfBoundsException();
    jl_IndexOutOfBoundsException__init_1(var_1, var_0);
    return var_1;
}
function jl_IndexOutOfBoundsException__init_2($this) {
    jl_RuntimeException__init_1($this);
}
function jl_IndexOutOfBoundsException__init_1($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
function jl_ArrayIndexOutOfBoundsException() {
    jl_IndexOutOfBoundsException.call(this);
}
function jl_ArrayIndexOutOfBoundsException__init_() {
    var var_0 = new jl_ArrayIndexOutOfBoundsException();
    jl_ArrayIndexOutOfBoundsException__init_0(var_0);
    return var_0;
}
function jl_ArrayIndexOutOfBoundsException__init_1(var_0) {
    var var_1 = new jl_ArrayIndexOutOfBoundsException();
    jl_ArrayIndexOutOfBoundsException__init_2(var_1, var_0);
    return var_1;
}
function jl_ArrayIndexOutOfBoundsException__init_3(var_0) {
    var var_1 = new jl_ArrayIndexOutOfBoundsException();
    jl_ArrayIndexOutOfBoundsException__init_4(var_1, var_0);
    return var_1;
}
function jl_ArrayIndexOutOfBoundsException__init_0($this) {
    jl_IndexOutOfBoundsException__init_2($this);
}
function jl_ArrayIndexOutOfBoundsException__init_2($this, $message) {
    jl_IndexOutOfBoundsException__init_1($this, $message);
}
function jl_ArrayIndexOutOfBoundsException__init_4($this, $index) {
    jl_IndexOutOfBoundsException__init_1($this, jl_Integer_toString0($index));
}
function ji_InputStreamReader() {
    var a = this; ji_Reader.call(a);
    a.$stream = null;
    a.$decoder = null;
    a.$inData = null;
    a.$inBuffer = null;
    a.$outData = null;
    a.$outBuffer = null;
    a.$streamEof = 0;
    a.$eof1 = 0;
}
function ji_InputStreamReader__init_0(var_0, var_1) {
    var var_2 = new ji_InputStreamReader();
    ji_InputStreamReader__init_1(var_2, var_0, var_1);
    return var_2;
}
function ji_InputStreamReader__init_2(var_0, var_1) {
    var var_2 = new ji_InputStreamReader();
    ji_InputStreamReader__init_3(var_2, var_0, var_1);
    return var_2;
}
function ji_InputStreamReader__init_(var_0) {
    var var_1 = new ji_InputStreamReader();
    ji_InputStreamReader__init_4(var_1, var_0);
    return var_1;
}
function ji_InputStreamReader__init_5(var_0, var_1) {
    var var_2 = new ji_InputStreamReader();
    ji_InputStreamReader__init_6(var_2, var_0, var_1);
    return var_2;
}
function ji_InputStreamReader__init_1($this, $in, $charsetName) {
    ji_InputStreamReader__init_3($this, $in, ji_InputStreamReader_getCharset($charsetName));
}
function ji_InputStreamReader__init_3($this, $in, $charset) {
    var var$3, var$4;
    var$3 = $charset.$newDecoder();
    jnc_CodingErrorAction_$callClinit();
    var$4 = jnc_CodingErrorAction_REPLACE;
    var$4 = jnc_CharsetDecoder_onMalformedInput(var$3, var$4);
    var$3 = jnc_CodingErrorAction_REPLACE;
    var$4 = jnc_CharsetDecoder_onUnmappableCharacter(var$4, var$3);
    ji_InputStreamReader__init_6($this, $in, var$4);
}
function ji_InputStreamReader__init_4($this, $in) {
    ji_InputStreamReader__init_3($this, $in, jnci_UTF8Charset__init_());
}
function ji_InputStreamReader__init_6($this, $in, $decoder) {
    ji_Reader__init_0($this);
    $this.$inData = $rt_createByteArray(8192);
    $this.$inBuffer = jn_ByteBuffer_wrap($this.$inData);
    $this.$outData = $rt_createCharArray(1024);
    $this.$outBuffer = jn_CharBuffer_wrap0($this.$outData);
    $this.$stream = $in;
    $this.$decoder = $decoder;
    $this.$outBuffer.$position1(jn_Buffer_limit($this.$outBuffer));
    $this.$inBuffer.$position9(jn_Buffer_limit($this.$inBuffer));
}
function ji_InputStreamReader_getCharset($charsetName) {
    var var$2, $$je;
    a: {
        try {
            var$2 = jnc_Charset_forName($charsetName.$toString());
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_UnsupportedCharsetException) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$2;
    }
    $rt_throw(ji_UnsupportedEncodingException__init_($charsetName));
}
function ji_InputStreamReader_read($this, $cbuf, $off, $len) {
    var $bytesRead, $sz;
    if ($this.$eof1 && !jn_Buffer_hasRemaining($this.$outBuffer))
        return (-1);
    $bytesRead = 0;
    a: {
        while ($len > 0) {
            $sz = jl_Math_min1($len, jn_Buffer_remaining($this.$outBuffer));
            $this.$outBuffer.$get15($cbuf, $off + $bytesRead | 0, $sz);
            $len = $len - $sz | 0;
            $bytesRead = $bytesRead + $sz | 0;
            if (!jn_Buffer_hasRemaining($this.$outBuffer) && !ji_InputStreamReader_fillBuffer($this))
                break a;
        }
    }
    return $bytesRead;
}
function ji_InputStreamReader_fillBuffer($this) {
    if ($this.$eof1)
        return 0;
    $this.$outBuffer.$compact();
    a: {
        while (true) {
            if (!jn_Buffer_hasRemaining($this.$inBuffer) && !ji_InputStreamReader_fillReadBuffer($this))
                break a;
            if (!jnc_CharsetDecoder_decode0($this.$decoder, $this.$inBuffer, $this.$outBuffer, $this.$streamEof).$isOverflow())
                continue;
            else
                break;
        }
    }
    if (!jn_Buffer_hasRemaining($this.$inBuffer) && $this.$streamEof && jnc_CharsetDecoder_flush($this.$decoder, $this.$outBuffer).$isUnderflow())
        $this.$eof1 = 1;
    jn_CharBuffer_flip($this.$outBuffer);
    return 1;
}
function ji_InputStreamReader_fillReadBuffer($this) {
    var $bytesRead;
    if ($this.$streamEof)
        return 0;
    $this.$inBuffer.$compact0();
    a: {
        while (true) {
            if (!jn_Buffer_hasRemaining($this.$inBuffer))
                break a;
            $bytesRead = $this.$stream.$read(jn_ByteBuffer_array($this.$inBuffer), jn_Buffer_position($this.$inBuffer), jn_Buffer_remaining($this.$inBuffer));
            if ($bytesRead == (-1)) {
                $this.$streamEof = 1;
                break a;
            }
            $this.$inBuffer.$position9(jn_Buffer_position($this.$inBuffer) + $bytesRead | 0);
            if (!$bytesRead)
                break;
        }
    }
    jn_ByteBuffer_flip($this.$inBuffer);
    return 1;
}
function iaaf_Floatp() {
}
function iw_Blocks$2() {
    iw_Block.call(this);
}
function iw_Blocks$2__init_(var_0) {
    var var_1 = new iw_Blocks$2();
    iw_Blocks$2__init_0(var_1, var_0);
    return var_1;
}
function iw_Blocks$2__init_0($this, $name) {
    iw_Block__init_0($this, $name);
}
function iw_Blocks$2_draw($this, $x, $y) {
    return;
}
function it_Phases$3$lambda$update$25$lambda$_7_0() {
    jl_Object.call(this);
    this.$_044 = null;
}
function it_Phases$3$lambda$update$25$lambda$_7_0__init_(var_0) {
    var var_1 = new it_Phases$3$lambda$update$25$lambda$_7_0();
    it_Phases$3$lambda$update$25$lambda$_7_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$3$lambda$update$25$lambda$_7_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_044 = var$1;
}
function it_Phases$3$lambda$update$25$lambda$_7_0_run(var$0) {
    it_Phases$3_lambda$null$24(var$0.$_044);
}
function iw_Blocks$1() {
    iw_Block.call(this);
}
function iw_Blocks$1__init_(var_0) {
    var var_1 = new iw_Blocks$1();
    iw_Blocks$1__init_0(var_1, var_0);
    return var_1;
}
function iw_Blocks$1__init_0($this, $name) {
    iw_Block__init_0($this, $name);
    $this.$shadowSize = 14.0;
}
function iw_Blocks$1_draw($this, $x, $y) {
    var $region, var$4, var$5, var$6, var$7, var$8, $offset, $rad;
    $region = $this.$regions0.data[0];
    var$4 = $y * 16 | 0;
    ig_Drawf_z(var$4);
    var$5 = $x * 16 | 0;
    var$6 = var$4 + $region.$getHeight0() / 2.0 - 1.0;
    var$7 = $rt_imul($region.$getWidth0(), iaam_Mathf_sign(iaam_Mathf_randomSeed0(Long_fromInt($rt_imul($y, i_Inferno_world.$width4()) + $x | 0)) - 0.5));
    var$8 = $region.$getHeight0();
    iaagg_Draw_rect3($region, var$5, var$6, var$7, var$8);
    $offset = 14.0;
    var$6 = var$4 + $offset;
    var$4 = 50.0 + iaam_Mathf_absin(iaau_Time_time(), 10.0, 10.0);
    iaag_Color_$callClinit();
    ig_Drawf_light1(var$5, var$6, var$4, iaag_Color_orange, 0.699999988079071);
    $rad = 1.7999999523162842 + iaam_Mathf_absin(iaau_Time_time(), 5.0, 1.100000023841858);
    iaagg_Draw_color(iaag_Color_orange);
    iaagg_Fill_circle(var$5, var$6, $rad);
    iaagg_Draw_color0();
    iaagg_Fill_circle(var$5, var$6, $rad * 0.5);
}
function iw_Blocks$4() {
    iw_Block.call(this);
}
function iw_Blocks$4__init_(var_0) {
    var var_1 = new iw_Blocks$4();
    iw_Blocks$4__init_0(var_1, var_0);
    return var_1;
}
function iw_Blocks$4__init_0($this, $name) {
    iw_Block__init_0($this, $name);
    $this.$damage = 3.0;
}
function iw_Blocks$4_draw($this, $x, $y) {
    var $region, var$4, var$5, var$6, var$7, var$8;
    $region = $this.$regions0.data[iw_Block_rand($x, $y, $this.$regions0.data.length - 1 | 0)];
    var$4 = $y * 16 | 0;
    ig_Drawf_z(var$4 + 16 | 0);
    var$5 = $x * 16 | 0;
    var$6 = var$5;
    var$7 = var$4;
    iaagg_Draw_rect($region, var$6, var$7 - 8.0 + $region.$getHeight0() / 2.0);
    var$8 = var$7 + 8.0;
    var$7 = 60.0 + iaam_Mathf_absin(iaau_Time_time(), 5.0, 7.0);
    iaag_Color_$callClinit();
    ig_Drawf_light1(var$6, var$8, var$7, iaag_Color_orange, 0.699999988079071);
    if (!i_Inferno_control.$isPaused() && iaam_Mathf_chance(0.13 * iaau_Time_delta())) {
        it_Fx_$callClinit();
        it_Fx_fire.$at(var$5 + iaam_Mathf_range0(16) | 0, (var$4 + iaam_Mathf_range0(16) | 0) + 8.0);
    }
}
function iw_Blocks$3() {
    iw_Block.call(this);
}
function iw_Blocks$3__init_(var_0) {
    var var_1 = new iw_Blocks$3();
    iw_Blocks$3__init_0(var_1, var_0);
    return var_1;
}
function iw_Blocks$3__init_0($this, $name) {
    iw_Block__init_0($this, $name);
}
function iw_Blocks$3_draw($this, $x, $y) {
    var $region;
    $region = $this.$regions0.data[0];
    iaagg_Draw_rect($region, ($x * 16 | 0) + 8.0, ($y * 16 | 0) - 8.0 + $region.$getHeight0() / 2.0);
}
function iaagg_Shader() {
    var a = this; jl_Object.call(a);
    a.$uniforms = null;
    a.$uniformTypes = null;
    a.$uniformSizes = null;
    a.$attributes1 = null;
    a.$attributeTypes = null;
    a.$attributeSizes = null;
    a.$vertexShaderSource = null;
    a.$fragmentShaderSource = null;
    a.$params = null;
    a.$type6 = null;
    a.$log0 = null;
    a.$isCompiled = 0;
    a.$uniformNames = null;
    a.$attributeNames = null;
    a.$program = 0;
    a.$vertexShaderHandle = 0;
    a.$fragmentShaderHandle = 0;
    a.$invalidated = 0;
}
var iaagg_Shader_shaders = null;
var iaagg_Shader_pedantic = 0;
var iaagg_Shader_prependVertexCode = null;
var iaagg_Shader_prependFragmentCode = null;
function iaagg_Shader_$callClinit() {
    iaagg_Shader_$callClinit = $rt_eraseClinit(iaagg_Shader);
    iaagg_Shader__clinit_();
}
function iaagg_Shader__init_(var_0, var_1) {
    var var_2 = new iaagg_Shader();
    iaagg_Shader__init_1(var_2, var_0, var_1);
    return var_2;
}
function iaagg_Shader__init_2(var_0, var_1) {
    var var_2 = new iaagg_Shader();
    iaagg_Shader__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaagg_Shader__init_1($this, $vertexShader, $fragmentShader) {
    iaagg_Shader_$callClinit();
    jl_Object__init_0($this);
    $this.$uniforms = iaac_ObjectIntMap__init_();
    $this.$uniformTypes = iaac_ObjectIntMap__init_();
    $this.$uniformSizes = iaac_ObjectIntMap__init_();
    $this.$attributes1 = iaac_ObjectIntMap__init_();
    $this.$attributeTypes = iaac_ObjectIntMap__init_();
    $this.$attributeSizes = iaac_ObjectIntMap__init_();
    $this.$params = iaau_BufferUtils_newIntBuffer(1);
    $this.$type6 = iaau_BufferUtils_newIntBuffer(1);
    $this.$log0 = $rt_s(58);
    if ($vertexShader === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(580)));
    if ($fragmentShader === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(581)));
    if (iaagg_Shader_prependVertexCode !== null && iaagg_Shader_prependVertexCode.$length() > 0)
        $vertexShader = jl_StringBuilder__init_().$append(iaagg_Shader_prependVertexCode).$append($vertexShader).$toString();
    if (iaagg_Shader_prependFragmentCode !== null && iaagg_Shader_prependFragmentCode.$length() > 0)
        $fragmentShader = jl_StringBuilder__init_().$append(iaagg_Shader_prependFragmentCode).$append($fragmentShader).$toString();
    $this.$vertexShaderSource = $vertexShader;
    $this.$fragmentShaderSource = $fragmentShader;
    iaagg_Shader_compileShaders($this, $vertexShader, $fragmentShader);
    if ($this.$isCompiled0()) {
        iaagg_Shader_fetchAttributes($this);
        iaagg_Shader_fetchUniforms($this);
        iaa_Core_$callClinit();
        iaagg_Shader_addManagedShader($this, iaa_Core_app, $this);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(582)).$append($this.$log0).$toString()));
}
function iaagg_Shader__init_0($this, $vertexShader, $fragmentShader) {
    iaagg_Shader_$callClinit();
    iaagg_Shader__init_1($this, $vertexShader.$readString0(), $fragmentShader.$readString0());
}
function iaagg_Shader_apply($this) {
    return;
}
function iaagg_Shader_compileShaders($this, $vertexShader, $fragmentShader) {
    $this.$vertexShaderHandle = iaagg_Shader_loadShader($this, 35633, $vertexShader);
    $this.$fragmentShaderHandle = iaagg_Shader_loadShader($this, 35632, $fragmentShader);
    if ($this.$vertexShaderHandle != (-1) && $this.$fragmentShaderHandle != (-1)) {
        $this.$program = iaagg_Shader_linkProgram($this, $this.$createProgram());
        if ($this.$program != (-1)) {
            $this.$isCompiled = 1;
            return;
        }
        $this.$isCompiled = 0;
        return;
    }
    $this.$isCompiled = 0;
}
function iaagg_Shader_loadShader($this, $type, $source) {
    var $gl, $intbuf, $shader, $compiled, $infoLog;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    $intbuf = iaau_BufferUtils_newIntBuffer(1);
    $shader = $gl.$glCreateShader($type);
    if (!$shader)
        return (-1);
    $gl.$glShaderSource($shader, $source);
    $gl.$glCompileShader($shader);
    $gl.$glGetShaderiv($shader, 35713, $intbuf);
    $compiled = $intbuf.$get29(0);
    if ($compiled)
        return $shader;
    $infoLog = $gl.$glGetShaderInfoLog($shader);
    $this.$log0 = jl_StringBuilder__init_().$append($this.$log0).$append($type != 35633 ? $rt_s(583) : $rt_s(584)).$toString();
    $this.$log0 = jl_StringBuilder__init_().$append($this.$log0).$append($infoLog).$toString();
    return (-1);
}
function iaagg_Shader_createProgram($this) {
    var $gl, $program;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    $program = $gl.$glCreateProgram();
    if (!$program)
        $program = (-1);
    return $program;
}
function iaagg_Shader_linkProgram($this, $program) {
    var $gl, $tmp, $intbuf, $linked;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    if ($program == (-1))
        return (-1);
    $gl.$glAttachShader($program, $this.$vertexShaderHandle);
    $gl.$glAttachShader($program, $this.$fragmentShaderHandle);
    $gl.$glLinkProgram($program);
    $tmp = jn_ByteBuffer_allocateDirect(4);
    jn_ByteBuffer_order($tmp, jn_ByteOrder_nativeOrder());
    $intbuf = $tmp.$asIntBuffer();
    $gl.$glGetProgramiv($program, 35714, $intbuf);
    $linked = $intbuf.$get29(0);
    if ($linked)
        return $program;
    $this.$log0 = iaa_Core_gl20.$glGetProgramInfoLog($program);
    return (-1);
}
function iaagg_Shader_isCompiled($this) {
    return $this.$isCompiled;
}
function iaagg_Shader_fetchAttributeLocation($this, $name) {
    var $gl, var$3;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    var$3 = $this.$attributes1.$get37($name, (-2));
    if (var$3 == (-2)) {
        var$3 = $gl.$glGetAttribLocation($this.$program, $name);
        $this.$attributes1.$put5($name, var$3);
    }
    return var$3;
}
function iaagg_Shader_fetchUniformLocation($this, $name) {
    return $this.$fetchUniformLocation($name, iaagg_Shader_pedantic);
}
function iaagg_Shader_fetchUniformLocation0($this, $name, $pedantic) {
    var $gl, var$4;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    var$4 = $this.$uniforms.$get37($name, (-2));
    if (var$4 == (-2)) {
        var$4 = $gl.$glGetUniformLocation($this.$program, $name);
        if (var$4 == (-1) && $pedantic)
            $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(585)).$append($name).$append($rt_s(586)).$toString()));
        $this.$uniforms.$put5($name, var$4);
    }
    return var$4;
}
function iaagg_Shader_setUniformi($this, $name, $value) {
    var $gl, $location;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    iaagg_Shader_checkManaged($this);
    $location = iaagg_Shader_fetchUniformLocation($this, $name);
    $gl.$glUniform1i($location, $value);
}
function iaagg_Shader_setUniformf($this, $name, $value) {
    var $gl, $location;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    iaagg_Shader_checkManaged($this);
    $location = iaagg_Shader_fetchUniformLocation($this, $name);
    $gl.$glUniform1f($location, $value);
}
function iaagg_Shader_setUniformf0($this, $name, $value1, $value2) {
    var $gl, $location;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    iaagg_Shader_checkManaged($this);
    $location = iaagg_Shader_fetchUniformLocation($this, $name);
    $gl.$glUniform2f($location, $value1, $value2);
}
function iaagg_Shader_setUniformf1($this, $name, $value1, $value2, $value3, $value4) {
    var $gl, $location;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    iaagg_Shader_checkManaged($this);
    $location = iaagg_Shader_fetchUniformLocation($this, $name);
    $gl.$glUniform4f($location, $value1, $value2, $value3, $value4);
}
function iaagg_Shader_setUniformMatrix4($this, $name, $val) {
    var $gl;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    iaagg_Shader_checkManaged($this);
    $gl.$glUniformMatrix4fv(iaagg_Shader_fetchUniformLocation($this, $name), 1, 0, $val, 0);
}
function iaagg_Shader_setUniformf2($this, $name, $values) {
    $this.$setUniformf1($name, $values.$r0, $values.$g, $values.$b, $values.$a);
}
function iaagg_Shader_setVertexAttribute($this, $location, $size, $type, $normalize, $stride, $offset) {
    var $gl;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    iaagg_Shader_checkManaged($this);
    $gl.$glVertexAttribPointer($location, $size, $type, $normalize, $stride, $offset);
}
function iaagg_Shader_begin($this) {
    var $gl;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    iaagg_Shader_checkManaged($this);
    $gl.$glUseProgram($this.$program);
}
function iaagg_Shader_end($this) {
    var $gl;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    $gl.$glUseProgram(0);
}
function iaagg_Shader_dispose($this) {
    var $gl;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    $gl.$glUseProgram(0);
    $gl.$glDeleteShader($this.$vertexShaderHandle);
    $gl.$glDeleteShader($this.$fragmentShaderHandle);
    $gl.$glDeleteProgram($this.$program);
    if (iaagg_Shader_shaders.$get9(iaa_Core_app) !== null)
        iaagg_Shader_shaders.$get9(iaa_Core_app).$removeValue($this, 1);
}
function iaagg_Shader_disableVertexAttribute($this, $name) {
    var $gl, $location;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    iaagg_Shader_checkManaged($this);
    $location = iaagg_Shader_fetchAttributeLocation($this, $name);
    if ($location == (-1))
        return;
    $gl.$glDisableVertexAttribArray($location);
}
function iaagg_Shader_disableVertexAttribute0($this, $location) {
    var $gl;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    iaagg_Shader_checkManaged($this);
    $gl.$glDisableVertexAttribArray($location);
}
function iaagg_Shader_enableVertexAttribute($this, $location) {
    var $gl;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    iaagg_Shader_checkManaged($this);
    $gl.$glEnableVertexAttribArray($location);
}
function iaagg_Shader_checkManaged($this) {
    if ($this.$invalidated) {
        iaagg_Shader_compileShaders($this, $this.$vertexShaderSource, $this.$fragmentShaderSource);
        $this.$invalidated = 0;
    }
}
function iaagg_Shader_addManagedShader($this, $app, $shader) {
    var $managedResources;
    $managedResources = iaagg_Shader_shaders.$get9($app);
    if ($managedResources === null)
        $managedResources = iaac_Array__init_0();
    $managedResources.$add1($shader);
    iaagg_Shader_shaders.$put($app, $managedResources);
}
function iaagg_Shader_fetchUniforms($this) {
    var $numUniforms, $i, $name, $location;
    $this.$params.$clear2();
    iaa_Core_$callClinit();
    iaa_Core_gl20.$glGetProgramiv($this.$program, 35718, $this.$params);
    $numUniforms = $this.$params.$get29(0);
    $this.$uniformNames = $rt_createArray(jl_String, $numUniforms);
    $i = 0;
    while ($i < $numUniforms) {
        $this.$params.$clear2();
        $this.$params.$put6(0, 1);
        $this.$type6.$clear2();
        $name = iaa_Core_gl20.$glGetActiveUniform($this.$program, $i, $this.$params, $this.$type6);
        $location = iaa_Core_gl20.$glGetUniformLocation($this.$program, $name);
        $this.$uniforms.$put5($name, $location);
        $this.$uniformTypes.$put5($name, $this.$type6.$get29(0));
        $this.$uniformSizes.$put5($name, $this.$params.$get29(0));
        $this.$uniformNames.data[$i] = $name;
        $i = $i + 1 | 0;
    }
}
function iaagg_Shader_fetchAttributes($this) {
    var $numAttributes, $i, $name, $location;
    $this.$params.$clear2();
    iaa_Core_$callClinit();
    iaa_Core_gl20.$glGetProgramiv($this.$program, 35721, $this.$params);
    $numAttributes = $this.$params.$get29(0);
    $this.$attributeNames = $rt_createArray(jl_String, $numAttributes);
    $i = 0;
    while ($i < $numAttributes) {
        $this.$params.$clear2();
        $this.$params.$put6(0, 1);
        $this.$type6.$clear2();
        $name = iaa_Core_gl20.$glGetActiveAttrib($this.$program, $i, $this.$params, $this.$type6);
        $location = iaa_Core_gl20.$glGetAttribLocation($this.$program, $name);
        $this.$attributes1.$put5($name, $location);
        $this.$attributeTypes.$put5($name, $this.$type6.$get29(0));
        $this.$attributeSizes.$put5($name, $this.$params.$get29(0));
        $this.$attributeNames.data[$i] = $name;
        $i = $i + 1 | 0;
    }
}
function iaagg_Shader_getAttributeLocation($this, $name) {
    return $this.$attributes1.$get37($name, (-1));
}
function iaagg_Shader__clinit_() {
    iaagg_Shader_shaders = iaac_ObjectMap__init_();
    iaagg_Shader_pedantic = 0;
    iaagg_Shader_prependVertexCode = $rt_s(58);
    iaagg_Shader_prependFragmentCode = $rt_s(58);
}
function iw_Blocks$6() {
    iw_Block.call(this);
}
function iw_Blocks$6__init_(var_0) {
    var var_1 = new iw_Blocks$6();
    iw_Blocks$6__init_0(var_1, var_0);
    return var_1;
}
function iw_Blocks$6__init_0($this, $name) {
    iw_Block__init_0($this, $name);
}
function iw_Blocks$6_draw($this, $x, $y) {
    var $region, var$4;
    $region = $this.$regions0.data[iw_Block_rand($x, $y, $this.$regions0.data.length - 1 | 0)];
    var$4 = $y * 16 | 0;
    ig_Drawf_z(var$4 + 16 | 0);
    iaagg_Draw_rect($region, $x * 16 | 0, var$4 - 8.0 + $region.$getHeight0() / 2.0);
}
function iw_Blocks$5() {
    iw_Block.call(this);
}
function iw_Blocks$5__init_(var_0) {
    var var_1 = new iw_Blocks$5();
    iw_Blocks$5__init_0(var_1, var_0);
    return var_1;
}
function iw_Blocks$5__init_0($this, $name) {
    iw_Block__init_0($this, $name);
    $this.$damage = 0.10000000149011612;
    $this.$solid = 0;
}
function iw_Blocks$5_drawShadow($this, $x, $y) {
    return;
}
function iw_Blocks$5_draw($this, $x, $y) {
    if (!i_Inferno_control.$isPaused() && iaam_Mathf_chance(0.03 * iaau_Time_delta())) {
        it_Fx_$callClinit();
        it_Fx_fire.$at(($x * 16 | 0) + iaam_Mathf_range0(16) | 0, ($y * 16 | 0) + iaam_Mathf_range0(16) | 0);
    }
}
function iw_Blocks$8() {
    iw_Block.call(this);
}
function iw_Blocks$8__init_(var_0) {
    var var_1 = new iw_Blocks$8();
    iw_Blocks$8__init_0(var_1, var_0);
    return var_1;
}
function iw_Blocks$8__init_0($this, $name) {
    iw_Block__init_0($this, $name);
}
function iw_Blocks$8_draw($this, $x, $y) {
    var $region;
    $region = $this.$regions0.data[0];
    iaagg_Draw_rect0($region, $x * 16 | 0, $y * 16 | 0, i_Inferno_world.$tile($x, $y).$rotation2);
}
function ju_AbstractList$1() {
    var a = this; jl_Object.call(a);
    a.$index4 = 0;
    a.$modCount1 = 0;
    a.$size8 = 0;
    a.$removeIndex = 0;
    a.$this$09 = null;
}
function ju_AbstractList$1__init_(var_0) {
    var var_1 = new ju_AbstractList$1();
    ju_AbstractList$1__init_0(var_1, var_0);
    return var_1;
}
function ju_AbstractList$1__init_0($this, $this$0) {
    $this.$this$09 = $this$0;
    jl_Object__init_0($this);
    $this.$modCount1 = $this.$this$09.$modCount2;
    $this.$size8 = $this.$this$09.$size0();
    $this.$removeIndex = (-1);
}
function ju_AbstractList$1_hasNext($this) {
    return $this.$index4 >= $this.$size8 ? 0 : 1;
}
function ju_AbstractList$1_next($this) {
    var var$1, var$2;
    ju_AbstractList$1_checkConcurrentModification($this);
    $this.$removeIndex = $this.$index4;
    var$1 = $this.$this$09;
    var$2 = $this.$index4;
    $this.$index4 = var$2 + 1 | 0;
    return var$1.$get(var$2);
}
function ju_AbstractList$1_checkConcurrentModification($this) {
    if ($this.$modCount1 >= $this.$this$09.$modCount2)
        return;
    $rt_throw(ju_ConcurrentModificationException__init_());
}
function iw_Blocks$7() {
    var a = this; iw_Block.call(a);
    a.$colors = null;
    a.$temp = null;
    a.$w0 = 0;
    a.$h0 = 0;
}
function iw_Blocks$7__init_(var_0) {
    var var_1 = new iw_Blocks$7();
    iw_Blocks$7__init_0(var_1, var_0);
    return var_1;
}
function iw_Blocks$7__init_0($this, $name) {
    var var$2, var$3;
    iw_Block__init_0($this, $name);
    var$2 = $rt_createArray(iaag_Color, 5);
    var$3 = var$2.data;
    var$3[0] = iaag_Color_valueOf($rt_s(587));
    var$3[1] = iaag_Color_valueOf($rt_s(588));
    var$3[2] = iaag_Color_valueOf($rt_s(589));
    var$3[3] = iaag_Color_valueOf($rt_s(590));
    var$3[4] = iaag_Color_valueOf($rt_s(591));
    $this.$colors = var$2;
    $this.$temp = iaag_Color__init_0();
    $this.$w0 = 4;
    $this.$h0 = 5;
}
function iw_Blocks$7_draw($this, $x, $y) {
    var var$3, $spread, $amount, $i, var$7, $dx, $dy, $rot, var$11, $color, $mul;
    var$3 = $y * 16 | 0;
    ig_Drawf_z(var$3 + 8.0);
    $spread = 16;
    $amount = iw_Block_rand0($x, $y, (-1), 3);
    $i = 0;
    while ($i < $amount) {
        var$7 = $i * 2 | 0;
        $dx = iw_Block_rand0($x, $y, var$7, $spread);
        $dy = iw_Block_rand0($x, $y, var$7 + 1 | 0, $spread);
        $rot = iw_Block_rand0($x, $y, var$7 + 2 | 0, 360);
        var$11 = var$7 + 3 | 0;
        $color = iw_Block_rand0($x, $y, var$11, $this.$colors.data.length);
        $mul = 1.0 + (iw_Block_rand0($x, $y, var$11, 255) / 255.0 - 0.5) / 6.0;
        iw_Blocks$7_drawBook($this, $this.$w0, $this.$h0, (($x * 16 | 0) + $dx | 0) - 8 | 0, (var$3 + $dy | 0) - 8 | 0, $rot, $this.$colors.data[$color - 1 | 0], $mul);
        $i = $i + 1 | 0;
    }
}
function iw_Blocks$7_drawBook($this, $w, $h, $x, $y, $rot, $color, $mul) {
    var var$8, var$9, var$10;
    $this.$temp.$set($color).$mul1($mul, $mul, $mul, 1.0);
    iaagg_Draw_color1(0.0, 0.0, 0.0, 0.25);
    var$8 = $y - 2.0;
    var$9 = $w;
    var$10 = $h;
    iaagg_Fill_rect0($x, var$8, var$9, var$10, $rot);
    iaagg_Draw_colorMul($this.$temp, 0.699999988079071);
    iaagg_Fill_rect0($x, $y - 0.699999988079071, var$9, var$10, $rot);
    iaagg_Draw_colorMul($color, $mul);
    iaagg_Fill_rect0($x, $y, var$9, var$10, $rot);
    iaagg_Draw_color0();
}
function otcju_TAbstractCollection() {
    otcjl_TObject.call(this);
}
function otcju_TAbstractCollection__init_() {
    var var_0 = new otcju_TAbstractCollection();
    otcju_TAbstractCollection__init_0(var_0);
    return var_0;
}
function otcju_TAbstractCollection__init_0($this) {
    otcjl_TObject__init_0($this);
}
function iw_Blocks$9() {
    iw_Block.call(this);
}
function iw_Blocks$9__init_(var_0) {
    var var_1 = new iw_Blocks$9();
    iw_Blocks$9__init_0(var_1, var_0);
    return var_1;
}
function iw_Blocks$9__init_0($this, $name) {
    iw_Block__init_0($this, $name);
}
function iw_Blocks$9_draw($this, $x, $y) {
    var $region;
    $region = $this.$regions0.data[0];
    iaagg_Draw_rect0($region, $x * 16 | 0, $y * 16 | 0, i_Inferno_world.$tile($x, $y).$rotation2);
}
function it_Bullets$9$lambda$null$1$lambda$_13_0() {
    jl_Object.call(this);
    this.$_045 = null;
}
function it_Bullets$9$lambda$null$1$lambda$_13_0__init_(var_0) {
    var var_1 = new it_Bullets$9$lambda$null$1$lambda$_13_0();
    it_Bullets$9$lambda$null$1$lambda$_13_0__init_0(var_1, var_0);
    return var_1;
}
function it_Bullets$9$lambda$null$1$lambda$_13_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_045 = var$1;
}
function it_Bullets$9$lambda$null$1$lambda$_13_0_get(var$0, var$1) {
    it_Bullets$9_lambda$null$0(var$0.$_045, var$1);
}
function juz_Checksum() {
}
function juz_CRC32() {
    var a = this; jl_Object.call(a);
    a.$impl1 = null;
    a.$tbytes = Long_ZERO;
}
function juz_CRC32__init_() {
    var var_0 = new juz_CRC32();
    juz_CRC32__init_0(var_0);
    return var_0;
}
function juz_CRC32__init_0($this) {
    jl_Object__init_0($this);
    $this.$impl1 = cjj_CRC32__init_();
}
function juz_CRC32_getValue($this) {
    return cjj_CRC32_getValue($this.$impl1);
}
function juz_CRC32_reset($this) {
    cjj_CRC32_reset($this.$impl1);
    $this.$tbytes = Long_ZERO;
}
function juz_CRC32_update($this, $val) {
    var var$2, var$3;
    var$2 = $this.$impl1;
    var$3 = $rt_createByteArray(1);
    var$3.data[0] = $val << 24 >> 24;
    cjj_CRC32_update(var$2, var$3, 0, 1);
}
function juz_CRC32_update0($this, $buf, $off, $nbytes) {
    var var$4;
    var$4 = $buf.data.length;
    if ($off <= var$4 && $nbytes >= 0 && $off >= 0 && (var$4 - $off | 0) >= $nbytes) {
        cjj_CRC32_update($this.$impl1, $buf, $off, $nbytes);
        $this.$tbytes = Long_add($this.$tbytes, Long_fromInt($nbytes));
        return;
    }
    $rt_throw(jl_ArrayIndexOutOfBoundsException__init_());
}
function cjj_InfBlocks() {
    var a = this; jl_Object.call(a);
    a.$mode3 = 0;
    a.$left0 = 0;
    a.$table0 = 0;
    a.$index5 = 0;
    a.$blens = null;
    a.$bb = null;
    a.$tb = null;
    a.$bl = null;
    a.$bd = null;
    a.$tl = null;
    a.$td = null;
    a.$tli = null;
    a.$tdi = null;
    a.$codes = null;
    a.$last = 0;
    a.$bitk = 0;
    a.$bitb = 0;
    a.$hufts = null;
    a.$window = null;
    a.$end0 = 0;
    a.$read3 = 0;
    a.$write1 = 0;
    a.$check0 = 0;
    a.$inftree = null;
    a.$z2 = null;
}
var cjj_InfBlocks_inflate_mask = null;
var cjj_InfBlocks_border = null;
function cjj_InfBlocks_$callClinit() {
    cjj_InfBlocks_$callClinit = $rt_eraseClinit(cjj_InfBlocks);
    cjj_InfBlocks__clinit_();
}
function cjj_InfBlocks__init_(var_0, var_1) {
    var var_2 = new cjj_InfBlocks();
    cjj_InfBlocks__init_0(var_2, var_0, var_1);
    return var_2;
}
function cjj_InfBlocks__init_0($this, $z, $w) {
    cjj_InfBlocks_$callClinit();
    jl_Object__init_0($this);
    $this.$bb = $rt_createIntArray(1);
    $this.$tb = $rt_createIntArray(1);
    $this.$bl = $rt_createIntArray(1);
    $this.$bd = $rt_createIntArray(1);
    $this.$tl = $rt_createArray($rt_arraycls($rt_intcls()), 1);
    $this.$td = $rt_createArray($rt_arraycls($rt_intcls()), 1);
    $this.$tli = $rt_createIntArray(1);
    $this.$tdi = $rt_createIntArray(1);
    $this.$inftree = cjj_InfTree__init_();
    $this.$z2 = $z;
    $this.$codes = cjj_InfCodes__init_($this.$z2, $this);
    $this.$hufts = $rt_createIntArray(4320);
    $this.$window = $rt_createByteArray($w);
    $this.$end0 = $w;
    $this.$check0 = $z.$istate.$wrap ? 1 : 0;
    $this.$mode3 = 0;
    cjj_InfBlocks_reset($this);
}
function cjj_InfBlocks_reset($this) {
    if ($this.$mode3 == 6)
        cjj_InfCodes_free($this.$codes, $this.$z2);
    $this.$mode3 = 0;
    $this.$bitk = 0;
    $this.$bitb = 0;
    $this.$write1 = 0;
    $this.$read3 = 0;
    if ($this.$check0)
        $this.$z2.$adler.$reset();
}
function cjj_InfBlocks_proc($this, $r) {
    var $p, $n, $b, $k, $q, $m, var$8, var$9, var$10, var$11, $i, $t, var$14, var$15, $c, $j, var$18, var$19, var$20;
    $p = $this.$z2.$next_in_index;
    $n = $this.$z2.$avail_in;
    $b = $this.$bitb;
    $k = $this.$bitk;
    $q = $this.$write1;
    $m = $q >= $this.$read3 ? $this.$end0 - $q | 0 : ($this.$read3 - $q | 0) - 1 | 0;
    a: {
        b: {
            c: {
                d: {
                    e: while (true) {
                        f: {
                            g: {
                                h: {
                                    i: {
                                        j: {
                                            switch ($this.$mode3) {
                                                case 2:
                                                    break f;
                                                case 9:
                                                    $this.$bitb = $b;
                                                    $this.$bitk = $k;
                                                    $this.$z2.$avail_in = $n;
                                                    var$8 = $this.$z2;
                                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
                                                    $this.$z2.$next_in_index = $p;
                                                    $this.$write1 = $q;
                                                    return cjj_InfBlocks_inflate_flush($this, (-3));
                                                case 0:
                                                    break j;
                                                case 1:
                                                    break;
                                                case 3:
                                                    while ($k < 14) {
                                                        if (!$n) {
                                                            $this.$bitb = $b;
                                                            $this.$bitk = $k;
                                                            $this.$z2.$avail_in = $n;
                                                            var$8 = $this.$z2;
                                                            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
                                                            $this.$z2.$next_in_index = $p;
                                                            $this.$write1 = $q;
                                                            return cjj_InfBlocks_inflate_flush($this, $r);
                                                        }
                                                        $r = 0;
                                                        $n = $n + (-1) | 0;
                                                        var$9 = $this.$z2.$next_in.data;
                                                        var$10 = $p + 1 | 0;
                                                        $b = $b | (var$9[$p] & 255) << $k;
                                                        $k = $k + 8 | 0;
                                                        $p = var$10;
                                                    }
                                                    var$10 = $b & 16383;
                                                    $this.$table0 = var$10;
                                                    var$11 = var$10 & 31;
                                                    if (var$11 > 29)
                                                        break d;
                                                    var$10 = var$10 >> 5 & 31;
                                                    if (var$10 > 29)
                                                        break d;
                                                    k: {
                                                        var$10 = (258 + var$11 | 0) + var$10 | 0;
                                                        if (!($this.$blens !== null && $this.$blens.data.length >= var$10))
                                                            $this.$blens = $rt_createIntArray(var$10);
                                                        else {
                                                            $i = 0;
                                                            while (true) {
                                                                if ($i >= var$10)
                                                                    break k;
                                                                $this.$blens.data[$i] = 0;
                                                                $i = $i + 1 | 0;
                                                            }
                                                        }
                                                    }
                                                    $b = $b >>> 14;
                                                    $k = $k + (-14) | 0;
                                                    $this.$index5 = 0;
                                                    $this.$mode3 = 4;
                                                    break i;
                                                case 4:
                                                    break i;
                                                case 5:
                                                    break h;
                                                case 6:
                                                    break g;
                                                case 7:
                                                    break b;
                                                case 8:
                                                    break a;
                                                default:
                                                    $this.$bitb = $b;
                                                    $this.$bitk = $k;
                                                    $this.$z2.$avail_in = $n;
                                                    var$8 = $this.$z2;
                                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
                                                    $this.$z2.$next_in_index = $p;
                                                    $this.$write1 = $q;
                                                    return cjj_InfBlocks_inflate_flush($this, (-2));
                                            }
                                            while ($k < 32) {
                                                if (!$n) {
                                                    $this.$bitb = $b;
                                                    $this.$bitk = $k;
                                                    $this.$z2.$avail_in = $n;
                                                    var$8 = $this.$z2;
                                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
                                                    $this.$z2.$next_in_index = $p;
                                                    $this.$write1 = $q;
                                                    return cjj_InfBlocks_inflate_flush($this, $r);
                                                }
                                                $r = 0;
                                                $n = $n + (-1) | 0;
                                                var$9 = $this.$z2.$next_in.data;
                                                var$10 = $p + 1 | 0;
                                                $b = $b | (var$9[$p] & 255) << $k;
                                                $k = $k + 8 | 0;
                                                $p = var$10;
                                            }
                                            var$10 = ($b ^ (-1)) >>> 16 & 65535;
                                            var$11 = $b & 65535;
                                            if (var$10 != var$11) {
                                                $this.$mode3 = 9;
                                                $this.$z2.$msg = $rt_s(592);
                                                $this.$bitb = $b;
                                                $this.$bitk = $k;
                                                $this.$z2.$avail_in = $n;
                                                var$8 = $this.$z2;
                                                var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
                                                $this.$z2.$next_in_index = $p;
                                                $this.$write1 = $q;
                                                return cjj_InfBlocks_inflate_flush($this, (-3));
                                            }
                                            $this.$left0 = var$11;
                                            $k = 0;
                                            $this.$mode3 = $this.$left0 ? 2 : !$this.$last ? 0 : 7;
                                            $b = $k;
                                            continue e;
                                        }
                                        while ($k < 3) {
                                            if (!$n) {
                                                $this.$bitb = $b;
                                                $this.$bitk = $k;
                                                $this.$z2.$avail_in = $n;
                                                var$8 = $this.$z2;
                                                var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
                                                $this.$z2.$next_in_index = $p;
                                                $this.$write1 = $q;
                                                return cjj_InfBlocks_inflate_flush($this, $r);
                                            }
                                            $r = 0;
                                            $n = $n + (-1) | 0;
                                            var$9 = $this.$z2.$next_in.data;
                                            var$10 = $p + 1 | 0;
                                            $b = $b | (var$9[$p] & 255) << $k;
                                            $k = $k + 8 | 0;
                                            $p = var$10;
                                        }
                                        l: {
                                            $t = $b & 7;
                                            $this.$last = $t & 1;
                                            switch ($t >>> 1) {
                                                case 0:
                                                    var$10 = $b >>> 3;
                                                    var$11 = $k + (-3) | 0;
                                                    var$14 = var$11 & 7;
                                                    $b = var$10 >>> var$14;
                                                    $k = var$11 - var$14 | 0;
                                                    $this.$mode3 = 1;
                                                    break l;
                                                case 1:
                                                    cjj_InfTree_inflate_trees_fixed($this.$bl, $this.$bd, $this.$tl, $this.$td, $this.$z2);
                                                    cjj_InfCodes_init($this.$codes, $this.$bl.data[0], $this.$bd.data[0], $this.$tl.data[0], 0, $this.$td.data[0], 0);
                                                    $b = $b >>> 3;
                                                    $k = $k + (-3) | 0;
                                                    $this.$mode3 = 6;
                                                    break l;
                                                case 2:
                                                    $b = $b >>> 3;
                                                    $k = $k + (-3) | 0;
                                                    $this.$mode3 = 3;
                                                    break l;
                                                case 3:
                                                    var$10 = $b >>> 3;
                                                    var$11 = $k + (-3) | 0;
                                                    $this.$mode3 = 9;
                                                    $this.$z2.$msg = $rt_s(593);
                                                    $this.$bitb = var$10;
                                                    $this.$bitk = var$11;
                                                    $this.$z2.$avail_in = $n;
                                                    var$8 = $this.$z2;
                                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
                                                    $this.$z2.$next_in_index = $p;
                                                    $this.$write1 = $q;
                                                    return cjj_InfBlocks_inflate_flush($this, (-3));
                                                default:
                                            }
                                        }
                                        continue e;
                                    }
                                    while ($this.$index5 < (4 + ($this.$table0 >>> 10) | 0)) {
                                        while ($k < 3) {
                                            if (!$n) {
                                                $this.$bitb = $b;
                                                $this.$bitk = $k;
                                                $this.$z2.$avail_in = $n;
                                                var$8 = $this.$z2;
                                                var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
                                                $this.$z2.$next_in_index = $p;
                                                $this.$write1 = $q;
                                                return cjj_InfBlocks_inflate_flush($this, $r);
                                            }
                                            $r = 0;
                                            $n = $n + (-1) | 0;
                                            var$9 = $this.$z2.$next_in.data;
                                            var$10 = $p + 1 | 0;
                                            $b = $b | (var$9[$p] & 255) << $k;
                                            $k = $k + 8 | 0;
                                            $p = var$10;
                                        }
                                        var$15 = $this.$blens.data;
                                        var$9 = cjj_InfBlocks_border.data;
                                        var$10 = $this.$index5;
                                        $this.$index5 = var$10 + 1 | 0;
                                        var$15[var$9[var$10]] = $b & 7;
                                        $b = $b >>> 3;
                                        $k = $k + (-3) | 0;
                                    }
                                    while ($this.$index5 < 19) {
                                        var$15 = $this.$blens.data;
                                        var$9 = cjj_InfBlocks_border.data;
                                        var$10 = $this.$index5;
                                        $this.$index5 = var$10 + 1 | 0;
                                        var$15[var$9[var$10]] = 0;
                                    }
                                    $this.$bb.data[0] = 7;
                                    var$10 = cjj_InfTree_inflate_trees_bits($this.$inftree, $this.$blens, $this.$bb, $this.$tb, $this.$hufts, $this.$z2);
                                    if (var$10) {
                                        if (var$10 == (-3)) {
                                            $this.$blens = null;
                                            $this.$mode3 = 9;
                                        }
                                        $this.$bitb = $b;
                                        $this.$bitk = $k;
                                        $this.$z2.$avail_in = $n;
                                        var$8 = $this.$z2;
                                        var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
                                        $this.$z2.$next_in_index = $p;
                                        $this.$write1 = $q;
                                        return cjj_InfBlocks_inflate_flush($this, var$10);
                                    }
                                    $this.$index5 = 0;
                                    $this.$mode3 = 5;
                                }
                                while (true) {
                                    var$10 = $this.$table0;
                                    if ($this.$index5 >= ((258 + (var$10 & 31) | 0) + (var$10 >> 5 & 31) | 0))
                                        break;
                                    var$10 = $this.$bb.data[0];
                                    while ($k < var$10) {
                                        if (!$n) {
                                            $this.$bitb = $b;
                                            $this.$bitk = $k;
                                            $this.$z2.$avail_in = $n;
                                            var$8 = $this.$z2;
                                            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
                                            $this.$z2.$next_in_index = $p;
                                            $this.$write1 = $q;
                                            return cjj_InfBlocks_inflate_flush($this, $r);
                                        }
                                        $r = 0;
                                        $n = $n + (-1) | 0;
                                        var$9 = $this.$z2.$next_in.data;
                                        var$11 = $p + 1 | 0;
                                        $b = $b | (var$9[$p] & 255) << $k;
                                        $k = $k + 8 | 0;
                                        $p = var$11;
                                    }
                                    var$10 = $this.$hufts.data[(($this.$tb.data[0] + ($b & cjj_InfBlocks_inflate_mask.data[var$10]) | 0) * 3 | 0) + 1 | 0];
                                    $c = $this.$hufts.data[(($this.$tb.data[0] + ($b & cjj_InfBlocks_inflate_mask.data[var$10]) | 0) * 3 | 0) + 2 | 0];
                                    var$11 = $rt_compare($c, 16);
                                    if (var$11 < 0) {
                                        $b = $b >>> var$10;
                                        $k = $k - var$10 | 0;
                                        var$9 = $this.$blens.data;
                                        var$10 = $this.$index5;
                                        $this.$index5 = var$10 + 1 | 0;
                                        var$9[var$10] = $c;
                                    } else {
                                        var$14 = $rt_compare($c, 18);
                                        $i = !var$14 ? 7 : $c - 14 | 0;
                                        $j = var$14 ? 3 : 11;
                                        while ($k < (var$10 + $i | 0)) {
                                            if (!$n) {
                                                $this.$bitb = $b;
                                                $this.$bitk = $k;
                                                $this.$z2.$avail_in = $n;
                                                var$8 = $this.$z2;
                                                var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
                                                $this.$z2.$next_in_index = $p;
                                                $this.$write1 = $q;
                                                return cjj_InfBlocks_inflate_flush($this, $r);
                                            }
                                            $r = 0;
                                            $n = $n + (-1) | 0;
                                            var$9 = $this.$z2.$next_in.data;
                                            var$14 = $p + 1 | 0;
                                            $b = $b | (var$9[$p] & 255) << $k;
                                            $k = $k + 8 | 0;
                                            $p = var$14;
                                        }
                                        var$14 = $b >>> var$10;
                                        var$10 = $k - var$10 | 0;
                                        var$18 = $j + (var$14 & cjj_InfBlocks_inflate_mask.data[$i]) | 0;
                                        $b = var$14 >>> $i;
                                        $k = var$10 - $i | 0;
                                        var$19 = $this.$index5;
                                        var$20 = $this.$table0;
                                        if ((var$19 + var$18 | 0) > ((258 + (var$20 & 31) | 0) + (var$20 >> 5 & 31) | 0))
                                            break c;
                                        if (!var$11 && var$19 < 1)
                                            break c;
                                        var$10 = var$11 ? 0 : $this.$blens.data[var$19 - 1 | 0];
                                        while (true) {
                                            var$9 = $this.$blens.data;
                                            var$11 = var$19 + 1 | 0;
                                            var$9[var$19] = var$10;
                                            var$18 = var$18 + (-1) | 0;
                                            if (!var$18)
                                                break;
                                            var$19 = var$11;
                                        }
                                        $this.$index5 = var$11;
                                    }
                                }
                                $this.$tb.data[0] = (-1);
                                $this.$bl.data[0] = 9;
                                $this.$bd.data[0] = 6;
                                var$10 = $this.$table0;
                                var$10 = cjj_InfTree_inflate_trees_dynamic($this.$inftree, 257 + (var$10 & 31) | 0, 1 + (var$10 >> 5 & 31) | 0, $this.$blens, $this.$bl, $this.$bd, $this.$tli, $this.$tdi, $this.$hufts, $this.$z2);
                                if (var$10) {
                                    if (var$10 == (-3)) {
                                        $this.$blens = null;
                                        $this.$mode3 = 9;
                                    }
                                    $this.$bitb = $b;
                                    $this.$bitk = $k;
                                    $this.$z2.$avail_in = $n;
                                    var$8 = $this.$z2;
                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
                                    $this.$z2.$next_in_index = $p;
                                    $this.$write1 = $q;
                                    return cjj_InfBlocks_inflate_flush($this, var$10);
                                }
                                cjj_InfCodes_init($this.$codes, $this.$bl.data[0], $this.$bd.data[0], $this.$hufts, $this.$tli.data[0], $this.$hufts, $this.$tdi.data[0]);
                                $this.$mode3 = 6;
                            }
                            $this.$bitb = $b;
                            $this.$bitk = $k;
                            $this.$z2.$avail_in = $n;
                            var$8 = $this.$z2;
                            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
                            $this.$z2.$next_in_index = $p;
                            $this.$write1 = $q;
                            var$10 = cjj_InfCodes_proc($this.$codes, $r);
                            if (var$10 != 1)
                                break e;
                            $r = 0;
                            cjj_InfCodes_free($this.$codes, $this.$z2);
                            $p = $this.$z2.$next_in_index;
                            $n = $this.$z2.$avail_in;
                            $b = $this.$bitb;
                            $k = $this.$bitk;
                            $q = $this.$write1;
                            $m = $q >= $this.$read3 ? $this.$end0 - $q | 0 : ($this.$read3 - $q | 0) - 1 | 0;
                            if ($this.$last) {
                                $this.$mode3 = 7;
                                break b;
                            }
                            $this.$mode3 = 0;
                            continue e;
                        }
                        if (!$n) {
                            $this.$bitb = $b;
                            $this.$bitk = $k;
                            $this.$z2.$avail_in = $n;
                            var$8 = $this.$z2;
                            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
                            $this.$z2.$next_in_index = $p;
                            $this.$write1 = $q;
                            return cjj_InfBlocks_inflate_flush($this, $r);
                        }
                        if (!$m) {
                            if ($q == $this.$end0 && $this.$read3) {
                                $q = 0;
                                $m = $q >= $this.$read3 ? $this.$end0 - $q | 0 : ($this.$read3 - $q | 0) - 1 | 0;
                            }
                            if (!$m) {
                                $this.$write1 = $q;
                                var$10 = cjj_InfBlocks_inflate_flush($this, $r);
                                $q = $this.$write1;
                                $m = $q >= $this.$read3 ? $this.$end0 - $q | 0 : ($this.$read3 - $q | 0) - 1 | 0;
                                if ($q == $this.$end0 && $this.$read3) {
                                    $q = 0;
                                    $m = $q >= $this.$read3 ? $this.$end0 - $q | 0 : ($this.$read3 - $q | 0) - 1 | 0;
                                }
                                if (!$m) {
                                    $this.$bitb = $b;
                                    $this.$bitk = $k;
                                    $this.$z2.$avail_in = $n;
                                    var$8 = $this.$z2;
                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
                                    $this.$z2.$next_in_index = $p;
                                    $this.$write1 = $q;
                                    return cjj_InfBlocks_inflate_flush($this, var$10);
                                }
                            }
                        }
                        $r = 0;
                        var$10 = $this.$left0;
                        if (var$10 > $n)
                            var$10 = $n;
                        if (var$10 > $m)
                            var$10 = $m;
                        jl_System_arraycopy($this.$z2.$next_in, $p, $this.$window, $q, var$10);
                        $p = $p + var$10 | 0;
                        $n = $n - var$10 | 0;
                        $q = $q + var$10 | 0;
                        $m = $m - var$10 | 0;
                        var$10 = $this.$left0 - var$10 | 0;
                        $this.$left0 = var$10;
                        if (var$10)
                            continue;
                        $this.$mode3 = !$this.$last ? 0 : 7;
                    }
                    return cjj_InfBlocks_inflate_flush($this, var$10);
                }
                $this.$mode3 = 9;
                $this.$z2.$msg = $rt_s(594);
                $this.$bitb = $b;
                $this.$bitk = $k;
                $this.$z2.$avail_in = $n;
                var$8 = $this.$z2;
                var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
                $this.$z2.$next_in_index = $p;
                $this.$write1 = $q;
                return cjj_InfBlocks_inflate_flush($this, (-3));
            }
            $this.$blens = null;
            $this.$mode3 = 9;
            $this.$z2.$msg = $rt_s(595);
            $this.$bitb = $b;
            $this.$bitk = $k;
            $this.$z2.$avail_in = $n;
            var$8 = $this.$z2;
            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
            $this.$z2.$next_in_index = $p;
            $this.$write1 = $q;
            return cjj_InfBlocks_inflate_flush($this, (-3));
        }
        $this.$write1 = $q;
        var$10 = cjj_InfBlocks_inflate_flush($this, $r);
        $q = $this.$write1;
        if ($this.$read3 != $this.$write1) {
            $this.$bitb = $b;
            $this.$bitk = $k;
            $this.$z2.$avail_in = $n;
            var$8 = $this.$z2;
            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
            $this.$z2.$next_in_index = $p;
            $this.$write1 = $q;
            return cjj_InfBlocks_inflate_flush($this, var$10);
        }
        $this.$mode3 = 8;
    }
    $this.$bitb = $b;
    $this.$bitk = $k;
    $this.$z2.$avail_in = $n;
    var$8 = $this.$z2;
    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z2.$next_in_index | 0));
    $this.$z2.$next_in_index = $p;
    $this.$write1 = $q;
    return cjj_InfBlocks_inflate_flush($this, 1);
}
function cjj_InfBlocks_free($this) {
    cjj_InfBlocks_reset($this);
    $this.$window = null;
    $this.$hufts = null;
}
function cjj_InfBlocks_inflate_flush($this, $r) {
    var $p, $q, $n, var$5, var$6, var$7, var$8;
    $p = $this.$z2.$next_out_index;
    $q = $this.$read3;
    $n = ($q > $this.$write1 ? $this.$end0 : $this.$write1) - $q | 0;
    if ($n > $this.$z2.$avail_out)
        $n = $this.$z2.$avail_out;
    if ($n && $r == (-5))
        $r = 0;
    var$5 = $this.$z2;
    var$5.$avail_out = var$5.$avail_out - $n | 0;
    var$5 = $this.$z2;
    var$5.$total_out = Long_add(var$5.$total_out, Long_fromInt($n));
    if ($this.$check0 && $n > 0)
        $this.$z2.$adler.$update0($this.$window, $q, $n);
    jl_System_arraycopy($this.$window, $q, $this.$z2.$next_out, $p, $n);
    var$6 = $p + $n | 0;
    var$7 = $q + $n | 0;
    if (var$7 == $this.$end0) {
        if ($this.$write1 == $this.$end0)
            $this.$write1 = 0;
        var$8 = $this.$write1 - 0 | 0;
        if (var$8 > $this.$z2.$avail_out)
            var$8 = $this.$z2.$avail_out;
        if (var$8 && $r == (-5))
            $r = 0;
        var$5 = $this.$z2;
        var$5.$avail_out = var$5.$avail_out - var$8 | 0;
        var$5 = $this.$z2;
        var$5.$total_out = Long_add(var$5.$total_out, Long_fromInt(var$8));
        if ($this.$check0 && var$8 > 0)
            $this.$z2.$adler.$update0($this.$window, 0, var$8);
        jl_System_arraycopy($this.$window, 0, $this.$z2.$next_out, var$6, var$8);
        var$6 = var$6 + var$8 | 0;
        var$7 = 0 + var$8 | 0;
    }
    $this.$z2.$next_out_index = var$6;
    $this.$read3 = var$7;
    return $r;
}
function cjj_InfBlocks__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(17);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 1;
    var$2[2] = 3;
    var$2[3] = 7;
    var$2[4] = 15;
    var$2[5] = 31;
    var$2[6] = 63;
    var$2[7] = 127;
    var$2[8] = 255;
    var$2[9] = 511;
    var$2[10] = 1023;
    var$2[11] = 2047;
    var$2[12] = 4095;
    var$2[13] = 8191;
    var$2[14] = 16383;
    var$2[15] = 32767;
    var$2[16] = 65535;
    cjj_InfBlocks_inflate_mask = var$1;
    var$1 = $rt_createIntArray(19);
    var$2 = var$1.data;
    var$2[0] = 16;
    var$2[1] = 17;
    var$2[2] = 18;
    var$2[3] = 0;
    var$2[4] = 8;
    var$2[5] = 7;
    var$2[6] = 9;
    var$2[7] = 6;
    var$2[8] = 10;
    var$2[9] = 5;
    var$2[10] = 11;
    var$2[11] = 4;
    var$2[12] = 12;
    var$2[13] = 3;
    var$2[14] = 13;
    var$2[15] = 2;
    var$2[16] = 14;
    var$2[17] = 1;
    var$2[18] = 15;
    cjj_InfBlocks_border = var$1;
}
function it_Phases$lambda$null$58$lambda$_9_0() {
    jl_Object.call(this);
    this.$_046 = 0;
}
function it_Phases$lambda$null$58$lambda$_9_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$null$58$lambda$_9_0();
    it_Phases$lambda$null$58$lambda$_9_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$null$58$lambda$_9_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_046 = var$1;
}
function it_Phases$lambda$null$58$lambda$_9_0_run(var$0) {
    it_Phases_lambda$null$57(var$0.$_046);
}
function it_Fx$lambda$static$24$lambda$_7_0() {
    jl_Object.call(this);
    this.$_047 = null;
}
function it_Fx$lambda$static$24$lambda$_7_0__init_(var_0) {
    var var_1 = new it_Fx$lambda$static$24$lambda$_7_0();
    it_Fx$lambda$static$24$lambda$_7_0__init_0(var_1, var_0);
    return var_1;
}
function it_Fx$lambda$static$24$lambda$_7_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_047 = var$1;
}
function it_Fx$lambda$static$24$lambda$_7_0_get(var$0, var$1, var$2) {
    it_Fx_lambda$null$23(var$0.$_047, var$1, var$2);
}
function iaagg_TextureRegion() {
    var a = this; jl_Object.call(a);
    a.$texture0 = null;
    a.$u = 0.0;
    a.$v = 0.0;
    a.$u2 = 0.0;
    a.$v2 = 0.0;
    a.$width9 = 0;
    a.$height7 = 0;
}
function iaagg_TextureRegion__init_1() {
    var var_0 = new iaagg_TextureRegion();
    iaagg_TextureRegion__init_2(var_0);
    return var_0;
}
function iaagg_TextureRegion__init_3(var_0) {
    var var_1 = new iaagg_TextureRegion();
    iaagg_TextureRegion__init_4(var_1, var_0);
    return var_1;
}
function iaagg_TextureRegion__init_5(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new iaagg_TextureRegion();
    iaagg_TextureRegion__init_6(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function iaagg_TextureRegion__init_0(var_0) {
    var var_1 = new iaagg_TextureRegion();
    iaagg_TextureRegion__init_7(var_1, var_0);
    return var_1;
}
function iaagg_TextureRegion__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new iaagg_TextureRegion();
    iaagg_TextureRegion__init_8(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function iaagg_TextureRegion__init_2($this) {
    jl_Object__init_0($this);
}
function iaagg_TextureRegion__init_4($this, $texture) {
    jl_Object__init_0($this);
    if ($texture === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(596)));
    $this.$texture0 = $texture;
    $this.$set12(0, 0, $texture.$getWidth0(), $texture.$getHeight0());
}
function iaagg_TextureRegion__init_6($this, $texture, $x, $y, $width, $height) {
    jl_Object__init_0($this);
    $this.$texture0 = $texture;
    $this.$set12($x, $y, $width, $height);
}
function iaagg_TextureRegion__init_7($this, $region) {
    jl_Object__init_0($this);
    $this.$set13($region);
}
function iaagg_TextureRegion__init_8($this, $region, $x, $y, $width, $height) {
    jl_Object__init_0($this);
    $this.$set14($region, $x, $y, $width, $height);
}
function iaagg_TextureRegion_asAtlas($this) {
    return $this;
}
function iaagg_TextureRegion_set($this, $texture) {
    $this.$texture0 = $texture;
    $this.$set12(0, 0, $texture.$getWidth0(), $texture.$getHeight0());
}
function iaagg_TextureRegion_set0($this, $x, $y, $width, $height) {
    var $invTexWidth, $invTexHeight;
    $invTexWidth = 1.0 / $this.$texture0.$getWidth0();
    $invTexHeight = 1.0 / $this.$texture0.$getHeight0();
    $this.$set9($x * $invTexWidth, $y * $invTexHeight, ($x + $width | 0) * $invTexWidth, ($y + $height | 0) * $invTexHeight);
    $this.$width9 = jl_Math_abs($width);
    $this.$height7 = jl_Math_abs($height);
}
function iaagg_TextureRegion_set1($this, $u, $v, $u2, $v2) {
    var $texWidth, $texHeight, var$7, var$8, var$9, $adjustX, $adjustY;
    $texWidth = $this.$texture0.$getWidth0();
    $texHeight = $this.$texture0.$getHeight0();
    var$7 = jl_Math_abs0($u2 - $u);
    var$8 = $texWidth;
    $this.$width9 = jl_Math_round0(var$7 * var$8);
    var$7 = jl_Math_abs0($v2 - $v);
    var$9 = $texHeight;
    $this.$height7 = jl_Math_round0(var$7 * var$9);
    if ($this.$width9 == 1 && $this.$height7 == 1) {
        $adjustX = 0.25 / var$8;
        $u = $u + $adjustX;
        $u2 = $u2 - $adjustX;
        $adjustY = 0.25 / var$9;
        $v = $v + $adjustY;
        $v2 = $v2 - $adjustY;
    }
    $this.$u = $u;
    $this.$v = $v;
    $this.$u2 = $u2;
    $this.$v2 = $v2;
}
function iaagg_TextureRegion_set2($this, $region) {
    $this.$texture0 = $region.$texture0;
    $this.$set9($region.$u, $region.$v, $region.$u2, $region.$v2);
}
function iaagg_TextureRegion_set3($this, $region, $x, $y, $width, $height) {
    $this.$texture0 = $region.$texture0;
    $this.$set12($region.$getX0() + $x | 0, $region.$getY0() + $y | 0, $width, $height);
}
function iaagg_TextureRegion_getTexture($this) {
    return $this.$texture0;
}
function iaagg_TextureRegion_getU($this) {
    return $this.$u;
}
function iaagg_TextureRegion_getV($this) {
    return $this.$v;
}
function iaagg_TextureRegion_getX($this) {
    return jl_Math_round0($this.$u * $this.$texture0.$getWidth0());
}
function iaagg_TextureRegion_getY($this) {
    return jl_Math_round0($this.$v * $this.$texture0.$getHeight0());
}
function iaagg_TextureRegion_getWidth($this) {
    return $this.$width9;
}
function iaagg_TextureRegion_getHeight($this) {
    return $this.$height7;
}
function iaagg_TextureRegion_flip($this, $x, $y) {
    var $temp;
    if ($x) {
        $temp = $this.$u;
        $this.$u = $this.$u2;
        $this.$u2 = $temp;
    }
    if ($y) {
        $temp = $this.$v;
        $this.$v = $this.$v2;
        $this.$v2 = $temp;
    }
}
function iaagg_TextureRegion_split($this, $tileWidth, $tileHeight) {
    var $x, $y, $width, $height, $sw, $sh, $tiles, $cy, $cx, var$12;
    if ($this.$texture0 === null)
        return null;
    $x = $this.$getX0();
    $y = $this.$getY0();
    $width = $this.$width9;
    $height = $this.$height7;
    $sw = $width / $tileWidth | 0;
    $sh = $height / $tileHeight | 0;
    $tiles = $rt_createMultiArray($rt_arraycls($rt_arraycls(iaagg_TextureRegion)), [$sh, $sw]);
    $cy = 0;
    while ($cy < $sh) {
        $cx = 0;
        var$12 = $x;
        while ($cx < $sw) {
            $tiles.data[$cx].data[$cy] = iaagg_TextureRegion__init_5($this.$texture0, var$12, $y, $tileWidth, $tileHeight);
            $cx = $cx + 1 | 0;
            var$12 = var$12 + $tileWidth | 0;
        }
        $cy = $cy + 1 | 0;
        $y = $y + $tileHeight | 0;
    }
    return $tiles;
}
function iaagg_TextureAtlas$AtlasRegion() {
    var a = this; iaagg_TextureRegion.call(a);
    a.$index6 = 0;
    a.$name11 = null;
    a.$offsetX0 = 0.0;
    a.$offsetY0 = 0.0;
    a.$packedWidth = 0;
    a.$packedHeight = 0;
    a.$originalWidth0 = 0;
    a.$originalHeight0 = 0;
    a.$rotate0 = 0;
    a.$splits0 = null;
    a.$pads0 = null;
}
function iaagg_TextureAtlas$AtlasRegion__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new iaagg_TextureAtlas$AtlasRegion();
    iaagg_TextureAtlas$AtlasRegion__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function iaagg_TextureAtlas$AtlasRegion__init_1(var_0) {
    var var_1 = new iaagg_TextureAtlas$AtlasRegion();
    iaagg_TextureAtlas$AtlasRegion__init_2(var_1, var_0);
    return var_1;
}
function iaagg_TextureAtlas$AtlasRegion__init_0($this, $texture, $x, $y, $width, $height) {
    iaagg_TextureRegion__init_6($this, $texture, $x, $y, $width, $height);
    $this.$originalWidth0 = $width;
    $this.$originalHeight0 = $height;
    $this.$packedWidth = $width;
    $this.$packedHeight = $height;
}
function iaagg_TextureAtlas$AtlasRegion__init_2($this, $region) {
    iaagg_TextureRegion__init_2($this);
    $this.$set13($region);
    $this.$index6 = $region.$index6;
    $this.$name11 = $region.$name11;
    $this.$offsetX0 = $region.$offsetX0;
    $this.$offsetY0 = $region.$offsetY0;
    $this.$packedWidth = $region.$packedWidth;
    $this.$packedHeight = $region.$packedHeight;
    $this.$originalWidth0 = $region.$originalWidth0;
    $this.$originalHeight0 = $region.$originalHeight0;
    $this.$rotate0 = $region.$rotate0;
    $this.$splits0 = $region.$splits0;
}
function iaagg_TextureAtlas$AtlasRegion_flip($this, $x, $y) {
    iaagg_TextureRegion_flip($this, $x, $y);
    if ($x)
        $this.$offsetX0 = $this.$originalWidth0 - $this.$offsetX0 - $this.$getRotatedPackedWidth();
    if ($y)
        $this.$offsetY0 = $this.$originalHeight0 - $this.$offsetY0 - $this.$getRotatedPackedHeight();
}
function iaagg_TextureAtlas$AtlasRegion_getRotatedPackedWidth($this) {
    return !$this.$rotate0 ? $this.$packedWidth : $this.$packedHeight;
}
function iaagg_TextureAtlas$AtlasRegion_getRotatedPackedHeight($this) {
    return !$this.$rotate0 ? $this.$packedHeight : $this.$packedWidth;
}
function iaagg_TextureAtlas$AtlasRegion_toString($this) {
    return $this.$name11;
}
function iw_MapLoader$1() {
    var a = this; iaagg_TextureAtlas$AtlasRegion.call(a);
    a.$val$regionName = null;
    a.$this$010 = null;
}
function iw_MapLoader$1__init_(var_0, var_1, var_2) {
    var var_3 = new iw_MapLoader$1();
    iw_MapLoader$1__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function iw_MapLoader$1__init_0($this, $this$0, $x0, var$3) {
    $this.$this$010 = $this$0;
    $this.$val$regionName = var$3;
    iaagg_TextureAtlas$AtlasRegion__init_2($this, $x0);
    $this.$name11 = $this.$val$regionName;
}
function ju_Random() {
    jl_Object.call(this);
}
function ju_Random__init_() {
    var var_0 = new ju_Random();
    ju_Random__init_0(var_0);
    return var_0;
}
function ju_Random__init_1(var_0) {
    var var_1 = new ju_Random();
    ju_Random__init_2(var_1, var_0);
    return var_1;
}
function ju_Random__init_0($this) {
    jl_Object__init_0($this);
}
function ju_Random__init_2($this, $seed) {
    jl_Object__init_0($this);
}
function ju_Random_next($this, $bits) {
    if ($bits == 32)
        return $this.$nextDouble() * 4.294967295E9 + (-2.147483648E9) | 0;
    return $this.$nextDouble() * Long_toNumber(Long_shl(Long_fromInt(1), jl_Math_min1(32, $bits))) | 0;
}
function ju_Random_nextInt($this) {
    return $this.$next3(32);
}
function ju_Random_nextInt0($this, $n) {
    return $this.$nextDouble() * $n | 0;
}
function ju_Random_nextLong($this) {
    return Long_or(Long_shl(Long_fromInt($this.$nextInt0()), 32), Long_fromInt($this.$nextInt0()));
}
function ju_Random_nextDouble($this) {
    return Math.random();
}
function it_Phases$lambda$null$1$lambda$_66_0() {
    jl_Object.call(this);
    this.$_048 = 0.0;
}
function it_Phases$lambda$null$1$lambda$_66_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$null$1$lambda$_66_0();
    it_Phases$lambda$null$1$lambda$_66_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$null$1$lambda$_66_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_048 = var$1;
}
function it_Phases$lambda$null$1$lambda$_66_0_get(var$0, var$1) {
    it_Phases_lambda$null$0(var$0.$_048, var$1);
}
function it_Phases$lambda$null$3$lambda$_64_0() {
    jl_Object.call(this);
    this.$_049 = 0.0;
}
function it_Phases$lambda$null$3$lambda$_64_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$null$3$lambda$_64_0();
    it_Phases$lambda$null$3$lambda$_64_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$null$3$lambda$_64_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_049 = var$1;
}
function it_Phases$lambda$null$3$lambda$_64_0_get(var$0, var$1) {
    it_Phases_lambda$null$2(var$0.$_049, var$1);
}
function iaau_Eachable() {
}
function jnc_CharsetDecoder() {
    var a = this; jl_Object.call(a);
    a.$charset1 = null;
    a.$averageCharsPerByte = 0.0;
    a.$maxCharsPerByte = 0.0;
    a.$replacement0 = null;
    a.$malformedAction0 = null;
    a.$unmappableAction0 = null;
    a.$state = 0;
}
function jnc_CharsetDecoder__init_(var_0, var_1, var_2) {
    var var_3 = new jnc_CharsetDecoder();
    jnc_CharsetDecoder__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jnc_CharsetDecoder__init_0($this, $cs, $averageCharsPerByte, $maxCharsPerByte) {
    jl_Object__init_0($this);
    $this.$replacement0 = $rt_s(597);
    jnc_CodingErrorAction_$callClinit();
    $this.$malformedAction0 = jnc_CodingErrorAction_REPORT;
    $this.$unmappableAction0 = jnc_CodingErrorAction_REPORT;
    if ($averageCharsPerByte <= 0.0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(598)).$append13($averageCharsPerByte).$toString()));
    if ($maxCharsPerByte > 0.0) {
        $this.$charset1 = $cs;
        $this.$averageCharsPerByte = $averageCharsPerByte;
        $this.$maxCharsPerByte = $maxCharsPerByte;
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(599)).$append13($maxCharsPerByte).$toString()));
}
function jnc_CharsetDecoder_onMalformedInput($this, $newAction) {
    if ($newAction !== null) {
        $this.$malformedAction0 = $newAction;
        $this.$implOnMalformedInput($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(600)));
}
function jnc_CharsetDecoder_implOnMalformedInput($this, $newAction) {
    return;
}
function jnc_CharsetDecoder_onUnmappableCharacter($this, $newAction) {
    if ($newAction !== null) {
        $this.$unmappableAction0 = $newAction;
        $this.$implOnUnmappableCharacter($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(600)));
}
function jnc_CharsetDecoder_implOnUnmappableCharacter($this, $newAction) {
    return;
}
function jnc_CharsetDecoder_decode0($this, $in, $out, $endOfInput) {
    var $result, $e, var$6, $$je;
    if (!($this.$state == 2 && !$endOfInput) && $this.$state != 3) {
        $this.$state = $endOfInput ? 2 : 1;
        while (true) {
            try {
                $result = $this.$decodeLoop($in, $out);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_RuntimeException) {
                    $e = $$je;
                    $rt_throw(jnc_CoderMalfunctionError__init_($e));
                } else {
                    throw $$e;
                }
            }
            if ($result.$isOverflow())
                return $result;
            if ($result.$isUnderflow()) {
                if ($endOfInput && jn_Buffer_hasRemaining($in)) {
                    var$6 = $this.$malformedAction0;
                    jnc_CodingErrorAction_$callClinit();
                    if (var$6 === jnc_CodingErrorAction_REPORT)
                        return jnc_CoderResult_malformedForLength(jn_Buffer_remaining($in));
                    if (jn_Buffer_remaining($out) <= $this.$replacement0.$length())
                        return jnc_CoderResult_OVERFLOW;
                    $in.$position9(jn_Buffer_position($in) + jn_Buffer_remaining($in) | 0);
                    if ($this.$malformedAction0 === jnc_CodingErrorAction_REPLACE)
                        jn_CharBuffer_put1($out, $this.$replacement0);
                }
                return $result;
            }
            if ($result.$isMalformed()) {
                var$6 = $this.$malformedAction0;
                jnc_CodingErrorAction_$callClinit();
                if (var$6 === jnc_CodingErrorAction_REPORT)
                    return $result;
                if ($this.$malformedAction0 === jnc_CodingErrorAction_REPLACE) {
                    if (jn_Buffer_remaining($out) < $this.$replacement0.$length())
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put1($out, $this.$replacement0);
                }
                $in.$position9(jn_Buffer_position($in) + $result.$length() | 0);
            } else if ($result.$isUnmappable()) {
                var$6 = $this.$unmappableAction0;
                jnc_CodingErrorAction_$callClinit();
                if (var$6 === jnc_CodingErrorAction_REPORT)
                    break;
                if ($this.$unmappableAction0 === jnc_CodingErrorAction_REPLACE) {
                    if (jn_Buffer_remaining($out) < $this.$replacement0.$length())
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put1($out, $this.$replacement0);
                }
                $in.$position9(jn_Buffer_position($in) + $result.$length() | 0);
            }
        }
        return $result;
    }
    $rt_throw(jl_IllegalStateException__init_0());
}
function jnc_CharsetDecoder_flush($this, $out) {
    if ($this.$state != 3 && $this.$state != 2)
        $rt_throw(jl_IllegalStateException__init_0());
    $this.$state = 3;
    return $this.$implFlush0($out);
}
function jnc_CharsetDecoder_reset($this) {
    $this.$state = 0;
    $this.$implReset();
    return $this;
}
function jnc_CharsetDecoder_decode($this, $in) {
    var $out, $result, var$4;
    if ($this.$state && $this.$state != 3)
        $rt_throw(jl_IllegalStateException__init_0());
    if (!jn_Buffer_remaining($in))
        return jn_CharBuffer_allocate(0);
    if ($this.$state)
        jnc_CharsetDecoder_reset($this);
    $out = jn_CharBuffer_allocate(jl_Math_max1(8, jn_Buffer_remaining($in) * $this.$averageCharsPerByte | 0));
    while (true) {
        $result = jnc_CharsetDecoder_decode0($this, $in, $out, 0);
        if ($result.$isUnderflow())
            break;
        if ($result.$isOverflow())
            $out = jnc_CharsetDecoder_expand($this, $out);
        if (!$result.$isError())
            continue;
        $result.$throwException();
    }
    var$4 = jnc_CharsetDecoder_decode0($this, $in, $out, 1);
    if (var$4.$isError())
        var$4.$throwException();
    while (true) {
        var$4 = jnc_CharsetDecoder_flush($this, $out);
        if (var$4.$isUnderflow())
            break;
        $out = jnc_CharsetDecoder_expand($this, $out);
    }
    jn_CharBuffer_flip($out);
    return $out;
}
function jnc_CharsetDecoder_expand($this, $buffer) {
    var $array, var$3, $result;
    $array = jn_CharBuffer_array($buffer);
    var$3 = $array.data;
    var$3 = ju_Arrays_copyOf0($array, jl_Math_max1(8, var$3.length * 2 | 0));
    $result = jn_CharBuffer_wrap0(var$3);
    $result.$position1(jn_Buffer_position($buffer));
    return $result;
}
function jnc_CharsetDecoder_implFlush($this, $out) {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult_UNDERFLOW;
}
function jnc_CharsetDecoder_implReset($this) {
    return;
}
function jnci_BufferedDecoder() {
    jnc_CharsetDecoder.call(this);
}
function jnci_BufferedDecoder__init_(var_0, var_1, var_2) {
    var var_3 = new jnci_BufferedDecoder();
    jnci_BufferedDecoder__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jnci_BufferedDecoder__init_0($this, $cs, $averageCharsPerByte, $maxCharsPerByte) {
    jnc_CharsetDecoder__init_0($this, $cs, $averageCharsPerByte, $maxCharsPerByte);
}
function jnci_BufferedDecoder_decodeLoop($this, $in, $out) {
    var $inArray, $inPos, $inSize, $outArray, $i, var$8, var$9, var$10, $outSize, $controller;
    $inArray = $rt_createByteArray(jl_Math_min1(jn_Buffer_remaining($in), 512));
    $inPos = 0;
    $inSize = 0;
    $outArray = $rt_createCharArray(jl_Math_min1(jn_Buffer_remaining($out), 512));
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize && jn_Buffer_hasRemaining($in)) {
                $i = $inPos;
                while ($i < $inSize) {
                    var$8 = $inArray.data;
                    var$8[$i - $inPos | 0] = var$8[$i];
                    $i = $i + 1 | 0;
                }
                var$8 = $inArray.data;
                var$9 = $inSize - $inPos | 0;
                $inSize = jl_Math_min1(jn_Buffer_remaining($in) + var$9 | 0, var$8.length);
                $in.$get38($inArray, var$9, $inSize - var$9 | 0);
                $inPos = 0;
            }
            if (!jn_Buffer_hasRemaining($out)) {
                if (!jn_Buffer_hasRemaining($in) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    var$10 = jnc_CoderResult_UNDERFLOW;
                } else {
                    jnc_CoderResult_$callClinit();
                    var$10 = jnc_CoderResult_OVERFLOW;
                }
                break a;
            }
            var$8 = $outArray.data;
            $outSize = jl_Math_min1(jn_Buffer_remaining($out), var$8.length);
            $controller = jnci_BufferedDecoder$Controller__init_($in, $out);
            var$10 = $this.$arrayDecode($inArray, $inPos, $inSize, $outArray, 0, $outSize, $controller);
            $inPos = $controller.$inPosition0;
            if (var$10 === null && 0 == $controller.$outPosition0) {
                jnc_CoderResult_$callClinit();
                var$10 = jnc_CoderResult_UNDERFLOW;
            }
            var$9 = $controller.$outPosition0;
            $out.$put8($outArray, 0, var$9);
            if (var$10 !== null)
                break;
        }
    }
    $in.$position9(jn_Buffer_position($in) - ($inSize - $inPos | 0) | 0);
    return var$10;
}
function jnci_UTF8Decoder() {
    jnci_BufferedDecoder.call(this);
}
function jnci_UTF8Decoder__init_(var_0) {
    var var_1 = new jnci_UTF8Decoder();
    jnci_UTF8Decoder__init_0(var_1, var_0);
    return var_1;
}
function jnci_UTF8Decoder__init_0($this, $cs) {
    jnci_BufferedDecoder__init_0($this, $cs, 0.3333333432674408, 0.5);
}
function jnci_UTF8Decoder_arrayDecode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $b, var$12, var$13, $b2, var$15, $b3, $c, $b4, $code;
    $result = null;
    a: {
        b: {
            c: {
                while ($inPos < $inSize) {
                    if ($outPos >= $outSize)
                        break a;
                    var$9 = $inArray.data;
                    var$10 = $inPos + 1 | 0;
                    $b = var$9[$inPos] & 255;
                    if (!($b & 128)) {
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = $b & 65535;
                    } else if (($b & 224) == 192) {
                        if (var$10 >= $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreInput())
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        var$13 = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2)) {
                            $inPos = var$13 + (-2) | 0;
                            $result = jnc_CoderResult_malformedForLength(1);
                            break a;
                        }
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = (($b & 31) << 6 | $b2 & 63) & 65535;
                        var$10 = var$13;
                    } else if (($b & 240) == 224) {
                        if ((var$10 + 2 | 0) > $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreInput())
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        var$15 = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        var$10 = var$15 + 1 | 0;
                        $b3 = var$9[var$15];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2))
                            break b;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                            break b;
                        $c = (($b & 15) << 12 | ($b2 & 63) << 6 | $b3 & 63) & 65535;
                        if (jl_Character_isSurrogate($c)) {
                            $inPos = var$10 + (-3) | 0;
                            $result = jnc_CoderResult_malformedForLength(3);
                            break a;
                        }
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = $c;
                    } else {
                        if (($b & 248) != 240) {
                            $inPos = var$10 + (-1) | 0;
                            $result = jnc_CoderResult_malformedForLength(1);
                            break a;
                        }
                        if ((var$10 + 3 | 0) > $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreInput())
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        if (($outPos + 2 | 0) > $outSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreOutput(2))
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_OVERFLOW;
                            break a;
                        }
                        var$15 = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        var$12 = var$15 + 1 | 0;
                        $b3 = var$9[var$15];
                        var$10 = var$12 + 1 | 0;
                        $b4 = var$9[var$12];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b4))
                            break c;
                        var$9 = $outArray.data;
                        $code = ($b & 7) << 18 | ($b2 & 63) << 12 | ($b3 & 63) << 6 | $b4 & 63;
                        var$15 = $outPos + 1 | 0;
                        var$9[$outPos] = jl_Character_highSurrogate($code);
                        var$12 = var$15 + 1 | 0;
                        var$9[var$15] = jl_Character_lowSurrogate($code);
                    }
                    $inPos = var$10;
                    $outPos = var$12;
                }
                break a;
            }
            $inPos = var$10 + (-3) | 0;
            $result = jnc_CoderResult_malformedForLength(1);
            break a;
        }
        $inPos = var$10 + (-3) | 0;
        $result = jnc_CoderResult_malformedForLength(1);
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
}
function jnci_UTF8Decoder_checkMidByte($this, $b) {
    return ($b & 192) != 128 ? 0 : 1;
}
function otjb_Storage() {
    jl_Object.call(this);
}
function otjb_Storage_getLocalStorage() {
    return window.localStorage;
}
function jur_PossessiveQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
}
function jur_PossessiveQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PossessiveQuantifierSet();
    jur_PossessiveQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PossessiveQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_PossessiveQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    a: {
        while (true) {
            if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound())
                break a;
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$4 < 1)
                break;
            $stringIndex = $stringIndex + var$4 | 0;
        }
    }
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jnci_BufferedDecoder$Controller() {
    var a = this; jl_Object.call(a);
    a.$in1 = null;
    a.$out1 = null;
    a.$inPosition0 = 0;
    a.$outPosition0 = 0;
}
function jnci_BufferedDecoder$Controller__init_(var_0, var_1) {
    var var_2 = new jnci_BufferedDecoder$Controller();
    jnci_BufferedDecoder$Controller__init_0(var_2, var_0, var_1);
    return var_2;
}
function jnci_BufferedDecoder$Controller__init_0($this, $in, $out) {
    jl_Object__init_0($this);
    $this.$in1 = $in;
    $this.$out1 = $out;
}
function jnci_BufferedDecoder$Controller_hasMoreInput($this) {
    return jn_Buffer_hasRemaining($this.$in1);
}
function jnci_BufferedDecoder$Controller_hasMoreOutput($this, $sz) {
    return jn_Buffer_remaining($this.$out1) < $sz ? 0 : 1;
}
function jnci_BufferedDecoder$Controller_setInPosition($this, $inPosition) {
    $this.$inPosition0 = $inPosition;
}
function jnci_BufferedDecoder$Controller_setOutPosition($this, $outPosition) {
    $this.$outPosition0 = $outPosition;
}
function iaac_ComparableTimSort() {
    var a = this; jl_Object.call(a);
    a.$runBase = null;
    a.$runLen = null;
    a.$a1 = null;
    a.$minGallop = 0;
    a.$tmp = null;
    a.$tmpCount = 0;
    a.$stackSize = 0;
}
function iaac_ComparableTimSort__init_() {
    var var_0 = new iaac_ComparableTimSort();
    iaac_ComparableTimSort__init_0(var_0);
    return var_0;
}
function iaac_ComparableTimSort__init_0($this) {
    jl_Object__init_0($this);
    $this.$minGallop = 7;
    $this.$stackSize = 0;
    $this.$tmp = $rt_createArray(jl_Object, 256);
    $this.$runBase = $rt_createIntArray(40);
    $this.$runLen = $rt_createIntArray(40);
}
function iaac_ComparableTimSort_binarySort($a, $lo, $hi, $start) {
    var var$5, $pivot, $right, var$8, $mid, $n;
    if ($start == $lo)
        $start = $start + 1 | 0;
    while ($start < $hi) {
        var$5 = $a.data;
        $pivot = var$5[$start];
        $right = $start;
        var$8 = $lo;
        while (var$8 < $right) {
            $mid = (var$8 + $right | 0) >>> 1;
            if ($pivot.$compareTo1(var$5[$mid]) < 0)
                $right = $mid;
            else
                var$8 = $mid + 1 | 0;
        }
        a: {
            b: {
                $n = $start - var$8 | 0;
                switch ($n) {
                    case 1:
                        break b;
                    case 2:
                        var$5[var$8 + 2 | 0] = var$5[var$8 + 1 | 0];
                        break b;
                    default:
                }
                jl_System_arraycopy($a, var$8, $a, var$8 + 1 | 0, $n);
                break a;
            }
            var$5[var$8 + 1 | 0] = var$5[var$8];
        }
        var$5[var$8] = $pivot;
        $start = $start + 1 | 0;
    }
}
function iaac_ComparableTimSort_countRunAndMakeAscending($a, $lo, $hi) {
    var $runHi, var$5, var$6;
    $runHi = $lo + 1 | 0;
    if ($runHi == $hi)
        return 1;
    a: {
        var$5 = $a.data;
        var$6 = $runHi + 1 | 0;
        if (var$5[$runHi].$compareTo1(var$5[$lo]) >= 0)
            while (var$6 < $hi) {
                if (var$5[var$6].$compareTo1(var$5[var$6 - 1 | 0]) < 0)
                    break a;
                var$6 = var$6 + 1 | 0;
            }
        else {
            while (var$6 < $hi && var$5[var$6].$compareTo1(var$5[var$6 - 1 | 0]) < 0) {
                var$6 = var$6 + 1 | 0;
            }
            iaac_ComparableTimSort_reverseRange($a, $lo, var$6);
        }
    }
    return var$6 - $lo | 0;
}
function iaac_ComparableTimSort_reverseRange($a, $lo, $hi) {
    var var$4, var$5, $t, var$7, var$8;
    var$4 = $hi + (-1) | 0;
    while ($lo < var$4) {
        var$5 = $a.data;
        $t = var$5[$lo];
        var$7 = $lo + 1 | 0;
        var$5[$lo] = var$5[var$4];
        var$8 = var$4 + (-1) | 0;
        var$5[var$4] = $t;
        $lo = var$7;
        var$4 = var$8;
    }
}
function iaac_ComparableTimSort_minRunLength($n) {
    var $r;
    $r = 0;
    while ($n >= 32) {
        $r = $r | $n & 1;
        $n = $n >> 1;
    }
    return $n + $r | 0;
}
function iaac_ComparableTimSort_gallopLeft($key, $a, $base, $len, $hint) {
    var var$6, $lastOfs, $ofs, var$9, $maxOfs, var$11, var$12, $m;
    var$6 = $a.data;
    $lastOfs = 0;
    $ofs = 1;
    var$9 = $base + $hint | 0;
    if ($key.$compareTo1(var$6[var$9]) > 0) {
        $maxOfs = $len - $hint | 0;
        while (true) {
            var$11 = $rt_compare($ofs, $maxOfs);
            if (var$11 >= 0)
                break;
            if ($key.$compareTo1(var$6[var$9 + $ofs | 0]) <= 0)
                break;
            var$11 = ($ofs << 1) + 1 | 0;
            if (var$11 > 0) {
                $lastOfs = $ofs;
                $ofs = var$11;
                continue;
            }
            var$11 = $maxOfs;
            $lastOfs = $ofs;
            $ofs = var$11;
        }
        if (var$11 <= 0)
            $maxOfs = $ofs;
        var$9 = $lastOfs + $hint | 0;
        var$11 = $maxOfs + $hint | 0;
    } else {
        $maxOfs = $hint + 1 | 0;
        while (true) {
            var$11 = $rt_compare($ofs, $maxOfs);
            if (var$11 >= 0)
                break;
            if ($key.$compareTo1(var$6[var$9 - $ofs | 0]) > 0)
                break;
            var$11 = ($ofs << 1) + 1 | 0;
            if (var$11 > 0) {
                $lastOfs = $ofs;
                $ofs = var$11;
                continue;
            }
            var$11 = $maxOfs;
            $lastOfs = $ofs;
            $ofs = var$11;
        }
        if (var$11 <= 0)
            $maxOfs = $ofs;
        var$9 = $hint - $maxOfs | 0;
        var$11 = $hint - $lastOfs | 0;
    }
    var$12 = var$9 + 1 | 0;
    while (var$12 < var$11) {
        $m = var$12 + ((var$11 - var$12 | 0) >>> 1) | 0;
        if ($key.$compareTo1(var$6[$base + $m | 0]) > 0) {
            var$12 = $m + 1 | 0;
            $m = var$11;
        }
        var$11 = $m;
    }
    return var$11;
}
function iaac_ComparableTimSort_gallopRight($key, $a, $base, $len, $hint) {
    var var$6, $ofs, $lastOfs, var$9, $maxOfs, var$11, var$12, $m;
    var$6 = $a.data;
    $ofs = 1;
    $lastOfs = 0;
    var$9 = $base + $hint | 0;
    if ($key.$compareTo1(var$6[var$9]) >= 0) {
        $maxOfs = $len - $hint | 0;
        while (true) {
            var$11 = $rt_compare($ofs, $maxOfs);
            if (var$11 >= 0)
                break;
            if ($key.$compareTo1(var$6[var$9 + $ofs | 0]) < 0)
                break;
            var$12 = ($ofs << 1) + 1 | 0;
            if (var$12 > 0) {
                $lastOfs = $ofs;
                $ofs = var$12;
                continue;
            }
            var$12 = $maxOfs;
            $lastOfs = $ofs;
            $ofs = var$12;
        }
        if (var$11 <= 0)
            $maxOfs = $ofs;
        var$9 = $lastOfs + $hint | 0;
        var$12 = $maxOfs + $hint | 0;
    } else {
        $maxOfs = $hint + 1 | 0;
        while (true) {
            var$12 = $rt_compare($ofs, $maxOfs);
            if (var$12 >= 0)
                break;
            if ($key.$compareTo1(var$6[var$9 - $ofs | 0]) >= 0)
                break;
            var$12 = ($ofs << 1) + 1 | 0;
            if (var$12 > 0) {
                $lastOfs = $ofs;
                $ofs = var$12;
                continue;
            }
            var$12 = $maxOfs;
            $lastOfs = $ofs;
            $ofs = var$12;
        }
        if (var$12 <= 0)
            $maxOfs = $ofs;
        var$9 = $hint - $maxOfs | 0;
        var$12 = $hint - $lastOfs | 0;
    }
    var$9 = var$9 + 1 | 0;
    while (var$9 < var$12) {
        $m = var$9 + ((var$12 - var$9 | 0) >>> 1) | 0;
        if ($key.$compareTo1(var$6[$base + $m | 0]) < 0)
            var$12 = $m;
        else
            var$9 = $m + 1 | 0;
    }
    return var$12;
}
function iaac_ComparableTimSort_rangeCheck($arrayLen, $fromIndex, $toIndex) {
    if ($fromIndex <= $toIndex) {
        if ($fromIndex < 0)
            $rt_throw(jl_ArrayIndexOutOfBoundsException__init_3($fromIndex));
        if ($toIndex <= $arrayLen)
            return;
        $rt_throw(jl_ArrayIndexOutOfBoundsException__init_3($toIndex));
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(601)).$append3($fromIndex).$append($rt_s(602)).$append3($toIndex).$append($rt_s(364)).$toString()));
}
function iaac_ComparableTimSort_doSort($this, $a, $lo, $hi) {
    var var$4, $nRemaining, $initRunLen, $minRun, $runLen, $force, $tmp, $i, $n;
    var$4 = $a.data;
    $this.$stackSize = 0;
    iaac_ComparableTimSort_rangeCheck(var$4.length, $lo, $hi);
    $nRemaining = $hi - $lo | 0;
    if ($nRemaining < 2)
        return;
    if ($nRemaining < 32) {
        $initRunLen = iaac_ComparableTimSort_countRunAndMakeAscending($a, $lo, $hi);
        iaac_ComparableTimSort_binarySort($a, $lo, $hi, $lo + $initRunLen | 0);
        return;
    }
    $this.$a1 = $a;
    $this.$tmpCount = 0;
    $minRun = iaac_ComparableTimSort_minRunLength($nRemaining);
    while (true) {
        $runLen = iaac_ComparableTimSort_countRunAndMakeAscending($a, $lo, $hi);
        if ($runLen >= $minRun)
            $force = $runLen;
        else {
            $force = $nRemaining > $minRun ? $minRun : $nRemaining;
            iaac_ComparableTimSort_binarySort($a, $lo, $lo + $force | 0, $lo + $runLen | 0);
        }
        iaac_ComparableTimSort_pushRun($this, $lo, $force);
        iaac_ComparableTimSort_mergeCollapse($this);
        $lo = $lo + $force | 0;
        $nRemaining = $nRemaining - $force | 0;
        if (!$nRemaining)
            break;
    }
    iaac_ComparableTimSort_mergeForceCollapse($this);
    $this.$a1 = null;
    $tmp = $this.$tmp;
    $i = 0;
    $n = $this.$tmpCount;
    while ($i < $n) {
        $tmp.data[$i] = null;
        $i = $i + 1 | 0;
    }
}
function iaac_ComparableTimSort_pushRun($this, $runBase, $runLen) {
    $this.$runBase.data[$this.$stackSize] = $runBase;
    $this.$runLen.data[$this.$stackSize] = $runLen;
    $this.$stackSize = $this.$stackSize + 1 | 0;
}
function iaac_ComparableTimSort_mergeCollapse($this) {
    var $n, var$2, var$3, var$4, var$5, var$6;
    a: while ($this.$stackSize > 1) {
        b: {
            c: {
                $n = $this.$stackSize - 2 | 0;
                if ($n > 0) {
                    var$2 = $this.$runLen.data;
                    var$3 = $n - 1 | 0;
                    var$4 = var$2[var$3];
                    var$5 = $this.$runLen.data[$n];
                    var$2 = $this.$runLen.data;
                    var$6 = $n + 1 | 0;
                    if (var$4 <= (var$5 + var$2[var$6] | 0))
                        break c;
                }
                if ($this.$runLen.data[$n] > $this.$runLen.data[$n + 1 | 0])
                    break a;
                iaac_ComparableTimSort_mergeAt($this, $n);
                break b;
            }
            if ($this.$runLen.data[var$3] < $this.$runLen.data[var$6])
                $n = $n + (-1) | 0;
            iaac_ComparableTimSort_mergeAt($this, $n);
        }
    }
}
function iaac_ComparableTimSort_mergeForceCollapse($this) {
    var $n;
    while ($this.$stackSize > 1) {
        $n = $this.$stackSize - 2 | 0;
        if ($n > 0 && $this.$runLen.data[$n - 1 | 0] < $this.$runLen.data[$n + 1 | 0])
            $n = $n + (-1) | 0;
        iaac_ComparableTimSort_mergeAt($this, $n);
    }
}
function iaac_ComparableTimSort_mergeAt($this, $i) {
    var $base1, $len1, var$4, var$5, $base2, $len2, var$8, var$9, $k, var$11;
    $base1 = $this.$runBase.data[$i];
    $len1 = $this.$runLen.data[$i];
    var$4 = $this.$runBase.data;
    var$5 = $i + 1 | 0;
    $base2 = var$4[var$5];
    $len2 = $this.$runLen.data[var$5];
    $this.$runLen.data[$i] = $len1 + $len2 | 0;
    if ($i == ($this.$stackSize - 3 | 0)) {
        var$8 = $this.$runBase.data;
        var$4 = $this.$runBase.data;
        var$9 = $i + 2 | 0;
        var$8[var$5] = var$4[var$9];
        $this.$runLen.data[var$5] = $this.$runLen.data[var$9];
    }
    $this.$stackSize = $this.$stackSize - 1 | 0;
    $k = iaac_ComparableTimSort_gallopRight($this.$a1.data[$base2], $this.$a1, $base1, $len1, 0);
    var$5 = $base1 + $k | 0;
    var$11 = $len1 - $k | 0;
    if (!var$11)
        return;
    var$9 = iaac_ComparableTimSort_gallopLeft($this.$a1.data[(var$5 + var$11 | 0) - 1 | 0], $this.$a1, $base2, $len2, $len2 - 1 | 0);
    if (!var$9)
        return;
    if (var$11 > var$9)
        iaac_ComparableTimSort_mergeHi($this, var$5, var$11, $base2, var$9);
    else
        iaac_ComparableTimSort_mergeLo($this, var$5, var$11, $base2, var$9);
}
function iaac_ComparableTimSort_mergeLo($this, $base1, $len1, $base2, $len2) {
    var $a, var$6, $tmp, $cursor1, var$9, var$10, var$11, var$12, $minGallop, $count1, $count2, var$16, var$17, var$18, var$19, var$20;
    $a = $this.$a1;
    var$6 = $a.data;
    $tmp = iaac_ComparableTimSort_ensureCapacity($this, $len1);
    jl_System_arraycopy($a, $base1, $tmp, 0, $len1);
    $cursor1 = 0;
    var$9 = $base1 + 1 | 0;
    var$10 = $base2 + 1 | 0;
    var$6[$base1] = var$6[$base2];
    var$11 = $len2 + (-1) | 0;
    if (!var$11) {
        jl_System_arraycopy($tmp, $cursor1, $a, var$9, $len1);
        return;
    }
    if ($len1 == 1) {
        var$12 = $tmp.data;
        jl_System_arraycopy($a, var$10, $a, var$9, var$11);
        var$6[var$9 + var$11 | 0] = var$12[$cursor1];
        return;
    }
    $minGallop = $this.$minGallop;
    a: {
        b: while (true) {
            $count1 = 0;
            $count2 = 0;
            var$16 = var$9;
            var$17 = var$10;
            var$18 = $cursor1;
            while (true) {
                var$12 = $tmp.data;
                if (var$6[var$17].$compareTo1(var$12[var$18]) < 0) {
                    var$9 = var$16 + 1 | 0;
                    var$10 = var$17 + 1 | 0;
                    var$6[var$16] = var$6[var$17];
                    $count2 = $count2 + 1 | 0;
                    $count1 = 0;
                    var$11 = var$11 + (-1) | 0;
                    if (!var$11)
                        break a;
                    var$17 = var$10;
                    $cursor1 = var$18;
                } else {
                    var$9 = var$16 + 1 | 0;
                    $cursor1 = var$18 + 1 | 0;
                    var$6[var$16] = var$12[var$18];
                    $count1 = $count1 + 1 | 0;
                    $count2 = 0;
                    $len1 = $len1 + (-1) | 0;
                    if ($len1 == 1) {
                        var$18 = $cursor1;
                        var$10 = var$17;
                        break a;
                    }
                }
                if (($count1 | $count2) >= $minGallop)
                    break;
                var$16 = var$9;
                var$18 = $cursor1;
            }
            var$10 = var$17;
            while (true) {
                var$16 = iaac_ComparableTimSort_gallopRight(var$6[var$10], $tmp, $cursor1, $len1, 0);
                if (!var$16) {
                    var$17 = var$9;
                    var$18 = $cursor1;
                } else {
                    jl_System_arraycopy($tmp, $cursor1, $a, var$9, var$16);
                    var$9 = var$9 + var$16 | 0;
                    var$18 = $cursor1 + var$16 | 0;
                    $len1 = $len1 - var$16 | 0;
                    if ($len1 <= 1)
                        break a;
                    var$17 = var$9;
                }
                var$9 = var$17 + 1 | 0;
                var$19 = var$10 + 1 | 0;
                var$6[var$17] = var$6[var$10];
                var$11 = var$11 + (-1) | 0;
                if (!var$11) {
                    var$10 = var$19;
                    break a;
                }
                var$17 = iaac_ComparableTimSort_gallopLeft(var$12[var$18], $a, var$19, var$11, 0);
                if (!var$17) {
                    var$20 = var$9;
                    var$10 = var$19;
                } else {
                    jl_System_arraycopy($a, var$19, $a, var$9, var$17);
                    var$9 = var$9 + var$17 | 0;
                    var$10 = var$19 + var$17 | 0;
                    var$11 = var$11 - var$17 | 0;
                    if (!var$11)
                        break b;
                    var$20 = var$9;
                }
                var$9 = var$20 + 1 | 0;
                $cursor1 = var$18 + 1 | 0;
                var$6[var$20] = var$12[var$18];
                $len1 = $len1 + (-1) | 0;
                if ($len1 == 1) {
                    var$18 = $cursor1;
                    break a;
                }
                $minGallop = $minGallop + (-1) | 0;
                if (!((var$16 < 7 ? 0 : 1) | (var$17 < 7 ? 0 : 1)))
                    break;
            }
            if ($minGallop < 0)
                $minGallop = 0;
            $minGallop = $minGallop + 2 | 0;
        }
    }
    if ($minGallop < 1)
        $minGallop = 1;
    $this.$minGallop = $minGallop;
    if ($len1 == 1) {
        jl_System_arraycopy($a, var$10, $a, var$9, var$11);
        var$6[var$9 + var$11 | 0] = var$12[var$18];
    } else {
        if (!$len1)
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(603)));
        jl_System_arraycopy($tmp, var$18, $a, var$9, $len1);
    }
}
function iaac_ComparableTimSort_mergeHi($this, $base1, $len1, $base2, $len2) {
    var $a, var$6, $tmp, $cursor1, $cursor2, $dest, var$11, var$12, var$13, var$14, var$15, var$16, $minGallop, $count1, $count2, var$20, var$21;
    $a = $this.$a1;
    var$6 = $a.data;
    $tmp = iaac_ComparableTimSort_ensureCapacity($this, $len2);
    jl_System_arraycopy($a, $base2, $tmp, 0, $len2);
    $cursor1 = ($base1 + $len1 | 0) - 1 | 0;
    $cursor2 = $len2 - 1 | 0;
    $dest = ($base2 + $len2 | 0) - 1 | 0;
    var$11 = $dest + (-1) | 0;
    var$12 = $cursor1 + (-1) | 0;
    var$6[$dest] = var$6[$cursor1];
    var$13 = $len1 + (-1) | 0;
    if (!var$13) {
        jl_System_arraycopy($tmp, 0, $a, var$11 - $cursor2 | 0, $len2);
        return;
    }
    if ($len2 == 1) {
        var$14 = $tmp.data;
        var$15 = var$11 - var$13 | 0;
        var$16 = var$12 - var$13 | 0;
        jl_System_arraycopy($a, var$16 + 1 | 0, $a, var$15 + 1 | 0, var$13);
        var$6[var$15] = var$14[$cursor2];
        return;
    }
    $minGallop = $this.$minGallop;
    a: {
        b: while (true) {
            $count1 = 0;
            $count2 = 0;
            var$20 = var$11;
            while (true) {
                var$14 = $tmp.data;
                if (var$14[$cursor2].$compareTo1(var$6[var$12]) < 0) {
                    var$11 = var$20 + (-1) | 0;
                    var$16 = var$12 + (-1) | 0;
                    var$6[var$20] = var$6[var$12];
                    $count1 = $count1 + 1 | 0;
                    $count2 = 0;
                    var$13 = var$13 + (-1) | 0;
                    if (!var$13)
                        break a;
                    var$12 = var$16;
                    var$15 = $cursor2;
                } else {
                    var$11 = var$20 + (-1) | 0;
                    var$15 = $cursor2 + (-1) | 0;
                    var$6[var$20] = var$14[$cursor2];
                    $count2 = $count2 + 1 | 0;
                    $count1 = 0;
                    $len2 = $len2 + (-1) | 0;
                    if ($len2 == 1) {
                        var$16 = var$12;
                        $cursor2 = var$15;
                        break a;
                    }
                }
                if (($count1 | $count2) >= $minGallop)
                    break;
                var$20 = var$11;
                $cursor2 = var$15;
            }
            $cursor2 = var$15;
            while (true) {
                var$15 = var$13 - iaac_ComparableTimSort_gallopRight(var$14[$cursor2], $a, $base1, var$13, var$13 - 1 | 0) | 0;
                if (!var$15) {
                    var$20 = var$11;
                    var$16 = var$12;
                } else {
                    var$11 = var$11 - var$15 | 0;
                    var$16 = var$12 - var$15 | 0;
                    var$13 = var$13 - var$15 | 0;
                    jl_System_arraycopy($a, var$16 + 1 | 0, $a, var$11 + 1 | 0, var$15);
                    if (!var$13)
                        break a;
                    var$20 = var$11;
                }
                var$11 = var$20 + (-1) | 0;
                var$12 = $cursor2 + (-1) | 0;
                var$6[var$20] = var$14[$cursor2];
                $len2 = $len2 + (-1) | 0;
                if ($len2 == 1) {
                    $cursor2 = var$12;
                    break a;
                }
                var$20 = $len2 - iaac_ComparableTimSort_gallopLeft(var$6[var$16], $tmp, 0, $len2, $len2 - 1 | 0) | 0;
                if (!var$20) {
                    var$21 = var$11;
                    $cursor2 = var$12;
                } else {
                    var$11 = var$11 - var$20 | 0;
                    $cursor2 = var$12 - var$20 | 0;
                    $len2 = $len2 - var$20 | 0;
                    jl_System_arraycopy($tmp, $cursor2 + 1 | 0, $a, var$11 + 1 | 0, var$20);
                    if ($len2 <= 1)
                        break b;
                    var$21 = var$11;
                }
                var$11 = var$21 + (-1) | 0;
                var$12 = var$16 + (-1) | 0;
                var$6[var$21] = var$6[var$16];
                var$13 = var$13 + (-1) | 0;
                if (!var$13) {
                    var$16 = var$12;
                    break a;
                }
                $minGallop = $minGallop + (-1) | 0;
                if (!((var$15 < 7 ? 0 : 1) | (var$20 < 7 ? 0 : 1)))
                    break;
            }
            if ($minGallop < 0)
                $minGallop = 0;
            $minGallop = $minGallop + 2 | 0;
        }
    }
    if ($minGallop < 1)
        $minGallop = 1;
    $this.$minGallop = $minGallop;
    if ($len2 == 1) {
        var$15 = var$11 - var$13 | 0;
        var$16 = var$16 - var$13 | 0;
        jl_System_arraycopy($a, var$16 + 1 | 0, $a, var$15 + 1 | 0, var$13);
        var$6[var$15] = var$14[$cursor2];
    } else {
        if (!$len2)
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(603)));
        jl_System_arraycopy($tmp, 0, $a, var$11 - ($len2 - 1 | 0) | 0, $len2);
    }
}
function iaac_ComparableTimSort_ensureCapacity($this, $minCapacity) {
    var var$2;
    $this.$tmpCount = jl_Math_max1($this.$tmpCount, $minCapacity);
    if ($this.$tmp.data.length < $minCapacity) {
        var$2 = $minCapacity | $minCapacity >> 1;
        var$2 = var$2 | var$2 >> 2;
        var$2 = var$2 | var$2 >> 4;
        var$2 = var$2 | var$2 >> 8;
        var$2 = var$2 | var$2 >> 16;
        var$2 = var$2 + 1 | 0;
        if (var$2 >= 0)
            $minCapacity = jl_Math_min1(var$2, $this.$a1.data.length >>> 1);
        $this.$tmp = $rt_createArray(jl_Object, $minCapacity);
    }
    return $this.$tmp;
}
function ju_Locale() {
    var a = this; jl_Object.call(a);
    a.$countryCode = null;
    a.$languageCode = null;
    a.$variantCode = null;
}
var ju_Locale_defaultLocale = null;
var ju_Locale_CANADA = null;
var ju_Locale_CANADA_FRENCH = null;
var ju_Locale_CHINA = null;
var ju_Locale_CHINESE = null;
var ju_Locale_ENGLISH = null;
var ju_Locale_FRANCE = null;
var ju_Locale_FRENCH = null;
var ju_Locale_GERMAN = null;
var ju_Locale_GERMANY = null;
var ju_Locale_ITALIAN = null;
var ju_Locale_ITALY = null;
var ju_Locale_JAPAN = null;
var ju_Locale_JAPANESE = null;
var ju_Locale_KOREA = null;
var ju_Locale_KOREAN = null;
var ju_Locale_PRC = null;
var ju_Locale_SIMPLIFIED_CHINESE = null;
var ju_Locale_TAIWAN = null;
var ju_Locale_TRADITIONAL_CHINESE = null;
var ju_Locale_UK = null;
var ju_Locale_US = null;
var ju_Locale_ROOT = null;
function ju_Locale_$callClinit() {
    ju_Locale_$callClinit = $rt_eraseClinit(ju_Locale);
    ju_Locale__clinit_();
}
function ju_Locale__init_(var_0, var_1) {
    var var_2 = new ju_Locale();
    ju_Locale__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_Locale__init_1(var_0, var_1, var_2) {
    var var_3 = new ju_Locale();
    ju_Locale__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function ju_Locale__init_0($this, $language, $country) {
    ju_Locale_$callClinit();
    ju_Locale__init_2($this, $language, $country, $rt_s(58));
}
function ju_Locale__init_2($this, $language, $country, $variant) {
    ju_Locale_$callClinit();
    jl_Object__init_0($this);
    if ($language !== null && $country !== null && $variant !== null) {
        if (!$language.$length() && !$country.$length()) {
            $this.$languageCode = $rt_s(58);
            $this.$countryCode = $rt_s(58);
            $this.$variantCode = $variant;
            return;
        }
        $this.$languageCode = $language;
        $this.$countryCode = $country;
        $this.$variantCode = $variant;
        return;
    }
    $rt_throw(jl_NullPointerException__init_());
}
function ju_Locale__clinit_() {
    var $localeName, $countryIndex;
    ju_Locale_CANADA = ju_Locale__init_($rt_s(604), $rt_s(605));
    ju_Locale_CANADA_FRENCH = ju_Locale__init_($rt_s(396), $rt_s(605));
    ju_Locale_CHINA = ju_Locale__init_($rt_s(606), $rt_s(607));
    ju_Locale_CHINESE = ju_Locale__init_($rt_s(606), $rt_s(58));
    ju_Locale_ENGLISH = ju_Locale__init_($rt_s(604), $rt_s(58));
    ju_Locale_FRANCE = ju_Locale__init_($rt_s(396), $rt_s(608));
    ju_Locale_FRENCH = ju_Locale__init_($rt_s(396), $rt_s(58));
    ju_Locale_GERMAN = ju_Locale__init_($rt_s(609), $rt_s(58));
    ju_Locale_GERMANY = ju_Locale__init_($rt_s(609), $rt_s(610));
    ju_Locale_ITALIAN = ju_Locale__init_($rt_s(611), $rt_s(58));
    ju_Locale_ITALY = ju_Locale__init_($rt_s(611), $rt_s(612));
    ju_Locale_JAPAN = ju_Locale__init_($rt_s(613), $rt_s(614));
    ju_Locale_JAPANESE = ju_Locale__init_($rt_s(613), $rt_s(58));
    ju_Locale_KOREA = ju_Locale__init_($rt_s(615), $rt_s(616));
    ju_Locale_KOREAN = ju_Locale__init_($rt_s(615), $rt_s(58));
    ju_Locale_PRC = ju_Locale__init_($rt_s(606), $rt_s(607));
    ju_Locale_SIMPLIFIED_CHINESE = ju_Locale__init_($rt_s(606), $rt_s(607));
    ju_Locale_TAIWAN = ju_Locale__init_($rt_s(606), $rt_s(617));
    ju_Locale_TRADITIONAL_CHINESE = ju_Locale__init_($rt_s(606), $rt_s(617));
    ju_Locale_UK = ju_Locale__init_($rt_s(604), $rt_s(618));
    ju_Locale_US = ju_Locale__init_($rt_s(604), $rt_s(619));
    ju_Locale_ROOT = ju_Locale__init_($rt_s(58), $rt_s(58));
    $localeName = (otciu_CLDRHelper_getDefaultLocale().value !== null ? $rt_str(otciu_CLDRHelper_getDefaultLocale().value) : null);
    $countryIndex = $localeName.$indexOf3(95);
    ju_Locale_defaultLocale = ju_Locale__init_1($localeName.$substring0(0, $countryIndex), $localeName.$substring($countryIndex + 1 | 0), $rt_s(58));
}
function jl_ReflectiveOperationException() {
    jl_Exception.call(this);
}
function jl_ReflectiveOperationException__init_() {
    var var_0 = new jl_ReflectiveOperationException();
    jl_ReflectiveOperationException__init_0(var_0);
    return var_0;
}
function jl_ReflectiveOperationException__init_0($this) {
    jl_Exception__init_0($this);
}
function jl_InstantiationException() {
    jl_ReflectiveOperationException.call(this);
}
function jl_InstantiationException__init_() {
    var var_0 = new jl_InstantiationException();
    jl_InstantiationException__init_0(var_0);
    return var_0;
}
function jl_InstantiationException__init_0($this) {
    jl_ReflectiveOperationException__init_0($this);
}
function jur_AbstractCharClass$LazyJavaLetter$1() {
    jur_AbstractCharClass.call(this);
    this.$this$011 = null;
}
function jur_AbstractCharClass$LazyJavaLetter$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaLetter$1();
    jur_AbstractCharClass$LazyJavaLetter$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaLetter$1__init_0($this, $this$0) {
    $this.$this$011 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaLetter$1_contains($this, $ch) {
    return jl_Character_isLetter($ch);
}
function ig_QueueBatch$draw$lambda$_3_0() {
    jl_Object.call(this);
}
function ig_QueueBatch$draw$lambda$_3_0__init_() {
    var var_0 = new ig_QueueBatch$draw$lambda$_3_0();
    ig_QueueBatch$draw$lambda$_3_0__init_0(var_0);
    return var_0;
}
function ig_QueueBatch$draw$lambda$_3_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function ig_QueueBatch$draw$lambda$_3_0_get(var$0) {
    return ig_QueueBatch$draw$lambda$_3_0_get0(var$0);
}
function ig_QueueBatch$draw$lambda$_3_0_get0(var$0) {
    return ig_DrawRequest__init_();
}
function iaag_Blending() {
    var a = this; jl_Enum.call(a);
    a.$src = 0;
    a.$dst1 = 0;
}
var iaag_Blending_normal = null;
var iaag_Blending_additive = null;
var iaag_Blending_disabled = null;
var iaag_Blending_$VALUES = null;
function iaag_Blending_$callClinit() {
    iaag_Blending_$callClinit = $rt_eraseClinit(iaag_Blending);
    iaag_Blending__clinit_();
}
function iaag_Blending__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new iaag_Blending();
    iaag_Blending__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaag_Blending_values() {
    iaag_Blending_$callClinit();
    return iaag_Blending_$VALUES.$clone();
}
function iaag_Blending__init_0($this, var$1, var$2, $src, $dst) {
    iaag_Blending_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
    $this.$src = $src;
    $this.$dst1 = $dst;
}
function iaag_Blending__clinit_() {
    var var$1, var$2;
    iaag_Blending_normal = iaag_Blending__init_($rt_s(620), 0, 770, 771);
    iaag_Blending_additive = iaag_Blending__init_($rt_s(621), 1, 770, 1);
    iaag_Blending_disabled = iaag_Blending__init_($rt_s(622), 2, 770, 771);
    var$1 = $rt_createArray(iaag_Blending, 3);
    var$2 = var$1.data;
    var$2[0] = iaag_Blending_normal;
    var$2[1] = iaag_Blending_additive;
    var$2[2] = iaag_Blending_disabled;
    iaag_Blending_$VALUES = var$1;
}
function iaate_WindEffect() {
    var a = this; iaat_Effect.call(a);
    a.$noise = null;
    a.$noiseCursorX = 0.0;
    a.$noiseCursorY = 0.0;
    a.$distanceX = 0.0;
    a.$distanceY = 0.0;
    a.$spacing = 0.0;
    a.$intensity1 = 0.0;
}
function iaate_WindEffect__init_(var_0) {
    var var_1 = new iaate_WindEffect();
    iaate_WindEffect__init_0(var_1, var_0);
    return var_1;
}
function iaate_WindEffect__init_0($this, $label) {
    iaat_Effect__init_0($this, $label);
    $this.$noise = iaaun_Simplex__init_(Long_fromInt(1));
    $this.$noiseCursorX = 0.0;
    $this.$noiseCursorY = 0.0;
    $this.$distanceX = 1.0;
    $this.$distanceY = 1.0;
    $this.$spacing = 1.0;
    $this.$intensity1 = 1.0;
}
function iaate_WindEffect_update($this, $delta) {
    iaat_Effect_update($this, $delta);
    $this.$noiseCursorX = $this.$noiseCursorX + 0.10000000149011612 * $this.$intensity1 * 0.375;
    $this.$noiseCursorY = $this.$noiseCursorY + 0.10000000149011612 * $this.$intensity1 * 0.375;
}
function iaate_WindEffect_onApply($this, $glyph, $localIndex, $delta) {
    var $progressModifier, $normalSpacing, var$6, $progressOffset, $progress, $indexOffset, $noiseX, $noiseY, $lineHeight, $x, $y, $fadeout, var$16;
    $progressModifier = 1.0 / $this.$intensity1 * 0.375;
    $normalSpacing = 1.0 / $this.$spacing * 10.0;
    var$6 = $localIndex;
    $progressOffset = var$6 / $normalSpacing;
    $progress = $this.$calculateProgress0($progressModifier, $progressOffset);
    $indexOffset = var$6 * 0.05000000074505806 * $this.$spacing;
    $noiseX = $this.$noise.$octaveNoise2D(6.0, 0.0, 1.0, $this.$noiseCursorX + $indexOffset, 0.0);
    $noiseY = $this.$noise.$octaveNoise2D(6.0, 0.0, 1.0, $this.$noiseCursorY + $indexOffset, 0.0);
    $lineHeight = $this.$getLineHeight();
    $x = $lineHeight * $noiseX * $progress * $this.$distanceX * 1.5 * 0.33000001311302185;
    $y = $lineHeight * $noiseY * $progress * $this.$distanceY * 1.0 * 0.33000001311302185;
    $fadeout = $this.$calculateFadeout();
    var$6 = $x * $fadeout;
    var$16 = $y * $fadeout;
    var$6 = jl_Math_abs0(var$6) *  -jl_Math_signum($this.$distanceX);
    $glyph.$xoffset = $glyph.$xoffset + var$6 | 0;
    $glyph.$yoffset = $glyph.$yoffset + var$16 | 0;
}
function iaat_Parser$getResetReplacement$lambda$_7_0() {
    jl_Object.call(this);
}
function iaat_Parser$getResetReplacement$lambda$_7_0__init_() {
    var var_0 = new iaat_Parser$getResetReplacement$lambda$_7_0();
    iaat_Parser$getResetReplacement$lambda$_7_0__init_0(var_0);
    return var_0;
}
function iaat_Parser$getResetReplacement$lambda$_7_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaat_Parser$getResetReplacement$lambda$_7_0_get(var$0, var$1) {
    return iaat_Parser$getResetReplacement$lambda$_7_0_get0(var$0, var$1);
}
function iaat_Parser$getResetReplacement$lambda$_7_0_get0(var$0, var$1) {
    return iaat_Parser_lambda$getResetReplacement$5(var$1);
}
function ju_HashMap$HashEntry() {
    var a = this; ju_MapEntry.call(a);
    a.$origKeyHash = 0;
    a.$next2 = null;
}
function ju_HashMap$HashEntry__init_(var_0, var_1) {
    var var_2 = new ju_HashMap$HashEntry();
    ju_HashMap$HashEntry__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_HashMap$HashEntry__init_0($this, $theKey, $hash) {
    ju_MapEntry__init_0($this, $theKey, null);
    $this.$origKeyHash = $hash;
}
function iaa_KeyBinds$load$lambda$_3_0() {
    jl_Object.call(this);
}
function iaa_KeyBinds$load$lambda$_3_0__init_() {
    var var_0 = new iaa_KeyBinds$load$lambda$_3_0();
    iaa_KeyBinds$load$lambda$_3_0__init_0(var_0);
    return var_0;
}
function iaa_KeyBinds$load$lambda$_3_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaa_KeyBinds$load$lambda$_3_0_get(var$0) {
    return iaa_KeyBinds$load$lambda$_3_0_get0(var$0);
}
function iaa_KeyBinds$load$lambda$_3_0_get0(var$0) {
    return iaac_OrderedMap__init_();
}
function jur_AbstractCharClass$LazyUpper() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyUpper__init_() {
    var var_0 = new jur_AbstractCharClass$LazyUpper();
    jur_AbstractCharClass$LazyUpper__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyUpper__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyUpper_computeValue($this) {
    return jur_CharClass__init_().$add0(65, 90);
}
function iaa_KeyBinds$KeybindValue() {
}
function iaai_KeyCode() {
    var a = this; jl_Enum.call(a);
    a.$type7 = null;
    a.$value3 = null;
    a.$axis = 0;
}
var iaai_KeyCode_CONTROLLER_A = null;
var iaai_KeyCode_CONTROLLER_B = null;
var iaai_KeyCode_CONTROLLER_X = null;
var iaai_KeyCode_CONTROLLER_Y = null;
var iaai_KeyCode_CONTROLLER_GUIDE = null;
var iaai_KeyCode_CONTROLLER_L_BUMPER = null;
var iaai_KeyCode_CONTROLLER_R_BUMPER = null;
var iaai_KeyCode_CONTROLLER_BACK = null;
var iaai_KeyCode_CONTROLLER_START = null;
var iaai_KeyCode_CONTROLLER_L_STICK = null;
var iaai_KeyCode_CONTROLLER_R_STICK = null;
var iaai_KeyCode_CONTROLLER_DPAD_UP = null;
var iaai_KeyCode_CONTROLLER_DPAD_DOWN = null;
var iaai_KeyCode_CONTROLLER_DPAD_LEFT = null;
var iaai_KeyCode_CONTROLLER_DPAD_RIGHT = null;
var iaai_KeyCode_CONTROLLER_L_TRIGGER = null;
var iaai_KeyCode_CONTROLLER_R_TRIGGER = null;
var iaai_KeyCode_CONTROLLER_L_STICK_VERTICAL_AXIS = null;
var iaai_KeyCode_CONTROLLER_L_STICK_HORIZONTAL_AXIS = null;
var iaai_KeyCode_CONTROLLER_R_STICK_VERTICAL_AXIS = null;
var iaai_KeyCode_CONTROLLER_R_STICK_HORIZONTAL_AXIS = null;
var iaai_KeyCode_MOUSE_LEFT = null;
var iaai_KeyCode_MOUSE_RIGHT = null;
var iaai_KeyCode_MOUSE_MIDDLE = null;
var iaai_KeyCode_MOUSE_BACK = null;
var iaai_KeyCode_MOUSE_FORWARD = null;
var iaai_KeyCode_SCROLL = null;
var iaai_KeyCode_ANY_KEY = null;
var iaai_KeyCode_NUM_0 = null;
var iaai_KeyCode_NUM_1 = null;
var iaai_KeyCode_NUM_2 = null;
var iaai_KeyCode_NUM_3 = null;
var iaai_KeyCode_NUM_4 = null;
var iaai_KeyCode_NUM_5 = null;
var iaai_KeyCode_NUM_6 = null;
var iaai_KeyCode_NUM_7 = null;
var iaai_KeyCode_NUM_8 = null;
var iaai_KeyCode_NUM_9 = null;
var iaai_KeyCode_A = null;
var iaai_KeyCode_ALT_LEFT = null;
var iaai_KeyCode_ALT_RIGHT = null;
var iaai_KeyCode_APOSTROPHE = null;
var iaai_KeyCode_AT = null;
var iaai_KeyCode_B = null;
var iaai_KeyCode_BACK = null;
var iaai_KeyCode_BACKSLASH = null;
var iaai_KeyCode_C = null;
var iaai_KeyCode_CALL = null;
var iaai_KeyCode_CAMERA = null;
var iaai_KeyCode_CLEAR = null;
var iaai_KeyCode_COMMA = null;
var iaai_KeyCode_D = null;
var iaai_KeyCode_DEL = null;
var iaai_KeyCode_BACKSPACE = null;
var iaai_KeyCode_FORWARD_DEL = null;
var iaai_KeyCode_DPAD_CENTER = null;
var iaai_KeyCode_DPAD_DOWN = null;
var iaai_KeyCode_DPAD_LEFT = null;
var iaai_KeyCode_DPAD_RIGHT = null;
var iaai_KeyCode_DPAD_UP = null;
var iaai_KeyCode_CENTER = null;
var iaai_KeyCode_DOWN = null;
var iaai_KeyCode_LEFT = null;
var iaai_KeyCode_RIGHT = null;
var iaai_KeyCode_UP = null;
var iaai_KeyCode_E = null;
var iaai_KeyCode_ENDCALL = null;
var iaai_KeyCode_ENTER = null;
var iaai_KeyCode_ENVELOPE = null;
var iaai_KeyCode_EQUALS = null;
var iaai_KeyCode_EXPLORER = null;
var iaai_KeyCode_F = null;
var iaai_KeyCode_FOCUS = null;
var iaai_KeyCode_G = null;
var iaai_KeyCode_BACKTICK = null;
var iaai_KeyCode_H = null;
var iaai_KeyCode_HEADSETHOOK = null;
var iaai_KeyCode_HOME = null;
var iaai_KeyCode_I = null;
var iaai_KeyCode_J = null;
var iaai_KeyCode_K = null;
var iaai_KeyCode_L = null;
var iaai_KeyCode_LEFT_BRACKET = null;
var iaai_KeyCode_M = null;
var iaai_KeyCode_MEDIA_FAST_FORWARD = null;
var iaai_KeyCode_MEDIA_NEXT = null;
var iaai_KeyCode_MEDIA_PLAY_PAUSE = null;
var iaai_KeyCode_MEDIA_PREVIOUS = null;
var iaai_KeyCode_MEDIA_REWIND = null;
var iaai_KeyCode_MEDIA_STOP = null;
var iaai_KeyCode_MENU = null;
var iaai_KeyCode_MINUS = null;
var iaai_KeyCode_MUTE = null;
var iaai_KeyCode_N = null;
var iaai_KeyCode_NOTIFICATION = null;
var iaai_KeyCode_NUM = null;
var iaai_KeyCode_O = null;
var iaai_KeyCode_P = null;
var iaai_KeyCode_PERIOD = null;
var iaai_KeyCode_PLUS = null;
var iaai_KeyCode_POUND = null;
var iaai_KeyCode_POWER = null;
var iaai_KeyCode_Q = null;
var iaai_KeyCode_R = null;
var iaai_KeyCode_RIGHT_BRACKET = null;
var iaai_KeyCode_S = null;
var iaai_KeyCode_SEARCH = null;
var iaai_KeyCode_SEMICOLON = null;
var iaai_KeyCode_SHIFT_LEFT = null;
var iaai_KeyCode_SHIFT_RIGHT = null;
var iaai_KeyCode_SLASH = null;
var iaai_KeyCode_SOFT_LEFT = null;
var iaai_KeyCode_SOFT_RIGHT = null;
var iaai_KeyCode_SPACE = null;
var iaai_KeyCode_STAR = null;
var iaai_KeyCode_SYM = null;
var iaai_KeyCode_T = null;
var iaai_KeyCode_TAB = null;
var iaai_KeyCode_U = null;
var iaai_KeyCode_UNKNOWN = null;
var iaai_KeyCode_V = null;
var iaai_KeyCode_VOLUME_DOWN = null;
var iaai_KeyCode_VOLUME_UP = null;
var iaai_KeyCode_W = null;
var iaai_KeyCode_X = null;
var iaai_KeyCode_Y = null;
var iaai_KeyCode_Z = null;
var iaai_KeyCode_META_ALT_LEFT_ON = null;
var iaai_KeyCode_META_ALT_ON = null;
var iaai_KeyCode_META_ALT_RIGHT_ON = null;
var iaai_KeyCode_META_SHIFT_LEFT_ON = null;
var iaai_KeyCode_META_SHIFT_ON = null;
var iaai_KeyCode_META_SHIFT_RIGHT_ON = null;
var iaai_KeyCode_META_SYM_ON = null;
var iaai_KeyCode_CONTROL_LEFT = null;
var iaai_KeyCode_CONTROL_RIGHT = null;
var iaai_KeyCode_ESCAPE = null;
var iaai_KeyCode_END = null;
var iaai_KeyCode_INSERT = null;
var iaai_KeyCode_PAGE_UP = null;
var iaai_KeyCode_PAGE_DOWN = null;
var iaai_KeyCode_PICTSYMBOLS = null;
var iaai_KeyCode_SWITCH_CHARSET = null;
var iaai_KeyCode_BUTTON_CIRCLE = null;
var iaai_KeyCode_BUTTON_A = null;
var iaai_KeyCode_BUTTON_B = null;
var iaai_KeyCode_BUTTON_C = null;
var iaai_KeyCode_BUTTON_X = null;
var iaai_KeyCode_BUTTON_Y = null;
var iaai_KeyCode_BUTTON_Z = null;
var iaai_KeyCode_BUTTON_L1 = null;
var iaai_KeyCode_BUTTON_R1 = null;
var iaai_KeyCode_BUTTON_L2 = null;
var iaai_KeyCode_BUTTON_R2 = null;
var iaai_KeyCode_BUTTON_THUMBL = null;
var iaai_KeyCode_BUTTON_THUMBR = null;
var iaai_KeyCode_BUTTON_START = null;
var iaai_KeyCode_BUTTON_SELECT = null;
var iaai_KeyCode_BUTTON_MODE = null;
var iaai_KeyCode_NUMPAD_0 = null;
var iaai_KeyCode_NUMPAD_1 = null;
var iaai_KeyCode_NUMPAD_2 = null;
var iaai_KeyCode_NUMPAD_3 = null;
var iaai_KeyCode_NUMPAD_4 = null;
var iaai_KeyCode_NUMPAD_5 = null;
var iaai_KeyCode_NUMPAD_6 = null;
var iaai_KeyCode_NUMPAD_7 = null;
var iaai_KeyCode_NUMPAD_8 = null;
var iaai_KeyCode_NUMPAD_9 = null;
var iaai_KeyCode_COLON = null;
var iaai_KeyCode_F1 = null;
var iaai_KeyCode_F2 = null;
var iaai_KeyCode_F3 = null;
var iaai_KeyCode_F4 = null;
var iaai_KeyCode_F5 = null;
var iaai_KeyCode_F6 = null;
var iaai_KeyCode_F7 = null;
var iaai_KeyCode_F8 = null;
var iaai_KeyCode_F9 = null;
var iaai_KeyCode_F10 = null;
var iaai_KeyCode_F11 = null;
var iaai_KeyCode_F12 = null;
var iaai_KeyCode_UNSET = null;
var iaai_KeyCode_APPLICATION = null;
var iaai_KeyCode_ASTERISK = null;
var iaai_KeyCode_CAPS_LOCK = null;
var iaai_KeyCode_PAUSE = null;
var iaai_KeyCode_PRINT_SCREEN = null;
var iaai_KeyCode_SCROLL_LOCK = null;
var iaai_KeyCode_all = null;
var iaai_KeyCode_$VALUES = null;
function iaai_KeyCode_$callClinit() {
    iaai_KeyCode_$callClinit = $rt_eraseClinit(iaai_KeyCode);
    iaai_KeyCode__clinit_();
}
function iaai_KeyCode__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new iaai_KeyCode();
    iaai_KeyCode__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaai_KeyCode__init_1(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new iaai_KeyCode();
    iaai_KeyCode__init_2(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function iaai_KeyCode_values() {
    iaai_KeyCode_$callClinit();
    return iaai_KeyCode_$VALUES.$clone();
}
function iaai_KeyCode__init_0($this, var$1, var$2, $type, $value) {
    iaai_KeyCode_$callClinit();
    iaai_KeyCode__init_2($this, var$1, var$2, $type, $value, 0);
}
function iaai_KeyCode__init_2($this, var$1, var$2, $type, $value, $axis) {
    iaai_KeyCode_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
    $this.$type7 = $type;
    $this.$value3 = $value;
    $this.$axis = $axis;
}
function iaai_KeyCode_byOrdinal($id) {
    iaai_KeyCode_$callClinit();
    if ($id >= 0 && $id < iaai_KeyCode_all.data.length)
        return iaai_KeyCode_all.data[$id];
    $rt_throw(jl_ArrayIndexOutOfBoundsException__init_1(jl_StringBuilder__init_().$append($rt_s(623)).$append3($id).$toString()));
}
function iaai_KeyCode__clinit_() {
    var var$1, var$2, var$3;
    var$1 = new iaai_KeyCode;
    iaai_KeyCode$KeyType_$callClinit();
    iaai_KeyCode__init_0(var$1, $rt_s(624), 0, iaai_KeyCode$KeyType_controller, $rt_s(625));
    iaai_KeyCode_CONTROLLER_A = var$1;
    iaai_KeyCode_CONTROLLER_B = iaai_KeyCode__init_($rt_s(626), 1, iaai_KeyCode$KeyType_controller, $rt_s(627));
    iaai_KeyCode_CONTROLLER_X = iaai_KeyCode__init_($rt_s(628), 2, iaai_KeyCode$KeyType_controller, $rt_s(629));
    iaai_KeyCode_CONTROLLER_Y = iaai_KeyCode__init_($rt_s(630), 3, iaai_KeyCode$KeyType_controller, $rt_s(631));
    iaai_KeyCode_CONTROLLER_GUIDE = iaai_KeyCode__init_($rt_s(632), 4, iaai_KeyCode$KeyType_controller, $rt_s(633));
    iaai_KeyCode_CONTROLLER_L_BUMPER = iaai_KeyCode__init_($rt_s(634), 5, iaai_KeyCode$KeyType_controller, $rt_s(635));
    iaai_KeyCode_CONTROLLER_R_BUMPER = iaai_KeyCode__init_($rt_s(636), 6, iaai_KeyCode$KeyType_controller, $rt_s(637));
    iaai_KeyCode_CONTROLLER_BACK = iaai_KeyCode__init_($rt_s(638), 7, iaai_KeyCode$KeyType_controller, $rt_s(639));
    iaai_KeyCode_CONTROLLER_START = iaai_KeyCode__init_($rt_s(640), 8, iaai_KeyCode$KeyType_controller, $rt_s(641));
    iaai_KeyCode_CONTROLLER_L_STICK = iaai_KeyCode__init_($rt_s(642), 9, iaai_KeyCode$KeyType_controller, $rt_s(643));
    iaai_KeyCode_CONTROLLER_R_STICK = iaai_KeyCode__init_($rt_s(644), 10, iaai_KeyCode$KeyType_controller, $rt_s(645));
    iaai_KeyCode_CONTROLLER_DPAD_UP = iaai_KeyCode__init_($rt_s(646), 11, iaai_KeyCode$KeyType_controller, $rt_s(647));
    iaai_KeyCode_CONTROLLER_DPAD_DOWN = iaai_KeyCode__init_($rt_s(648), 12, iaai_KeyCode$KeyType_controller, $rt_s(649));
    iaai_KeyCode_CONTROLLER_DPAD_LEFT = iaai_KeyCode__init_($rt_s(650), 13, iaai_KeyCode$KeyType_controller, $rt_s(651));
    iaai_KeyCode_CONTROLLER_DPAD_RIGHT = iaai_KeyCode__init_($rt_s(652), 14, iaai_KeyCode$KeyType_controller, $rt_s(653));
    iaai_KeyCode_CONTROLLER_L_TRIGGER = iaai_KeyCode__init_1($rt_s(654), 15, iaai_KeyCode$KeyType_controller, $rt_s(655), 1);
    iaai_KeyCode_CONTROLLER_R_TRIGGER = iaai_KeyCode__init_1($rt_s(656), 16, iaai_KeyCode$KeyType_controller, $rt_s(657), 1);
    iaai_KeyCode_CONTROLLER_L_STICK_VERTICAL_AXIS = iaai_KeyCode__init_1($rt_s(658), 17, iaai_KeyCode$KeyType_controller, $rt_s(659), 1);
    iaai_KeyCode_CONTROLLER_L_STICK_HORIZONTAL_AXIS = iaai_KeyCode__init_1($rt_s(660), 18, iaai_KeyCode$KeyType_controller, $rt_s(661), 1);
    iaai_KeyCode_CONTROLLER_R_STICK_VERTICAL_AXIS = iaai_KeyCode__init_1($rt_s(662), 19, iaai_KeyCode$KeyType_controller, $rt_s(663), 1);
    iaai_KeyCode_CONTROLLER_R_STICK_HORIZONTAL_AXIS = iaai_KeyCode__init_1($rt_s(664), 20, iaai_KeyCode$KeyType_controller, $rt_s(665), 1);
    iaai_KeyCode_MOUSE_LEFT = iaai_KeyCode__init_($rt_s(666), 21, iaai_KeyCode$KeyType_mouse, $rt_s(667));
    iaai_KeyCode_MOUSE_RIGHT = iaai_KeyCode__init_($rt_s(668), 22, iaai_KeyCode$KeyType_mouse, $rt_s(669));
    iaai_KeyCode_MOUSE_MIDDLE = iaai_KeyCode__init_($rt_s(670), 23, iaai_KeyCode$KeyType_mouse, $rt_s(671));
    iaai_KeyCode_MOUSE_BACK = iaai_KeyCode__init_($rt_s(672), 24, iaai_KeyCode$KeyType_mouse, $rt_s(673));
    iaai_KeyCode_MOUSE_FORWARD = iaai_KeyCode__init_($rt_s(674), 25, iaai_KeyCode$KeyType_mouse, $rt_s(675));
    iaai_KeyCode_SCROLL = iaai_KeyCode__init_1($rt_s(676), 26, iaai_KeyCode$KeyType_scroll, $rt_s(677), 1);
    iaai_KeyCode_ANY_KEY = iaai_KeyCode__init_($rt_s(678), 27, iaai_KeyCode$KeyType_key, $rt_s(679));
    iaai_KeyCode_NUM_0 = iaai_KeyCode__init_($rt_s(680), 28, iaai_KeyCode$KeyType_key, $rt_s(24));
    iaai_KeyCode_NUM_1 = iaai_KeyCode__init_($rt_s(681), 29, iaai_KeyCode$KeyType_key, $rt_s(510));
    iaai_KeyCode_NUM_2 = iaai_KeyCode__init_($rt_s(682), 30, iaai_KeyCode$KeyType_key, $rt_s(683));
    iaai_KeyCode_NUM_3 = iaai_KeyCode__init_($rt_s(684), 31, iaai_KeyCode$KeyType_key, $rt_s(685));
    iaai_KeyCode_NUM_4 = iaai_KeyCode__init_($rt_s(686), 32, iaai_KeyCode$KeyType_key, $rt_s(687));
    iaai_KeyCode_NUM_5 = iaai_KeyCode__init_($rt_s(688), 33, iaai_KeyCode$KeyType_key, $rt_s(689));
    iaai_KeyCode_NUM_6 = iaai_KeyCode__init_($rt_s(690), 34, iaai_KeyCode$KeyType_key, $rt_s(691));
    iaai_KeyCode_NUM_7 = iaai_KeyCode__init_($rt_s(692), 35, iaai_KeyCode$KeyType_key, $rt_s(693));
    iaai_KeyCode_NUM_8 = iaai_KeyCode__init_($rt_s(694), 36, iaai_KeyCode$KeyType_key, $rt_s(695));
    iaai_KeyCode_NUM_9 = iaai_KeyCode__init_($rt_s(696), 37, iaai_KeyCode$KeyType_key, $rt_s(697));
    iaai_KeyCode_A = iaai_KeyCode__init_($rt_s(625), 38, iaai_KeyCode$KeyType_key, $rt_s(625));
    iaai_KeyCode_ALT_LEFT = iaai_KeyCode__init_($rt_s(698), 39, iaai_KeyCode$KeyType_key, $rt_s(699));
    iaai_KeyCode_ALT_RIGHT = iaai_KeyCode__init_($rt_s(700), 40, iaai_KeyCode$KeyType_key, $rt_s(701));
    iaai_KeyCode_APOSTROPHE = iaai_KeyCode__init_($rt_s(702), 41, iaai_KeyCode$KeyType_key, $rt_s(48));
    iaai_KeyCode_AT = iaai_KeyCode__init_($rt_s(703), 42, iaai_KeyCode$KeyType_key, $rt_s(1));
    iaai_KeyCode_B = iaai_KeyCode__init_($rt_s(627), 43, iaai_KeyCode$KeyType_key, $rt_s(627));
    iaai_KeyCode_BACK = iaai_KeyCode__init_($rt_s(704), 44, iaai_KeyCode$KeyType_key, $rt_s(639));
    iaai_KeyCode_BACKSLASH = iaai_KeyCode__init_($rt_s(705), 45, iaai_KeyCode$KeyType_key, $rt_s(706));
    iaai_KeyCode_C = iaai_KeyCode__init_($rt_s(707), 46, iaai_KeyCode$KeyType_key, $rt_s(707));
    iaai_KeyCode_CALL = iaai_KeyCode__init_($rt_s(708), 47, iaai_KeyCode$KeyType_key, $rt_s(709));
    iaai_KeyCode_CAMERA = iaai_KeyCode__init_($rt_s(710), 48, iaai_KeyCode$KeyType_key, $rt_s(711));
    iaai_KeyCode_CLEAR = iaai_KeyCode__init_($rt_s(712), 49, iaai_KeyCode$KeyType_key, $rt_s(713));
    iaai_KeyCode_COMMA = iaai_KeyCode__init_($rt_s(714), 50, iaai_KeyCode$KeyType_key, $rt_s(430));
    iaai_KeyCode_D = iaai_KeyCode__init_($rt_s(93), 51, iaai_KeyCode$KeyType_key, $rt_s(93));
    iaai_KeyCode_DEL = iaai_KeyCode__init_($rt_s(715), 52, iaai_KeyCode$KeyType_key, $rt_s(716));
    iaai_KeyCode_BACKSPACE = iaai_KeyCode__init_($rt_s(717), 53, iaai_KeyCode$KeyType_key, $rt_s(716));
    iaai_KeyCode_FORWARD_DEL = iaai_KeyCode__init_($rt_s(718), 54, iaai_KeyCode$KeyType_key, $rt_s(719));
    iaai_KeyCode_DPAD_CENTER = iaai_KeyCode__init_($rt_s(720), 55, iaai_KeyCode$KeyType_key, $rt_s(721));
    iaai_KeyCode_DPAD_DOWN = iaai_KeyCode__init_($rt_s(722), 56, iaai_KeyCode$KeyType_key, $rt_s(723));
    iaai_KeyCode_DPAD_LEFT = iaai_KeyCode__init_($rt_s(724), 57, iaai_KeyCode$KeyType_key, $rt_s(725));
    iaai_KeyCode_DPAD_RIGHT = iaai_KeyCode__init_($rt_s(726), 58, iaai_KeyCode$KeyType_key, $rt_s(727));
    iaai_KeyCode_DPAD_UP = iaai_KeyCode__init_($rt_s(728), 59, iaai_KeyCode$KeyType_key, $rt_s(729));
    iaai_KeyCode_CENTER = iaai_KeyCode__init_($rt_s(730), 60, iaai_KeyCode$KeyType_key, $rt_s(721));
    iaai_KeyCode_DOWN = iaai_KeyCode__init_($rt_s(731), 61, iaai_KeyCode$KeyType_key, $rt_s(723));
    iaai_KeyCode_LEFT = iaai_KeyCode__init_($rt_s(732), 62, iaai_KeyCode$KeyType_key, $rt_s(725));
    iaai_KeyCode_RIGHT = iaai_KeyCode__init_($rt_s(733), 63, iaai_KeyCode$KeyType_key, $rt_s(727));
    iaai_KeyCode_UP = iaai_KeyCode__init_($rt_s(734), 64, iaai_KeyCode$KeyType_key, $rt_s(729));
    iaai_KeyCode_E = iaai_KeyCode__init_($rt_s(735), 65, iaai_KeyCode$KeyType_key, $rt_s(735));
    iaai_KeyCode_ENDCALL = iaai_KeyCode__init_($rt_s(736), 66, iaai_KeyCode$KeyType_key, $rt_s(737));
    iaai_KeyCode_ENTER = iaai_KeyCode__init_($rt_s(738), 67, iaai_KeyCode$KeyType_key, $rt_s(739));
    iaai_KeyCode_ENVELOPE = iaai_KeyCode__init_($rt_s(740), 68, iaai_KeyCode$KeyType_key, $rt_s(741));
    iaai_KeyCode_EQUALS = iaai_KeyCode__init_($rt_s(742), 69, iaai_KeyCode$KeyType_key, $rt_s(743));
    iaai_KeyCode_EXPLORER = iaai_KeyCode__init_($rt_s(744), 70, iaai_KeyCode$KeyType_key, $rt_s(745));
    iaai_KeyCode_F = iaai_KeyCode__init_($rt_s(746), 71, iaai_KeyCode$KeyType_key, $rt_s(746));
    iaai_KeyCode_FOCUS = iaai_KeyCode__init_($rt_s(747), 72, iaai_KeyCode$KeyType_key, $rt_s(748));
    iaai_KeyCode_G = iaai_KeyCode__init_($rt_s(749), 73, iaai_KeyCode$KeyType_key, $rt_s(749));
    iaai_KeyCode_BACKTICK = iaai_KeyCode__init_($rt_s(750), 74, iaai_KeyCode$KeyType_key, $rt_s(751));
    iaai_KeyCode_H = iaai_KeyCode__init_($rt_s(752), 75, iaai_KeyCode$KeyType_key, $rt_s(752));
    iaai_KeyCode_HEADSETHOOK = iaai_KeyCode__init_($rt_s(753), 76, iaai_KeyCode$KeyType_key, $rt_s(754));
    iaai_KeyCode_HOME = iaai_KeyCode__init_($rt_s(755), 77, iaai_KeyCode$KeyType_key, $rt_s(756));
    iaai_KeyCode_I = iaai_KeyCode__init_($rt_s(757), 78, iaai_KeyCode$KeyType_key, $rt_s(757));
    iaai_KeyCode_J = iaai_KeyCode__init_($rt_s(758), 79, iaai_KeyCode$KeyType_key, $rt_s(758));
    iaai_KeyCode_K = iaai_KeyCode__init_($rt_s(759), 80, iaai_KeyCode$KeyType_key, $rt_s(759));
    iaai_KeyCode_L = iaai_KeyCode__init_($rt_s(760), 81, iaai_KeyCode$KeyType_key, $rt_s(760));
    iaai_KeyCode_LEFT_BRACKET = iaai_KeyCode__init_($rt_s(761), 82, iaai_KeyCode$KeyType_key, $rt_s(762));
    iaai_KeyCode_M = iaai_KeyCode__init_($rt_s(763), 83, iaai_KeyCode$KeyType_key, $rt_s(763));
    iaai_KeyCode_MEDIA_FAST_FORWARD = iaai_KeyCode__init_($rt_s(764), 84, iaai_KeyCode$KeyType_key, $rt_s(765));
    iaai_KeyCode_MEDIA_NEXT = iaai_KeyCode__init_($rt_s(766), 85, iaai_KeyCode$KeyType_key, $rt_s(767));
    iaai_KeyCode_MEDIA_PLAY_PAUSE = iaai_KeyCode__init_($rt_s(768), 86, iaai_KeyCode$KeyType_key, $rt_s(769));
    iaai_KeyCode_MEDIA_PREVIOUS = iaai_KeyCode__init_($rt_s(770), 87, iaai_KeyCode$KeyType_key, $rt_s(771));
    iaai_KeyCode_MEDIA_REWIND = iaai_KeyCode__init_($rt_s(772), 88, iaai_KeyCode$KeyType_key, $rt_s(773));
    iaai_KeyCode_MEDIA_STOP = iaai_KeyCode__init_($rt_s(774), 89, iaai_KeyCode$KeyType_key, $rt_s(775));
    iaai_KeyCode_MENU = iaai_KeyCode__init_($rt_s(776), 90, iaai_KeyCode$KeyType_key, $rt_s(777));
    iaai_KeyCode_MINUS = iaai_KeyCode__init_($rt_s(778), 91, iaai_KeyCode$KeyType_key, $rt_s(260));
    iaai_KeyCode_MUTE = iaai_KeyCode__init_($rt_s(779), 92, iaai_KeyCode$KeyType_key, $rt_s(780));
    iaai_KeyCode_N = iaai_KeyCode__init_($rt_s(227), 93, iaai_KeyCode$KeyType_key, $rt_s(227));
    iaai_KeyCode_NOTIFICATION = iaai_KeyCode__init_($rt_s(781), 94, iaai_KeyCode$KeyType_key, $rt_s(782));
    iaai_KeyCode_NUM = iaai_KeyCode__init_($rt_s(783), 95, iaai_KeyCode$KeyType_key, $rt_s(784));
    iaai_KeyCode_O = iaai_KeyCode__init_($rt_s(785), 96, iaai_KeyCode$KeyType_key, $rt_s(785));
    iaai_KeyCode_P = iaai_KeyCode__init_($rt_s(786), 97, iaai_KeyCode$KeyType_key, $rt_s(786));
    iaai_KeyCode_PERIOD = iaai_KeyCode__init_($rt_s(787), 98, iaai_KeyCode$KeyType_key, $rt_s(554));
    iaai_KeyCode_PLUS = iaai_KeyCode__init_($rt_s(788), 99, iaai_KeyCode$KeyType_key, $rt_s(789));
    iaai_KeyCode_POUND = iaai_KeyCode__init_($rt_s(790), 100, iaai_KeyCode$KeyType_key, $rt_s(791));
    iaai_KeyCode_POWER = iaai_KeyCode__init_($rt_s(792), 101, iaai_KeyCode$KeyType_key, $rt_s(793));
    iaai_KeyCode_Q = iaai_KeyCode__init_($rt_s(794), 102, iaai_KeyCode$KeyType_key, $rt_s(794));
    iaai_KeyCode_R = iaai_KeyCode__init_($rt_s(795), 103, iaai_KeyCode$KeyType_key, $rt_s(795));
    iaai_KeyCode_RIGHT_BRACKET = iaai_KeyCode__init_($rt_s(796), 104, iaai_KeyCode$KeyType_key, $rt_s(56));
    iaai_KeyCode_S = iaai_KeyCode__init_($rt_s(91), 105, iaai_KeyCode$KeyType_key, $rt_s(91));
    iaai_KeyCode_SEARCH = iaai_KeyCode__init_($rt_s(797), 106, iaai_KeyCode$KeyType_key, $rt_s(798));
    iaai_KeyCode_SEMICOLON = iaai_KeyCode__init_($rt_s(799), 107, iaai_KeyCode$KeyType_key, $rt_s(800));
    iaai_KeyCode_SHIFT_LEFT = iaai_KeyCode__init_($rt_s(801), 108, iaai_KeyCode$KeyType_key, $rt_s(802));
    iaai_KeyCode_SHIFT_RIGHT = iaai_KeyCode__init_($rt_s(803), 109, iaai_KeyCode$KeyType_key, $rt_s(804));
    iaai_KeyCode_SLASH = iaai_KeyCode__init_($rt_s(805), 110, iaai_KeyCode$KeyType_key, $rt_s(556));
    iaai_KeyCode_SOFT_LEFT = iaai_KeyCode__init_($rt_s(806), 111, iaai_KeyCode$KeyType_key, $rt_s(807));
    iaai_KeyCode_SOFT_RIGHT = iaai_KeyCode__init_($rt_s(808), 112, iaai_KeyCode$KeyType_key, $rt_s(809));
    iaai_KeyCode_SPACE = iaai_KeyCode__init_($rt_s(810), 113, iaai_KeyCode$KeyType_key, $rt_s(87));
    iaai_KeyCode_STAR = iaai_KeyCode__init_($rt_s(811), 114, iaai_KeyCode$KeyType_key, $rt_s(812));
    iaai_KeyCode_SYM = iaai_KeyCode__init_($rt_s(813), 115, iaai_KeyCode$KeyType_key, $rt_s(813));
    iaai_KeyCode_T = iaai_KeyCode__init_($rt_s(814), 116, iaai_KeyCode$KeyType_key, $rt_s(814));
    iaai_KeyCode_TAB = iaai_KeyCode__init_($rt_s(815), 117, iaai_KeyCode$KeyType_key, $rt_s(816));
    iaai_KeyCode_U = iaai_KeyCode__init_($rt_s(817), 118, iaai_KeyCode$KeyType_key, $rt_s(817));
    iaai_KeyCode_UNKNOWN = iaai_KeyCode__init_($rt_s(818), 119, iaai_KeyCode$KeyType_key, $rt_s(819));
    iaai_KeyCode_V = iaai_KeyCode__init_($rt_s(820), 120, iaai_KeyCode$KeyType_key, $rt_s(820));
    iaai_KeyCode_VOLUME_DOWN = iaai_KeyCode__init_($rt_s(821), 121, iaai_KeyCode$KeyType_key, $rt_s(822));
    iaai_KeyCode_VOLUME_UP = iaai_KeyCode__init_($rt_s(823), 122, iaai_KeyCode$KeyType_key, $rt_s(824));
    iaai_KeyCode_W = iaai_KeyCode__init_($rt_s(89), 123, iaai_KeyCode$KeyType_key, $rt_s(89));
    iaai_KeyCode_X = iaai_KeyCode__init_($rt_s(629), 124, iaai_KeyCode$KeyType_key, $rt_s(629));
    iaai_KeyCode_Y = iaai_KeyCode__init_($rt_s(631), 125, iaai_KeyCode$KeyType_key, $rt_s(631));
    iaai_KeyCode_Z = iaai_KeyCode__init_($rt_s(825), 126, iaai_KeyCode$KeyType_key, $rt_s(825));
    iaai_KeyCode_META_ALT_LEFT_ON = iaai_KeyCode__init_($rt_s(826), 127, iaai_KeyCode$KeyType_key, $rt_s(697));
    iaai_KeyCode_META_ALT_ON = iaai_KeyCode__init_($rt_s(827), 128, iaai_KeyCode$KeyType_key, $rt_s(809));
    iaai_KeyCode_META_ALT_RIGHT_ON = iaai_KeyCode__init_($rt_s(828), 129, iaai_KeyCode$KeyType_key, $rt_s(93));
    iaai_KeyCode_META_SHIFT_LEFT_ON = iaai_KeyCode__init_($rt_s(829), 130, iaai_KeyCode$KeyType_key, $rt_s(745));
    iaai_KeyCode_META_SHIFT_ON = iaai_KeyCode__init_($rt_s(830), 131, iaai_KeyCode$KeyType_key, $rt_s(807));
    iaai_KeyCode_META_SHIFT_RIGHT_ON = iaai_KeyCode__init_($rt_s(831), 132, iaai_KeyCode$KeyType_key, $rt_s(52));
    iaai_KeyCode_META_SYM_ON = iaai_KeyCode__init_($rt_s(832), 133, iaai_KeyCode$KeyType_key, $rt_s(639));
    iaai_KeyCode_CONTROL_LEFT = iaai_KeyCode__init_($rt_s(833), 134, iaai_KeyCode$KeyType_key, $rt_s(834));
    iaai_KeyCode_CONTROL_RIGHT = iaai_KeyCode__init_($rt_s(835), 135, iaai_KeyCode$KeyType_key, $rt_s(836));
    iaai_KeyCode_ESCAPE = iaai_KeyCode__init_($rt_s(837), 136, iaai_KeyCode$KeyType_key, $rt_s(838));
    iaai_KeyCode_END = iaai_KeyCode__init_($rt_s(839), 137, iaai_KeyCode$KeyType_key, $rt_s(840));
    iaai_KeyCode_INSERT = iaai_KeyCode__init_($rt_s(841), 138, iaai_KeyCode$KeyType_key, $rt_s(842));
    iaai_KeyCode_PAGE_UP = iaai_KeyCode__init_($rt_s(843), 139, iaai_KeyCode$KeyType_key, $rt_s(844));
    iaai_KeyCode_PAGE_DOWN = iaai_KeyCode__init_($rt_s(845), 140, iaai_KeyCode$KeyType_key, $rt_s(846));
    iaai_KeyCode_PICTSYMBOLS = iaai_KeyCode__init_($rt_s(847), 141, iaai_KeyCode$KeyType_key, $rt_s(847));
    iaai_KeyCode_SWITCH_CHARSET = iaai_KeyCode__init_($rt_s(848), 142, iaai_KeyCode$KeyType_key, $rt_s(848));
    iaai_KeyCode_BUTTON_CIRCLE = iaai_KeyCode__init_($rt_s(849), 143, iaai_KeyCode$KeyType_key, $rt_s(850));
    iaai_KeyCode_BUTTON_A = iaai_KeyCode__init_($rt_s(851), 144, iaai_KeyCode$KeyType_key, $rt_s(852));
    iaai_KeyCode_BUTTON_B = iaai_KeyCode__init_($rt_s(853), 145, iaai_KeyCode$KeyType_key, $rt_s(854));
    iaai_KeyCode_BUTTON_C = iaai_KeyCode__init_($rt_s(855), 146, iaai_KeyCode$KeyType_key, $rt_s(856));
    iaai_KeyCode_BUTTON_X = iaai_KeyCode__init_($rt_s(857), 147, iaai_KeyCode$KeyType_key, $rt_s(858));
    iaai_KeyCode_BUTTON_Y = iaai_KeyCode__init_($rt_s(859), 148, iaai_KeyCode$KeyType_key, $rt_s(860));
    iaai_KeyCode_BUTTON_Z = iaai_KeyCode__init_($rt_s(861), 149, iaai_KeyCode$KeyType_key, $rt_s(862));
    iaai_KeyCode_BUTTON_L1 = iaai_KeyCode__init_($rt_s(863), 150, iaai_KeyCode$KeyType_key, $rt_s(864));
    iaai_KeyCode_BUTTON_R1 = iaai_KeyCode__init_($rt_s(865), 151, iaai_KeyCode$KeyType_key, $rt_s(866));
    iaai_KeyCode_BUTTON_L2 = iaai_KeyCode__init_($rt_s(867), 152, iaai_KeyCode$KeyType_key, $rt_s(868));
    iaai_KeyCode_BUTTON_R2 = iaai_KeyCode__init_($rt_s(869), 153, iaai_KeyCode$KeyType_key, $rt_s(870));
    iaai_KeyCode_BUTTON_THUMBL = iaai_KeyCode__init_($rt_s(871), 154, iaai_KeyCode$KeyType_key, $rt_s(872));
    iaai_KeyCode_BUTTON_THUMBR = iaai_KeyCode__init_($rt_s(873), 155, iaai_KeyCode$KeyType_key, $rt_s(874));
    iaai_KeyCode_BUTTON_START = iaai_KeyCode__init_($rt_s(875), 156, iaai_KeyCode$KeyType_key, $rt_s(641));
    iaai_KeyCode_BUTTON_SELECT = iaai_KeyCode__init_($rt_s(876), 157, iaai_KeyCode$KeyType_key, $rt_s(877));
    iaai_KeyCode_BUTTON_MODE = iaai_KeyCode__init_($rt_s(878), 158, iaai_KeyCode$KeyType_key, $rt_s(879));
    iaai_KeyCode_NUMPAD_0 = iaai_KeyCode__init_($rt_s(880), 159, iaai_KeyCode$KeyType_key, $rt_s(881));
    iaai_KeyCode_NUMPAD_1 = iaai_KeyCode__init_($rt_s(882), 160, iaai_KeyCode$KeyType_key, $rt_s(883));
    iaai_KeyCode_NUMPAD_2 = iaai_KeyCode__init_($rt_s(884), 161, iaai_KeyCode$KeyType_key, $rt_s(885));
    iaai_KeyCode_NUMPAD_3 = iaai_KeyCode__init_($rt_s(886), 162, iaai_KeyCode$KeyType_key, $rt_s(887));
    iaai_KeyCode_NUMPAD_4 = iaai_KeyCode__init_($rt_s(888), 163, iaai_KeyCode$KeyType_key, $rt_s(889));
    iaai_KeyCode_NUMPAD_5 = iaai_KeyCode__init_($rt_s(890), 164, iaai_KeyCode$KeyType_key, $rt_s(891));
    iaai_KeyCode_NUMPAD_6 = iaai_KeyCode__init_($rt_s(892), 165, iaai_KeyCode$KeyType_key, $rt_s(893));
    iaai_KeyCode_NUMPAD_7 = iaai_KeyCode__init_($rt_s(894), 166, iaai_KeyCode$KeyType_key, $rt_s(895));
    iaai_KeyCode_NUMPAD_8 = iaai_KeyCode__init_($rt_s(896), 167, iaai_KeyCode$KeyType_key, $rt_s(897));
    iaai_KeyCode_NUMPAD_9 = iaai_KeyCode__init_($rt_s(898), 168, iaai_KeyCode$KeyType_key, $rt_s(899));
    iaai_KeyCode_COLON = iaai_KeyCode__init_($rt_s(900), 169, iaai_KeyCode$KeyType_key, $rt_s(21));
    iaai_KeyCode_F1 = iaai_KeyCode__init_($rt_s(901), 170, iaai_KeyCode$KeyType_key, $rt_s(901));
    iaai_KeyCode_F2 = iaai_KeyCode__init_($rt_s(902), 171, iaai_KeyCode$KeyType_key, $rt_s(902));
    iaai_KeyCode_F3 = iaai_KeyCode__init_($rt_s(903), 172, iaai_KeyCode$KeyType_key, $rt_s(903));
    iaai_KeyCode_F4 = iaai_KeyCode__init_($rt_s(904), 173, iaai_KeyCode$KeyType_key, $rt_s(904));
    iaai_KeyCode_F5 = iaai_KeyCode__init_($rt_s(905), 174, iaai_KeyCode$KeyType_key, $rt_s(905));
    iaai_KeyCode_F6 = iaai_KeyCode__init_($rt_s(906), 175, iaai_KeyCode$KeyType_key, $rt_s(906));
    iaai_KeyCode_F7 = iaai_KeyCode__init_($rt_s(907), 176, iaai_KeyCode$KeyType_key, $rt_s(907));
    iaai_KeyCode_F8 = iaai_KeyCode__init_($rt_s(908), 177, iaai_KeyCode$KeyType_key, $rt_s(908));
    iaai_KeyCode_F9 = iaai_KeyCode__init_($rt_s(909), 178, iaai_KeyCode$KeyType_key, $rt_s(909));
    iaai_KeyCode_F10 = iaai_KeyCode__init_($rt_s(910), 179, iaai_KeyCode$KeyType_key, $rt_s(910));
    iaai_KeyCode_F11 = iaai_KeyCode__init_($rt_s(911), 180, iaai_KeyCode$KeyType_key, $rt_s(911));
    iaai_KeyCode_F12 = iaai_KeyCode__init_($rt_s(850), 181, iaai_KeyCode$KeyType_key, $rt_s(850));
    iaai_KeyCode_UNSET = iaai_KeyCode__init_($rt_s(912), 182, iaai_KeyCode$KeyType_key, $rt_s(913));
    iaai_KeyCode_APPLICATION = iaai_KeyCode__init_($rt_s(914), 183, iaai_KeyCode$KeyType_key, $rt_s(915));
    iaai_KeyCode_ASTERISK = iaai_KeyCode__init_($rt_s(916), 184, iaai_KeyCode$KeyType_key, $rt_s(812));
    iaai_KeyCode_CAPS_LOCK = iaai_KeyCode__init_($rt_s(917), 185, iaai_KeyCode$KeyType_key, $rt_s(918));
    iaai_KeyCode_PAUSE = iaai_KeyCode__init_($rt_s(919), 186, iaai_KeyCode$KeyType_key, $rt_s(920));
    iaai_KeyCode_PRINT_SCREEN = iaai_KeyCode__init_($rt_s(921), 187, iaai_KeyCode$KeyType_key, $rt_s(922));
    iaai_KeyCode_SCROLL_LOCK = iaai_KeyCode__init_($rt_s(923), 188, iaai_KeyCode$KeyType_key, $rt_s(924));
    var$2 = $rt_createArray(iaai_KeyCode, 189);
    var$3 = var$2.data;
    var$3[0] = iaai_KeyCode_CONTROLLER_A;
    var$3[1] = iaai_KeyCode_CONTROLLER_B;
    var$3[2] = iaai_KeyCode_CONTROLLER_X;
    var$3[3] = iaai_KeyCode_CONTROLLER_Y;
    var$3[4] = iaai_KeyCode_CONTROLLER_GUIDE;
    var$3[5] = iaai_KeyCode_CONTROLLER_L_BUMPER;
    var$3[6] = iaai_KeyCode_CONTROLLER_R_BUMPER;
    var$3[7] = iaai_KeyCode_CONTROLLER_BACK;
    var$3[8] = iaai_KeyCode_CONTROLLER_START;
    var$3[9] = iaai_KeyCode_CONTROLLER_L_STICK;
    var$3[10] = iaai_KeyCode_CONTROLLER_R_STICK;
    var$3[11] = iaai_KeyCode_CONTROLLER_DPAD_UP;
    var$3[12] = iaai_KeyCode_CONTROLLER_DPAD_DOWN;
    var$3[13] = iaai_KeyCode_CONTROLLER_DPAD_LEFT;
    var$3[14] = iaai_KeyCode_CONTROLLER_DPAD_RIGHT;
    var$3[15] = iaai_KeyCode_CONTROLLER_L_TRIGGER;
    var$3[16] = iaai_KeyCode_CONTROLLER_R_TRIGGER;
    var$3[17] = iaai_KeyCode_CONTROLLER_L_STICK_VERTICAL_AXIS;
    var$3[18] = iaai_KeyCode_CONTROLLER_L_STICK_HORIZONTAL_AXIS;
    var$3[19] = iaai_KeyCode_CONTROLLER_R_STICK_VERTICAL_AXIS;
    var$3[20] = iaai_KeyCode_CONTROLLER_R_STICK_HORIZONTAL_AXIS;
    var$3[21] = iaai_KeyCode_MOUSE_LEFT;
    var$3[22] = iaai_KeyCode_MOUSE_RIGHT;
    var$3[23] = iaai_KeyCode_MOUSE_MIDDLE;
    var$3[24] = iaai_KeyCode_MOUSE_BACK;
    var$3[25] = iaai_KeyCode_MOUSE_FORWARD;
    var$3[26] = iaai_KeyCode_SCROLL;
    var$3[27] = iaai_KeyCode_ANY_KEY;
    var$3[28] = iaai_KeyCode_NUM_0;
    var$3[29] = iaai_KeyCode_NUM_1;
    var$3[30] = iaai_KeyCode_NUM_2;
    var$3[31] = iaai_KeyCode_NUM_3;
    var$3[32] = iaai_KeyCode_NUM_4;
    var$3[33] = iaai_KeyCode_NUM_5;
    var$3[34] = iaai_KeyCode_NUM_6;
    var$3[35] = iaai_KeyCode_NUM_7;
    var$3[36] = iaai_KeyCode_NUM_8;
    var$3[37] = iaai_KeyCode_NUM_9;
    var$3[38] = iaai_KeyCode_A;
    var$3[39] = iaai_KeyCode_ALT_LEFT;
    var$3[40] = iaai_KeyCode_ALT_RIGHT;
    var$3[41] = iaai_KeyCode_APOSTROPHE;
    var$3[42] = iaai_KeyCode_AT;
    var$3[43] = iaai_KeyCode_B;
    var$3[44] = iaai_KeyCode_BACK;
    var$3[45] = iaai_KeyCode_BACKSLASH;
    var$3[46] = iaai_KeyCode_C;
    var$3[47] = iaai_KeyCode_CALL;
    var$3[48] = iaai_KeyCode_CAMERA;
    var$3[49] = iaai_KeyCode_CLEAR;
    var$3[50] = iaai_KeyCode_COMMA;
    var$3[51] = iaai_KeyCode_D;
    var$3[52] = iaai_KeyCode_DEL;
    var$3[53] = iaai_KeyCode_BACKSPACE;
    var$3[54] = iaai_KeyCode_FORWARD_DEL;
    var$3[55] = iaai_KeyCode_DPAD_CENTER;
    var$3[56] = iaai_KeyCode_DPAD_DOWN;
    var$3[57] = iaai_KeyCode_DPAD_LEFT;
    var$3[58] = iaai_KeyCode_DPAD_RIGHT;
    var$3[59] = iaai_KeyCode_DPAD_UP;
    var$3[60] = iaai_KeyCode_CENTER;
    var$3[61] = iaai_KeyCode_DOWN;
    var$3[62] = iaai_KeyCode_LEFT;
    var$3[63] = iaai_KeyCode_RIGHT;
    var$3[64] = iaai_KeyCode_UP;
    var$3[65] = iaai_KeyCode_E;
    var$3[66] = iaai_KeyCode_ENDCALL;
    var$3[67] = iaai_KeyCode_ENTER;
    var$3[68] = iaai_KeyCode_ENVELOPE;
    var$3[69] = iaai_KeyCode_EQUALS;
    var$3[70] = iaai_KeyCode_EXPLORER;
    var$3[71] = iaai_KeyCode_F;
    var$3[72] = iaai_KeyCode_FOCUS;
    var$3[73] = iaai_KeyCode_G;
    var$3[74] = iaai_KeyCode_BACKTICK;
    var$3[75] = iaai_KeyCode_H;
    var$3[76] = iaai_KeyCode_HEADSETHOOK;
    var$3[77] = iaai_KeyCode_HOME;
    var$3[78] = iaai_KeyCode_I;
    var$3[79] = iaai_KeyCode_J;
    var$3[80] = iaai_KeyCode_K;
    var$3[81] = iaai_KeyCode_L;
    var$3[82] = iaai_KeyCode_LEFT_BRACKET;
    var$3[83] = iaai_KeyCode_M;
    var$3[84] = iaai_KeyCode_MEDIA_FAST_FORWARD;
    var$3[85] = iaai_KeyCode_MEDIA_NEXT;
    var$3[86] = iaai_KeyCode_MEDIA_PLAY_PAUSE;
    var$3[87] = iaai_KeyCode_MEDIA_PREVIOUS;
    var$3[88] = iaai_KeyCode_MEDIA_REWIND;
    var$3[89] = iaai_KeyCode_MEDIA_STOP;
    var$3[90] = iaai_KeyCode_MENU;
    var$3[91] = iaai_KeyCode_MINUS;
    var$3[92] = iaai_KeyCode_MUTE;
    var$3[93] = iaai_KeyCode_N;
    var$3[94] = iaai_KeyCode_NOTIFICATION;
    var$3[95] = iaai_KeyCode_NUM;
    var$3[96] = iaai_KeyCode_O;
    var$3[97] = iaai_KeyCode_P;
    var$3[98] = iaai_KeyCode_PERIOD;
    var$3[99] = iaai_KeyCode_PLUS;
    var$3[100] = iaai_KeyCode_POUND;
    var$3[101] = iaai_KeyCode_POWER;
    var$3[102] = iaai_KeyCode_Q;
    var$3[103] = iaai_KeyCode_R;
    var$3[104] = iaai_KeyCode_RIGHT_BRACKET;
    var$3[105] = iaai_KeyCode_S;
    var$3[106] = iaai_KeyCode_SEARCH;
    var$3[107] = iaai_KeyCode_SEMICOLON;
    var$3[108] = iaai_KeyCode_SHIFT_LEFT;
    var$3[109] = iaai_KeyCode_SHIFT_RIGHT;
    var$3[110] = iaai_KeyCode_SLASH;
    var$3[111] = iaai_KeyCode_SOFT_LEFT;
    var$3[112] = iaai_KeyCode_SOFT_RIGHT;
    var$3[113] = iaai_KeyCode_SPACE;
    var$3[114] = iaai_KeyCode_STAR;
    var$3[115] = iaai_KeyCode_SYM;
    var$3[116] = iaai_KeyCode_T;
    var$3[117] = iaai_KeyCode_TAB;
    var$3[118] = iaai_KeyCode_U;
    var$3[119] = iaai_KeyCode_UNKNOWN;
    var$3[120] = iaai_KeyCode_V;
    var$3[121] = iaai_KeyCode_VOLUME_DOWN;
    var$3[122] = iaai_KeyCode_VOLUME_UP;
    var$3[123] = iaai_KeyCode_W;
    var$3[124] = iaai_KeyCode_X;
    var$3[125] = iaai_KeyCode_Y;
    var$3[126] = iaai_KeyCode_Z;
    var$3[127] = iaai_KeyCode_META_ALT_LEFT_ON;
    var$3[128] = iaai_KeyCode_META_ALT_ON;
    var$3[129] = iaai_KeyCode_META_ALT_RIGHT_ON;
    var$3[130] = iaai_KeyCode_META_SHIFT_LEFT_ON;
    var$3[131] = iaai_KeyCode_META_SHIFT_ON;
    var$3[132] = iaai_KeyCode_META_SHIFT_RIGHT_ON;
    var$3[133] = iaai_KeyCode_META_SYM_ON;
    var$3[134] = iaai_KeyCode_CONTROL_LEFT;
    var$3[135] = iaai_KeyCode_CONTROL_RIGHT;
    var$3[136] = iaai_KeyCode_ESCAPE;
    var$3[137] = iaai_KeyCode_END;
    var$3[138] = iaai_KeyCode_INSERT;
    var$3[139] = iaai_KeyCode_PAGE_UP;
    var$3[140] = iaai_KeyCode_PAGE_DOWN;
    var$3[141] = iaai_KeyCode_PICTSYMBOLS;
    var$3[142] = iaai_KeyCode_SWITCH_CHARSET;
    var$3[143] = iaai_KeyCode_BUTTON_CIRCLE;
    var$3[144] = iaai_KeyCode_BUTTON_A;
    var$3[145] = iaai_KeyCode_BUTTON_B;
    var$3[146] = iaai_KeyCode_BUTTON_C;
    var$3[147] = iaai_KeyCode_BUTTON_X;
    var$3[148] = iaai_KeyCode_BUTTON_Y;
    var$3[149] = iaai_KeyCode_BUTTON_Z;
    var$3[150] = iaai_KeyCode_BUTTON_L1;
    var$3[151] = iaai_KeyCode_BUTTON_R1;
    var$3[152] = iaai_KeyCode_BUTTON_L2;
    var$3[153] = iaai_KeyCode_BUTTON_R2;
    var$3[154] = iaai_KeyCode_BUTTON_THUMBL;
    var$3[155] = iaai_KeyCode_BUTTON_THUMBR;
    var$3[156] = iaai_KeyCode_BUTTON_START;
    var$3[157] = iaai_KeyCode_BUTTON_SELECT;
    var$3[158] = iaai_KeyCode_BUTTON_MODE;
    var$3[159] = iaai_KeyCode_NUMPAD_0;
    var$3[160] = iaai_KeyCode_NUMPAD_1;
    var$3[161] = iaai_KeyCode_NUMPAD_2;
    var$3[162] = iaai_KeyCode_NUMPAD_3;
    var$3[163] = iaai_KeyCode_NUMPAD_4;
    var$3[164] = iaai_KeyCode_NUMPAD_5;
    var$3[165] = iaai_KeyCode_NUMPAD_6;
    var$3[166] = iaai_KeyCode_NUMPAD_7;
    var$3[167] = iaai_KeyCode_NUMPAD_8;
    var$3[168] = iaai_KeyCode_NUMPAD_9;
    var$3[169] = iaai_KeyCode_COLON;
    var$3[170] = iaai_KeyCode_F1;
    var$3[171] = iaai_KeyCode_F2;
    var$3[172] = iaai_KeyCode_F3;
    var$3[173] = iaai_KeyCode_F4;
    var$3[174] = iaai_KeyCode_F5;
    var$3[175] = iaai_KeyCode_F6;
    var$3[176] = iaai_KeyCode_F7;
    var$3[177] = iaai_KeyCode_F8;
    var$3[178] = iaai_KeyCode_F9;
    var$3[179] = iaai_KeyCode_F10;
    var$3[180] = iaai_KeyCode_F11;
    var$3[181] = iaai_KeyCode_F12;
    var$3[182] = iaai_KeyCode_UNSET;
    var$3[183] = iaai_KeyCode_APPLICATION;
    var$3[184] = iaai_KeyCode_ASTERISK;
    var$3[185] = iaai_KeyCode_CAPS_LOCK;
    var$3[186] = iaai_KeyCode_PAUSE;
    var$3[187] = iaai_KeyCode_PRINT_SCREEN;
    var$3[188] = iaai_KeyCode_SCROLL_LOCK;
    iaai_KeyCode_$VALUES = var$2;
    iaai_KeyCode_all = iaai_KeyCode_values();
}
function iaagg_IndexData() {
}
function iaagg_IndexBufferObjectSubData() {
    var a = this; jl_Object.call(a);
    a.$buffer4 = null;
    a.$byteBuffer = null;
    a.$isDirect = 0;
    a.$usage1 = 0;
    a.$bufferHandle0 = 0;
    a.$isDirty0 = 0;
    a.$isBound0 = 0;
}
function iaagg_IndexBufferObjectSubData__init_(var_0, var_1) {
    var var_2 = new iaagg_IndexBufferObjectSubData();
    iaagg_IndexBufferObjectSubData__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaagg_IndexBufferObjectSubData__init_0($this, $isStatic, $maxIndices) {
    jl_Object__init_0($this);
    $this.$isDirty0 = 1;
    $this.$isBound0 = 0;
    $this.$byteBuffer = iaau_BufferUtils_newByteBuffer($maxIndices * 2 | 0);
    $this.$isDirect = 1;
    $this.$usage1 = !$isStatic ? 35048 : 35044;
    $this.$buffer4 = $this.$byteBuffer.$asShortBuffer();
    $this.$buffer4.$flip();
    $this.$byteBuffer.$flip();
    $this.$bufferHandle0 = iaagg_IndexBufferObjectSubData_createBufferObject($this);
}
function iaagg_IndexBufferObjectSubData_createBufferObject($this) {
    var $result;
    iaa_Core_$callClinit();
    $result = iaa_Core_gl20.$glGenBuffer();
    iaa_Core_gl20.$glBindBuffer(34963, $result);
    iaa_Core_gl20.$glBufferData(34963, jn_Buffer_capacity($this.$byteBuffer), null, $this.$usage1);
    iaa_Core_gl20.$glBindBuffer(34963, 0);
    return $result;
}
function iaagg_IndexBufferObjectSubData_getNumIndices($this) {
    return jn_Buffer_limit($this.$buffer4);
}
function iaagg_IndexBufferObjectSubData_getNumMaxIndices($this) {
    return jn_Buffer_capacity($this.$buffer4);
}
function iaagg_IndexBufferObjectSubData_setIndices($this, $indices, $offset, $count) {
    $this.$isDirty0 = 1;
    $this.$buffer4.$clear2();
    $this.$buffer4.$put9($indices, $offset, $count);
    $this.$buffer4.$flip();
    $this.$byteBuffer.$position(0);
    $this.$byteBuffer.$limit0($count << 1);
    if ($this.$isBound0) {
        iaa_Core_$callClinit();
        iaa_Core_gl20.$glBufferSubData(34963, 0, jn_Buffer_limit($this.$byteBuffer), $this.$byteBuffer);
        $this.$isDirty0 = 0;
    }
}
function iaagg_IndexBufferObjectSubData_getBuffer($this) {
    $this.$isDirty0 = 1;
    return $this.$buffer4;
}
function iaagg_IndexBufferObjectSubData_bind($this) {
    if (!$this.$bufferHandle0)
        $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(925)));
    iaa_Core_$callClinit();
    iaa_Core_gl20.$glBindBuffer(34963, $this.$bufferHandle0);
    if ($this.$isDirty0) {
        $this.$byteBuffer.$limit0(jn_Buffer_limit($this.$buffer4) * 2 | 0);
        iaa_Core_gl20.$glBufferSubData(34963, 0, jn_Buffer_limit($this.$byteBuffer), $this.$byteBuffer);
        $this.$isDirty0 = 0;
    }
    $this.$isBound0 = 1;
}
function iaagg_IndexBufferObjectSubData_unbind($this) {
    iaa_Core_$callClinit();
    iaa_Core_gl20.$glBindBuffer(34963, 0);
    $this.$isBound0 = 0;
}
function iaagg_IndexBufferObjectSubData_dispose($this) {
    var $gl;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    $gl.$glBindBuffer(34963, 0);
    $gl.$glDeleteBuffer($this.$bufferHandle0);
    $this.$bufferHandle0 = 0;
}
function it_Phases$lambda$null$39$lambda$_28_0() {
    jl_Object.call(this);
    this.$_050 = null;
}
function it_Phases$lambda$null$39$lambda$_28_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$null$39$lambda$_28_0();
    it_Phases$lambda$null$39$lambda$_28_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$null$39$lambda$_28_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_050 = var$1;
}
function it_Phases$lambda$null$39$lambda$_28_0_get(var$0, var$1) {
    var$0.$_050.$shootf(var$1);
}
function it_Fx$lambda$static$6$lambda$_25_0() {
    jl_Object.call(this);
    this.$_051 = null;
}
function it_Fx$lambda$static$6$lambda$_25_0__init_(var_0) {
    var var_1 = new it_Fx$lambda$static$6$lambda$_25_0();
    it_Fx$lambda$static$6$lambda$_25_0__init_0(var_1, var_0);
    return var_1;
}
function it_Fx$lambda$static$6$lambda$_25_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_051 = var$1;
}
function it_Fx$lambda$static$6$lambda$_25_0_get(var$0, var$1, var$2) {
    it_Fx_lambda$null$5(var$0.$_051, var$1, var$2);
}
function it_Boss$dash$lambda$_16_0() {
    var a = this; jl_Object.call(a);
    a.$_052 = null;
    a.$_121 = 0.0;
}
function it_Boss$dash$lambda$_16_0__init_(var_0, var_1) {
    var var_2 = new it_Boss$dash$lambda$_16_0();
    it_Boss$dash$lambda$_16_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Boss$dash$lambda$_16_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_052 = var$1;
    var$0.$_121 = var$2;
}
function it_Boss$dash$lambda$_16_0_run(var$0) {
    it_Boss_lambda$dash$4(var$0.$_052, var$0.$_121);
}
function it_Phases$5$lambda$$11$lambda$_11_0() {
    jl_Object.call(this);
}
function it_Phases$5$lambda$$11$lambda$_11_0__init_() {
    var var_0 = new it_Phases$5$lambda$$11$lambda$_11_0();
    it_Phases$5$lambda$$11$lambda$_11_0__init_0(var_0);
    return var_0;
}
function it_Phases$5$lambda$$11$lambda$_11_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$5$lambda$$11$lambda$_11_0_run(var$0) {
    it_Phases$5_lambda$null$10();
}
function jur_MultiLineSOLSet() {
    jur_AbstractSet.call(this);
    this.$lt = null;
}
function jur_MultiLineSOLSet__init_(var_0) {
    var var_1 = new jur_MultiLineSOLSet();
    jur_MultiLineSOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_MultiLineSOLSet__init_0($this, $lt) {
    jur_AbstractSet__init_0($this);
    $this.$lt = $lt;
}
function jur_MultiLineSOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var var$4, var$5;
    a: {
        if ($strIndex != $matchResult.$getRightBound()) {
            if (!$strIndex)
                break a;
            if ($matchResult.$hasAnchoringBounds() && $strIndex == $matchResult.$getLeftBound())
                break a;
            var$4 = $this.$lt;
            var$5 = $strIndex - 1 | 0;
            if (var$4.$isAfterLineTerminator($testString.$charAt(var$5), $testString.$charAt($strIndex)))
                break a;
        }
        return (-1);
    }
    return $this.$next.$matches($strIndex, $testString, $matchResult);
}
function jur_MultiLineSOLSet_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_MultiLineSOLSet_getName($this) {
    return $rt_s(926);
}
function otcji_TSerializable() {
}
function iaagg_SpriteCache$Cache() {
    var a = this; jl_Object.call(a);
    a.$id4 = 0;
    a.$offset0 = 0;
    a.$maxCount = 0;
    a.$textureCount = 0;
    a.$textures = null;
    a.$counts = null;
}
function iaagg_SpriteCache$Cache__init_(var_0, var_1) {
    var var_2 = new iaagg_SpriteCache$Cache();
    iaagg_SpriteCache$Cache__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaagg_SpriteCache$Cache__init_0($this, $id, $offset) {
    jl_Object__init_0($this);
    $this.$id4 = $id;
    $this.$offset0 = $offset;
}
function iaar_GifRecorder() {
    jl_Object.call(this);
}
function jur_AbstractCharClass$LazyLower() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyLower__init_() {
    var var_0 = new jur_AbstractCharClass$LazyLower();
    jur_AbstractCharClass$LazyLower__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyLower__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyLower_computeValue($this) {
    return jur_CharClass__init_().$add0(97, 122);
}
function iaag_Mesh$1() {
    jl_Object.call(this);
}
var iaag_Mesh$1_$SwitchMap$io$anuke$arc$graphics$Mesh$VertexDataType = null;
function iaag_Mesh$1_$callClinit() {
    iaag_Mesh$1_$callClinit = $rt_eraseClinit(iaag_Mesh$1);
    iaag_Mesh$1__clinit_();
}
function iaag_Mesh$1__clinit_() {
    var $$je;
    iaag_Mesh$1_$SwitchMap$io$anuke$arc$graphics$Mesh$VertexDataType = $rt_createIntArray(iaag_Mesh$VertexDataType_values().data.length);
    a: {
        try {
            iaag_Mesh$1_$SwitchMap$io$anuke$arc$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal(iaag_Mesh$VertexDataType_VertexBufferObject)] = 1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    b: {
        try {
            iaag_Mesh$1_$SwitchMap$io$anuke$arc$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal(iaag_Mesh$VertexDataType_VertexBufferObjectSubData)] = 2;
            break b;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    c: {
        try {
            iaag_Mesh$1_$SwitchMap$io$anuke$arc$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal(iaag_Mesh$VertexDataType_VertexBufferObjectWithVAO)] = 3;
            break c;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    d: {
        try {
            iaag_Mesh$1_$SwitchMap$io$anuke$arc$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal(iaag_Mesh$VertexDataType_VertexArray)] = 4;
            break d;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
}
function it_Player$update$lambda$_8_0() {
    var a = this; jl_Object.call(a);
    a.$_053 = null;
    a.$_122 = 0.0;
    a.$_24 = 0.0;
}
function it_Player$update$lambda$_8_0__init_(var_0, var_1, var_2) {
    var var_3 = new it_Player$update$lambda$_8_0();
    it_Player$update$lambda$_8_0__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function it_Player$update$lambda$_8_0__init_0(var$0, var$1, var$2, var$3) {
    jl_Object__init_0(var$0);
    var$0.$_053 = var$1;
    var$0.$_122 = var$2;
    var$0.$_24 = var$3;
}
function it_Player$update$lambda$_8_0_get(var$0, var$1) {
    it_Player$update$lambda$_8_0_get0(var$0, var$1);
}
function it_Player$update$lambda$_8_0_get0(var$0, var$1) {
    it_Player_lambda$update$2(var$0.$_053, var$0.$_122, var$0.$_24, var$1);
}
function it_Phases$4$lambda$null$9$lambda$_8_0() {
    jl_Object.call(this);
    this.$_054 = null;
}
function it_Phases$4$lambda$null$9$lambda$_8_0__init_(var_0) {
    var var_1 = new it_Phases$4$lambda$null$9$lambda$_8_0();
    it_Phases$4$lambda$null$9$lambda$_8_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$4$lambda$null$9$lambda$_8_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_054 = var$1;
}
function it_Phases$4$lambda$null$9$lambda$_8_0_get(var$0, var$1) {
    var$0.$_054.$shoot(var$1);
}
function ie_EntityGroup() {
    var a = this; jl_Object.call(a);
    a.$useTree = 0;
    a.$entityArray = null;
    a.$entitiesToRemove = null;
    a.$entitiesToAdd = null;
    a.$clip0 = 0;
    a.$viewport = null;
    a.$tree0 = null;
}
function ie_EntityGroup__init_(var_0) {
    var var_1 = new ie_EntityGroup();
    ie_EntityGroup__init_0(var_1, var_0);
    return var_1;
}
function ie_EntityGroup__init_0($this, $useTree) {
    jl_Object__init_0($this);
    $this.$entityArray = iaac_Array__init_3(0, 16);
    $this.$entitiesToRemove = iaac_Array__init_3(0, 16);
    $this.$entitiesToAdd = iaac_Array__init_3(0, 16);
    $this.$clip0 = 0;
    $this.$viewport = iaamg_Rectangle__init_0();
    $this.$useTree = $useTree;
    if ($useTree)
        $this.$tree0 = iaamg_QuadTree__init_(iaamg_Rectangle__init_(0.0, 0.0, 0.0, 0.0));
}
function ie_EntityGroup_update($this) {
    var var$1, $entity, $s, $e;
    a: {
        ie_EntityGroup_updateEvents($this);
        if ($this.$useTree0()) {
            $this.$tree0.$clear();
            var$1 = $this.$all().$iterator();
            while (true) {
                if (!var$1.$hasNext())
                    break a;
                $entity = var$1.$next0();
                if ($entity instanceof ie_SolidEntity) {
                    $s = $entity;
                    $s.$lastPosition.$set2($s.$x2, $s.$y2);
                    $this.$tree0.$insert0($s);
                }
            }
        }
    }
    var$1 = $this.$all().$iterator();
    while (var$1.$hasNext()) {
        $e = var$1.$next0();
        $e.$update1();
    }
}
function ie_EntityGroup_collide($this, $other) {
    ie_EntityCollisions_collideGroups($this, $other);
}
function ie_EntityGroup_draw($this, $cons) {
    $this.$draw9(ie_EntityGroup$draw$lambda$_5_0__init_(), $cons);
}
function ie_EntityGroup_draw0($this, $toDraw, $cons) {
    var $cam, var$4, $e;
    if ($this.$clip0) {
        iaa_Core_$callClinit();
        $cam = iaa_Core_camera;
        $this.$viewport.$set15($cam.$position6.$x0 - $cam.$width3 / 2.0, $cam.$position6.$y0 - $cam.$height3 / 2.0, $cam.$width3, $cam.$height3);
    }
    var$4 = $this.$entityArray.$iterator();
    while (var$4.$hasNext()) {
        $e = var$4.$next0();
        if (!$toDraw.$get28($e))
            continue;
        if (!$e.$isAdded())
            continue;
        if (!($this.$clip0 && !$this.$viewport.$overlaps0($e.$x2 - $e.$drawSize() / 2.0, $e.$y2 - $e.$drawSize() / 2.0, $e.$drawSize(), $e.$drawSize())))
            $cons.$get5($e);
    }
}
function ie_EntityGroup_useTree($this) {
    return $this.$useTree;
}
function ie_EntityGroup_updateEvents($this) {
    var var$1, $e;
    var$1 = $this.$entitiesToAdd.$iterator();
    while (var$1.$hasNext()) {
        $e = var$1.$next0();
        if ($e === null)
            continue;
        $this.$entityArray.$add1($e);
        $e.$added();
    }
    $this.$entitiesToAdd.$clear();
    var$1 = $this.$entitiesToRemove.$iterator();
    while (var$1.$hasNext()) {
        $e = var$1.$next0();
        $this.$entityArray.$removeValue($e, 1);
        $e.$removed();
    }
    $this.$entitiesToRemove.$clear();
}
function ie_EntityGroup_intersect($this, $x, $y, $width, $height, $out) {
    if ($this.$isEmpty())
        return;
    $this.$tree1().$getIntersect($out, $x, $y, $width, $height);
}
function ie_EntityGroup_tree($this) {
    if ($this.$useTree)
        return $this.$tree0;
    $rt_throw(jl_RuntimeException__init_($rt_s(927)));
}
function ie_EntityGroup_resize($this, $x, $y, $w, $h) {
    if ($this.$useTree)
        $this.$tree0 = iaamg_QuadTree__init_(iaamg_Rectangle__init_($x, $y, $w, $h));
}
function ie_EntityGroup_isEmpty($this) {
    return $this.$entityArray.$size ? 0 : 1;
}
function ie_EntityGroup_add($this, $type) {
    if ($type === null)
        $rt_throw(jl_RuntimeException__init_($rt_s(928)));
    if ($type.$group0 !== null)
        return;
    $type.$group0 = $this;
    $this.$entitiesToAdd.$add1($type);
}
function ie_EntityGroup_remove($this, $type) {
    if ($type === null)
        $rt_throw(jl_RuntimeException__init_($rt_s(929)));
    $type.$group0 = null;
    $this.$entitiesToRemove.$add1($type);
}
function ie_EntityGroup_clear($this) {
    var var$1, $entity, var$3;
    var$1 = $this.$entityArray.$iterator();
    while (var$1.$hasNext()) {
        $entity = var$1.$next0();
        $entity.$group0 = null;
    }
    var$1 = $this.$entitiesToAdd.$iterator();
    while (var$1.$hasNext()) {
        $entity = var$1.$next0();
        $entity.$group0 = null;
    }
    var$3 = $this.$entitiesToRemove.$iterator();
    while (var$3.$hasNext()) {
        $entity = var$3.$next0();
        $entity.$group0 = null;
    }
    $this.$entitiesToAdd.$clear();
    $this.$entitiesToRemove.$clear();
    $this.$entityArray.$clear();
}
function ie_EntityGroup_all($this) {
    return $this.$entityArray;
}
function ie_EntityGroup_lambda$draw$1($e) {
    return 1;
}
function it_Phases$lambda$null$29$lambda$_38_0() {
    jl_Object.call(this);
    this.$_055 = 0;
}
function it_Phases$lambda$null$29$lambda$_38_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$null$29$lambda$_38_0();
    it_Phases$lambda$null$29$lambda$_38_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$null$29$lambda$_38_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_055 = var$1;
}
function it_Phases$lambda$null$29$lambda$_38_0_get(var$0, var$1) {
    it_Phases_lambda$null$28(var$0.$_055, var$1);
}
function jur_AbstractCharClass$LazyJavaTitleCase() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaTitleCase__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaTitleCase();
    jur_AbstractCharClass$LazyJavaTitleCase__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaTitleCase__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaTitleCase_computeValue($this) {
    return jur_AbstractCharClass$LazyJavaTitleCase$1__init_($this);
}
function iaam_Interpolation$Swing() {
    iaam_Interpolation.call(this);
    this.$scale1 = 0.0;
}
function iaam_Interpolation$Swing__init_(var_0) {
    var var_1 = new iaam_Interpolation$Swing();
    iaam_Interpolation$Swing__init_0(var_1, var_0);
    return var_1;
}
function iaam_Interpolation$Swing__init_0($this, $scale) {
    iaam_Interpolation__init_0($this);
    $this.$scale1 = $scale * 2.0;
}
function jur_PreviousMatch() {
    jur_AbstractSet.call(this);
}
function jur_PreviousMatch__init_() {
    var var_0 = new jur_PreviousMatch();
    jur_PreviousMatch__init_0(var_0);
    return var_0;
}
function jur_PreviousMatch__init_0($this) {
    jur_AbstractSet__init_0($this);
}
function jur_PreviousMatch_matches($this, $stringIndex, $testString, $matchResult) {
    if ($stringIndex != $matchResult.$getPreviousMatchEnd())
        return (-1);
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_PreviousMatch_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_PreviousMatch_getName($this) {
    return $rt_s(930);
}
function ie_Entity() {
    var a = this; jl_Object.call(a);
    a.$id2 = 0;
    a.$group0 = null;
    a.$x2 = 0.0;
    a.$y2 = 0.0;
}
var ie_Entity_lastID = 0;
function ie_Entity_$callClinit() {
    ie_Entity_$callClinit = $rt_eraseClinit(ie_Entity);
    ie_Entity__clinit_();
}
function ie_Entity__init_() {
    var var_0 = new ie_Entity();
    ie_Entity__init_0(var_0);
    return var_0;
}
function ie_Entity__init_0($this) {
    var var$1;
    ie_Entity_$callClinit();
    jl_Object__init_0($this);
    var$1 = ie_Entity_lastID;
    ie_Entity_lastID = var$1 + 1 | 0;
    $this.$id2 = var$1;
}
function ie_Entity_removed($this) {
    return;
}
function ie_Entity_added($this) {
    return;
}
function ie_Entity_drawSize($this) {
    return 10.0;
}
function ie_Entity_add($this) {
    if ($this.$targetGroup() !== null)
        $this.$targetGroup().$add10($this);
}
function ie_Entity_remove($this) {
    if ($this.$group0 !== null)
        $this.$group0.$remove3($this);
    $this.$group0 = null;
}
function ie_Entity_isAdded($this) {
    return $this.$group0 === null ? 0 : 1;
}
function ie_Entity_set($this, $x, $y) {
    $this.$x2 = $x;
    $this.$y2 = $y;
}
function ie_Entity_getX($this) {
    return $this.$x2;
}
function ie_Entity_getY($this) {
    return $this.$y2;
}
function ie_Entity__clinit_() {
    ie_Entity_lastID = 0;
}
function iaamg_QuadTree$QuadTreeObject() {
}
function ie_SolidEntity() {
    ie_Entity.call(this);
    this.$lastPosition = null;
}
function ie_SolidEntity__init_() {
    var var_0 = new ie_SolidEntity();
    ie_SolidEntity__init_0(var_0);
    return var_0;
}
function ie_SolidEntity__init_0($this) {
    ie_Entity__init_0($this);
    $this.$lastPosition = iaamg_Vector2__init_0();
}
function ie_SolidEntity_toward($this, $other, $speed) {
    iaau_Tmp_$callClinit();
    $this.$move(iaau_Tmp_v1.$set16($other).$sub($this.$x2, $this.$y2).$limit4($speed).$rotate1($speed >= 0.0 ? 0.0 : 180.0));
}
function ie_SolidEntity_move($this, $vector2) {
    $this.$move0($vector2.$x0, $vector2.$y0);
}
function ie_SolidEntity_move0($this, $x, $y) {
    ie_EntityCollisions_move($this, $x, $y);
}
function it_Char() {
    var a = this; ie_SolidEntity.call(a);
    a.$health = 0.0;
    a.$hitTime = 0.0;
    a.$dead = 0;
}
function it_Char__init_() {
    var var_0 = new it_Char();
    it_Char__init_0(var_0);
    return var_0;
}
function it_Char__init_0($this) {
    ie_SolidEntity__init_0($this);
    $this.$health = $this.$maxHealth();
}
function it_Char_isPlayer($this) {
    return $this instanceof it_Player;
}
function it_Char_shoot($this, $type, $rot) {
    it_Bullet_shoot($type, $this, $this.$x2, $this.$y2 + $this.$height8(), $rot);
}
function it_Char_shoot0($this, $type, $rot, $mover) {
    it_Bullet_shoot($type, $this, $this.$x2, $this.$y2 + $this.$height8(), $rot).$mover = $mover;
}
function it_Char_shoot1($this, $type, $x, $y, $rot) {
    it_Bullet_shoot($type, $this, $x + iaam_Angles_trnsx($rot, 3.0), $y + iaam_Angles_trnsy($rot, 3.0), $rot);
}
function it_Char_shoot2($this, $type, $x, $y, $rot, $mover) {
    it_Bullet_shoot($type, $this, $x + iaam_Angles_trnsx($rot, 3.0), $y + iaam_Angles_trnsy($rot, 3.0), $rot).$mover = $mover;
}
function it_Char_heal($this) {
    $this.$health = $this.$maxHealth();
    $this.$dead = 0;
}
function it_Char_height($this) {
    return 10.0;
}
function it_Char_damage($this, $damage) {
    $this.$health = $this.$health - $damage;
    $this.$hitTime = 1.0;
    if (!$this.$dead && $this.$health <= 0.0) {
        $this.$dead = 1;
        $this.$onDeath();
    }
}
function it_Char_collision($this, $other, $x, $y) {
    var $bullet;
    $bullet = $other;
    $this.$damage1($bullet.$shooter.$isPlayer() ? 1.0 : $bullet.$type8.$damage0);
}
function it_Char_hitboxTile($this, $rectangle) {
    var $w, $h;
    $w = 6.0;
    $h = 6.0;
    $rectangle.$set15($this.$x2 - 3.0, $this.$y2 - 1.0, $w, $h);
}
function it_Char_targetGroup($this) {
    return i_Inferno_charGroup;
}
function it_Player() {
    var a = this; it_Char.call(a);
    a.$movement = null;
    a.$direction = null;
    a.$timer = null;
    a.$scytherot = 0.0;
    a.$movetime = 0.0;
    a.$glowtime = 0.0;
    a.$slashtime = 0.0;
    a.$slashrot = 0.0;
    a.$slashdir = 0;
    a.$hitBoss = 0;
    a.$removals = null;
    a.$slashes = null;
    a.$px = 0.0;
    a.$py = 0.0;
}
var it_Player_hand = null;
function it_Player_$callClinit() {
    it_Player_$callClinit = $rt_eraseClinit(it_Player);
    it_Player__clinit_();
}
function it_Player__init_() {
    var var_0 = new it_Player();
    it_Player__init_0(var_0);
    return var_0;
}
function it_Player__init_0($this) {
    it_Player_$callClinit();
    it_Char__init_0($this);
    $this.$movement = iaamg_Vector2__init_0();
    it_Direction_$callClinit();
    $this.$direction = it_Direction_right;
    $this.$timer = iaau_Interval__init_0();
    $this.$slashtime = (-100.0);
    $this.$removals = iaac_Array__init_0();
    $this.$slashes = iaac_Array__init_0();
}
function it_Player_draw($this) {
    var $region, $scythe, $len, $dir, $sdir, $rot, var$7, var$8, var$9, var$10, var$11, var$12, $fract, $startColor, $endColor, $basethick, $i, $cur, $offsetx, $offsety, $thick, $next, var$23;
    $this.$px = $this.$x2;
    $this.$py = $this.$y2;
    $this.$x2 = $this.$x2 | 0;
    $this.$y2 = $this.$y2 | 0;
    iaag_Color_$callClinit();
    iaagg_Draw_mixcol(iaag_Color_scarlet, iaam_Mathf_clamp0($this.$hitTime));
    $region = $this.$movetime <= 0.0 ? $this.$direction.$region : $this.$direction.$frames.data[($this.$movetime / 6.0 | 0) % $this.$direction.$frames.data.length | 0];
    iaa_Core_$callClinit();
    $scythe = iaa_Core_atlas.$find($rt_s(931));
    $len = 3.0;
    iaau_Tmp_$callClinit();
    iaau_Tmp_v1.$set17(iaa_Core_input.$mouseWorld()).$sub($this.$x2, $this.$y2 + 13.0).$limit4($len);
    $dir = iaam_Mathf_sign0($this.$direction.$flipped);
    iaagg_Draw_rect3($region, $this.$x2, $this.$y2 + 13.0, $rt_imul($region.$getWidth0(),  -$dir), $region.$getHeight0());
    ig_Drawf_z($this.$y2 + iaau_Tmp_v1.$y0);
    $sdir = iaam_Mathf_sign0($this.$slashdir);
    $rot = $this.$angleOffset();
    var$7 = $this.$x2 + iaau_Tmp_v1.$x0;
    var$8 = $this.$y2 + 7.0 + $scythe.$getHeight0() / 2.0 + iaau_Tmp_v1.$y0;
    var$9 = $rt_imul($scythe.$getWidth0(), $sdir);
    var$10 = $scythe.$getHeight0();
    var$11 = $scythe.$getWidth0() / 2.0;
    var$12 = $sdir;
    iaagg_Draw_rect5($rt_s(931), var$7, var$8, var$9, var$10, var$11 * var$12, 4.0, $rot);
    if ($this.$slashtime > (-16.66666603088379)) {
        iaam_Interpolation_$callClinit();
        $fract = 1.0 - iaam_Interpolation_pow10In.$apply( -$this.$slashtime / 16.66666603088379);
        iaagg_Draw_alpha($fract);
        iaagg_Draw_rect5($rt_s(932), $this.$x2 + iaau_Tmp_v1.$x0, $this.$y2 + 7.0 + $scythe.$getHeight0() / 2.0 + iaau_Tmp_v1.$y0, $rt_imul($scythe.$getWidth0(), $sdir), $scythe.$getHeight0(), $scythe.$getWidth0() / 2.0 * var$12, 4.0, $rot);
        iaagg_Draw_color0();
        ig_Drawf_light($this.$x2 + iaau_Tmp_v1.$x0 - $dir * 7.0, $this.$y2 + 13.0 + iaau_Tmp_v1.$y0, 50.0 * $this.$glowtime, iaag_Color_white);
    }
    if ($this.$slashes.$size > 0) {
        $this.$removals.$clear();
        $startColor = iaag_Color_white;
        $endColor = iaag_Color_cyan;
        $basethick = 30.0;
        $i = 0;
        while ($i < $this.$slashes.$size) {
            $cur = $this.$slashes.$get($i);
            $offsetx = $this.$x2;
            $offsety = $this.$y2;
            $thick = (1.0 - $cur.$z3) * $basethick * iaam_Mathf_lerp($i / ($this.$slashes.$size - 1 | 0), 1.0, 0.4000000059604645);
            iaagg_Draw_color4($startColor, $endColor, $cur.$z3);
            if ($i != ($this.$slashes.$size - 1 | 0)) {
                $next = $this.$slashes.$get($i + 1 | 0);
                iaagg_Lines_stroke0($thick);
                var$11 = $offsetx + $cur.$x6;
                var$8 = $offsety + $cur.$y6;
                var$9 = $offsetx + $next.$x6;
                var$10 = $offsety + $next.$y6;
                if ($i) {
                    iaagg_CapStyle_$callClinit();
                    var$23 = iaagg_CapStyle_none;
                } else {
                    iaagg_CapStyle_$callClinit();
                    var$23 = iaagg_CapStyle_round;
                }
                iaagg_Lines_line0(var$11, var$8, var$9, var$10, var$23, 1.0);
            }
            if (!i_Inferno_control.$isPaused())
                $cur.$z3 = $cur.$z3 + 0.1666666716337204 * iaau_Time_delta();
            if ($cur.$z3 > 1.0)
                $this.$removals.$add1($cur);
            $i = $i + 1 | 0;
        }
        $this.$slashes.$removeAll0($this.$removals);
        $this.$removals.$clear();
    }
    iaagg_Draw_color0();
    iaagg_Draw_mixcol0();
    ig_Drawf_light1($this.$x2, $this.$y2 + 10.0, 150.0, iaag_Color_cyan, 0.75);
    $this.$x2 = $this.$px;
    $this.$y2 = $this.$py;
}
function it_Player_mouseAngle($this) {
    return iaam_Angles_mouseAngle($this.$x2, $this.$y2 + 13.0);
}
function it_Player_addSlashPoint($this, $offset) {
    var var$2, $sdir, $rot;
    iaau_Tmp_$callClinit();
    var$2 = iaau_Tmp_v1;
    iaa_Core_$callClinit();
    var$2.$set17(iaa_Core_input.$mouseWorld()).$sub($this.$x2, $this.$y2 + 13.0).$limit4(3.0);
    $sdir = iaam_Mathf_sign0($this.$slashdir);
    $rot = $this.$mouseAngle0() + 105.0 * $sdir + ($this.$slashtime <= 0.0 ? 0.0 : 210.0 * iaam_Mathf_clamp0(1.0 - $this.$slashtime) *  -$sdir) - (20 * $sdir | 0);
    iaau_Tmp_v2.$trns($rot, 26.0);
    $this.$slashes.$add1(iaamg_Vector3__init_(iaau_Tmp_v2.$x0, 7.0 + iaau_Tmp_v2.$y0, $offset));
}
function it_Player_onDeath($this) {
    iaa_Core_$callClinit();
    iaa_Core_app.$post(it_Player$onDeath$lambda$_4_0__init_());
}
function it_Player_maxHealth($this) {
    return 60.0;
}
function it_Player_drawShadow($this) {
    iaagg_Draw_rect2($rt_s(311), $this.$x2 | 0, $this.$y2 | 0, 16.0, 7.0);
}
function it_Player_collides($this, $other) {
    return $other instanceof it_Bullet && $other.$shooter instanceof it_Boss && $this.$hitTime <= 0.0 ? 1 : 0;
}
function it_Player_update($this) {
    var $tile, var$2, var$3, var$4, var$5, $angle, $targetarcrot, $qw, $qh, $qx, $qy, $length, $hitsBoss, $increment, $toMove, $f;
    $tile = i_Inferno_world.$tileOpt(($this.$x2 + 8.0) / 16.0 | 0, ($this.$y2 + 8.0) / 16.0 | 0);
    if ($tile.$wall !== null && $tile.$wall.$damage > 0.0) {
        $this.$damage1($tile.$wall.$damage * iaau_Time_delta());
        if (iaam_Mathf_chance(0.5 * iaau_Time_delta())) {
            it_Fx_$callClinit();
            var$2 = it_Fx_spark;
            var$3 = i_Inferno_player.$x2 + iaam_Mathf_range(4.0);
            var$4 = i_Inferno_player.$y2 + $this.$height8() + iaam_Mathf_range(5.0);
            ig_Pal_$callClinit();
            var$2.$at0(var$3, var$4, ig_Pal_player);
        }
    }
    $this.$hitTime = $this.$hitTime - 0.20000000298023224;
    var$2 = $this.$movement;
    iaa_Core_$callClinit();
    var$5 = iaa_Core_input;
    i_Binding_$callClinit();
    var$2.$set2(var$5.$axis0(i_Binding_move_x), iaa_Core_input.$axis0(i_Binding_move_y)).$nor().$scl0(3.0).$scl0(iaau_Time_delta());
    if ($this.$movement.$isZero())
        $this.$movetime = 0.0;
    else {
        $this.$direction = it_Direction_fromAngle($this.$movement.$angle2());
        $this.$movetime = $this.$movetime + iaau_Time_delta();
    }
    $this.$move0($this.$movement.$x0, $this.$movement.$y0);
    $angle = $this.$mouseAngle0();
    $this.$glowtime = iaam_Mathf_lerpDelta($this.$glowtime, 0.0, 0.10000000149011612);
    if (iaa_Core_input.$keyTap(i_Binding_alt) && $this.$slashtime <= (-16.66666603088379) && !i_Inferno_boss.$midSpeech) {
        $this.$hitBoss = 0;
        iaau_Tmp_$callClinit();
        iaau_Tmp_v3.$trns($this.$mouseAngle0(), 24.0);
        $this.$move0(iaau_Tmp_v3.$x0, iaau_Tmp_v3.$y0);
        i_Inferno_renderer.$jump($this.$mouseAngle0() + 180.0, 10.0);
        i_Inferno_renderer.$shake(4.0, 4.0);
        $this.$slashtime = 1.0;
        $this.$addSlashPoint(0.0);
    }
    if (iaa_Core_input.$keyDown0(i_Binding_shoot) && !i_Inferno_boss.$midSpeech) {
        $this.$scytherot = $this.$scytherot - iaau_Time_delta() * 18.0 * iaam_Mathf_lerp(2.0, 0.20000000298023224, iaam_Mathf_clamp0(iaam_Angles_angleDist($this.$scytherot, 60.0) / 180.0));
        if ($this.$timer.$get20(12.0) && $this.$slashtime <= (-1.0)) {
            it_Bullets_$callClinit();
            $this.$shoot3(it_Bullets_basic, $angle);
            $this.$glowtime = 1.0;
        }
    } else
        $this.$scytherot = iaam_Mathf_slerpDelta($this.$scytherot, 105.0, 0.20000000298023224);
    $targetarcrot = $this.$slashtime <= 0.0 ? 0.0 : (iaam_Mathf_clamp0(1.0 - $this.$slashtime) - 0.5) * 210.0;
    $this.$slashrot = iaam_Mathf_lerp($this.$slashrot, $targetarcrot, $this.$slashtime <= 0.0 ? 0.20000000298023224 : 0.800000011920929);
    if ($this.$slashtime > (-0.699999988079071)) {
        $qw = 120.0;
        $qh = 120.0;
        $qx = i_Inferno_player.$x2 - 60.0;
        $qy = i_Inferno_player.$y2 - 60.0;
        $length = 35.0;
        i_Inferno_bulletGroup.$intersect($qx, $qy, $qw, $qh, it_Player$update$lambda$_8_0__init_($this, $length, $angle));
        $hitsBoss = i_Inferno_boss.$withinDst(i_Inferno_player.$x2, i_Inferno_player.$y2 + 7.0, $length) && iaam_Angles_angleDist($angle, iaam_Angles_angle(i_Inferno_player.$x2, i_Inferno_player.$y2 + 7.0, i_Inferno_boss.$x2, i_Inferno_boss.$y2 + 7.0)) <= 105.0 ? 1 : 0;
        var$2 = i_Inferno_boss;
        iaau_Tmp_$callClinit();
        var$2.$hitbox(iaau_Tmp_r2);
        if ($hitsBoss | (i_Inferno_boss.$isStatue() && iaamg_Intersector_overlaps(iaau_Tmp_cr1.$set18(i_Inferno_player.$x2, i_Inferno_player.$y2 + 7.0, $length), iaau_Tmp_r2) && iaam_Angles_angleDist($angle, iaam_Angles_angle(i_Inferno_player.$x2, i_Inferno_player.$y2 + 7.0, i_Inferno_boss.$x2, i_Inferno_boss.$y2 + 7.0)) <= 105.0 ? 1 : 0)) {
            if (!$this.$hitBoss) {
                i_Inferno_boss.$damage1(14.0);
                it_Fx_$callClinit();
                var$2 = it_Fx_spark;
                var$3 = i_Inferno_boss.$x2;
                var$4 = i_Inferno_boss.$y2;
                ig_Pal_$callClinit();
                var$2.$at0(var$3, var$4, ig_Pal_player);
                i_Inferno_renderer.$jump( -$this.$mouseAngle0(), 30.0);
                i_Inferno_renderer.$shake(4.0, 3.0);
                $this.$hitBoss = 1;
            }
            i_Inferno_boss.$move(iaau_Tmp_v1.$trns($this.$angleTo0(i_Inferno_boss), 1.5));
        }
    }
    if ($this.$slashtime <= 0.0)
        $this.$slashtime = $this.$slashtime - iaau_Time_delta() / 6.0;
    else {
        $increment = 0.0016666667070239782;
        $toMove = iaau_Time_delta() / 6.0;
        $f = 0.0;
        while ($f < $toMove && $this.$slashtime > 0.0) {
            $this.$addSlashPoint($toMove - $f);
            $this.$slashtime = $this.$slashtime - $increment;
            $f = $f + $increment;
        }
        $this.$slashtime = $this.$slashtime - $toMove % $increment;
        if ($this.$slashtime < $increment)
            $this.$slashtime = (-9.999999747378752E-5);
        if ($this.$slashtime <= 0.0)
            $this.$slashdir = $this.$slashdir ? 0 : 1;
    }
    $this.$direction = it_Direction_fromAngle($angle);
}
function it_Player_shoot($this, $type, $rot) {
    var $scythe, $dir, var$5, var$6, $rotation, $offsetx, $fx, $fy, $angle;
    iaa_Core_$callClinit();
    $scythe = iaa_Core_atlas.$find($rt_s(931));
    $dir = iaam_Mathf_sign0($this.$direction.$flipped);
    iaau_Tmp_$callClinit();
    iaau_Tmp_v1.$set17(iaa_Core_input.$mouseWorld()).$sub($this.$x2, $this.$y2 + 13.0).$limit4(3.0);
    var$5 = 0.0 + $this.$scytherot;
    var$6 = $dir;
    $rotation = var$5 * var$6 + (!$this.$direction.$flipped ? 0 : 180);
    $offsetx = 0.0;
    iaau_Tmp_v2.$trns($rotation, $scythe.$getHeight0() / 2.0);
    $fx = $this.$x2 + iaau_Tmp_v1.$x0 - var$6 * 7.0 + $offsetx + iaau_Tmp_v2.$x0;
    $fy = $this.$y2 + 13.0 + iaau_Tmp_v1.$y0 + iaau_Tmp_v2.$y0;
    $angle = iaam_Angles_mouseAngle($fx, $fy);
    it_Bullet_shoot($type, $this, $fx, $fy, $angle);
    it_Fx_$callClinit();
    ig_Effects_effect1(it_Fx_playershoot, $fx, $fy, $angle);
}
function it_Player_hitbox($this, $rectangle) {
    var $w, $h;
    $w = 6.0;
    $h = 8.0;
    $rectangle.$set15($this.$x2 - 3.0, $this.$y2, $w, $h);
}
function it_Player_angleOffset($this) {
    var $sdir, var$2, var$3;
    $sdir = iaam_Mathf_sign0($this.$slashdir);
    var$2 = $this.$mouseAngle0() - 90.0 + $this.$scytherot * $sdir;
    if ($this.$slashtime <= 0.0)
        var$3 = 0.0;
    else {
        iaam_Interpolation_$callClinit();
        var$3 = 210.0 * iaam_Mathf_clamp0(1.0 - iaam_Interpolation_pow3In.$apply($this.$slashtime)) *  -$sdir;
    }
    return var$2 + var$3;
}
function it_Player_lambda$update$2($this, $length, $angle, $b) {
    var var$4, var$5, var$6;
    if (!$b.$shooter.$isPlayer() && $b.$type8.$deflect) {
        iaau_Tmp_$callClinit();
        $b.$hitbox(iaau_Tmp_r2);
        if ($b.$withinDst(i_Inferno_player.$x2, i_Inferno_player.$y2 + 7.0, $length) && iaam_Angles_angleDist($angle, iaam_Angles_angle(i_Inferno_player.$x2, i_Inferno_player.$y2 + 7.0, $b.$x2, $b.$y2)) <= 105.0) {
            $b.$velocity.$setAngle($b.$angleTo(i_Inferno_player.$x2, i_Inferno_player.$y2 + 7.0) + 180.0).$scl0(1.100000023841858);
            it_Fx_$callClinit();
            var$4 = it_Fx_spark;
            var$5 = $b.$x2;
            var$6 = $b.$y2;
            ig_Pal_$callClinit();
            var$4.$at0(var$5, var$6, ig_Pal_player);
            $b.$shooter = $this;
            $b.$mover = it_Player$lambda$update$2$lambda$_12_0__init_();
            $b.$velocity.$setLength0($b.$type8.$speed);
        }
        return;
    }
}
function it_Player_lambda$null$1($f) {
    it_Player_$callClinit();
    iaamg_Vector2_$callClinit();
    return iaamg_Vector2_ZERO;
}
function it_Player_lambda$onDeath$0() {
    it_Player_$callClinit();
    i_Inferno_control.$reset();
}
function it_Player__clinit_() {
    it_Player_hand = iaag_Color_valueOf($rt_s(933)).$mul2(2.0);
}
function iaamg_Shape2D() {
}
function i_Text() {
    jl_Object.call(this);
}
var i_Text_start = null;
var i_Text_phase1 = null;
var i_Text_phase2 = null;
var i_Text_phase3 = null;
var i_Text_phase4 = null;
var i_Text_phase5 = null;
var i_Text_phase6 = null;
var i_Text_phase7 = null;
function i_Text_$callClinit() {
    i_Text_$callClinit = $rt_eraseClinit(i_Text);
    i_Text__clinit_();
}
function i_Text__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createArray(jl_String, 1);
    var$1.data[0] = $rt_s(934);
    i_Text_start = iaac_Array_with(var$1);
    var$1 = $rt_createArray(jl_String, 2);
    var$2 = var$1.data;
    var$2[0] = $rt_s(935);
    var$2[1] = $rt_s(936);
    i_Text_phase1 = iaac_Array_with(var$1);
    var$1 = $rt_createArray(jl_String, 4);
    var$2 = var$1.data;
    var$2[0] = $rt_s(937);
    var$2[1] = $rt_s(938);
    var$2[2] = $rt_s(939);
    var$2[3] = $rt_s(940);
    i_Text_phase2 = iaac_Array_with(var$1);
    var$1 = $rt_createArray(jl_String, 6);
    var$2 = var$1.data;
    var$2[0] = $rt_s(941);
    var$2[1] = $rt_s(942);
    var$2[2] = $rt_s(943);
    var$2[3] = $rt_s(944);
    var$2[4] = $rt_s(945);
    var$2[5] = $rt_s(946);
    i_Text_phase3 = iaac_Array_with(var$1);
    var$1 = $rt_createArray(jl_String, 5);
    var$2 = var$1.data;
    var$2[0] = $rt_s(947);
    var$2[1] = $rt_s(948);
    var$2[2] = $rt_s(949);
    var$2[3] = $rt_s(950);
    var$2[4] = $rt_s(951);
    i_Text_phase4 = iaac_Array_with(var$1);
    var$1 = $rt_createArray(jl_String, 6);
    var$2 = var$1.data;
    var$2[0] = $rt_s(952);
    var$2[1] = $rt_s(953);
    var$2[2] = $rt_s(954);
    var$2[3] = $rt_s(955);
    var$2[4] = $rt_s(956);
    var$2[5] = $rt_s(957);
    i_Text_phase5 = iaac_Array_with(var$1);
    var$1 = $rt_createArray(jl_String, 5);
    var$2 = var$1.data;
    var$2[0] = $rt_s(958);
    var$2[1] = $rt_s(959);
    var$2[2] = $rt_s(960);
    var$2[3] = $rt_s(961);
    var$2[4] = $rt_s(962);
    i_Text_phase6 = iaac_Array_with(var$1);
    var$1 = $rt_createArray(jl_String, 7);
    var$2 = var$1.data;
    var$2[0] = $rt_s(963);
    var$2[1] = $rt_s(964);
    var$2[2] = $rt_s(965);
    var$2[3] = $rt_s(966);
    var$2[4] = $rt_s(967);
    var$2[5] = $rt_s(968);
    var$2[6] = $rt_s(969);
    i_Text_phase7 = iaac_Array_with(var$1);
}
function jur_NonCapFSet() {
    jur_FSet.call(this);
}
function jur_NonCapFSet__init_(var_0) {
    var var_1 = new jur_NonCapFSet();
    jur_NonCapFSet__init_0(var_1, var_0);
    return var_1;
}
function jur_NonCapFSet__init_0($this, $groupIndex) {
    jur_FSet__init_0($this, $groupIndex);
}
function jur_NonCapFSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $gr;
    $gr = $this.$getGroupIndex();
    $matchResult.$setConsumed($gr, $stringIndex - $matchResult.$getConsumed($gr) | 0);
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_NonCapFSet_getName($this) {
    return $rt_s(970);
}
function jur_NonCapFSet_hasConsumed($this, $mr) {
    return 0;
}
function cjj_Checksum() {
}
function cjj_Adler32() {
    var a = this; jl_Object.call(a);
    a.$s1 = Long_ZERO;
    a.$s2 = Long_ZERO;
}
function cjj_Adler32__init_() {
    var var_0 = new cjj_Adler32();
    cjj_Adler32__init_0(var_0);
    return var_0;
}
function cjj_Adler32__init_0($this) {
    jl_Object__init_0($this);
    $this.$s1 = Long_fromInt(1);
    $this.$s2 = Long_ZERO;
}
function cjj_Adler32_reset($this, $init) {
    $this.$s1 = Long_and($init, Long_fromInt(65535));
    $this.$s2 = Long_and(Long_shr($init, 16), Long_fromInt(65535));
}
function cjj_Adler32_reset0($this) {
    $this.$s1 = Long_fromInt(1);
    $this.$s2 = Long_ZERO;
}
function cjj_Adler32_getValue($this) {
    return Long_or(Long_shl($this.$s2, 16), $this.$s1);
}
function cjj_Adler32_update($this, $buf, $index, $len) {
    var var$4, $len1, $len2, var$7, $k, var$9, var$10, var$11;
    if ($len == 1) {
        var$4 = $buf.data;
        $this.$s1 = Long_add($this.$s1, Long_fromInt(var$4[$index] & 255));
        $this.$s2 = Long_add($this.$s2, $this.$s1);
        $this.$s1 = Long_rem($this.$s1, Long_fromInt(65521));
        $this.$s2 = Long_rem($this.$s2, Long_fromInt(65521));
        return;
    }
    $len1 = $len / 5552 | 0;
    $len2 = $len % 5552 | 0;
    while (true) {
        var$7 = $len1 + (-1) | 0;
        if ($len1 <= 0)
            break;
        $k = 5552;
        while (true) {
            var$9 = $k + (-1) | 0;
            if ($k <= 0)
                break;
            var$4 = $buf.data;
            var$10 = $this.$s1;
            var$11 = $index + 1 | 0;
            $this.$s1 = Long_add(var$10, Long_fromInt(var$4[$index] & 255));
            $this.$s2 = Long_add($this.$s2, $this.$s1);
            $k = var$9;
            $index = var$11;
        }
        $this.$s1 = Long_rem($this.$s1, Long_fromInt(65521));
        $this.$s2 = Long_rem($this.$s2, Long_fromInt(65521));
        $len1 = var$7;
    }
    while (true) {
        var$11 = $len2 + (-1) | 0;
        if ($len2 <= 0)
            break;
        var$4 = $buf.data;
        var$10 = $this.$s1;
        var$7 = $index + 1 | 0;
        $this.$s1 = Long_add(var$10, Long_fromInt(var$4[$index] & 255));
        $this.$s2 = Long_add($this.$s2, $this.$s1);
        $len2 = var$11;
        $index = var$7;
    }
    $this.$s1 = Long_rem($this.$s1, Long_fromInt(65521));
    $this.$s2 = Long_rem($this.$s2, Long_fromInt(65521));
}
function iaau_Log$LogHandler() {
}
function iaau_Log$DefaultLogHandler() {
    jl_Object.call(this);
}
function iaau_Log$DefaultLogHandler__init_() {
    var var_0 = new iaau_Log$DefaultLogHandler();
    iaau_Log$DefaultLogHandler__init_0(var_0);
    return var_0;
}
function iaau_Log$DefaultLogHandler__init_0($this) {
    jl_Object__init_0($this);
}
function iaau_Log$DefaultLogHandler_log($this, $level, $text, $args) {
    var var$4, var$5;
    var$4 = jl_System_out();
    var$5 = jl_StringBuilder__init_();
    iaau_Log$LogLevel_$callClinit();
    var$4.$println(iaau_Log_format(var$5.$append($level === iaau_Log$LogLevel_debug ? $rt_s(971) : $level === iaau_Log$LogLevel_info ? $rt_s(972) : $level === iaau_Log$LogLevel_warn ? $rt_s(973) : $level !== iaau_Log$LogLevel_err ? $rt_s(58) : $rt_s(974)).$append($text).$append($rt_s(975)).$toString(), $args));
}
function ig_DrawRequest() {
    var a = this; jl_Object.call(a);
    a.$region1 = null;
    a.$x7 = 0.0;
    a.$y7 = 0.0;
    a.$z4 = 0.0;
    a.$originX1 = 0.0;
    a.$originY1 = 0.0;
    a.$width10 = 0.0;
    a.$height9 = 0.0;
    a.$rotation3 = 0.0;
    a.$color8 = 0.0;
    a.$blendColor = 0.0;
    a.$vertices0 = null;
    a.$texture1 = null;
}
function ig_DrawRequest__init_() {
    var var_0 = new ig_DrawRequest();
    ig_DrawRequest__init_0(var_0);
    return var_0;
}
function ig_DrawRequest__init_0($this) {
    jl_Object__init_0($this);
    $this.$vertices0 = $rt_createFloatArray(24);
}
function ig_DrawRequest_compareTo($this, $o) {
    return jl_Float_compare($o.$z4, $this.$z4);
}
function ig_DrawRequest_reset($this) {
    $this.$blendColor = 0.0;
    $this.$color8 = 0.0;
    $this.$rotation3 = 0.0;
    $this.$height9 = 0.0;
    $this.$width10 = 0.0;
    $this.$originY1 = 0.0;
    $this.$originX1 = 0.0;
    $this.$z4 = 0.0;
    $this.$y7 = 0.0;
    $this.$x7 = 0.0;
    $this.$region1 = null;
    $this.$texture1 = null;
}
function ig_DrawRequest_compareTo0($this, var$1) {
    return $this.$compareTo2(var$1);
}
function iaaml_BaseTmxMapLoader$Parameters() {
    var a = this; iaaa_AssetLoaderParameters.call(a);
    a.$generateMipMaps = 0;
    a.$textureMinFilter = null;
    a.$textureMagFilter = null;
    a.$convertObjectToTileSpace0 = 0;
    a.$flipY0 = 0;
}
function iaaml_BaseTmxMapLoader$Parameters__init_() {
    var var_0 = new iaaml_BaseTmxMapLoader$Parameters();
    iaaml_BaseTmxMapLoader$Parameters__init_0(var_0);
    return var_0;
}
function iaaml_BaseTmxMapLoader$Parameters__init_0($this) {
    iaaa_AssetLoaderParameters__init_0($this);
    $this.$generateMipMaps = 0;
    iaag_Texture$TextureFilter_$callClinit();
    $this.$textureMinFilter = iaag_Texture$TextureFilter_Nearest;
    $this.$textureMagFilter = iaag_Texture$TextureFilter_Nearest;
    $this.$convertObjectToTileSpace0 = 0;
    $this.$flipY0 = 1;
}
function jur_UCISupplCharSet() {
    jur_LeafSet.call(this);
    this.$ch0 = 0;
}
function jur_UCISupplCharSet__init_(var_0) {
    var var_1 = new jur_UCISupplCharSet();
    jur_UCISupplCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCISupplCharSet__init_0($this, $ch) {
    jur_LeafSet__init_2($this);
    $this.$charCount = 2;
    $this.$ch0 = jl_Character_toLowerCase0(jl_Character_toUpperCase($ch));
}
function jur_UCISupplCharSet_accepts($this, $strIndex, $testString) {
    var var$3, $high, $low;
    var$3 = $strIndex + 1 | 0;
    $high = $testString.$charAt($strIndex);
    $low = $testString.$charAt(var$3);
    return $this.$ch0 != jl_Character_toLowerCase0(jl_Character_toUpperCase(jl_Character_toCodePoint($high, $low))) ? (-1) : 2;
}
function jur_UCISupplCharSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(976)).$append(jl_String__init_(jl_Character_toChars($this.$ch0))).$toString();
}
function iaat_Parser$parseRegularTokens$lambda$_4_0() {
    jl_Object.call(this);
    this.$_056 = null;
}
function iaat_Parser$parseRegularTokens$lambda$_4_0__init_(var_0) {
    var var_1 = new iaat_Parser$parseRegularTokens$lambda$_4_0();
    iaat_Parser$parseRegularTokens$lambda$_4_0__init_0(var_1, var_0);
    return var_1;
}
function iaat_Parser$parseRegularTokens$lambda$_4_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_056 = var$1;
}
function iaat_Parser$parseRegularTokens$lambda$_4_0_handle(var$0, var$1, var$2) {
    return iaat_Parser_lambda$parseRegularTokens$2(var$0.$_056, var$1, var$2);
}
function ie_EntityCollisions() {
    jl_Object.call(this);
}
var ie_EntityCollisions_tmp = null;
var ie_EntityCollisions_vector = null;
var ie_EntityCollisions_l1 = null;
var ie_EntityCollisions_r1 = null;
var ie_EntityCollisions_r2 = null;
var ie_EntityCollisions_arrOut = null;
function ie_EntityCollisions_$callClinit() {
    ie_EntityCollisions_$callClinit = $rt_eraseClinit(ie_EntityCollisions);
    ie_EntityCollisions__clinit_();
}
function ie_EntityCollisions_move($entity, $deltax, $deltay) {
    var $movedx, $movedy;
    ie_EntityCollisions_$callClinit();
    $movedx = 0;
    while (!(jl_Math_abs0($deltax) <= 0.0 && $movedx)) {
        $movedx = 1;
        ie_EntityCollisions_moveDelta($entity, jl_Math_min(jl_Math_abs0($deltax), 1.0) * iaam_Mathf_sign($deltax), 0.0, 1);
        if (jl_Math_abs0($deltax) < 1.0) {
            $deltax = 0.0;
            continue;
        }
        $deltax = $deltax - 1.0 * iaam_Mathf_sign($deltax);
    }
    $movedy = 0;
    while (!(jl_Math_abs0($deltay) <= 0.0 && $movedy)) {
        $movedy = 1;
        ie_EntityCollisions_moveDelta($entity, 0.0, jl_Math_min(jl_Math_abs0($deltay), 1.0) * iaam_Mathf_sign($deltay), 0);
        if (jl_Math_abs0($deltay) < 1.0) {
            $deltay = 0.0;
            continue;
        }
        $deltay = $deltay - 1.0 * iaam_Mathf_sign($deltay);
    }
}
function ie_EntityCollisions_moveDelta($entity, $deltax, $deltay, $x) {
    var $rect, $tilex, $tiley, $dx, $dy, $wx, $wy, $v;
    ie_EntityCollisions_$callClinit();
    $rect = ie_EntityCollisions_r1;
    $entity.$hitboxTile($rect);
    $entity.$hitboxTile(ie_EntityCollisions_r2);
    $rect.$x1 = $rect.$x1 + $deltax;
    $rect.$y1 = $rect.$y1 + $deltay;
    $tilex = jl_Math_round0(($rect.$x1 + $rect.$width0 / 2.0) / 16.0);
    $tiley = jl_Math_round0(($rect.$y1 + $rect.$height0 / 2.0) / 16.0);
    $dx = (-1);
    while ($dx <= 1) {
        $dy = (-1);
        while ($dy <= 1) {
            $wx = $dx + $tilex | 0;
            $wy = $dy + $tiley | 0;
            if (ie_EntityCollisions_solid($wx, $wy)) {
                ie_EntityCollisions_tmp.$setSize1(16.0).$setCenter($wx * 16 | 0, $wy * 16 | 0);
                if (ie_EntityCollisions_tmp.$overlaps($rect)) {
                    $v = iaamg_Geometry_overlap($rect, ie_EntityCollisions_tmp, $x);
                    $rect.$x1 = $rect.$x1 + $v.$x0;
                    $rect.$y1 = $rect.$y1 + $v.$y0;
                }
            }
            $dy = $dy + 1 | 0;
        }
        $dx = $dx + 1 | 0;
    }
    $entity.$x2 = $entity.$x2 + $rect.$x1 - ie_EntityCollisions_r2.$x1;
    $entity.$y2 = $entity.$y2 + $rect.$y1 - ie_EntityCollisions_r2.$y1;
}
function ie_EntityCollisions_overlapsTile($rect) {
    ie_EntityCollisions_$callClinit();
    return ie_EntityCollisions_overlapsTile0($rect, ie_EntityCollisions$overlapsTile$lambda$_3_0__init_());
}
function ie_EntityCollisions_overlapsTile0($rect, $solid) {
    var $r, $tilex, $tiley, $dx, $dy, $wx, $wy;
    ie_EntityCollisions_$callClinit();
    $rect.$getCenter(ie_EntityCollisions_vector);
    $r = 1;
    $tilex = jl_Math_round0(ie_EntityCollisions_vector.$x0 / 16.0);
    $tiley = jl_Math_round0(ie_EntityCollisions_vector.$y0 / 16.0);
    $dx = (-1);
    while ($dx <= $r) {
        $dy = (-1);
        while ($dy <= $r) {
            $wx = $dx + $tilex | 0;
            $wy = $dy + $tiley | 0;
            if ($solid.$solid0($wx, $wy)) {
                ie_EntityCollisions_r2.$setSize1(16.0).$setCenter($wx * 16 | 0, $wy * 16 | 0);
                if (ie_EntityCollisions_r2.$overlaps($rect))
                    return 1;
            }
            $dy = $dy + 1 | 0;
        }
        $dx = $dx + 1 | 0;
    }
    return 0;
}
function ie_EntityCollisions_solid($x, $y) {
    ie_EntityCollisions_$callClinit();
    return i_Inferno_world.$solid0($x, $y);
}
function ie_EntityCollisions_checkCollide($entity, $other) {
    var $a, $b;
    ie_EntityCollisions_$callClinit();
    $a = $entity;
    $b = $other;
    if ($a !== $b && $a.$collides($b) && $b.$collides($a)) {
        $a.$collision($b, ie_EntityCollisions_l1.$x0, ie_EntityCollisions_l1.$y0);
        $b.$collision($a, ie_EntityCollisions_l1.$x0, ie_EntityCollisions_l1.$y0);
    }
}
function ie_EntityCollisions_collideGroups($groupa, $groupb) {
    var var$3, $entity, $solid, var$6, $sc;
    ie_EntityCollisions_$callClinit();
    var$3 = $groupa.$all().$iterator();
    while (var$3.$hasNext()) {
        $entity = var$3.$next0();
        if (!($entity instanceof ie_SolidEntity))
            continue;
        $solid = $entity;
        $solid.$hitbox(ie_EntityCollisions_r1);
        $solid.$hitbox(ie_EntityCollisions_r2);
        ie_EntityCollisions_r2.$merge(ie_EntityCollisions_r1);
        ie_EntityCollisions_arrOut.$clear();
        $groupb.$tree1().$getIntersect0(ie_EntityCollisions_arrOut, ie_EntityCollisions_r2);
        var$6 = ie_EntityCollisions_arrOut.$iterator();
        while (var$6.$hasNext()) {
            $sc = var$6.$next0();
            $sc.$hitbox(ie_EntityCollisions_r1);
            if (ie_EntityCollisions_r2.$overlaps(ie_EntityCollisions_r1))
                ie_EntityCollisions_checkCollide($entity, $sc);
        }
    }
}
function ie_EntityCollisions__clinit_() {
    ie_EntityCollisions_tmp = iaamg_Rectangle__init_0();
    ie_EntityCollisions_vector = iaamg_Vector2__init_0();
    ie_EntityCollisions_l1 = iaamg_Vector2__init_0();
    ie_EntityCollisions_r1 = iaamg_Rectangle__init_0();
    ie_EntityCollisions_r2 = iaamg_Rectangle__init_0();
    ie_EntityCollisions_arrOut = iaac_Array__init_0();
}
function jur_AbstractCharClass$LazyRange() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$start6 = 0;
    a.$end4 = 0;
}
function jur_AbstractCharClass$LazyRange__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyRange();
    jur_AbstractCharClass$LazyRange__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyRange__init_0($this, $start, $end) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
    $this.$start6 = $start;
    $this.$end4 = $end;
}
function jur_AbstractCharClass$LazyRange_computeValue($this) {
    var $chCl;
    $chCl = jur_CharClass__init_().$add0($this.$start6, $this.$end4);
    return $chCl;
}
function it_Fx$lambda$static$17$lambda$_14_0() {
    jl_Object.call(this);
    this.$_057 = null;
}
function it_Fx$lambda$static$17$lambda$_14_0__init_(var_0) {
    var var_1 = new it_Fx$lambda$static$17$lambda$_14_0();
    it_Fx$lambda$static$17$lambda$_14_0__init_0(var_1, var_0);
    return var_1;
}
function it_Fx$lambda$static$17$lambda$_14_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_057 = var$1;
}
function it_Fx$lambda$static$17$lambda$_14_0_get(var$0, var$1, var$2) {
    it_Fx_lambda$null$16(var$0.$_057, var$1, var$2);
}
function ig_Effects$effect$lambda$_7_0() {
    jl_Object.call(this);
}
function ig_Effects$effect$lambda$_7_0__init_() {
    var var_0 = new ig_Effects$effect$lambda$_7_0();
    ig_Effects$effect$lambda$_7_0__init_0(var_0);
    return var_0;
}
function ig_Effects$effect$lambda$_7_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function ig_Effects$effect$lambda$_7_0_get(var$0) {
    return ig_Effects$effect$lambda$_7_0_get0(var$0);
}
function ig_Effects$effect$lambda$_7_0_get0(var$0) {
    return it_EffectEntity__init_();
}
function jur_AltQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
}
function jur_AltQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_AltQuantifierSet();
    jur_AltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AltQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_AltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = $this.$next.$matches($stringIndex, $testString, $matchResult);
    return $shift;
}
function jur_AltQuantifierSet_setNext($this, $next) {
    jur_AbstractSet_setNext($this, $next);
    $this.$innerSet.$setNext($next);
}
function cbggg_Gdx2DPixmap() {
    jl_Object.call(this);
}
function cbggg_Gdx2DPixmap_toGlFormat($format) {
    switch ($format) {
        case 1:
            break;
        case 2:
            return 6410;
        case 3:
        case 5:
            return 6407;
        case 4:
        case 6:
            return 6408;
        default:
            $rt_throw(cbgu_GdxRuntimeException__init_(jl_StringBuilder__init_().$append($rt_s(977)).$append3($format).$toString()));
    }
    return 6406;
}
function cbggg_Gdx2DPixmap_toGlType($format) {
    switch ($format) {
        case 1:
        case 2:
        case 3:
        case 4:
            break;
        case 5:
            return 33635;
        case 6:
            return 32819;
        default:
            $rt_throw(cbgu_GdxRuntimeException__init_(jl_StringBuilder__init_().$append($rt_s(977)).$append3($format).$toString()));
    }
    return 5121;
}
function ji_DataOutput() {
}
function ji_DataOutputStream() {
    ji_FilterOutputStream.call(this);
    this.$buff0 = null;
}
function ji_DataOutputStream__init_(var_0) {
    var var_1 = new ji_DataOutputStream();
    ji_DataOutputStream__init_0(var_1, var_0);
    return var_1;
}
function ji_DataOutputStream__init_0($this, $out) {
    ji_FilterOutputStream__init_0($this, $out);
    $this.$buff0 = $rt_createByteArray(8);
}
function iaas_Scene$scrolled$lambda$_24_0() {
    jl_Object.call(this);
}
function iaas_Scene$scrolled$lambda$_24_0__init_() {
    var var_0 = new iaas_Scene$scrolled$lambda$_24_0();
    iaas_Scene$scrolled$lambda$_24_0__init_0(var_0);
    return var_0;
}
function iaas_Scene$scrolled$lambda$_24_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaas_Scene$scrolled$lambda$_24_0_get(var$0) {
    return iaas_Scene$scrolled$lambda$_24_0_get0(var$0);
}
function iaas_Scene$scrolled$lambda$_24_0_get0(var$0) {
    return iaase_InputEvent__init_();
}
function jur_AbstractCharClass$LazyJavaLowerCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$012 = null;
}
function jur_AbstractCharClass$LazyJavaLowerCase$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaLowerCase$1();
    jur_AbstractCharClass$LazyJavaLowerCase$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaLowerCase$1__init_0($this, $this$0) {
    $this.$this$012 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaLowerCase$1_contains($this, $ch) {
    return jl_Character_isLowerCase($ch);
}
function iaac_Array$ArrayIterable() {
    var a = this; jl_Object.call(a);
    a.$array4 = null;
    a.$allowRemove = 0;
    a.$iterator1 = null;
    a.$iterator2 = null;
}
function iaac_Array$ArrayIterable__init_(var_0) {
    var var_1 = new iaac_Array$ArrayIterable();
    iaac_Array$ArrayIterable__init_0(var_1, var_0);
    return var_1;
}
function iaac_Array$ArrayIterable__init_1(var_0, var_1) {
    var var_2 = new iaac_Array$ArrayIterable();
    iaac_Array$ArrayIterable__init_2(var_2, var_0, var_1);
    return var_2;
}
function iaac_Array$ArrayIterable__init_0($this, $array) {
    iaac_Array$ArrayIterable__init_2($this, $array, 1);
}
function iaac_Array$ArrayIterable__init_2($this, $array, $allowRemove) {
    jl_Object__init_0($this);
    $this.$iterator1 = iaac_Array$ArrayIterable$ArrayIterator__init_1($this, null);
    $this.$iterator2 = iaac_Array$ArrayIterable$ArrayIterator__init_1($this, null);
    $this.$array4 = $array;
    $this.$allowRemove = $allowRemove;
}
function iaac_Array$ArrayIterable_iterator($this) {
    if ($this.$iterator1.$done0) {
        $this.$iterator1.$index2 = 0;
        $this.$iterator1.$done0 = 0;
        return $this.$iterator1;
    }
    if (!$this.$iterator2.$done0)
        return iaac_Array$ArrayIterable$ArrayIterator__init_1($this, null);
    $this.$iterator2.$index2 = 0;
    $this.$iterator2.$done0 = 0;
    return $this.$iterator2;
}
function iaac_Array$ArrayIterable_access$100($x0) {
    return $x0.$array4;
}
function iaac_Array$ArrayIterable_access$200($x0) {
    return $x0.$allowRemove;
}
function iaam_Matrix3() {
    var a = this; jl_Object.call(a);
    a.$val = null;
    a.$tmp0 = null;
}
function iaam_Matrix3__init_() {
    var var_0 = new iaam_Matrix3();
    iaam_Matrix3__init_0(var_0);
    return var_0;
}
function iaam_Matrix3__init_0($this) {
    jl_Object__init_0($this);
    $this.$val = $rt_createFloatArray(9);
    $this.$tmp0 = $rt_createFloatArray(9);
    $this.$idt();
}
function iaam_Matrix3_setOrtho($this, $x, $y, $width, $height) {
    var $right, $top, var$7, $x_orth, var$9, $y_orth, $tx, $ty;
    $right = $x + $width;
    $top = $y + $height;
    var$7 = $right - $x;
    $x_orth = 2.0 / var$7;
    var$9 = $top - $y;
    $y_orth = 2.0 / var$9;
    $tx =  -($right + $x) / var$7;
    $ty =  -($top + $y) / var$9;
    $this.$val.data[0] = $x_orth;
    $this.$val.data[4] = $y_orth;
    $this.$val.data[6] = $tx;
    $this.$val.data[7] = $ty;
    $this.$val.data[8] = 1.0;
    return $this;
}
function iaam_Matrix3_idt($this) {
    var $val, var$2;
    $val = $this.$val;
    var$2 = $val.data;
    var$2[0] = 1.0;
    var$2[1] = 0.0;
    var$2[2] = 0.0;
    var$2[3] = 0.0;
    var$2[4] = 1.0;
    var$2[5] = 0.0;
    var$2[6] = 0.0;
    var$2[7] = 0.0;
    var$2[8] = 1.0;
    return $this;
}
function iaam_Matrix3_mul($this, $m) {
    var $val, var$3, $v00, $v01, $v02, $v10, $v11, $v12, $v20, $v21, $v22;
    $val = $this.$val;
    var$3 = $val.data;
    $v00 = var$3[0] * $m.$val.data[0] + var$3[3] * $m.$val.data[1] + var$3[6] * $m.$val.data[2];
    $v01 = var$3[0] * $m.$val.data[3] + var$3[3] * $m.$val.data[4] + var$3[6] * $m.$val.data[5];
    $v02 = var$3[0] * $m.$val.data[6] + var$3[3] * $m.$val.data[7] + var$3[6] * $m.$val.data[8];
    $v10 = var$3[1] * $m.$val.data[0] + var$3[4] * $m.$val.data[1] + var$3[7] * $m.$val.data[2];
    $v11 = var$3[1] * $m.$val.data[3] + var$3[4] * $m.$val.data[4] + var$3[7] * $m.$val.data[5];
    $v12 = var$3[1] * $m.$val.data[6] + var$3[4] * $m.$val.data[7] + var$3[7] * $m.$val.data[8];
    $v20 = var$3[2] * $m.$val.data[0] + var$3[5] * $m.$val.data[1] + var$3[8] * $m.$val.data[2];
    $v21 = var$3[2] * $m.$val.data[3] + var$3[5] * $m.$val.data[4] + var$3[8] * $m.$val.data[5];
    $v22 = var$3[2] * $m.$val.data[6] + var$3[5] * $m.$val.data[7] + var$3[8] * $m.$val.data[8];
    var$3[0] = $v00;
    var$3[1] = $v10;
    var$3[2] = $v20;
    var$3[3] = $v01;
    var$3[4] = $v11;
    var$3[5] = $v21;
    var$3[6] = $v02;
    var$3[7] = $v12;
    var$3[8] = $v22;
    return $this;
}
function iaam_Matrix3_det($this) {
    var $val, var$2;
    $val = $this.$val;
    var$2 = $val.data;
    return var$2[0] * var$2[4] * var$2[8] + var$2[3] * var$2[7] * var$2[2] + var$2[6] * var$2[1] * var$2[5] - var$2[0] * var$2[7] * var$2[5] - var$2[3] * var$2[1] * var$2[8] - var$2[6] * var$2[4] * var$2[2];
}
function iaam_Matrix3_inv($this) {
    var $det, $inv_det, $tmp, var$4, $val, var$6;
    $det = $this.$det();
    if ($det === 0.0)
        $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(978)));
    $inv_det = 1.0 / $det;
    $tmp = $this.$tmp0;
    var$4 = $tmp.data;
    $val = $this.$val;
    var$6 = $val.data;
    var$4[0] = var$6[4] * var$6[8] - var$6[5] * var$6[7];
    var$4[1] = var$6[2] * var$6[7] - var$6[1] * var$6[8];
    var$4[2] = var$6[1] * var$6[5] - var$6[2] * var$6[4];
    var$4[3] = var$6[5] * var$6[6] - var$6[3] * var$6[8];
    var$4[4] = var$6[0] * var$6[8] - var$6[2] * var$6[6];
    var$4[5] = var$6[2] * var$6[3] - var$6[0] * var$6[5];
    var$4[6] = var$6[3] * var$6[7] - var$6[4] * var$6[6];
    var$4[7] = var$6[1] * var$6[6] - var$6[0] * var$6[7];
    var$4[8] = var$6[0] * var$6[4] - var$6[1] * var$6[3];
    var$6[0] = $inv_det * var$4[0];
    var$6[1] = $inv_det * var$4[1];
    var$6[2] = $inv_det * var$4[2];
    var$6[3] = $inv_det * var$4[3];
    var$6[4] = $inv_det * var$4[4];
    var$6[5] = $inv_det * var$4[5];
    var$6[6] = $inv_det * var$4[6];
    var$6[7] = $inv_det * var$4[7];
    var$6[8] = $inv_det * var$4[8];
    return $this;
}
function iaam_Matrix3_set($this, $mat) {
    jl_System_arraycopy($mat.$val, 0, $this.$val, 0, $this.$val.data.length);
    return $this;
}
function iaam_Matrix3_set0($this, $affine) {
    var $val, var$3;
    $val = $this.$val;
    var$3 = $val.data;
    var$3[0] = $affine.$m00;
    var$3[1] = $affine.$m10;
    var$3[2] = 0.0;
    var$3[3] = $affine.$m01;
    var$3[4] = $affine.$m11;
    var$3[5] = 0.0;
    var$3[6] = $affine.$m02;
    var$3[7] = $affine.$m12;
    var$3[8] = 1.0;
    return $this;
}
function jl_Object$monitorExit$lambda$_8_0() {
    jl_Object.call(this);
    this.$_058 = null;
}
function jl_Object$monitorExit$lambda$_8_0__init_(var_0) {
    var var_1 = new jl_Object$monitorExit$lambda$_8_0();
    jl_Object$monitorExit$lambda$_8_0__init_0(var_1, var_0);
    return var_1;
}
function jl_Object$monitorExit$lambda$_8_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_058 = var$1;
}
function jl_Object$monitorExit$lambda$_8_0_run(var$0) {
    jl_Object_lambda$monitorExit$2(var$0.$_058);
}
function jur_UCISupplRangeSet() {
    jur_SupplRangeSet.call(this);
}
function jur_UCISupplRangeSet__init_(var_0) {
    var var_1 = new jur_UCISupplRangeSet();
    jur_UCISupplRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCISupplRangeSet__init_0($this, $cc) {
    jur_SupplRangeSet__init_0($this, $cc);
}
function jur_UCISupplRangeSet_contains($this, $ch) {
    return $this.$chars.$contains(jl_Character_toLowerCase0(jl_Character_toUpperCase($ch)));
}
function jur_UCISupplRangeSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(979)).$append(!$this.$alt1 ? $rt_s(32) : $rt_s(33)).$append($this.$chars.$toString()).$toString();
}
function iaagg_Lines() {
    jl_Object.call(this);
}
var iaagg_Lines_stroke1 = 0.0;
var iaagg_Lines_vector = null;
var iaagg_Lines_floats = null;
var iaagg_Lines_floatBuilder = null;
var iaagg_Lines_precise = 0;
var iaagg_Lines_circlePrecision = 0.0;
function iaagg_Lines_$callClinit() {
    iaagg_Lines_$callClinit = $rt_eraseClinit(iaagg_Lines);
    iaagg_Lines__clinit_();
}
function iaagg_Lines_circleVertices($rad) {
    iaagg_Lines_$callClinit();
    return 11 + ($rad * iaagg_Lines_circlePrecision | 0) | 0;
}
function iaagg_Lines_lineAngle0($x, $y, $angle, $length, $style) {
    iaagg_Lines_$callClinit();
    iaagg_Lines_vector.$set2(1.0, 1.0).$setLength0($length).$setAngle($angle);
    iaagg_Lines_line1($x, $y, $x + iaagg_Lines_vector.$x0, $y + iaagg_Lines_vector.$y0, $style);
}
function iaagg_Lines_lineAngle($x, $y, $angle, $length) {
    iaagg_Lines_$callClinit();
    iaagg_Lines_vector.$set2(1.0, 1.0).$setLength0($length).$setAngle($angle);
    iaagg_Lines_line($x, $y, $x + iaagg_Lines_vector.$x0, $y + iaagg_Lines_vector.$y0);
}
function iaagg_Lines_line($x, $y, $x2, $y2) {
    iaagg_Lines_$callClinit();
    iaagg_CapStyle_$callClinit();
    iaagg_Lines_line0($x, $y, $x2, $y2, iaagg_CapStyle_square, 0.0);
}
function iaagg_Lines_line1($x, $y, $x2, $y2, $cap) {
    iaagg_Lines_$callClinit();
    iaagg_Lines_line0($x, $y, $x2, $y2, $cap, 0.0);
}
function iaagg_Lines_line0($x, $y, $x2, $y2, $cap, $padding) {
    iaagg_Lines_$callClinit();
    iaa_Core_$callClinit();
    iaagg_Lines_line2(iaa_Core_atlas.$white(), $x, $y, $x2, $y2, $cap, $padding);
}
function iaagg_Lines_line2($region, $x, $y, $x2, $y2, $cap, $padding) {
    var var$8, $length, $angle, $cir;
    iaagg_Lines_$callClinit();
    var$8 = iaam_Mathf_dst($x, $y, $x2, $y2);
    iaagg_CapStyle_$callClinit();
    $length = var$8 + ($cap !== iaagg_CapStyle_none && $cap !== iaagg_CapStyle_round ? iaagg_Lines_stroke1 + $padding * 2.0 : $padding * 2.0);
    $angle = (!iaagg_Lines_precise ? iaam_Mathf_atan2($x2 - $x, $y2 - $y) : jl_Math_atan2($y2 - $y, $x2 - $x)) * 57.2957763671875;
    if ($cap === iaagg_CapStyle_square)
        iaagg_Draw_rect4($region, $x - iaagg_Lines_stroke1 / 2.0 - $padding + $length / 2.0, $y, $length, iaagg_Lines_stroke1, iaagg_Lines_stroke1 / 2.0 + $padding, iaagg_Lines_stroke1 / 2.0, $angle);
    else if ($cap === iaagg_CapStyle_none)
        iaagg_Draw_rect4($region, $x - $padding + $length / 2.0, $y, $length, iaagg_Lines_stroke1, $padding, iaagg_Lines_stroke1 / 2.0, $angle);
    else if ($cap === iaagg_CapStyle_round) {
        iaa_Core_$callClinit();
        $cir = !iaa_Core_atlas.$has($rt_s(980)) ? iaa_Core_atlas.$find($rt_s(311)) : iaa_Core_atlas.$find($rt_s(980));
        iaagg_Draw_rect4($region, $x - $padding + $length / 2.0, $y, $length, iaagg_Lines_stroke1, $padding, iaagg_Lines_stroke1 / 2.0, $angle);
        iaagg_Draw_rect6($cir, $x, $y, iaagg_Lines_stroke1, iaagg_Lines_stroke1, $angle + 180.0);
        iaagg_Draw_rect6($cir, $x2, $y2, iaagg_Lines_stroke1, iaagg_Lines_stroke1, $angle);
    }
}
function iaagg_Lines_polyline($points, $wrap) {
    iaagg_Lines_$callClinit();
    iaagg_Lines_polyline0($points.$items1, $points.$size2, $wrap);
}
function iaagg_Lines_polyline0($points, $length, $wrap) {
    var var$4, var$5, $x1, $y1, $x2, $y2, $x3, $y3, $lasta, $i, $i_0, $avg, $ang2, $s, var$18, $cos1, $sin1, var$21, $cos2, $sin2, $qx1, $qy1, $qx4, $qy4, $qx2, $qy2, $qx3, $qy3;
    iaagg_Lines_$callClinit();
    if ($length < 4)
        return;
    var$4 = $points.data;
    var$5 = $length - 2 | 0;
    $x1 = var$4[var$5];
    $y1 = var$4[$length - 1 | 0];
    $x2 = var$4[0];
    $y2 = var$4[1];
    $x3 = var$4[2];
    $y3 = var$4[3];
    $lasta = !$wrap ? iaam_Angles_angle($x1, $y1, $x2, $y2) + 180.0 : iaam_Mathf_slerp(iaam_Angles_angle($x1, $y1, $x2, $y2), iaam_Angles_angle($x2, $y2, $x3, $y3), 0.5);
    $i = 0;
    while ($i < (!$wrap ? var$5 : $length)) {
        $x1 = var$4[$i];
        $y1 = var$4[$i + 1 | 0];
        $i_0 = $i + 2 | 0;
        $x2 = var$4[$i_0 % $length | 0];
        $y2 = var$4[($i + 3 | 0) % $length | 0];
        $avg = iaam_Angles_angle($x1, $y1, $x2, $y2);
        if ($wrap) {
            $x3 = var$4[($i + 4 | 0) % $length | 0];
            $y3 = var$4[($i + 5 | 0) % $length | 0];
            $ang2 = iaam_Angles_angle($x2, $y2, $x3, $y3);
            $avg = iaam_Mathf_slerp($avg, $ang2, 0.5);
        }
        $s = iaagg_Lines_stroke1 / 2.0;
        var$18 = $lasta - 90.0;
        $cos1 = iaam_Mathf_cosDeg(var$18) * $s;
        $sin1 = iaam_Mathf_sinDeg(var$18) * $s;
        var$21 = $avg - 90.0;
        $cos2 = iaam_Mathf_cosDeg(var$21) * $s;
        $sin2 = iaam_Mathf_sinDeg(var$21) * $s;
        $qx1 = $x1 + $cos1;
        $qy1 = $y1 + $sin1;
        $qx4 = $x1 - $cos1;
        $qy4 = $y1 - $sin1;
        $qx2 = $x2 + $cos2;
        $qy2 = $y2 + $sin2;
        $qx3 = $x2 - $cos2;
        $qy3 = $y2 - $sin2;
        iaagg_Fill_quad($qx1, $qy1, $qx2, $qy2, $qx3, $qy3, $qx4, $qy4);
        $lasta = $avg;
        $i = $i_0;
    }
}
function iaagg_Lines_circle($x, $y, $rad) {
    iaagg_Lines_$callClinit();
    iaagg_Lines_poly($x, $y, iaagg_Lines_circleVertices($rad), $rad);
}
function iaagg_Lines_swirl($x, $y, $radius, $finion, $angle) {
    var $max, $i, $x1, $y1, var$10;
    iaagg_Lines_$callClinit();
    $max = 50.0 * ($finion + 0.0010000000474974513) | 0;
    iaagg_Lines_vector.$set2(0.0, 0.0);
    iaagg_Lines_floats.$clear();
    $i = 0;
    while ($i < $max) {
        iaagg_Lines_vector.$set2($radius, 0.0).$setAngle(7.199999809265137 * $i + $angle);
        $x1 = iaagg_Lines_vector.$x0;
        $y1 = iaagg_Lines_vector.$y0;
        var$10 = iaagg_Lines_vector.$set2($radius, 0.0);
        $i = $i + 1 | 0;
        var$10.$setAngle(7.199999809265137 * $i + $angle);
        iaagg_Lines_floats.$add11($x1 + $x, $y1 + $y);
    }
    iaagg_Lines_polyline(iaagg_Lines_floats, 0);
}
function iaagg_Lines_poly($x, $y, $sides, $radius) {
    var $i, $rad;
    iaagg_Lines_$callClinit();
    iaagg_Lines_floats.$clear();
    $i = 0;
    while ($i < $sides) {
        $rad = $i / $sides * 6.2831854820251465;
        iaagg_Lines_floats.$add11(iaam_Mathf_cos($rad) * $radius + $x, iaam_Mathf_sin0($rad) * $radius + $y);
        $i = $i + 1 | 0;
    }
    iaagg_Lines_polyline(iaagg_Lines_floats, 1);
}
function iaagg_Lines_stroke0($thick) {
    iaagg_Lines_$callClinit();
    iaagg_Lines_stroke1 = $thick;
}
function iaagg_Lines_stroke($thick, $color) {
    iaagg_Lines_$callClinit();
    iaagg_Lines_stroke1 = $thick;
    iaagg_Draw_color($color);
}
function iaagg_Lines__clinit_() {
    iaagg_Lines_stroke1 = 1.0;
    iaagg_Lines_vector = iaamg_Vector2__init_0();
    iaagg_Lines_floats = iaac_FloatArray__init_1(20);
    iaagg_Lines_floatBuilder = iaac_FloatArray__init_1(20);
    iaagg_Lines_circlePrecision = 0.3799999952316284;
}
function iaabt_TeaApplication$TeaApplicationConfig() {
    var a = this; jl_Object.call(a);
    a.$canvas1 = null;
    a.$antialiasEnabled = 0;
    a.$stencilEnabled = 0;
    a.$alphaEnabled = 0;
    a.$premultipliedAlpha = 0;
    a.$drawingBufferPreserved = 0;
}
function iaabt_TeaApplication$TeaApplicationConfig__init_() {
    var var_0 = new iaabt_TeaApplication$TeaApplicationConfig();
    iaabt_TeaApplication$TeaApplicationConfig__init_0(var_0);
    return var_0;
}
function iaabt_TeaApplication$TeaApplicationConfig__init_0($this) {
    jl_Object__init_0($this);
    $this.$antialiasEnabled = 0;
    $this.$stencilEnabled = 0;
    $this.$alphaEnabled = 0;
    $this.$premultipliedAlpha = 1;
    $this.$drawingBufferPreserved = 0;
}
function iaag_Texture$TextureWrap() {
    jl_Enum.call(this);
    this.$glEnum = 0;
}
var iaag_Texture$TextureWrap_MirroredRepeat = null;
var iaag_Texture$TextureWrap_ClampToEdge = null;
var iaag_Texture$TextureWrap_Repeat = null;
var iaag_Texture$TextureWrap_$VALUES = null;
function iaag_Texture$TextureWrap_$callClinit() {
    iaag_Texture$TextureWrap_$callClinit = $rt_eraseClinit(iaag_Texture$TextureWrap);
    iaag_Texture$TextureWrap__clinit_();
}
function iaag_Texture$TextureWrap__init_(var_0, var_1, var_2) {
    var var_3 = new iaag_Texture$TextureWrap();
    iaag_Texture$TextureWrap__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaag_Texture$TextureWrap_values() {
    iaag_Texture$TextureWrap_$callClinit();
    return iaag_Texture$TextureWrap_$VALUES.$clone();
}
function iaag_Texture$TextureWrap__init_0($this, var$1, var$2, $glEnum) {
    iaag_Texture$TextureWrap_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
    $this.$glEnum = $glEnum;
}
function iaag_Texture$TextureWrap_getGLEnum($this) {
    return $this.$glEnum;
}
function iaag_Texture$TextureWrap__clinit_() {
    var var$1, var$2;
    iaag_Texture$TextureWrap_MirroredRepeat = iaag_Texture$TextureWrap__init_($rt_s(981), 0, 33648);
    iaag_Texture$TextureWrap_ClampToEdge = iaag_Texture$TextureWrap__init_($rt_s(982), 1, 33071);
    iaag_Texture$TextureWrap_Repeat = iaag_Texture$TextureWrap__init_($rt_s(983), 2, 10497);
    var$1 = $rt_createArray(iaag_Texture$TextureWrap, 3);
    var$2 = var$1.data;
    var$2[0] = iaag_Texture$TextureWrap_MirroredRepeat;
    var$2[1] = iaag_Texture$TextureWrap_ClampToEdge;
    var$2[2] = iaag_Texture$TextureWrap_Repeat;
    iaag_Texture$TextureWrap_$VALUES = var$1;
}
function jur_AbstractCharClass$LazyPunct() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyPunct__init_() {
    var var_0 = new jur_AbstractCharClass$LazyPunct();
    jur_AbstractCharClass$LazyPunct__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyPunct__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyPunct_computeValue($this) {
    return jur_CharClass__init_().$add0(33, 64).$add0(91, 96).$add0(123, 126);
}
function it_Phases$lambda$null$19$lambda$_48_0() {
    jl_Object.call(this);
    this.$_059 = null;
}
function it_Phases$lambda$null$19$lambda$_48_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$null$19$lambda$_48_0();
    it_Phases$lambda$null$19$lambda$_48_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$null$19$lambda$_48_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_059 = var$1;
}
function it_Phases$lambda$null$19$lambda$_48_0_get(var$0, var$1) {
    var$0.$_059.$shoot(var$1);
}
function iaagg_VertexBufferObject() {
    var a = this; jl_Object.call(a);
    a.$attributes2 = null;
    a.$buffer5 = null;
    a.$bufferHandle1 = 0;
    a.$isStatic0 = 0;
    a.$usage2 = 0;
    a.$isDirty1 = 0;
    a.$isBound1 = 0;
}
function iaagg_VertexBufferObject__init_(var_0, var_1, var_2) {
    var var_3 = new iaagg_VertexBufferObject();
    iaagg_VertexBufferObject__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaagg_VertexBufferObject__init_0($this, $isStatic, $numVertices, $attributes) {
    jl_Object__init_0($this);
    $this.$isDirty1 = 0;
    $this.$isBound1 = 0;
    $this.$isStatic0 = $isStatic;
    $this.$attributes2 = $attributes;
    $this.$buffer5 = iaau_BufferUtils_newFloatBuffer($rt_imul($this.$attributes2.$vertexSize / 4 | 0, $numVertices));
    $this.$buffer5.$flip();
    iaa_Core_$callClinit();
    $this.$bufferHandle1 = iaa_Core_gl20.$glGenBuffer();
    $this.$usage2 = !$isStatic ? 35048 : 35044;
}
function iaagg_VertexBufferObject_getNumVertices($this) {
    return jn_Buffer_limit($this.$buffer5) / ($this.$attributes2.$vertexSize / 4 | 0) | 0;
}
function iaagg_VertexBufferObject_getBuffer($this) {
    $this.$isDirty1 = 1;
    return $this.$buffer5;
}
function iaagg_VertexBufferObject_bufferChanged($this) {
    if ($this.$isBound1) {
        iaa_Core_$callClinit();
        iaa_Core_gl20.$glBufferData(34962, jn_Buffer_limit($this.$buffer5), $this.$buffer5, $this.$usage2);
        $this.$isDirty1 = 0;
    }
}
function iaagg_VertexBufferObject_setVertices($this, $vertices, $offset, $count) {
    $this.$isDirty1 = 1;
    iaau_BufferUtils_copy($vertices, $this.$buffer5, $count, $offset);
    $this.$buffer5.$position(0);
    $this.$buffer5.$limit0($count);
    iaagg_VertexBufferObject_bufferChanged($this);
}
function iaagg_VertexBufferObject_bind($this, $shader, $locations) {
    var $gl, $numAttributes, $i, var$6, $attribute, $location;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    $gl.$glBindBuffer(34962, $this.$bufferHandle1);
    if ($this.$isDirty1) {
        $gl.$glBufferData(34962, jn_Buffer_limit($this.$buffer5), $this.$buffer5, $this.$usage2);
        $this.$isDirty1 = 0;
    }
    a: {
        $numAttributes = iaag_VertexAttributes_size($this.$attributes2);
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                var$6 = $locations.data;
                $attribute = iaag_VertexAttributes_get($this.$attributes2, $i);
                $location = var$6[$i];
                if ($location >= 0) {
                    $shader.$enableVertexAttribute($location);
                    if ($attribute.$usage0 != 4)
                        $shader.$setVertexAttribute($location, $attribute.$numComponents, 5126, 0, $this.$attributes2.$vertexSize, $attribute.$offset);
                    else
                        $shader.$setVertexAttribute($location, $attribute.$numComponents, 5121, 1, $this.$attributes2.$vertexSize, $attribute.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < $numAttributes) {
            $attribute = iaag_VertexAttributes_get($this.$attributes2, $i);
            $location = $shader.$getAttributeLocation($attribute.$alias);
            if ($location >= 0) {
                $shader.$enableVertexAttribute($location);
                if ($attribute.$usage0 != 4)
                    $shader.$setVertexAttribute($location, $attribute.$numComponents, 5126, 0, $this.$attributes2.$vertexSize, $attribute.$offset);
                else
                    $shader.$setVertexAttribute($location, $attribute.$numComponents, 5121, 1, $this.$attributes2.$vertexSize, $attribute.$offset);
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$isBound1 = 1;
}
function iaagg_VertexBufferObject_unbind($this, $shader, $locations) {
    var $gl, $numAttributes, $i, $location;
    a: {
        iaa_Core_$callClinit();
        $gl = iaa_Core_gl20;
        $numAttributes = iaag_VertexAttributes_size($this.$attributes2);
        if ($locations === null) {
            $i = 0;
            while ($i < $numAttributes) {
                $shader.$disableVertexAttribute(iaag_VertexAttributes_get($this.$attributes2, $i).$alias);
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                $location = $locations.data[$i];
                if ($location >= 0)
                    $shader.$disableVertexAttribute0($location);
                $i = $i + 1 | 0;
            }
        }
    }
    $gl.$glBindBuffer(34962, 0);
    $this.$isBound1 = 0;
}
function iaagg_VertexBufferObject_dispose($this) {
    var $gl;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    $gl.$glBindBuffer(34962, 0);
    $gl.$glDeleteBuffer($this.$bufferHandle1);
    $this.$bufferHandle1 = 0;
}
function iaas_Scene$getStyle$lambda$_2_0() {
    jl_Object.call(this);
    this.$_060 = null;
}
function iaas_Scene$getStyle$lambda$_2_0__init_(var_0) {
    var var_1 = new iaas_Scene$getStyle$lambda$_2_0();
    iaas_Scene$getStyle$lambda$_2_0__init_0(var_1, var_0);
    return var_1;
}
function iaas_Scene$getStyle$lambda$_2_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_060 = var$1;
}
function iaas_Scene$getStyle$lambda$_2_0_get(var$0) {
    return iaas_Scene$getStyle$lambda$_2_0_get0(var$0);
}
function iaas_Scene$getStyle$lambda$_2_0_get0(var$0) {
    return iaas_Scene_lambda$getStyle$0(var$0.$_060);
}
function iaac_Sort() {
    var a = this; jl_Object.call(a);
    a.$timSort = null;
    a.$comparableTimSort = null;
}
var iaac_Sort_instance0 = null;
function iaac_Sort__init_() {
    var var_0 = new iaac_Sort();
    iaac_Sort__init_0(var_0);
    return var_0;
}
function iaac_Sort__init_0($this) {
    jl_Object__init_0($this);
}
function iaac_Sort_instance() {
    if (iaac_Sort_instance0 === null)
        iaac_Sort_instance0 = iaac_Sort__init_();
    return iaac_Sort_instance0;
}
function iaac_Sort_sort($this, $a, $fromIndex, $toIndex) {
    if ($this.$comparableTimSort === null)
        $this.$comparableTimSort = iaac_ComparableTimSort__init_();
    $this.$comparableTimSort.$doSort($a, $fromIndex, $toIndex);
}
function iaac_Sort_sort0($this, $a, $c, $fromIndex, $toIndex) {
    if ($this.$timSort === null)
        $this.$timSort = iaac_TimSort__init_();
    $this.$timSort.$doSort0($a, $c, $fromIndex, $toIndex);
}
function it_Phases$3$lambda$$7$lambda$_25_0() {
    jl_Object.call(this);
}
function it_Phases$3$lambda$$7$lambda$_25_0__init_() {
    var var_0 = new it_Phases$3$lambda$$7$lambda$_25_0();
    it_Phases$3$lambda$$7$lambda$_25_0__init_0(var_0);
    return var_0;
}
function it_Phases$3$lambda$$7$lambda$_25_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$3$lambda$$7$lambda$_25_0_run(var$0) {
    it_Phases$3_lambda$null$6();
}
function it_Phases$6$begin$lambda$_2_1() {
    jl_Object.call(this);
    this.$_061 = null;
}
function it_Phases$6$begin$lambda$_2_1__init_(var_0) {
    var var_1 = new it_Phases$6$begin$lambda$_2_1();
    it_Phases$6$begin$lambda$_2_1__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$6$begin$lambda$_2_1__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_061 = var$1;
}
function it_Phases$6$begin$lambda$_2_1_get(var$0, var$1) {
    it_Phases$6$begin$lambda$_2_1_get0(var$0, var$1);
}
function it_Phases$6$begin$lambda$_2_1_get0(var$0, var$1) {
    it_Phases$6_lambda$begin$1(var$0.$_061, var$1);
}
function iaaf_Boolf() {
}
function it_Phases$6$begin$lambda$_2_0() {
    jl_Object.call(this);
}
function it_Phases$6$begin$lambda$_2_0__init_() {
    var var_0 = new it_Phases$6$begin$lambda$_2_0();
    it_Phases$6$begin$lambda$_2_0__init_0(var_0);
    return var_0;
}
function it_Phases$6$begin$lambda$_2_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$6$begin$lambda$_2_0_get(var$0, var$1) {
    return it_Phases$6$begin$lambda$_2_0_get0(var$0, var$1);
}
function it_Phases$6$begin$lambda$_2_0_get0(var$0, var$1) {
    return it_Phases$6_lambda$begin$0(var$1);
}
function iaass_Drawable() {
}
function iaass_BaseDrawable() {
    var a = this; jl_Object.call(a);
    a.$leftWidth0 = 0.0;
    a.$rightWidth0 = 0.0;
    a.$topHeight0 = 0.0;
    a.$bottomHeight0 = 0.0;
    a.$minWidth0 = 0.0;
    a.$minHeight0 = 0.0;
}
function iaass_BaseDrawable__init_() {
    var var_0 = new iaass_BaseDrawable();
    iaass_BaseDrawable__init_0(var_0);
    return var_0;
}
function iaass_BaseDrawable__init_0($this) {
    jl_Object__init_0($this);
}
function iaass_BaseDrawable_getLeftWidth($this) {
    return $this.$leftWidth0;
}
function iaass_BaseDrawable_setLeftWidth($this, $leftWidth) {
    $this.$leftWidth0 = $leftWidth;
}
function iaass_BaseDrawable_getRightWidth($this) {
    return $this.$rightWidth0;
}
function iaass_BaseDrawable_setRightWidth($this, $rightWidth) {
    $this.$rightWidth0 = $rightWidth;
}
function iaass_BaseDrawable_getTopHeight($this) {
    return $this.$topHeight0;
}
function iaass_BaseDrawable_setTopHeight($this, $topHeight) {
    $this.$topHeight0 = $topHeight;
}
function iaass_BaseDrawable_getBottomHeight($this) {
    return $this.$bottomHeight0;
}
function iaass_BaseDrawable_setBottomHeight($this, $bottomHeight) {
    $this.$bottomHeight0 = $bottomHeight;
}
function iaass_BaseDrawable_getMinWidth($this) {
    return $this.$minWidth0;
}
function iaass_BaseDrawable_setMinWidth($this, $minWidth) {
    $this.$minWidth0 = $minWidth;
}
function iaass_BaseDrawable_getMinHeight($this) {
    return $this.$minHeight0;
}
function iaass_BaseDrawable_setMinHeight($this, $minHeight) {
    $this.$minHeight0 = $minHeight;
}
function iaass_TransformDrawable() {
}
function iaass_NinePatchDrawable() {
    iaass_BaseDrawable.call(this);
    this.$patch = null;
}
function iaass_NinePatchDrawable__init_(var_0) {
    var var_1 = new iaass_NinePatchDrawable();
    iaass_NinePatchDrawable__init_0(var_1, var_0);
    return var_1;
}
function iaass_NinePatchDrawable__init_0($this, $patch) {
    iaass_BaseDrawable__init_0($this);
    $this.$setPatch($patch);
}
function iaass_NinePatchDrawable_draw($this, $x, $y, $originX, $originY, $width, $height, $scaleX, $scaleY, $rotation) {
    $this.$patch.$draw10($x, $y, $originX, $originY, $width, $height, $scaleX, $scaleY, $rotation);
}
function iaass_NinePatchDrawable_getPatch($this) {
    return $this.$patch;
}
function iaass_NinePatchDrawable_setPatch($this, $patch) {
    $this.$patch = $patch;
    $this.$setMinWidth($patch.$getTotalWidth());
    $this.$setMinHeight($patch.$getTotalHeight());
    $this.$setTopHeight($patch.$getPadTop());
    $this.$setRightWidth($patch.$getPadRight());
    $this.$setBottomHeight($patch.$getPadBottom());
    $this.$setLeftWidth($patch.$getPadLeft());
}
function iaass_ScaledNinePatchDrawable() {
    iaass_NinePatchDrawable.call(this);
    this.$scale2 = 0.0;
}
function iaass_ScaledNinePatchDrawable__init_(var_0) {
    var var_1 = new iaass_ScaledNinePatchDrawable();
    iaass_ScaledNinePatchDrawable__init_0(var_1, var_0);
    return var_1;
}
function iaass_ScaledNinePatchDrawable__init_0($this, $patch) {
    iaass_NinePatchDrawable__init_0($this, $patch);
    $this.$scale2 = iaasul_Scl_scl0(1.0);
}
function iaass_ScaledNinePatchDrawable_draw($this, $x, $y, $width, $height) {
    $this.$getPatch().$draw10($x, $y, 0.0, 0.0, $width / $this.$scale2, $height / $this.$scale2, $this.$scale2, $this.$scale2, 0.0);
}
function iaass_ScaledNinePatchDrawable_setPatch($this, $patch) {
    iaass_NinePatchDrawable_setPatch($this, $patch);
    $this.$setMinWidth($patch.$getTotalWidth() * $this.$scale2);
    $this.$setMinHeight($patch.$getTotalHeight() * $this.$scale2);
}
function jur_AbstractCharClass$LazySpace() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazySpace__init_() {
    var var_0 = new jur_AbstractCharClass$LazySpace();
    jur_AbstractCharClass$LazySpace__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazySpace__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazySpace_computeValue($this) {
    return jur_CharClass__init_().$add0(9, 13).$add(32);
}
function ju_HashMap$2() {
    ju_AbstractCollection.call(this);
    this.$this$013 = null;
}
function ju_HashMap$2__init_(var_0) {
    var var_1 = new ju_HashMap$2();
    ju_HashMap$2__init_0(var_1, var_0);
    return var_1;
}
function ju_HashMap$2__init_0($this, $this$0) {
    $this.$this$013 = $this$0;
    ju_AbstractCollection__init_0($this);
}
function ju_HashMap$2_iterator($this) {
    return ju_HashMap$ValueIterator__init_($this.$this$013);
}
function it_Boss$nextPhase$lambda$_3_0() {
    jl_Object.call(this);
}
function it_Boss$nextPhase$lambda$_3_0__init_() {
    var var_0 = new it_Boss$nextPhase$lambda$_3_0();
    it_Boss$nextPhase$lambda$_3_0__init_0(var_0);
    return var_0;
}
function it_Boss$nextPhase$lambda$_3_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Boss$nextPhase$lambda$_3_0_get(var$0, var$1) {
    it_Boss$nextPhase$lambda$_3_0_get0(var$0, var$1);
}
function it_Boss$nextPhase$lambda$_3_0_get0(var$0, var$1) {
    it_Boss_lambda$nextPhase$2(var$1);
}
function otjde_FocusEventTarget() {
}
function otjde_MouseEventTarget() {
}
function otjb_WindowEventTarget() {
}
function iaat_Parser() {
    jl_Object.call(this);
}
var iaat_Parser_RESET_REPLACEMENT = null;
function iaat_Parser_parseTokens($label) {
    a: {
        if (iaat_Parser_RESET_REPLACEMENT !== null) {
            iaat_TypingConfig_$callClinit();
            if (!iaat_TypingConfig_dirtyEffectMaps)
                break a;
        }
        iaat_Parser_RESET_REPLACEMENT = iaat_Parser_getResetReplacement();
    }
    if ($label.$forceMarkupColor)
        $label.$getBitmapFontCache().$getFont().$getData().$markupEnabled = 1;
    $label.$tokenEntries.$clear();
    iaat_Parser_parseReplacements($label);
    iaat_Parser_parseRegularTokens($label);
    iaat_Parser_stripTokens($label);
    $label.$tokenEntries.$sort3();
    $label.$tokenEntries.$reverse();
}
function iaat_Parser_baseParse($label, $replacer) {
    var $text, $result, $lastIndex, var$6, $afterIndex;
    $text = $label.$getText0();
    $result = jl_StringBuilder__init_();
    $result.$ensureCapacity($text.$length());
    $lastIndex = $rt_createIntArray(1);
    var$6 = $lastIndex.data;
    var$6[0] = 0;
    $afterIndex = $rt_createIntArray(1);
    $afterIndex.data[0] = 0;
    iaat_Parser_parseAllTokens($label, 0, iaat_Parser$baseParse$lambda$_2_0__init_($text, $replacer, $afterIndex, $result, $lastIndex));
    $result.$append15($text.$subSequence(var$6[0], $text.$length()));
    $label.$setText1($result);
}
function iaat_Parser_parseReplacements($label) {
    iaat_Parser_baseParse($label, iaat_Parser$parseReplacements$lambda$_3_0__init_($label));
}
function iaat_Parser_parseRegularTokens($label) {
    iaat_Parser_baseParse($label, iaat_Parser$parseRegularTokens$lambda$_4_0__init_($label));
}
function iaat_Parser_parseAllTokens($label, $square, $handler) {
    var $text, $i, $c, var$7, $j, var$9;
    $text = $label.$getText0();
    $i = 0;
    while ($i < $text.$length()) {
        a: {
            $c = $text.$charAt($i);
            if ($c == 92)
                $i = $i + 1 | 0;
            else if ($c == 91) {
                var$7 = $i + 1 | 0;
                $j = var$7;
                b: {
                    while (true) {
                        if ($j >= $text.$length())
                            break b;
                        if ($text.$charAt($j) == 93)
                            break;
                        $j = $j + 1 | 0;
                    }
                    $handler.$get36(var$7, $j);
                }
            } else if ($c == 123) {
                var$9 = $i + 1 | 0;
                $j = var$9;
                while ($j < $text.$length()) {
                    if ($text.$charAt($j) == 125) {
                        $handler.$get36(var$9, $j);
                        break a;
                    }
                    $j = $j + 1 | 0;
                }
            }
        }
        $i = $i + 1 | 0;
    }
}
function iaat_Parser_stripTokens($label) {
    var $offset;
    iaat_Parser_baseParse($label, iaat_Parser$stripTokens$lambda$_6_0__init_());
    $offset = $rt_createIntArray(1);
    $offset.data[0] = 0;
    iaat_Parser_parseAllTokens($label, 1, iaat_Parser$stripTokens$lambda$_6_1__init_($offset));
}
function iaat_Parser_getResetReplacement() {
    var $tokens, $sb, var$3, $token;
    $tokens = iaac_Array__init_0();
    iaat_TypingConfig_$callClinit();
    iaat_TypingConfig_EFFECTS.$keys().$toArray0($tokens);
    $tokens.$replace1(iaat_Parser$getResetReplacement$lambda$_7_0__init_());
    $tokens.$add1($rt_s(512));
    $tokens.$add1($rt_s(620));
    $sb = jl_StringBuilder__init_();
    var$3 = $tokens.$iterator();
    while (var$3.$hasNext()) {
        $token = var$3.$next0();
        $sb.$append($rt_s(25)).$append($token).$append0(125);
    }
    return $sb.$toString();
}
function iaat_Parser_lambda$getResetReplacement$5($m) {
    return jl_StringBuilder__init_().$append($rt_s(556)).$append($m).$toString();
}
function iaat_Parser_lambda$stripTokens$4($offset, $from, $to) {
    var var$4;
    var$4 = $offset.data;
    var$4[0] = var$4[0] - 2 | 0;
}
function iaat_Parser_lambda$stripTokens$3($text, $index) {
    return $rt_s(58);
}
function iaat_Parser_lambda$parseRegularTokens$2($label, $text, $index) {
    var $floatValue, $stringValue, $effect, $indexOffset, $tokenCategory, $tmpToken, var$10, $entry;
    $floatValue = 0.0;
    $stringValue = null;
    $effect = null;
    $indexOffset = 0;
    iaat_TokenCategory_$callClinit();
    $tokenCategory = iaat_TokenCategory_EVENT;
    $tmpToken = iaat_InternalToken_fromName($text);
    if ($tmpToken !== null)
        $tokenCategory = $tmpToken.$category1;
    else {
        iaat_TypingConfig_$callClinit();
        if (iaat_TypingConfig_EFFECTS.$containsKey($text))
            $tokenCategory = iaat_TokenCategory_EFFECT_START;
        else if (!$text.$isEmpty() && iaat_TypingConfig_EFFECTS.$containsKey($text.$substring(1)))
            $tokenCategory = iaat_TokenCategory_EFFECT_END;
    }
    a: {
        iaat_Parser$1_$callClinit();
        switch (iaat_Parser$1_$SwitchMap$io$anuke$arc$typelabel$TokenCategory.data[jl_Enum_ordinal($tokenCategory)]) {
            case 1:
                iaat_TypingConfig_$callClinit();
                $floatValue = iaat_TypingConfig_DEFAULT_WAIT_VALUE;
                break a;
            case 2:
                $indexOffset = (-1);
                $stringValue = $text;
                break a;
            case 3:
                b: {
                    var$10 = (-1);
                    switch ($text.$hashCode()) {
                        case -1281671671:
                            if (!$text.$equals($rt_s(984)))
                                break b;
                            var$10 = 4;
                            break b;
                        case -1039745817:
                            if (!$text.$equals($rt_s(620)))
                                break b;
                            var$10 = 2;
                            break b;
                        case -899450258:
                            if (!$text.$equals($rt_s(985)))
                                break b;
                            var$10 = 0;
                            break b;
                        case 3135580:
                            if (!$text.$equals($rt_s(986)))
                                break b;
                            var$10 = 3;
                            break b;
                        case 3533313:
                            if (!$text.$equals($rt_s(987)))
                                break b;
                            var$10 = 1;
                            break b;
                        default:
                    }
                }
                c: {
                    switch (var$10) {
                        case 0:
                            iaat_TypingConfig_$callClinit();
                            $floatValue = iaat_TypingConfig_DEFAULT_SPEED_PER_CHAR / 0.5;
                            break c;
                        case 1:
                            iaat_TypingConfig_$callClinit();
                            $floatValue = iaat_TypingConfig_DEFAULT_SPEED_PER_CHAR / 0.6669999957084656;
                            break c;
                        case 2:
                            iaat_TypingConfig_$callClinit();
                            $floatValue = iaat_TypingConfig_DEFAULT_SPEED_PER_CHAR;
                            break c;
                        case 3:
                            iaat_TypingConfig_$callClinit();
                            $floatValue = iaat_TypingConfig_DEFAULT_SPEED_PER_CHAR / 2.0;
                            break c;
                        case 4:
                            iaat_TypingConfig_$callClinit();
                            $floatValue = iaat_TypingConfig_DEFAULT_SPEED_PER_CHAR / 4.0;
                            break c;
                        default:
                    }
                }
                break a;
            case 4:
                iaat_TypingConfig_$callClinit();
                $effect = iaat_TypingConfig_EFFECTS.$get9($text).$get9($label);
                $effect.$endToken = jl_StringBuilder__init_().$append($rt_s(556)).$append($text).$toString();
                break a;
            case 5:
                break;
            default:
        }
    }
    $entry = iaat_TokenEntry__init_($text, $tokenCategory, ($index + $indexOffset | 0) - 1 | 0, $floatValue, $stringValue);
    $entry.$effect3 = $effect;
    $label.$tokenEntries.$add1($entry);
    return jl_StringBuilder__init_().$append($rt_s(25)).$append($text).$append($rt_s(26)).$toString();
}
function iaat_Parser_lambda$parseReplacements$1($label, $text, $index) {
    var $replacement, $varname;
    $replacement = null;
    if (!$text.$isEmpty() && $text.$charAt(1) == 36) {
        $varname = $text.$substring(1);
        if ($label.$getTypingListener() !== null)
            $replacement = $label.$getTypingListener().$replaceVariable($varname);
        if ($replacement === null)
            $replacement = $label.$getVariables().$get9($varname);
        if ($replacement === null) {
            iaat_TypingConfig_$callClinit();
            $replacement = iaat_TypingConfig_GLOBAL_VARS.$get9($varname);
        }
    } else if ($text.$equals($rt_s(988)))
        $replacement = jl_StringBuilder__init_().$append($rt_s(989)).$append($label.$getClearColor().$toString()).$append($rt_s(56)).$toString();
    else if ($text.$equals($rt_s(990)))
        $replacement = jl_StringBuilder__init_().$append(iaat_Parser_RESET_REPLACEMENT).$append($label.$getDefaultToken()).$toString();
    return $replacement;
}
function iaat_Parser_lambda$baseParse$0($text, $replacer, $afterIndex, $result, $lastIndex, $from, $to) {
    var var$8, var$9, $replacement, var$11;
    var$8 = $from - 1 | 0;
    if ($text.$charAt(var$8) == 123) {
        var$9 = $afterIndex.data;
        $replacement = $replacer.$handle1($text.$substring0($from, $to), $from + var$9[0] | 0);
    } else
        $replacement = jl_StringBuilder__init_().$append($rt_s(762)).$append($text.$substring0($from, $to)).$append($rt_s(56)).$toString();
    var$11 = $lastIndex.data;
    var$9 = $afterIndex.data;
    var$9[0] = var$9[0] - (($to - $from | 0) + 2 | 0) | 0;
    $result.$append15($text.$subSequence(var$11[0], var$8));
    if ($replacement !== null)
        $result.$append($replacement);
    else
        $result.$append($rt_s(25)).$append15($text.$subSequence($from, $to)).$append($rt_s(26));
    var$11[0] = $to + 1 | 0;
}
function it_Fx$lambda$static$4$lambda$_27_0() {
    jl_Object.call(this);
    this.$_062 = null;
}
function it_Fx$lambda$static$4$lambda$_27_0__init_(var_0) {
    var var_1 = new it_Fx$lambda$static$4$lambda$_27_0();
    it_Fx$lambda$static$4$lambda$_27_0__init_0(var_1, var_0);
    return var_1;
}
function it_Fx$lambda$static$4$lambda$_27_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_062 = var$1;
}
function it_Fx$lambda$static$4$lambda$_27_0_get(var$0, var$1, var$2) {
    it_Fx_lambda$null$3(var$0.$_062, var$1, var$2);
}
function iaamg_Vector() {
}
function ju_RandomAccess() {
}
function it_Phases$3$lambda$null$1$lambda$_31_0() {
    jl_Object.call(this);
}
function it_Phases$3$lambda$null$1$lambda$_31_0__init_() {
    var var_0 = new it_Phases$3$lambda$null$1$lambda$_31_0();
    it_Phases$3$lambda$null$1$lambda$_31_0__init_0(var_0);
    return var_0;
}
function it_Phases$3$lambda$null$1$lambda$_31_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$3$lambda$null$1$lambda$_31_0_move(var$0, var$1) {
    return it_Phases$3_lambda$null$0(var$1);
}
function iaagg_GLFrameBuffer() {
    var a = this; jl_Object.call(a);
    a.$textureAttachments = null;
    a.$framebufferHandle = 0;
    a.$depthbufferHandle = 0;
    a.$stencilbufferHandle = 0;
    a.$depthStencilPackedBufferHandle = 0;
    a.$hasDepthStencilPackedBuffer = 0;
    a.$isMRT = 0;
    a.$bufferBuilder = null;
}
var iaagg_GLFrameBuffer_buffers = null;
var iaagg_GLFrameBuffer_defaultFramebufferHandle = 0;
var iaagg_GLFrameBuffer_defaultFramebufferHandleInitialized = 0;
function iaagg_GLFrameBuffer_$callClinit() {
    iaagg_GLFrameBuffer_$callClinit = $rt_eraseClinit(iaagg_GLFrameBuffer);
    iaagg_GLFrameBuffer__clinit_();
}
function iaagg_GLFrameBuffer__init_() {
    var var_0 = new iaagg_GLFrameBuffer();
    iaagg_GLFrameBuffer__init_0(var_0);
    return var_0;
}
function iaagg_GLFrameBuffer__init_0($this) {
    iaagg_GLFrameBuffer_$callClinit();
    jl_Object__init_0($this);
    $this.$textureAttachments = iaac_Array__init_0();
}
function iaagg_GLFrameBuffer_unbind() {
    iaagg_GLFrameBuffer_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_gl20.$glBindFramebuffer(36160, iaagg_GLFrameBuffer_defaultFramebufferHandle);
}
function iaagg_GLFrameBuffer_addManagedFrameBuffer($app, $frameBuffer) {
    var $managedResources;
    iaagg_GLFrameBuffer_$callClinit();
    $managedResources = iaagg_GLFrameBuffer_buffers.$get9($app);
    if ($managedResources === null)
        $managedResources = iaac_Array__init_0();
    $managedResources.$add1($frameBuffer);
    iaagg_GLFrameBuffer_buffers.$put($app, $managedResources);
}
function iaagg_GLFrameBuffer_getTexture($this) {
    return $this.$textureAttachments.$first0();
}
function iaagg_GLFrameBuffer_build($this) {
    var $gl, var$2, $intbuf, $width, $height, $colorTextureCounter, $texture, $attachmentSpec, var$9, var$10, var$11, var$12, $buffer, $i, $result;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    iaagg_GLFrameBuffer_checkValidBuilder($this);
    if (!iaagg_GLFrameBuffer_defaultFramebufferHandleInitialized) {
        iaagg_GLFrameBuffer_defaultFramebufferHandleInitialized = 1;
        var$2 = iaa_Core_app.$getType0();
        iaa_Application$ApplicationType_$callClinit();
        if (var$2 !== iaa_Application$ApplicationType_iOS)
            iaagg_GLFrameBuffer_defaultFramebufferHandle = 0;
        else {
            $intbuf = jn_ByteBuffer_order(jn_ByteBuffer_allocateDirect(64), jn_ByteOrder_nativeOrder()).$asIntBuffer();
            $gl.$glGetIntegerv(36006, $intbuf);
            iaagg_GLFrameBuffer_defaultFramebufferHandle = $intbuf.$get29(0);
        }
    }
    $this.$framebufferHandle = $gl.$glGenFramebuffer();
    $gl.$glBindFramebuffer(36160, $this.$framebufferHandle);
    $width = $this.$bufferBuilder.$width1;
    $height = $this.$bufferBuilder.$height1;
    if ($this.$bufferBuilder.$hasDepthRenderBuffer) {
        $this.$depthbufferHandle = $gl.$glGenRenderbuffer();
        $gl.$glBindRenderbuffer(36161, $this.$depthbufferHandle);
        $gl.$glRenderbufferStorage(36161, $this.$bufferBuilder.$depthRenderBufferSpec.$internalFormat0, $width, $height);
    }
    if ($this.$bufferBuilder.$hasStencilRenderBuffer) {
        $this.$stencilbufferHandle = $gl.$glGenRenderbuffer();
        $gl.$glBindRenderbuffer(36161, $this.$stencilbufferHandle);
        $gl.$glRenderbufferStorage(36161, $this.$bufferBuilder.$stencilRenderBufferSpec.$internalFormat0, $width, $height);
    }
    if ($this.$bufferBuilder.$hasPackedStencilDepthRenderBuffer) {
        $this.$depthStencilPackedBufferHandle = $gl.$glGenRenderbuffer();
        $gl.$glBindRenderbuffer(36161, $this.$depthStencilPackedBufferHandle);
        $gl.$glRenderbufferStorage(36161, $this.$bufferBuilder.$packedStencilDepthRenderBufferSpec.$internalFormat0, $width, $height);
    }
    $this.$isMRT = $this.$bufferBuilder.$textureAttachmentSpecs.$size <= 1 ? 0 : 1;
    $colorTextureCounter = 0;
    if (!$this.$isMRT) {
        $texture = $this.$createTexture($this.$bufferBuilder.$textureAttachmentSpecs.$first0());
        $this.$textureAttachments.$add1($texture);
        $gl.$glBindTexture($texture.$glTarget, $texture.$getTextureObjectHandle());
    } else {
        var$2 = $this.$bufferBuilder.$textureAttachmentSpecs.$iterator();
        while (var$2.$hasNext()) {
            $attachmentSpec = var$2.$next0();
            $texture = $this.$createTexture($attachmentSpec);
            $this.$textureAttachments.$add1($texture);
            if ($attachmentSpec.$isColorTexture()) {
                var$9 = 36064 + $colorTextureCounter | 0;
                var$10 = $texture.$getTextureObjectHandle();
                $gl.$glFramebufferTexture2D(36160, var$9, 3553, var$10, 0);
                $colorTextureCounter = $colorTextureCounter + 1 | 0;
            } else if ($attachmentSpec.$isDepth) {
                var$11 = $texture.$getTextureObjectHandle();
                $gl.$glFramebufferTexture2D(36160, 36096, 3553, var$11, 0);
            } else if ($attachmentSpec.$isStencil) {
                var$12 = $texture.$getTextureObjectHandle();
                $gl.$glFramebufferTexture2D(36160, 36128, 3553, var$12, 0);
            }
        }
    }
    if (!$this.$isMRT)
        $this.$attachFrameBufferColorTexture($this.$textureAttachments.$first0());
    else {
        $buffer = iaau_BufferUtils_newIntBuffer($colorTextureCounter);
        $i = 0;
        while ($i < $colorTextureCounter) {
            $buffer.$put10(36064 + $i | 0);
            $i = $i + 1 | 0;
        }
        $buffer.$position(0);
        iaa_Core_gl30.$glDrawBuffers($colorTextureCounter, $buffer);
    }
    if ($this.$bufferBuilder.$hasDepthRenderBuffer)
        $gl.$glFramebufferRenderbuffer(36160, 36096, 36161, $this.$depthbufferHandle);
    if ($this.$bufferBuilder.$hasStencilRenderBuffer)
        $gl.$glFramebufferRenderbuffer(36160, 36128, 36161, $this.$stencilbufferHandle);
    if ($this.$bufferBuilder.$hasPackedStencilDepthRenderBuffer)
        $gl.$glFramebufferRenderbuffer(36160, 33306, 36161, $this.$depthStencilPackedBufferHandle);
    $gl.$glBindRenderbuffer(36161, 0);
    var$2 = $this.$textureAttachments.$iterator();
    while (var$2.$hasNext()) {
        $texture = var$2.$next0();
        $gl.$glBindTexture($texture.$glTarget, 0);
    }
    a: {
        $result = $gl.$glCheckFramebufferStatus(36160);
        if ($result == 36061 && $this.$bufferBuilder.$hasDepthRenderBuffer && $this.$bufferBuilder.$hasStencilRenderBuffer) {
            var$2 = iaa_Core_graphics;
            if (!var$2.$supportsExtension($rt_s(991))) {
                var$2 = iaa_Core_graphics;
                if (!var$2.$supportsExtension($rt_s(992)))
                    break a;
            }
            if ($this.$bufferBuilder.$hasDepthRenderBuffer) {
                $gl.$glDeleteRenderbuffer($this.$depthbufferHandle);
                $this.$depthbufferHandle = 0;
            }
            if ($this.$bufferBuilder.$hasStencilRenderBuffer) {
                $gl.$glDeleteRenderbuffer($this.$stencilbufferHandle);
                $this.$stencilbufferHandle = 0;
            }
            if ($this.$bufferBuilder.$hasPackedStencilDepthRenderBuffer) {
                $gl.$glDeleteRenderbuffer($this.$depthStencilPackedBufferHandle);
                $this.$depthStencilPackedBufferHandle = 0;
            }
            $this.$depthStencilPackedBufferHandle = $gl.$glGenRenderbuffer();
            $this.$hasDepthStencilPackedBuffer = 1;
            $gl.$glBindRenderbuffer(36161, $this.$depthStencilPackedBufferHandle);
            $gl.$glRenderbufferStorage(36161, 35056, $width, $height);
            $gl.$glBindRenderbuffer(36161, 0);
            $gl.$glFramebufferRenderbuffer(36160, 36096, 36161, $this.$depthStencilPackedBufferHandle);
            $gl.$glFramebufferRenderbuffer(36160, 36128, 36161, $this.$depthStencilPackedBufferHandle);
            $result = $gl.$glCheckFramebufferStatus(36160);
        }
    }
    $gl.$glBindFramebuffer(36160, iaagg_GLFrameBuffer_defaultFramebufferHandle);
    if ($result == 36053) {
        iaagg_GLFrameBuffer_addManagedFrameBuffer(iaa_Core_app, $this);
        return;
    }
    var$2 = $this.$textureAttachments.$iterator();
    while (var$2.$hasNext()) {
        $texture = var$2.$next0();
        $this.$disposeColorTexture($texture);
    }
    if ($this.$hasDepthStencilPackedBuffer)
        $gl.$glDeleteBuffer($this.$depthStencilPackedBufferHandle);
    else {
        if ($this.$bufferBuilder.$hasDepthRenderBuffer)
            $gl.$glDeleteRenderbuffer($this.$depthbufferHandle);
        if ($this.$bufferBuilder.$hasStencilRenderBuffer)
            $gl.$glDeleteRenderbuffer($this.$stencilbufferHandle);
    }
    $gl.$glDeleteFramebuffer($this.$framebufferHandle);
    if ($result == 36054)
        $rt_throw(jl_IllegalStateException__init_($rt_s(993)));
    if ($result == 36057)
        $rt_throw(jl_IllegalStateException__init_($rt_s(994)));
    if ($result == 36055)
        $rt_throw(jl_IllegalStateException__init_($rt_s(995)));
    if ($result == 36061)
        $rt_throw(jl_IllegalStateException__init_($rt_s(996)));
    $rt_throw(jl_IllegalStateException__init_(jl_StringBuilder__init_().$append($rt_s(997)).$append3($result).$toString()));
}
function iaagg_GLFrameBuffer_checkValidBuilder($this) {
    var $runningGL30, var$2, $spec;
    a: {
        iaa_Core_$callClinit();
        $runningGL30 = iaa_Core_graphics.$isGL30Available();
        if (!$runningGL30) {
            if ($this.$bufferBuilder.$hasPackedStencilDepthRenderBuffer)
                $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(998)));
            if ($this.$bufferBuilder.$textureAttachmentSpecs.$size > 1)
                $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(999)));
            var$2 = $this.$bufferBuilder.$textureAttachmentSpecs.$iterator();
            while (true) {
                if (!var$2.$hasNext())
                    break a;
                $spec = var$2.$next0();
                if ($spec.$isDepth)
                    $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1000)));
                if ($spec.$isStencil)
                    $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1001)));
                if ($spec.$isFloat && !iaa_Core_graphics.$supportsExtension($rt_s(1002)))
                    $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1003)));
            }
        }
    }
}
function iaagg_GLFrameBuffer_dispose($this) {
    var $gl, var$2, $texture;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    var$2 = $this.$textureAttachments.$iterator();
    while (var$2.$hasNext()) {
        $texture = var$2.$next0();
        $this.$disposeColorTexture($texture);
    }
    if ($this.$hasDepthStencilPackedBuffer)
        $gl.$glDeleteRenderbuffer($this.$depthStencilPackedBufferHandle);
    else {
        if ($this.$bufferBuilder.$hasDepthRenderBuffer)
            $gl.$glDeleteRenderbuffer($this.$depthbufferHandle);
        if ($this.$bufferBuilder.$hasStencilRenderBuffer)
            $gl.$glDeleteRenderbuffer($this.$stencilbufferHandle);
    }
    $gl.$glDeleteFramebuffer($this.$framebufferHandle);
    if (iaagg_GLFrameBuffer_buffers.$get9(iaa_Core_app) !== null)
        iaagg_GLFrameBuffer_buffers.$get9(iaa_Core_app).$removeValue($this, 1);
}
function iaagg_GLFrameBuffer_bind($this) {
    iaa_Core_$callClinit();
    iaa_Core_gl20.$glBindFramebuffer(36160, $this.$framebufferHandle);
}
function iaagg_GLFrameBuffer_beginDraw($this, $clearColor) {
    iaagg_Draw_flush();
    $this.$begin();
    iaa_Core_$callClinit();
    iaa_Core_graphics.$clear10($clearColor);
}
function iaagg_GLFrameBuffer_endDraw($this) {
    iaagg_Draw_flush();
    $this.$end();
}
function iaagg_GLFrameBuffer_begin($this) {
    $this.$bind();
    $this.$setFrameBufferViewport();
}
function iaagg_GLFrameBuffer_setFrameBufferViewport($this) {
    iaa_Core_$callClinit();
    iaa_Core_gl20.$glViewport(0, 0, $this.$bufferBuilder.$width1, $this.$bufferBuilder.$height1);
}
function iaagg_GLFrameBuffer_end($this) {
    iaa_Core_$callClinit();
    $this.$end5(0, 0, iaa_Core_graphics.$getBackBufferWidth(), iaa_Core_graphics.$getBackBufferHeight());
}
function iaagg_GLFrameBuffer_end0($this, $x, $y, $width, $height) {
    iaagg_GLFrameBuffer_unbind();
    iaa_Core_$callClinit();
    iaa_Core_gl20.$glViewport($x, $y, $width, $height);
}
function iaagg_GLFrameBuffer_getHeight($this) {
    return $this.$bufferBuilder.$height1;
}
function iaagg_GLFrameBuffer_getWidth($this) {
    return $this.$bufferBuilder.$width1;
}
function iaagg_GLFrameBuffer__clinit_() {
    iaagg_GLFrameBuffer_buffers = ju_HashMap__init_();
    iaagg_GLFrameBuffer_defaultFramebufferHandleInitialized = 0;
}
function it_Phases$lambda$null$28$lambda$_39_0() {
    jl_Object.call(this);
    this.$_063 = null;
}
function it_Phases$lambda$null$28$lambda$_39_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$null$28$lambda$_39_0();
    it_Phases$lambda$null$28$lambda$_39_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$null$28$lambda$_39_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_063 = var$1;
}
function it_Phases$lambda$null$28$lambda$_39_0_get(var$0, var$1) {
    var$0.$_063.$shootf(var$1);
}
function iaam_Interpolation$Exp() {
    var a = this; iaam_Interpolation.call(a);
    a.$value4 = 0.0;
    a.$power1 = 0.0;
    a.$min4 = 0.0;
    a.$scale3 = 0.0;
}
function iaam_Interpolation$Exp__init_(var_0, var_1) {
    var var_2 = new iaam_Interpolation$Exp();
    iaam_Interpolation$Exp__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaam_Interpolation$Exp__init_0($this, $value, $power) {
    iaam_Interpolation__init_0($this);
    $this.$value4 = $value;
    $this.$power1 = $power;
    $this.$min4 = jl_Math_pow($value,  -$power);
    $this.$scale3 = 1.0 / (1.0 - $this.$min4);
}
function iaam_Interpolation$ExpIn() {
    iaam_Interpolation$Exp.call(this);
}
function iaam_Interpolation$ExpIn__init_(var_0, var_1) {
    var var_2 = new iaam_Interpolation$ExpIn();
    iaam_Interpolation$ExpIn__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaam_Interpolation$ExpIn__init_0($this, $value, $power) {
    iaam_Interpolation$Exp__init_0($this, $value, $power);
}
function iaam_Interpolation$ExpIn_apply($this, $a) {
    return (jl_Math_pow($this.$value4, $this.$power1 * ($a - 1.0)) - $this.$min4) * $this.$scale3;
}
function iaa_ApplicationCore() {
    jl_Object.call(this);
    this.$modules = null;
}
function iaa_ApplicationCore__init_() {
    var var_0 = new iaa_ApplicationCore();
    iaa_ApplicationCore__init_0(var_0);
    return var_0;
}
function iaa_ApplicationCore__init_0($this) {
    jl_Object__init_0($this);
    $this.$modules = $rt_createArray(iaa_ApplicationListener, 0);
}
function iaa_ApplicationCore_add($this, $module) {
    var $news, var$3;
    $news = $rt_createArray(iaa_ApplicationListener, $this.$modules.data.length + 1 | 0);
    var$3 = $news.data;
    var$3[var$3.length - 1 | 0] = $module;
    jl_System_arraycopy($this.$modules, 0, $news, 0, $this.$modules.data.length);
    $this.$modules = $news;
}
function iaa_ApplicationCore_init($this) {
    var var$1, var$2, var$3, $listener;
    $this.$setup();
    var$1 = $this.$modules.data;
    var$2 = var$1.length;
    var$3 = 0;
    while (var$3 < var$2) {
        $listener = var$1[var$3];
        $listener.$init0();
        var$3 = var$3 + 1 | 0;
    }
}
function iaa_ApplicationCore_resize($this, $width, $height) {
    var var$3, var$4, var$5, $listener;
    var$3 = $this.$modules.data;
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $listener = var$3[var$5];
        $listener.$resize1($width, $height);
        var$5 = var$5 + 1 | 0;
    }
}
function iaa_ApplicationCore_update($this) {
    var var$1, var$2, var$3, $listener;
    var$1 = $this.$modules.data;
    var$2 = var$1.length;
    var$3 = 0;
    while (var$3 < var$2) {
        $listener = var$1[var$3];
        $listener.$update1();
        var$3 = var$3 + 1 | 0;
    }
}
function jl_NegativeArraySizeException() {
    jl_RuntimeException.call(this);
}
function jl_NegativeArraySizeException__init_() {
    var var_0 = new jl_NegativeArraySizeException();
    jl_NegativeArraySizeException__init_0(var_0);
    return var_0;
}
function jl_NegativeArraySizeException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function iaam_MapLayer() {
    var a = this; jl_Object.call(a);
    a.$name8 = null;
    a.$opacity = 0.0;
    a.$visible1 = 0;
    a.$offsetX1 = 0.0;
    a.$offsetY1 = 0.0;
    a.$renderOffsetDirty = 0;
    a.$objects0 = null;
    a.$properties0 = null;
}
function iaam_MapLayer__init_() {
    var var_0 = new iaam_MapLayer();
    iaam_MapLayer__init_0(var_0);
    return var_0;
}
function iaam_MapLayer__init_0($this) {
    jl_Object__init_0($this);
    $this.$name8 = $rt_s(58);
    $this.$opacity = 1.0;
    $this.$visible1 = 1;
    $this.$renderOffsetDirty = 1;
    $this.$objects0 = iaac_Array__init_0();
    $this.$properties0 = iaam_MapProperties__init_();
}
function iaam_MapLayer_setOffsetX($this, $offsetX) {
    $this.$offsetX1 = $offsetX;
    $this.$invalidateRenderOffset();
}
function iaam_MapLayer_setOffsetY($this, $offsetY) {
    $this.$offsetY1 = $offsetY;
    $this.$invalidateRenderOffset();
}
function iaam_MapLayer_invalidateRenderOffset($this) {
    $this.$renderOffsetDirty = 1;
}
function it_Phases$4$update$lambda$_1_0() {
    var a = this; jl_Object.call(a);
    a.$_064 = 0.0;
    a.$_123 = 0.0;
}
function it_Phases$4$update$lambda$_1_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$4$update$lambda$_1_0();
    it_Phases$4$update$lambda$_1_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$4$update$lambda$_1_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_064 = var$1;
    var$0.$_123 = var$2;
}
function it_Phases$4$update$lambda$_1_0_get(var$0, var$1, var$2) {
    it_Phases$4_lambda$update$13(var$0.$_064, var$0.$_123, var$1, var$2);
}
function it_Bullets$9$lambda$hit$2$lambda$_12_0() {
    var a = this; jl_Object.call(a);
    a.$_065 = 0;
    a.$_124 = null;
}
function it_Bullets$9$lambda$hit$2$lambda$_12_0__init_(var_0, var_1) {
    var var_2 = new it_Bullets$9$lambda$hit$2$lambda$_12_0();
    it_Bullets$9$lambda$hit$2$lambda$_12_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Bullets$9$lambda$hit$2$lambda$_12_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_065 = var$1;
    var$0.$_124 = var$2;
}
function it_Bullets$9$lambda$hit$2$lambda$_12_0_run(var$0) {
    it_Bullets$9_lambda$null$1(var$0.$_065, var$0.$_124);
}
function ji_File() {
    jl_Object.call(this);
}
function iaaus_Base64Coder$CharMap() {
    var a = this; jl_Object.call(a);
    a.$encodingMap = null;
    a.$decodingMap = null;
}
function iaaus_Base64Coder$CharMap__init_(var_0, var_1) {
    var var_2 = new iaaus_Base64Coder$CharMap();
    iaaus_Base64Coder$CharMap__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaaus_Base64Coder$CharMap__init_0($this, $char63, $char64) {
    var $i, $c, var$5, var$6;
    jl_Object__init_0($this);
    $this.$encodingMap = $rt_createCharArray(64);
    $this.$decodingMap = $rt_createByteArray(128);
    $i = 0;
    $c = 65;
    while ($c <= 90) {
        var$5 = $this.$encodingMap.data;
        var$6 = $i + 1 | 0;
        var$5[$i] = $c;
        $c = ($c + 1 | 0) & 65535;
        $i = var$6;
    }
    $c = 97;
    while ($c <= 122) {
        var$5 = $this.$encodingMap.data;
        var$6 = $i + 1 | 0;
        var$5[$i] = $c;
        $c = ($c + 1 | 0) & 65535;
        $i = var$6;
    }
    $c = 48;
    while ($c <= 57) {
        var$5 = $this.$encodingMap.data;
        var$6 = $i + 1 | 0;
        var$5[$i] = $c;
        $c = ($c + 1 | 0) & 65535;
        $i = var$6;
    }
    var$5 = $this.$encodingMap.data;
    var$6 = $i + 1 | 0;
    var$5[$i] = $char63;
    $this.$encodingMap.data[var$6] = $char64;
    var$6 = 0;
    while (var$6 < $this.$decodingMap.data.length) {
        $this.$decodingMap.data[var$6] = (-1);
        var$6 = var$6 + 1 | 0;
    }
    var$6 = 0;
    while (var$6 < 64) {
        $this.$decodingMap.data[$this.$encodingMap.data[var$6]] = var$6 << 24 >> 24;
        var$6 = var$6 + 1 | 0;
    }
}
function iaaun_Simplex() {
    jl_Object.call(this);
    this.$perm = null;
}
var iaaun_Simplex_grad3 = null;
var iaaun_Simplex_grad4 = null;
var iaaun_Simplex_simplex = null;
function iaaun_Simplex_$callClinit() {
    iaaun_Simplex_$callClinit = $rt_eraseClinit(iaaun_Simplex);
    iaaun_Simplex__clinit_();
}
function iaaun_Simplex__init_(var_0) {
    var var_1 = new iaaun_Simplex();
    iaaun_Simplex__init_0(var_1, var_0);
    return var_1;
}
function iaaun_Simplex__init_0($this, $seed) {
    var var$2, var$3;
    iaaun_Simplex_$callClinit();
    jl_Object__init_0($this);
    var$2 = $rt_createIntArray(512);
    var$3 = var$2.data;
    var$3[0] = 151;
    var$3[1] = 160;
    var$3[2] = 137;
    var$3[3] = 91;
    var$3[4] = 90;
    var$3[5] = 15;
    var$3[6] = 131;
    var$3[7] = 13;
    var$3[8] = 201;
    var$3[9] = 95;
    var$3[10] = 96;
    var$3[11] = 53;
    var$3[12] = 194;
    var$3[13] = 233;
    var$3[14] = 7;
    var$3[15] = 225;
    var$3[16] = 140;
    var$3[17] = 36;
    var$3[18] = 103;
    var$3[19] = 30;
    var$3[20] = 69;
    var$3[21] = 142;
    var$3[22] = 8;
    var$3[23] = 99;
    var$3[24] = 37;
    var$3[25] = 240;
    var$3[26] = 21;
    var$3[27] = 10;
    var$3[28] = 23;
    var$3[29] = 190;
    var$3[30] = 6;
    var$3[31] = 148;
    var$3[32] = 247;
    var$3[33] = 120;
    var$3[34] = 234;
    var$3[35] = 75;
    var$3[36] = 0;
    var$3[37] = 26;
    var$3[38] = 197;
    var$3[39] = 62;
    var$3[40] = 94;
    var$3[41] = 252;
    var$3[42] = 219;
    var$3[43] = 203;
    var$3[44] = 117;
    var$3[45] = 35;
    var$3[46] = 11;
    var$3[47] = 32;
    var$3[48] = 57;
    var$3[49] = 177;
    var$3[50] = 33;
    var$3[51] = 88;
    var$3[52] = 237;
    var$3[53] = 149;
    var$3[54] = 56;
    var$3[55] = 87;
    var$3[56] = 174;
    var$3[57] = 20;
    var$3[58] = 125;
    var$3[59] = 136;
    var$3[60] = 171;
    var$3[61] = 168;
    var$3[62] = 68;
    var$3[63] = 175;
    var$3[64] = 74;
    var$3[65] = 165;
    var$3[66] = 71;
    var$3[67] = 134;
    var$3[68] = 139;
    var$3[69] = 48;
    var$3[70] = 27;
    var$3[71] = 166;
    var$3[72] = 77;
    var$3[73] = 146;
    var$3[74] = 158;
    var$3[75] = 231;
    var$3[76] = 83;
    var$3[77] = 111;
    var$3[78] = 229;
    var$3[79] = 122;
    var$3[80] = 60;
    var$3[81] = 211;
    var$3[82] = 133;
    var$3[83] = 230;
    var$3[84] = 220;
    var$3[85] = 105;
    var$3[86] = 92;
    var$3[87] = 41;
    var$3[88] = 55;
    var$3[89] = 46;
    var$3[90] = 245;
    var$3[91] = 40;
    var$3[92] = 244;
    var$3[93] = 102;
    var$3[94] = 143;
    var$3[95] = 54;
    var$3[96] = 65;
    var$3[97] = 25;
    var$3[98] = 63;
    var$3[99] = 161;
    var$3[100] = 1;
    var$3[101] = 216;
    var$3[102] = 80;
    var$3[103] = 73;
    var$3[104] = 209;
    var$3[105] = 76;
    var$3[106] = 132;
    var$3[107] = 187;
    var$3[108] = 208;
    var$3[109] = 89;
    var$3[110] = 18;
    var$3[111] = 169;
    var$3[112] = 200;
    var$3[113] = 196;
    var$3[114] = 135;
    var$3[115] = 130;
    var$3[116] = 116;
    var$3[117] = 188;
    var$3[118] = 159;
    var$3[119] = 86;
    var$3[120] = 164;
    var$3[121] = 100;
    var$3[122] = 109;
    var$3[123] = 198;
    var$3[124] = 173;
    var$3[125] = 186;
    var$3[126] = 3;
    var$3[127] = 64;
    var$3[128] = 52;
    var$3[129] = 217;
    var$3[130] = 226;
    var$3[131] = 250;
    var$3[132] = 124;
    var$3[133] = 123;
    var$3[134] = 5;
    var$3[135] = 202;
    var$3[136] = 38;
    var$3[137] = 147;
    var$3[138] = 118;
    var$3[139] = 126;
    var$3[140] = 255;
    var$3[141] = 82;
    var$3[142] = 85;
    var$3[143] = 212;
    var$3[144] = 207;
    var$3[145] = 206;
    var$3[146] = 59;
    var$3[147] = 227;
    var$3[148] = 47;
    var$3[149] = 16;
    var$3[150] = 58;
    var$3[151] = 17;
    var$3[152] = 182;
    var$3[153] = 189;
    var$3[154] = 28;
    var$3[155] = 42;
    var$3[156] = 223;
    var$3[157] = 183;
    var$3[158] = 170;
    var$3[159] = 213;
    var$3[160] = 119;
    var$3[161] = 248;
    var$3[162] = 152;
    var$3[163] = 2;
    var$3[164] = 44;
    var$3[165] = 154;
    var$3[166] = 163;
    var$3[167] = 70;
    var$3[168] = 221;
    var$3[169] = 153;
    var$3[170] = 101;
    var$3[171] = 155;
    var$3[172] = 167;
    var$3[173] = 43;
    var$3[174] = 172;
    var$3[175] = 9;
    var$3[176] = 129;
    var$3[177] = 22;
    var$3[178] = 39;
    var$3[179] = 253;
    var$3[180] = 19;
    var$3[181] = 98;
    var$3[182] = 108;
    var$3[183] = 110;
    var$3[184] = 79;
    var$3[185] = 113;
    var$3[186] = 224;
    var$3[187] = 232;
    var$3[188] = 178;
    var$3[189] = 185;
    var$3[190] = 112;
    var$3[191] = 104;
    var$3[192] = 218;
    var$3[193] = 246;
    var$3[194] = 97;
    var$3[195] = 228;
    var$3[196] = 251;
    var$3[197] = 34;
    var$3[198] = 242;
    var$3[199] = 193;
    var$3[200] = 238;
    var$3[201] = 210;
    var$3[202] = 144;
    var$3[203] = 12;
    var$3[204] = 191;
    var$3[205] = 179;
    var$3[206] = 162;
    var$3[207] = 241;
    var$3[208] = 81;
    var$3[209] = 51;
    var$3[210] = 145;
    var$3[211] = 235;
    var$3[212] = 249;
    var$3[213] = 14;
    var$3[214] = 239;
    var$3[215] = 107;
    var$3[216] = 49;
    var$3[217] = 192;
    var$3[218] = 214;
    var$3[219] = 31;
    var$3[220] = 181;
    var$3[221] = 199;
    var$3[222] = 106;
    var$3[223] = 157;
    var$3[224] = 184;
    var$3[225] = 84;
    var$3[226] = 204;
    var$3[227] = 176;
    var$3[228] = 115;
    var$3[229] = 121;
    var$3[230] = 50;
    var$3[231] = 45;
    var$3[232] = 127;
    var$3[233] = 4;
    var$3[234] = 150;
    var$3[235] = 254;
    var$3[236] = 138;
    var$3[237] = 236;
    var$3[238] = 205;
    var$3[239] = 93;
    var$3[240] = 222;
    var$3[241] = 114;
    var$3[242] = 67;
    var$3[243] = 29;
    var$3[244] = 24;
    var$3[245] = 72;
    var$3[246] = 243;
    var$3[247] = 141;
    var$3[248] = 128;
    var$3[249] = 195;
    var$3[250] = 78;
    var$3[251] = 66;
    var$3[252] = 215;
    var$3[253] = 61;
    var$3[254] = 156;
    var$3[255] = 180;
    var$3[256] = 151;
    var$3[257] = 160;
    var$3[258] = 137;
    var$3[259] = 91;
    var$3[260] = 90;
    var$3[261] = 15;
    var$3[262] = 131;
    var$3[263] = 13;
    var$3[264] = 201;
    var$3[265] = 95;
    var$3[266] = 96;
    var$3[267] = 53;
    var$3[268] = 194;
    var$3[269] = 233;
    var$3[270] = 7;
    var$3[271] = 225;
    var$3[272] = 140;
    var$3[273] = 36;
    var$3[274] = 103;
    var$3[275] = 30;
    var$3[276] = 69;
    var$3[277] = 142;
    var$3[278] = 8;
    var$3[279] = 99;
    var$3[280] = 37;
    var$3[281] = 240;
    var$3[282] = 21;
    var$3[283] = 10;
    var$3[284] = 23;
    var$3[285] = 190;
    var$3[286] = 6;
    var$3[287] = 148;
    var$3[288] = 247;
    var$3[289] = 120;
    var$3[290] = 234;
    var$3[291] = 75;
    var$3[292] = 0;
    var$3[293] = 26;
    var$3[294] = 197;
    var$3[295] = 62;
    var$3[296] = 94;
    var$3[297] = 252;
    var$3[298] = 219;
    var$3[299] = 203;
    var$3[300] = 117;
    var$3[301] = 35;
    var$3[302] = 11;
    var$3[303] = 32;
    var$3[304] = 57;
    var$3[305] = 177;
    var$3[306] = 33;
    var$3[307] = 88;
    var$3[308] = 237;
    var$3[309] = 149;
    var$3[310] = 56;
    var$3[311] = 87;
    var$3[312] = 174;
    var$3[313] = 20;
    var$3[314] = 125;
    var$3[315] = 136;
    var$3[316] = 171;
    var$3[317] = 168;
    var$3[318] = 68;
    var$3[319] = 175;
    var$3[320] = 74;
    var$3[321] = 165;
    var$3[322] = 71;
    var$3[323] = 134;
    var$3[324] = 139;
    var$3[325] = 48;
    var$3[326] = 27;
    var$3[327] = 166;
    var$3[328] = 77;
    var$3[329] = 146;
    var$3[330] = 158;
    var$3[331] = 231;
    var$3[332] = 83;
    var$3[333] = 111;
    var$3[334] = 229;
    var$3[335] = 122;
    var$3[336] = 60;
    var$3[337] = 211;
    var$3[338] = 133;
    var$3[339] = 230;
    var$3[340] = 220;
    var$3[341] = 105;
    var$3[342] = 92;
    var$3[343] = 41;
    var$3[344] = 55;
    var$3[345] = 46;
    var$3[346] = 245;
    var$3[347] = 40;
    var$3[348] = 244;
    var$3[349] = 102;
    var$3[350] = 143;
    var$3[351] = 54;
    var$3[352] = 65;
    var$3[353] = 25;
    var$3[354] = 63;
    var$3[355] = 161;
    var$3[356] = 1;
    var$3[357] = 216;
    var$3[358] = 80;
    var$3[359] = 73;
    var$3[360] = 209;
    var$3[361] = 76;
    var$3[362] = 132;
    var$3[363] = 187;
    var$3[364] = 208;
    var$3[365] = 89;
    var$3[366] = 18;
    var$3[367] = 169;
    var$3[368] = 200;
    var$3[369] = 196;
    var$3[370] = 135;
    var$3[371] = 130;
    var$3[372] = 116;
    var$3[373] = 188;
    var$3[374] = 159;
    var$3[375] = 86;
    var$3[376] = 164;
    var$3[377] = 100;
    var$3[378] = 109;
    var$3[379] = 198;
    var$3[380] = 173;
    var$3[381] = 186;
    var$3[382] = 3;
    var$3[383] = 64;
    var$3[384] = 52;
    var$3[385] = 217;
    var$3[386] = 226;
    var$3[387] = 250;
    var$3[388] = 124;
    var$3[389] = 123;
    var$3[390] = 5;
    var$3[391] = 202;
    var$3[392] = 38;
    var$3[393] = 147;
    var$3[394] = 118;
    var$3[395] = 126;
    var$3[396] = 255;
    var$3[397] = 82;
    var$3[398] = 85;
    var$3[399] = 212;
    var$3[400] = 207;
    var$3[401] = 206;
    var$3[402] = 59;
    var$3[403] = 227;
    var$3[404] = 47;
    var$3[405] = 16;
    var$3[406] = 58;
    var$3[407] = 17;
    var$3[408] = 182;
    var$3[409] = 189;
    var$3[410] = 28;
    var$3[411] = 42;
    var$3[412] = 223;
    var$3[413] = 183;
    var$3[414] = 170;
    var$3[415] = 213;
    var$3[416] = 119;
    var$3[417] = 248;
    var$3[418] = 152;
    var$3[419] = 2;
    var$3[420] = 44;
    var$3[421] = 154;
    var$3[422] = 163;
    var$3[423] = 70;
    var$3[424] = 221;
    var$3[425] = 153;
    var$3[426] = 101;
    var$3[427] = 155;
    var$3[428] = 167;
    var$3[429] = 43;
    var$3[430] = 172;
    var$3[431] = 9;
    var$3[432] = 129;
    var$3[433] = 22;
    var$3[434] = 39;
    var$3[435] = 253;
    var$3[436] = 19;
    var$3[437] = 98;
    var$3[438] = 108;
    var$3[439] = 110;
    var$3[440] = 79;
    var$3[441] = 113;
    var$3[442] = 224;
    var$3[443] = 232;
    var$3[444] = 178;
    var$3[445] = 185;
    var$3[446] = 112;
    var$3[447] = 104;
    var$3[448] = 218;
    var$3[449] = 246;
    var$3[450] = 97;
    var$3[451] = 228;
    var$3[452] = 251;
    var$3[453] = 34;
    var$3[454] = 242;
    var$3[455] = 193;
    var$3[456] = 238;
    var$3[457] = 210;
    var$3[458] = 144;
    var$3[459] = 12;
    var$3[460] = 191;
    var$3[461] = 179;
    var$3[462] = 162;
    var$3[463] = 241;
    var$3[464] = 81;
    var$3[465] = 51;
    var$3[466] = 145;
    var$3[467] = 235;
    var$3[468] = 249;
    var$3[469] = 14;
    var$3[470] = 239;
    var$3[471] = 107;
    var$3[472] = 49;
    var$3[473] = 192;
    var$3[474] = 214;
    var$3[475] = 31;
    var$3[476] = 181;
    var$3[477] = 199;
    var$3[478] = 106;
    var$3[479] = 157;
    var$3[480] = 184;
    var$3[481] = 84;
    var$3[482] = 204;
    var$3[483] = 176;
    var$3[484] = 115;
    var$3[485] = 121;
    var$3[486] = 50;
    var$3[487] = 45;
    var$3[488] = 127;
    var$3[489] = 4;
    var$3[490] = 150;
    var$3[491] = 254;
    var$3[492] = 138;
    var$3[493] = 236;
    var$3[494] = 205;
    var$3[495] = 93;
    var$3[496] = 222;
    var$3[497] = 114;
    var$3[498] = 67;
    var$3[499] = 29;
    var$3[500] = 24;
    var$3[501] = 72;
    var$3[502] = 243;
    var$3[503] = 141;
    var$3[504] = 128;
    var$3[505] = 195;
    var$3[506] = 78;
    var$3[507] = 66;
    var$3[508] = 215;
    var$3[509] = 61;
    var$3[510] = 156;
    var$3[511] = 180;
    $this.$perm = var$2;
    $this.$setSeed($seed);
}
function iaaun_Simplex_setSeed($this, $seed) {
    var $random, $i;
    $random = ju_Random__init_1($seed);
    $i = 0;
    while ($i < $this.$perm.data.length) {
        $this.$perm.data[$i] = $random.$nextInt(256);
        $i = $i + 1 | 0;
    }
}
function iaaun_Simplex_octaveNoise2D($this, $octaves, $persistence, $scale, $x, $y) {
    var $total, $amplitude, $maxAmplitude, $i;
    $total = 0.0;
    $amplitude = 1.0;
    $maxAmplitude = 0.0;
    $i = 0;
    while ($i < $octaves) {
        $total = $total + ($this.$raw_noise_2d($x * $scale, $y * $scale) + 1.0) / 2.0 * $amplitude;
        $scale = $scale * 2.0;
        $maxAmplitude = $maxAmplitude + $amplitude;
        $amplitude = $amplitude * $persistence;
        $i = $i + 1 | 0;
    }
    return $total / $maxAmplitude;
}
function iaaun_Simplex_raw_noise_2d($this, $x, $y) {
    var $F2, $s, $i, $j, $G2, $t, $X0, $Y0, $x0, $y0, $i1, $j1, $x1, $y1, var$17, var$18, $x2, $y2, $ii, $jj, $gi0, $gi1, $gi2, $t0, $n0, $t1, $n1, $t2, $n2;
    $F2 = 0.5 * (jl_Math_sqrt(3.0) - 1.0);
    $s = ($x + $y) * $F2;
    $i = $this.$fastfloor($x + $s);
    $j = $this.$fastfloor($y + $s);
    $G2 = (3.0 - jl_Math_sqrt(3.0)) / 6.0;
    $t = ($i + $j | 0) * $G2;
    $X0 = $i - $t;
    $Y0 = $j - $t;
    $x0 = $x - $X0;
    $y0 = $y - $Y0;
    if ($x0 <= $y0) {
        $i1 = 0;
        $j1 = 1;
    } else {
        $i1 = 1;
        $j1 = 0;
    }
    $x1 = $x0 - $i1 + $G2;
    $y1 = $y0 - $j1 + $G2;
    var$17 = $x0 - 1.0;
    var$18 = 2.0 * $G2;
    $x2 = var$17 + var$18;
    $y2 = $y0 - 1.0 + var$18;
    $ii = $i & 255;
    $jj = $j & 255;
    $gi0 = $this.$perm.data[$ii + $this.$perm.data[$jj] | 0] % 12 | 0;
    $gi1 = $this.$perm.data[($ii + $i1 | 0) + $this.$perm.data[$jj + $j1 | 0] | 0] % 12 | 0;
    $gi2 = $this.$perm.data[($ii + 1 | 0) + $this.$perm.data[$jj + 1 | 0] | 0] % 12 | 0;
    $t0 = 0.5 - $x0 * $x0 - $y0 * $y0;
    if ($t0 < 0.0)
        $n0 = 0.0;
    else {
        var$17 = $t0 * $t0;
        $n0 = var$17 * var$17 * $this.$dot(iaaun_Simplex_grad3.data[$gi0], $x0, $y0);
    }
    $t1 = 0.5 - $x1 * $x1 - $y1 * $y1;
    if ($t1 < 0.0)
        $n1 = 0.0;
    else {
        var$17 = $t1 * $t1;
        $n1 = var$17 * var$17 * $this.$dot(iaaun_Simplex_grad3.data[$gi1], $x1, $y1);
    }
    $t2 = 0.5 - $x2 * $x2 - $y2 * $y2;
    if ($t2 < 0.0)
        $n2 = 0.0;
    else {
        var$17 = $t2 * $t2;
        $n2 = var$17 * var$17 * $this.$dot(iaaun_Simplex_grad3.data[$gi2], $x2, $y2);
    }
    return 70.0 * ($n0 + $n1 + $n2);
}
function iaaun_Simplex_fastfloor($this, $x) {
    return $x > 0.0 ? $x | 0 : ($x | 0) - 1 | 0;
}
function iaaun_Simplex_dot($this, $g, $x, $y) {
    var var$4;
    var$4 = $g.data;
    return var$4[0] * $x + var$4[1] * $y;
}
function iaaun_Simplex__clinit_() {
    var var$1, var$2, var$3, var$4;
    var$1 = $rt_createArray($rt_arraycls($rt_intcls()), 12);
    var$2 = var$1.data;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 1;
    var$4[2] = 0;
    var$2[0] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = 1;
    var$4[2] = 0;
    var$2[1] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = (-1);
    var$4[2] = 0;
    var$2[2] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = (-1);
    var$4[2] = 0;
    var$2[3] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 0;
    var$4[2] = 1;
    var$2[4] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = 0;
    var$4[2] = 1;
    var$2[5] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 0;
    var$4[2] = (-1);
    var$2[6] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = 0;
    var$4[2] = (-1);
    var$2[7] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 1;
    var$4[2] = 1;
    var$2[8] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = (-1);
    var$4[2] = 1;
    var$2[9] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 1;
    var$4[2] = (-1);
    var$2[10] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = (-1);
    var$4[2] = (-1);
    var$2[11] = var$3;
    iaaun_Simplex_grad3 = var$1;
    var$1 = $rt_createArray($rt_arraycls($rt_intcls()), 32);
    var$2 = var$1.data;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 1;
    var$4[2] = 1;
    var$4[3] = 1;
    var$2[0] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 1;
    var$4[2] = 1;
    var$4[3] = (-1);
    var$2[1] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 1;
    var$4[2] = (-1);
    var$4[3] = 1;
    var$2[2] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 1;
    var$4[2] = (-1);
    var$4[3] = (-1);
    var$2[3] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = (-1);
    var$4[2] = 1;
    var$4[3] = 1;
    var$2[4] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = (-1);
    var$4[2] = 1;
    var$4[3] = (-1);
    var$2[5] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = (-1);
    var$4[2] = (-1);
    var$4[3] = 1;
    var$2[6] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = (-1);
    var$4[2] = (-1);
    var$4[3] = (-1);
    var$2[7] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 0;
    var$4[2] = 1;
    var$4[3] = 1;
    var$2[8] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 0;
    var$4[2] = 1;
    var$4[3] = (-1);
    var$2[9] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 0;
    var$4[2] = (-1);
    var$4[3] = 1;
    var$2[10] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 0;
    var$4[2] = (-1);
    var$4[3] = (-1);
    var$2[11] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = 0;
    var$4[2] = 1;
    var$4[3] = 1;
    var$2[12] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = 0;
    var$4[2] = 1;
    var$4[3] = (-1);
    var$2[13] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = 0;
    var$4[2] = (-1);
    var$4[3] = 1;
    var$2[14] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = 0;
    var$4[2] = (-1);
    var$4[3] = (-1);
    var$2[15] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 1;
    var$4[2] = 0;
    var$4[3] = 1;
    var$2[16] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 1;
    var$4[2] = 0;
    var$4[3] = (-1);
    var$2[17] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = (-1);
    var$4[2] = 0;
    var$4[3] = 1;
    var$2[18] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = (-1);
    var$4[2] = 0;
    var$4[3] = (-1);
    var$2[19] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = 1;
    var$4[2] = 0;
    var$4[3] = 1;
    var$2[20] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = 1;
    var$4[2] = 0;
    var$4[3] = (-1);
    var$2[21] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = (-1);
    var$4[2] = 0;
    var$4[3] = 1;
    var$2[22] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = (-1);
    var$4[2] = 0;
    var$4[3] = (-1);
    var$2[23] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 1;
    var$4[2] = 1;
    var$4[3] = 0;
    var$2[24] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 1;
    var$4[2] = (-1);
    var$4[3] = 0;
    var$2[25] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = (-1);
    var$4[2] = 1;
    var$4[3] = 0;
    var$2[26] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = (-1);
    var$4[2] = (-1);
    var$4[3] = 0;
    var$2[27] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = 1;
    var$4[2] = 1;
    var$4[3] = 0;
    var$2[28] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = 1;
    var$4[2] = (-1);
    var$4[3] = 0;
    var$2[29] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = (-1);
    var$4[2] = 1;
    var$4[3] = 0;
    var$2[30] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = (-1);
    var$4[2] = (-1);
    var$4[3] = 0;
    var$2[31] = var$3;
    iaaun_Simplex_grad4 = var$1;
    var$1 = $rt_createArray($rt_arraycls($rt_intcls()), 64);
    var$2 = var$1.data;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 1;
    var$4[2] = 2;
    var$4[3] = 3;
    var$2[0] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 1;
    var$4[2] = 3;
    var$4[3] = 2;
    var$2[1] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[2] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 2;
    var$4[2] = 3;
    var$4[3] = 1;
    var$2[3] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[4] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[5] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[6] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 2;
    var$4[2] = 3;
    var$4[3] = 0;
    var$2[7] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 2;
    var$4[2] = 1;
    var$4[3] = 3;
    var$2[8] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[9] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 3;
    var$4[2] = 1;
    var$4[3] = 2;
    var$2[10] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 3;
    var$4[2] = 2;
    var$4[3] = 1;
    var$2[11] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[12] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[13] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[14] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 3;
    var$4[2] = 2;
    var$4[3] = 0;
    var$2[15] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[16] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[17] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[18] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[19] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[20] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[21] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[22] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[23] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 2;
    var$4[2] = 0;
    var$4[3] = 3;
    var$2[24] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[25] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 3;
    var$4[2] = 0;
    var$4[3] = 2;
    var$2[26] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[27] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[28] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[29] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 2;
    var$4[1] = 3;
    var$4[2] = 0;
    var$4[3] = 1;
    var$2[30] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 2;
    var$4[1] = 3;
    var$4[2] = 1;
    var$4[3] = 0;
    var$2[31] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 0;
    var$4[2] = 2;
    var$4[3] = 3;
    var$2[32] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 0;
    var$4[2] = 3;
    var$4[3] = 2;
    var$2[33] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[34] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[35] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[36] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 2;
    var$4[1] = 0;
    var$4[2] = 3;
    var$4[3] = 1;
    var$2[37] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[38] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 2;
    var$4[1] = 1;
    var$4[2] = 3;
    var$4[3] = 0;
    var$2[39] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[40] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[41] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[42] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[43] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[44] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[45] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[46] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[47] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 2;
    var$4[1] = 0;
    var$4[2] = 1;
    var$4[3] = 3;
    var$2[48] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[49] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[50] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[51] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 3;
    var$4[1] = 0;
    var$4[2] = 1;
    var$4[3] = 2;
    var$2[52] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 3;
    var$4[1] = 0;
    var$4[2] = 2;
    var$4[3] = 1;
    var$2[53] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[54] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 3;
    var$4[1] = 1;
    var$4[2] = 2;
    var$4[3] = 0;
    var$2[55] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 2;
    var$4[1] = 1;
    var$4[2] = 0;
    var$4[3] = 3;
    var$2[56] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[57] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[58] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[59] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 3;
    var$4[1] = 1;
    var$4[2] = 0;
    var$4[3] = 2;
    var$2[60] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 0;
    var$4[2] = 0;
    var$4[3] = 0;
    var$2[61] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 3;
    var$4[1] = 2;
    var$4[2] = 0;
    var$4[3] = 1;
    var$2[62] = var$3;
    var$3 = $rt_createIntArray(4);
    var$4 = var$3.data;
    var$4[0] = 3;
    var$4[1] = 2;
    var$4[2] = 1;
    var$4[3] = 0;
    var$2[63] = var$3;
    iaaun_Simplex_simplex = var$1;
}
function ig_HealthBar() {
    var a = this; iaas_Element.call(a);
    a.$c = null;
    a.$color9 = null;
    a.$fract = 0.0;
    a.$hit2 = 0.0;
}
function ig_HealthBar__init_(var_0) {
    var var_1 = new ig_HealthBar();
    ig_HealthBar__init_0(var_1, var_0);
    return var_1;
}
function ig_HealthBar__init_0($this, $c) {
    var var$2;
    iaas_Element__init_0($this);
    $this.$fract = 1.0;
    $this.$hit2 = 0.0;
    $this.$c = $c;
    if ($c !== i_Inferno_boss) {
        ig_Pal_$callClinit();
        var$2 = ig_Pal_player;
    } else {
        ig_Pal_$callClinit();
        var$2 = ig_Pal_lucine;
    }
    $this.$color9 = var$2;
}
function ig_HealthBar_draw($this) {
    var var$1;
    $this.$fract = iaam_Mathf_lerpDelta($this.$fract, $this.$c.$health / $this.$c.$maxHealth(), 0.10000000149011612);
    if ($this.$fract > $this.$c.$health / $this.$c.$maxHealth() + 0.03999999910593033)
        $this.$hit2 = 1.0;
    iaagg_Draw_colorl(0.0);
    iaagg_Fill_crect($this.$x, $this.$y, $this.$width, $this.$height);
    var$1 = $this.$color9;
    iaag_Color_$callClinit();
    iaagg_Draw_color4(var$1, iaag_Color_scarlet, $this.$hit2 * 0.800000011920929);
    iaagg_Fill_crect($this.$x, $this.$y, $this.$width * $this.$fract, $this.$height);
    iaau_Tmp_$callClinit();
    iaagg_Draw_color(iaau_Tmp_c1.$set($this.$color9).$lerp(iaag_Color_scarlet, $this.$hit2 * 0.800000011920929).$shiftHue(0.10000000149011612).$mul2(0.699999988079071));
    iaagg_Fill_crect($this.$x, $this.$y, $this.$width * $this.$fract, $this.$height * 0.30000001192092896);
    $this.$hit2 = iaam_Mathf_lerpDelta($this.$hit2, 0.0, 0.30000001192092896);
}
function i_UI$lambda$setup$11$lambda$_8_0() {
    jl_Object.call(this);
}
function i_UI$lambda$setup$11$lambda$_8_0__init_() {
    var var_0 = new i_UI$lambda$setup$11$lambda$_8_0();
    i_UI$lambda$setup$11$lambda$_8_0__init_0(var_0);
    return var_0;
}
function i_UI$lambda$setup$11$lambda$_8_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function i_UI$lambda$setup$11$lambda$_8_0_get(var$0) {
    return i_UI$lambda$setup$11$lambda$_8_0_get0(var$0);
}
function i_UI$lambda$setup$11$lambda$_8_0_get0(var$0) {
    return i_UI_lambda$null$10();
}
function it_Phases$Phase$teleport$lambda$_3_0() {
    var a = this; jl_Object.call(a);
    a.$_066 = 0.0;
    a.$_125 = 0.0;
}
function it_Phases$Phase$teleport$lambda$_3_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$Phase$teleport$lambda$_3_0();
    it_Phases$Phase$teleport$lambda$_3_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$Phase$teleport$lambda$_3_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_066 = var$1;
    var$0.$_125 = var$2;
}
function it_Phases$Phase$teleport$lambda$_3_0_run(var$0) {
    it_Phases$Phase_lambda$teleport$0(var$0.$_066, var$0.$_125);
}
function jl_IllegalStateException() {
    jl_Exception.call(this);
}
function jl_IllegalStateException__init_0() {
    var var_0 = new jl_IllegalStateException();
    jl_IllegalStateException__init_1(var_0);
    return var_0;
}
function jl_IllegalStateException__init_(var_0) {
    var var_1 = new jl_IllegalStateException();
    jl_IllegalStateException__init_2(var_1, var_0);
    return var_1;
}
function jl_IllegalStateException__init_1($this) {
    jl_Exception__init_0($this);
}
function jl_IllegalStateException__init_2($this, $message) {
    jl_Exception__init_4($this, $message);
}
function iaaup_Pool() {
    var a = this; jl_Object.call(a);
    a.$max4 = 0;
    a.$freeObjects = null;
    a.$peak = 0;
}
function iaaup_Pool__init_(var_0, var_1) {
    var var_2 = new iaaup_Pool();
    iaaup_Pool__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaaup_Pool__init_0($this, $initialCapacity, $max) {
    jl_Object__init_0($this);
    $this.$freeObjects = iaac_Array__init_3(0, $initialCapacity);
    $this.$max4 = $max;
}
function iaaup_Pool_obtain($this) {
    return !$this.$freeObjects.$size ? $this.$newObject() : $this.$freeObjects.$pop();
}
function iaaup_Pool_free($this, $object) {
    if ($object === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1004)));
    if ($this.$freeObjects.$size < $this.$max4) {
        $this.$freeObjects.$add1($object);
        $this.$peak = jl_Math_max1($this.$peak, $this.$freeObjects.$size);
    }
    $this.$reset3($object);
}
function iaaup_Pool_reset($this, $object) {
    if ($rt_isInstance($object, iaaup_Pool$Poolable))
        $object.$reset();
}
function iaaup_Pool_freeAll($this, $objects) {
    var $freeObjects, $max, $i, $object;
    if ($objects === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1005)));
    $freeObjects = $this.$freeObjects;
    $max = $this.$max4;
    $i = 0;
    while ($i < $objects.$size) {
        $object = $objects.$get($i);
        if ($object !== null) {
            if ($freeObjects.$size < $max)
                $freeObjects.$add1($object);
            $this.$reset3($object);
        }
        $i = $i + 1 | 0;
    }
    $this.$peak = jl_Math_max1($this.$peak, $freeObjects.$size);
}
function iaaup_Pools$1() {
    iaaup_Pool.call(this);
    this.$val$supplier = null;
}
function iaaup_Pools$1__init_(var_0, var_1, var_2) {
    var var_3 = new iaaup_Pools$1();
    iaaup_Pools$1__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaaup_Pools$1__init_0($this, $initialCapacity, $max, var$3) {
    $this.$val$supplier = var$3;
    iaaup_Pool__init_0($this, $initialCapacity, $max);
}
function iaaup_Pools$1_newObject($this) {
    return $this.$val$supplier.$get0();
}
function iaabt_TeaFileLoader() {
    jl_Object.call(this);
}
var iaabt_TeaFileLoader_window = null;
var iaabt_TeaFileLoader_xhr = null;
function iaabt_TeaFileLoader_$callClinit() {
    iaabt_TeaFileLoader_$callClinit = $rt_eraseClinit(iaabt_TeaFileLoader);
    iaabt_TeaFileLoader__clinit_();
}
function iaabt_TeaFileLoader_loadFiles($listener) {
    var var$2, var$3;
    iaabt_TeaFileLoader_$callClinit();
    var$2 = iaabt_TeaFileLoader_xhr;
    var$3 = otji_JS_function(iaabt_TeaFileLoader$loadFiles$lambda$_1_0__init_($listener), "stateChanged");
    var$2.onreadystatechange = var$3;
    iaabt_TeaFileLoader_xhr.open("GET", "filesystem.json");
    iaabt_TeaFileLoader_xhr.send();
}
function iaabt_TeaFileLoader_loadAll($listener) {
    var $tasks, var$3;
    iaabt_TeaFileLoader_$callClinit();
    $tasks = ju_ArrayDeque__init_();
    iaabt_TeaFileLoader_loadDescription($tasks);
    var$3 = iaabt_TeaFileLoader$QueuedTaskExecutor__init_($tasks, iaabt_TeaFileLoader$1__init_($listener));
    var$3.$complete0();
}
function iaabt_TeaFileLoader_loadDescription($tasks) {
    var $rootFiles;
    iaabt_TeaFileLoader_$callClinit();
    $rootFiles = JSON.parse($rt_ustr($rt_str(iaabt_TeaFileLoader_xhr.responseText)));
    iaabt_TeaFi_$callClinit();
    iaabt_TeaFileLoader_initEntry(iaabt_TeaFi_root, $rootFiles, $rt_s(1006), $tasks);
}
function iaabt_TeaFileLoader_initEntry($parent, $descList, $fullPath, $tasks) {
    var $i, $fileDesc, $entry, $name, $entryPath, var$10;
    iaabt_TeaFileLoader_$callClinit();
    $i = 0;
    while ($i < $descList.length) {
        $fileDesc = $descList[$i];
        $entry = iaabt_TeaFi$FSEntry__init_();
        $name = $rt_str($fileDesc.name);
        $entry.$directory = $fileDesc.directory ? 1 : 0;
        $parent.$childEntries.$put($name, $entry);
        $entryPath = jl_StringBuilder__init_().$append($fullPath).$append($rt_s(556)).$append($name).$toString();
        var$10 = $rt_createArray(jl_Object, 1);
        var$10.data[0] = $entryPath;
        iaau_Log_err($rt_s(1007), var$10);
        if ($entry.$directory)
            iaabt_TeaFileLoader_initEntry($entry, $fileDesc.childFiles, $entryPath, $tasks);
        else {
            $tasks.$add7(iaabt_TeaFileLoader$LoadFileTask__init_($entry, $entryPath));
            if (!(!$name.$endsWith($rt_s(1008)) && !$name.$endsWith($rt_s(1009)) && !$name.$endsWith($rt_s(1010)) && !$name.$endsWith($rt_s(1011)) && !$name.$endsWith($rt_s(1012))))
                $tasks.$add7(iaabt_TeaFileLoader$LoadImageTask__init_($entry, $entryPath));
        }
        $i = $i + 1 | 0;
    }
}
function iaabt_TeaFileLoader_lambda$loadFiles$0($listener) {
    iaabt_TeaFileLoader_$callClinit();
    if (iaabt_TeaFileLoader_xhr.readyState != 4)
        return;
    if (iaabt_TeaFileLoader_xhr.status == 200) {
        iaabt_TeaFileLoader_loadAll($listener);
        return;
    }
    $listener.$error0();
}
function iaabt_TeaFileLoader_access$000() {
    iaabt_TeaFileLoader_$callClinit();
    return iaabt_TeaFileLoader_xhr;
}
function iaabt_TeaFileLoader_access$100() {
    iaabt_TeaFileLoader_$callClinit();
    return iaabt_TeaFileLoader_window;
}
function iaabt_TeaFileLoader__clinit_() {
    iaabt_TeaFileLoader_window = window;
    iaabt_TeaFileLoader_xhr = new XMLHttpRequest();
}
function iaam_TileLayer$Cell() {
    var a = this; jl_Object.call(a);
    a.$tile0 = null;
    a.$flipHorizontally = 0;
    a.$flipVertically = 0;
    a.$rotation1 = 0;
}
function iaam_TileLayer$Cell__init_() {
    var var_0 = new iaam_TileLayer$Cell();
    iaam_TileLayer$Cell__init_0(var_0);
    return var_0;
}
function iaam_TileLayer$Cell__init_0($this) {
    jl_Object__init_0($this);
}
function iaas_Scene$fireEnterAndExit$lambda$_19_1() {
    jl_Object.call(this);
}
function iaas_Scene$fireEnterAndExit$lambda$_19_1__init_() {
    var var_0 = new iaas_Scene$fireEnterAndExit$lambda$_19_1();
    iaas_Scene$fireEnterAndExit$lambda$_19_1__init_0(var_0);
    return var_0;
}
function iaas_Scene$fireEnterAndExit$lambda$_19_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaas_Scene$fireEnterAndExit$lambda$_19_1_get(var$0) {
    return iaas_Scene$fireEnterAndExit$lambda$_19_1_get0(var$0);
}
function iaas_Scene$fireEnterAndExit$lambda$_19_1_get0(var$0) {
    return iaase_InputEvent__init_();
}
function iaas_Scene$fireEnterAndExit$lambda$_19_0() {
    jl_Object.call(this);
}
function iaas_Scene$fireEnterAndExit$lambda$_19_0__init_() {
    var var_0 = new iaas_Scene$fireEnterAndExit$lambda$_19_0();
    iaas_Scene$fireEnterAndExit$lambda$_19_0__init_0(var_0);
    return var_0;
}
function iaas_Scene$fireEnterAndExit$lambda$_19_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaas_Scene$fireEnterAndExit$lambda$_19_0_get(var$0) {
    return iaas_Scene$fireEnterAndExit$lambda$_19_0_get0(var$0);
}
function iaas_Scene$fireEnterAndExit$lambda$_19_0_get0(var$0) {
    return iaase_InputEvent__init_();
}
function ju_AbstractList() {
    ju_AbstractCollection.call(this);
    this.$modCount2 = 0;
}
function ju_AbstractList__init_() {
    var var_0 = new ju_AbstractList();
    ju_AbstractList__init_0(var_0);
    return var_0;
}
function ju_AbstractList__init_0($this) {
    ju_AbstractCollection__init_0($this);
}
function ju_AbstractList_iterator($this) {
    return ju_AbstractList$1__init_($this);
}
function jur_ReluctantCompositeQuantifierSet() {
    jur_CompositeQuantifierSet.call(this);
}
function jur_ReluctantCompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_ReluctantCompositeQuantifierSet();
    jur_ReluctantCompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_ReluctantCompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
    jur_CompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type);
}
function jur_ReluctantCompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $min, $max, $i, var$7, var$8;
    $min = $this.$quantifier.$min3();
    $max = $this.$quantifier.$max3();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    var$7 = $this.$next.$matches($stringIndex, $testString, $matchResult);
                    if (var$7 >= 0)
                        break;
                    if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$getRightBound()) {
                        var$7 = $this.$leaf.$accepts($stringIndex, $testString);
                        $stringIndex = $stringIndex + var$7 | 0;
                        $i = $i + 1 | 0;
                    }
                    if (var$7 < 1)
                        break a;
                    if ($i > $max)
                        break a;
                }
                return var$7;
            }
            return (-1);
        }
        if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        var$8 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$8 < 1)
            break;
        $stringIndex = $stringIndex + var$8 | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function it_Phases$2$lambda$null$17$lambda$_7_1() {
    jl_Object.call(this);
}
function it_Phases$2$lambda$null$17$lambda$_7_1__init_() {
    var var_0 = new it_Phases$2$lambda$null$17$lambda$_7_1();
    it_Phases$2$lambda$null$17$lambda$_7_1__init_0(var_0);
    return var_0;
}
function it_Phases$2$lambda$null$17$lambda$_7_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$2$lambda$null$17$lambda$_7_1_get(var$0, var$1) {
    it_Phases$2_lambda$null$14(var$1);
}
function it_Phases$2$lambda$null$17$lambda$_7_2() {
    jl_Object.call(this);
}
function it_Phases$2$lambda$null$17$lambda$_7_2__init_() {
    var var_0 = new it_Phases$2$lambda$null$17$lambda$_7_2();
    it_Phases$2$lambda$null$17$lambda$_7_2__init_0(var_0);
    return var_0;
}
function it_Phases$2$lambda$null$17$lambda$_7_2__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$2$lambda$null$17$lambda$_7_2_run(var$0) {
    it_Phases$2_lambda$null$16();
}
function jn_ByteBuffer() {
    var a = this; jn_Buffer.call(a);
    a.$start7 = 0;
    a.$array = null;
    a.$order0 = null;
}
function jn_ByteBuffer__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new jn_ByteBuffer();
    jn_ByteBuffer__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function jn_ByteBuffer__init_0($this, $start, $capacity, $array, $position, $limit) {
    jn_Buffer__init_0($this, $capacity);
    jn_ByteOrder_$callClinit();
    $this.$order0 = jn_ByteOrder_BIG_ENDIAN;
    $this.$start7 = $start;
    $this.$array = $array;
    $this.$position0 = $position;
    $this.$limit1 = $limit;
}
function jn_ByteBuffer_allocateDirect($capacity) {
    if ($capacity >= 0)
        return jn_ByteBufferImpl__init_($capacity, 1);
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(416)).$append3($capacity).$toString()));
}
function jn_ByteBuffer_wrap0($array, $offset, $length) {
    return jn_ByteBufferImpl__init_0(0, $array.data.length, $array, $offset, $offset + $length | 0, 0, 0);
}
function jn_ByteBuffer_wrap($array) {
    return jn_ByteBuffer_wrap0($array, 0, $array.data.length);
}
function jn_ByteBuffer_get($this, $dst, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i, var$9;
    if ($offset >= 0) {
        var$4 = $dst.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(1013)).$append3(var$6).$append($rt_s(418)).$append3(var$5).$toString()));
            if (jn_Buffer_remaining($this) < $length)
                $rt_throw(jn_BufferUnderflowException__init_());
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(419)).$append3($length).$append($rt_s(420)).$toString()));
            $pos = $this.$position0 + $this.$start7 | 0;
            $i = 0;
            while ($i < $length) {
                var$6 = $offset + 1 | 0;
                var$9 = $this.$array.data;
                var$5 = $pos + 1 | 0;
                var$4[$offset] = var$9[$pos];
                $i = $i + 1 | 0;
                $offset = var$6;
                $pos = var$5;
            }
            $this.$position0 = $this.$position0 + $length | 0;
            return $this;
        }
    }
    var$4 = $dst.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(421)).$append3($offset).$append($rt_s(55)).$append3(var$4.length).$append($rt_s(364)).$toString()));
}
function jn_ByteBuffer_get0($this, $dst) {
    return $this.$get38($dst, 0, $dst.data.length);
}
function jn_ByteBuffer_put0($this, $src, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i, var$9;
    if (!$length)
        return $this;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($offset >= 0) {
        var$4 = $src.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(1014)).$append3(var$6).$append($rt_s(418)).$append3(var$5).$toString()));
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(419)).$append3($length).$append($rt_s(420)).$toString()));
            $pos = $this.$position0 + $this.$start7 | 0;
            $i = 0;
            while ($i < $length) {
                var$9 = $this.$array.data;
                var$6 = $pos + 1 | 0;
                var$5 = $offset + 1 | 0;
                var$9[$pos] = var$4[$offset];
                $i = $i + 1 | 0;
                $pos = var$6;
                $offset = var$5;
            }
            $this.$position0 = $this.$position0 + $length | 0;
            return $this;
        }
    }
    var$4 = $src.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(421)).$append3($offset).$append($rt_s(55)).$append3(var$4.length).$append($rt_s(364)).$toString()));
}
function jn_ByteBuffer_put($this, $src) {
    return $this.$put3($src, 0, $src.data.length);
}
function jn_ByteBuffer_hasArray($this) {
    return 1;
}
function jn_ByteBuffer_array($this) {
    return $this.$array;
}
function jn_ByteBuffer_toString($this) {
    return jl_StringBuilder__init_().$append($rt_s(1015)).$append3($this.$position0).$append($rt_s(1016)).$append3($this.$limit1).$append($rt_s(1017)).$append3($this.$capacity).$append($rt_s(1018)).$append($this.$mark < 0 ? $rt_s(1019) : jl_StringBuilder__init_().$append($rt_s(1020)).$append3($this.$mark).$toString()).$append($rt_s(56)).$toString();
}
function jn_ByteBuffer_equals($this, $obj) {
    var $other, $sz, $a, $b, $i, var$7, var$8, var$9, var$10;
    if ($this === $obj)
        return 1;
    if (!($obj instanceof jn_ByteBuffer))
        return 0;
    $other = $obj;
    $sz = jn_Buffer_remaining($this);
    if ($sz != jn_Buffer_remaining($other))
        return 0;
    $a = $this.$position0 + $this.$start7 | 0;
    $b = $other.$position0 + $other.$start7 | 0;
    $i = 0;
    while ($i < $sz) {
        var$7 = $this.$array.data;
        var$8 = $a + 1 | 0;
        var$9 = var$7[$a];
        var$7 = $other.$array.data;
        var$10 = $b + 1 | 0;
        if (var$9 != var$7[$b])
            return 0;
        $i = $i + 1 | 0;
        $a = var$8;
        $b = var$10;
    }
    return 1;
}
function jn_ByteBuffer_compareTo($this, $other) {
    var $sz, $a, $b, $i, var$6, var$7, var$8, var$9, $r;
    if ($this === $other)
        return 0;
    $sz = jl_Math_min1(jn_Buffer_remaining($this), jn_Buffer_remaining($other));
    $a = $this.$position0 + $this.$start7 | 0;
    $b = $other.$position0 + $other.$start7 | 0;
    $i = 0;
    while (true) {
        if ($i >= $sz)
            return jl_Integer_compare(jn_Buffer_remaining($this), jn_Buffer_remaining($other));
        var$6 = $this.$array.data;
        var$7 = $a + 1 | 0;
        var$8 = var$6[$a];
        var$6 = $other.$array.data;
        var$9 = $b + 1 | 0;
        $r = jl_Byte_compare(var$8, var$6[$b]);
        if ($r)
            break;
        $i = $i + 1 | 0;
        $a = var$7;
        $b = var$9;
    }
    return $r;
}
function jn_ByteBuffer_order($this, $bo) {
    $this.$order0 = $bo;
    return $this;
}
function jn_ByteBuffer_clear($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_ByteBuffer_flip($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_ByteBuffer_limit($this, $newLimit) {
    jn_Buffer_limit0($this, $newLimit);
    return $this;
}
function jn_ByteBuffer_position($this, $newPosition) {
    jn_Buffer_position0($this, $newPosition);
    return $this;
}
function jn_ByteBuffer_flip0($this) {
    return jn_ByteBuffer_flip($this);
}
function jn_ByteBuffer_limit0($this, var$1) {
    return $this.$limit5(var$1);
}
function jn_ByteBuffer_position0($this, var$1) {
    return $this.$position9(var$1);
}
function jn_ByteBuffer_compareTo0($this, var$1) {
    return $this.$compareTo3(var$1);
}
function iaam_RandomXS128() {
    var a = this; ju_Random.call(a);
    a.$seed0 = Long_ZERO;
    a.$seed1 = Long_ZERO;
}
function iaam_RandomXS128__init_() {
    var var_0 = new iaam_RandomXS128();
    iaam_RandomXS128__init_0(var_0);
    return var_0;
}
function iaam_RandomXS128__init_0($this) {
    ju_Random__init_0($this);
    $this.$setSeed(ju_Random__init_().$nextLong());
}
function iaam_RandomXS128_murmurHash3($x) {
    var var$2;
    var$2 = Long_xor($x, Long_shru($x, 33));
    var$2 = Long_mul(var$2, new Long(3981806797, 4283543511));
    var$2 = Long_xor(var$2, Long_shru(var$2, 33));
    var$2 = Long_mul(var$2, new Long(444984403, 3301882366));
    var$2 = Long_xor(var$2, Long_shru(var$2, 33));
    return var$2;
}
function iaam_RandomXS128_nextLong($this) {
    var $s1, $s0, var$3;
    $s1 = $this.$seed0;
    $s0 = $this.$seed1;
    $this.$seed0 = $s0;
    var$3 = Long_xor($s1, Long_shl($s1, 23));
    var$3 = Long_xor(Long_xor(Long_xor(var$3, $s0), Long_shru(var$3, 17)), Long_shru($s0, 26));
    $this.$seed1 = var$3;
    return Long_add(var$3, $s0);
}
function iaam_RandomXS128_nextInt($this) {
    return $this.$nextLong().lo;
}
function iaam_RandomXS128_nextInt0($this, $n) {
    return $this.$nextLong0(Long_fromInt($n)).lo;
}
function iaam_RandomXS128_nextLong0($this, $n) {
    var $bits, $value;
    if (Long_le($n, Long_ZERO))
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1021)));
    while (true) {
        $bits = Long_shru($this.$nextLong(), 1);
        $value = Long_rem($bits, $n);
        if (Long_ge(Long_add(Long_sub($bits, $value), Long_sub($n, Long_fromInt(1))), Long_ZERO))
            break;
    }
    return $value;
}
function iaam_RandomXS128_nextFloat($this) {
    return Long_toNumber(Long_shru($this.$nextLong(), 40)) * 5.9604644775390625E-8;
}
function iaam_RandomXS128_setSeed($this, $seed) {
    var $seed0;
    if (Long_eq($seed, Long_ZERO))
        $seed = new Long(0, 2147483648);
    $seed0 = iaam_RandomXS128_murmurHash3($seed);
    $this.$setState($seed0, iaam_RandomXS128_murmurHash3($seed0));
}
function iaam_RandomXS128_setState($this, $seed0, $seed1) {
    $this.$seed0 = $seed0;
    $this.$seed1 = $seed1;
}
function jur_SOLSet() {
    jur_AbstractSet.call(this);
}
function jur_SOLSet__init_() {
    var var_0 = new jur_SOLSet();
    jur_SOLSet__init_0(var_0);
    return var_0;
}
function jur_SOLSet__init_0($this) {
    jur_AbstractSet__init_0($this);
}
function jur_SOLSet_matches($this, $strIndex, $testString, $matchResult) {
    if ($strIndex && !($matchResult.$hasAnchoringBounds() && $strIndex == $matchResult.$getLeftBound()))
        return (-1);
    return $this.$next.$matches($strIndex, $testString, $matchResult);
}
function jur_SOLSet_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_SOLSet_getName($this) {
    return $rt_s(1022);
}
function it_Phases$2$lambda$null$17$lambda$_7_0() {
    var a = this; jl_Object.call(a);
    a.$_067 = 0;
    a.$_126 = 0.0;
    a.$_25 = 0.0;
}
function it_Phases$2$lambda$null$17$lambda$_7_0__init_(var_0, var_1, var_2) {
    var var_3 = new it_Phases$2$lambda$null$17$lambda$_7_0();
    it_Phases$2$lambda$null$17$lambda$_7_0__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function it_Phases$2$lambda$null$17$lambda$_7_0__init_0(var$0, var$1, var$2, var$3) {
    jl_Object__init_0(var$0);
    var$0.$_067 = var$1;
    var$0.$_126 = var$2;
    var$0.$_25 = var$3;
}
function it_Phases$2$lambda$null$17$lambda$_7_0_run(var$0) {
    it_Phases$2_lambda$null$13(var$0.$_067, var$0.$_126, var$0.$_25);
}
function iaaal_FileHandleResolver() {
}
function iaaalr_InternalFileHandleResolver() {
    jl_Object.call(this);
}
function iaaalr_InternalFileHandleResolver__init_() {
    var var_0 = new iaaalr_InternalFileHandleResolver();
    iaaalr_InternalFileHandleResolver__init_0(var_0);
    return var_0;
}
function iaaalr_InternalFileHandleResolver__init_0($this) {
    jl_Object__init_0($this);
}
function iaaalr_InternalFileHandleResolver_resolve($this, $fileName) {
    iaa_Core_$callClinit();
    return iaa_Core_files.$internal($fileName);
}
function iaagg_IndexBufferObject() {
    var a = this; jl_Object.call(a);
    a.$buffer6 = null;
    a.$bufferHandle2 = 0;
    a.$isDirect0 = 0;
    a.$isDirty2 = 0;
    a.$isBound2 = 0;
    a.$usage3 = 0;
}
function iaagg_IndexBufferObject__init_(var_0, var_1) {
    var var_2 = new iaagg_IndexBufferObject();
    iaagg_IndexBufferObject__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaagg_IndexBufferObject__init_0($this, $isStatic, $maxIndices) {
    jl_Object__init_0($this);
    $this.$isDirty2 = 1;
    $this.$isBound2 = 0;
    $this.$isDirect0 = 1;
    $this.$buffer6 = iaau_BufferUtils_newShortBuffer($maxIndices);
    $this.$buffer6.$flip();
    iaa_Core_$callClinit();
    $this.$bufferHandle2 = iaa_Core_gl20.$glGenBuffer();
    $this.$usage3 = !$isStatic ? 35048 : 35044;
}
function iaagg_IndexBufferObject_getNumIndices($this) {
    return jn_Buffer_limit($this.$buffer6);
}
function iaagg_IndexBufferObject_getNumMaxIndices($this) {
    return jn_Buffer_capacity($this.$buffer6);
}
function iaagg_IndexBufferObject_setIndices($this, $indices, $offset, $count) {
    $this.$isDirty2 = 1;
    $this.$buffer6.$clear2();
    $this.$buffer6.$put9($indices, $offset, $count);
    $this.$buffer6.$flip();
    if ($this.$isBound2) {
        iaa_Core_$callClinit();
        iaa_Core_gl20.$glBufferData(34963, jn_Buffer_limit($this.$buffer6), $this.$buffer6, $this.$usage3);
        $this.$isDirty2 = 0;
    }
}
function iaagg_IndexBufferObject_getBuffer($this) {
    $this.$isDirty2 = 1;
    return $this.$buffer6;
}
function iaagg_IndexBufferObject_bind($this) {
    if (!$this.$bufferHandle2)
        $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1023)));
    iaa_Core_$callClinit();
    iaa_Core_gl20.$glBindBuffer(34963, $this.$bufferHandle2);
    if ($this.$isDirty2) {
        iaa_Core_gl20.$glBufferData(34963, jn_Buffer_limit($this.$buffer6), $this.$buffer6, $this.$usage3);
        $this.$isDirty2 = 0;
    }
    $this.$isBound2 = 1;
}
function iaagg_IndexBufferObject_unbind($this) {
    iaa_Core_$callClinit();
    iaa_Core_gl20.$glBindBuffer(34963, 0);
    $this.$isBound2 = 0;
}
function iaagg_IndexBufferObject_dispose($this) {
    var $gl;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    $gl.$glBindBuffer(34963, 0);
    $gl.$glDeleteBuffer($this.$bufferHandle2);
    $this.$bufferHandle2 = 0;
}
function iaamg_Polygon() {
    var a = this; jl_Object.call(a);
    a.$localVertices = null;
    a.$x8 = 0.0;
    a.$y8 = 0.0;
    a.$scaleX2 = 0.0;
    a.$scaleY1 = 0.0;
    a.$dirty = 0;
}
function iaamg_Polygon__init_(var_0) {
    var var_1 = new iaamg_Polygon();
    iaamg_Polygon__init_0(var_1, var_0);
    return var_1;
}
function iaamg_Polygon__init_0($this, $vertices) {
    var var$2;
    var$2 = $vertices.data;
    jl_Object__init_0($this);
    $this.$scaleX2 = 1.0;
    $this.$scaleY1 = 1.0;
    $this.$dirty = 1;
    if (var$2.length >= 6) {
        $this.$localVertices = $vertices;
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(1024)));
}
function iaamg_Polygon_setPosition($this, $x, $y) {
    $this.$x8 = $x;
    $this.$y8 = $y;
    $this.$dirty = 1;
}
function iaam_TiledMap$getLayer$lambda$_2_0() {
    jl_Object.call(this);
    this.$_068 = null;
}
function iaam_TiledMap$getLayer$lambda$_2_0__init_(var_0) {
    var var_1 = new iaam_TiledMap$getLayer$lambda$_2_0();
    iaam_TiledMap$getLayer$lambda$_2_0__init_0(var_1, var_0);
    return var_1;
}
function iaam_TiledMap$getLayer$lambda$_2_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_068 = var$1;
}
function iaam_TiledMap$getLayer$lambda$_2_0_get(var$0, var$1) {
    return iaam_TiledMap$getLayer$lambda$_2_0_get0(var$0, var$1);
}
function iaam_TiledMap$getLayer$lambda$_2_0_get0(var$0, var$1) {
    return iaam_TiledMap_lambda$getLayer$0(var$0.$_068, var$1);
}
function jl_Byte() {
    jl_Number.call(this);
}
var jl_Byte_TYPE = null;
function jl_Byte_$callClinit() {
    jl_Byte_$callClinit = $rt_eraseClinit(jl_Byte);
    jl_Byte__clinit_();
}
function jl_Byte_compare($a, $b) {
    jl_Byte_$callClinit();
    return $a - $b | 0;
}
function jl_Byte__clinit_() {
    jl_Byte_TYPE = $rt_cls($rt_bytecls());
}
function iaas_Element$clipBegin$lambda$_93_0() {
    jl_Object.call(this);
}
function iaas_Element$clipBegin$lambda$_93_0__init_() {
    var var_0 = new iaas_Element$clipBegin$lambda$_93_0();
    iaas_Element$clipBegin$lambda$_93_0__init_0(var_0);
    return var_0;
}
function iaas_Element$clipBegin$lambda$_93_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaas_Element$clipBegin$lambda$_93_0_get(var$0) {
    return iaas_Element$clipBegin$lambda$_93_0_get0(var$0);
}
function iaas_Element$clipBegin$lambda$_93_0_get0(var$0) {
    return iaamg_Rectangle__init_0();
}
function it_Phases$5$lambda$null$16$lambda$_6_0() {
    jl_Object.call(this);
    this.$_069 = 0.0;
}
function it_Phases$5$lambda$null$16$lambda$_6_0__init_(var_0) {
    var var_1 = new it_Phases$5$lambda$null$16$lambda$_6_0();
    it_Phases$5$lambda$null$16$lambda$_6_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$5$lambda$null$16$lambda$_6_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_069 = var$1;
}
function it_Phases$5$lambda$null$16$lambda$_6_0_run(var$0) {
    it_Phases$5_lambda$null$15(var$0.$_069);
}
function iaate_SickEffect() {
    var a = this; iaat_Effect.call(a);
    a.$distance1 = 0.0;
    a.$intensity2 = 0.0;
    a.$indices = null;
}
function iaate_SickEffect__init_(var_0) {
    var var_1 = new iaate_SickEffect();
    iaate_SickEffect__init_0(var_1, var_0);
    return var_1;
}
function iaate_SickEffect__init_0($this, $label) {
    iaat_Effect__init_0($this, $label);
    $this.$distance1 = 1.0;
    $this.$intensity2 = 1.0;
    $this.$indices = iaac_IntArray__init_0();
}
function iaate_SickEffect_onApply($this, $glyph, $localIndex, $delta) {
    var $progressModifier, $progressOffset, $progress, var$7, var$8, $split, var$10, $y, $fadeout;
    $progressModifier = 1.0 / $this.$intensity2 * 1.0;
    $progressOffset = $localIndex / 50.0;
    $progress = $this.$calculateProgress($progressModifier,  -$progressOffset, 0);
    if ($progress < 0.009999999776482582 && jl_Math_random() > 0.25 && !$this.$indices.$contains($localIndex))
        $this.$indices.$add6($localIndex);
    if ($progress > 0.949999988079071)
        $this.$indices.$removeValue0($localIndex);
    if (!$this.$indices.$contains($localIndex)) {
        var$7 = $this.$indices;
        var$8 = $localIndex - 1 | 0;
        if (!var$7.$contains(var$8)) {
            var$7 = $this.$indices;
            var$8 = $localIndex - 2 | 0;
            if (!var$7.$contains(var$8)) {
                var$7 = $this.$indices;
                var$8 = $localIndex + 2 | 0;
                if (!var$7.$contains(var$8)) {
                    var$7 = $this.$indices;
                    var$8 = $localIndex + 1 | 0;
                    if (!var$7.$contains(var$8))
                        return;
                }
            }
        }
    }
    $split = 0.5;
    if ($progress < $split) {
        iaam_Interpolation_$callClinit();
        var$10 = iaam_Interpolation_pow2Out.$apply0(0.0, 1.0, $progress / $split);
    } else {
        iaam_Interpolation_$callClinit();
        var$10 = iaam_Interpolation_pow2In.$apply0(1.0, 0.0, ($progress - $split) / 0.5);
    }
    $y = $this.$getLineHeight() * $this.$distance1 * var$10 * 0.125;
    if ($this.$indices.$contains($localIndex))
        $y = $y * 2.1500000953674316;
    if (!(!$this.$indices.$contains($localIndex - 1 | 0) && !$this.$indices.$contains($localIndex + 1 | 0)))
        $y = $y * 1.350000023841858;
    $fadeout = $this.$calculateFadeout();
    var$10 = $y * $fadeout;
    $glyph.$yoffset = $glyph.$yoffset - var$10 | 0;
}
function iaabt_TeaApplication$TeaLogger() {
    jl_Object.call(this);
}
function iaabt_TeaApplication$TeaLogger__init_() {
    var var_0 = new iaabt_TeaApplication$TeaLogger();
    iaabt_TeaApplication$TeaLogger__init_0(var_0);
    return var_0;
}
function iaabt_TeaApplication$TeaLogger__init_0($this) {
    jl_Object__init_0($this);
}
function iaabt_TeaApplication$TeaLogger_log($this, $level, $text, $args) {
    console.log("Arc: " + $rt_ustr(jl_StringBuilder__init_().$append($rt_s(762)).$append(jl_Enum_name($level)).$append($rt_s(1025)).$append(iaau_Strings_format($text, $args)).$toString()));
}
function ji_EOFException() {
    ji_IOException.call(this);
}
function ji_EOFException__init_() {
    var var_0 = new ji_EOFException();
    ji_EOFException__init_0(var_0);
    return var_0;
}
function ji_EOFException__init_0($this) {
    ji_IOException__init_2($this);
}
function iaagg_BitmapFont$BitmapFontData() {
    var a = this; jl_Object.call(a);
    a.$glyphs0 = null;
    a.$imagePaths = null;
    a.$fontFile = null;
    a.$flipped0 = 0;
    a.$padTop1 = 0.0;
    a.$padRight1 = 0.0;
    a.$padBottom1 = 0.0;
    a.$padLeft1 = 0.0;
    a.$lineHeight = 0.0;
    a.$capHeight = 0.0;
    a.$ascent = 0.0;
    a.$descent = 0.0;
    a.$down = 0.0;
    a.$blankLineScale = 0.0;
    a.$scaleX1 = 0.0;
    a.$scaleY2 = 0.0;
    a.$markupEnabled = 0;
    a.$missingGlyph = null;
    a.$spaceXadvance = 0.0;
    a.$xHeight = 0.0;
    a.$breakChars = null;
    a.$xChars = null;
    a.$capChars = null;
}
function iaagg_BitmapFont$BitmapFontData__init_(var_0, var_1) {
    var var_2 = new iaagg_BitmapFont$BitmapFontData();
    iaagg_BitmapFont$BitmapFontData__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaagg_BitmapFont$BitmapFontData__init_0($this, $fontFile, $flip) {
    var var$3, var$4;
    jl_Object__init_0($this);
    $this.$glyphs0 = $rt_createArray($rt_arraycls(iaagg_BitmapFont$Glyph), 128);
    $this.$capHeight = 1.0;
    $this.$blankLineScale = 1.0;
    $this.$scaleX1 = 1.0;
    $this.$scaleY2 = 1.0;
    $this.$xHeight = 1.0;
    var$3 = $rt_createCharArray(13);
    var$4 = var$3.data;
    var$4[0] = 120;
    var$4[1] = 101;
    var$4[2] = 97;
    var$4[3] = 111;
    var$4[4] = 110;
    var$4[5] = 115;
    var$4[6] = 114;
    var$4[7] = 99;
    var$4[8] = 117;
    var$4[9] = 109;
    var$4[10] = 118;
    var$4[11] = 119;
    var$4[12] = 122;
    $this.$xChars = var$3;
    var$3 = $rt_createCharArray(26);
    var$4 = var$3.data;
    var$4[0] = 77;
    var$4[1] = 78;
    var$4[2] = 66;
    var$4[3] = 68;
    var$4[4] = 67;
    var$4[5] = 69;
    var$4[6] = 70;
    var$4[7] = 75;
    var$4[8] = 65;
    var$4[9] = 71;
    var$4[10] = 72;
    var$4[11] = 73;
    var$4[12] = 74;
    var$4[13] = 76;
    var$4[14] = 79;
    var$4[15] = 80;
    var$4[16] = 81;
    var$4[17] = 82;
    var$4[18] = 83;
    var$4[19] = 84;
    var$4[20] = 85;
    var$4[21] = 86;
    var$4[22] = 87;
    var$4[23] = 88;
    var$4[24] = 89;
    var$4[25] = 90;
    $this.$capChars = var$3;
    $this.$fontFile = $fontFile;
    $this.$flipped0 = $flip;
    $this.$load5($fontFile, $flip);
}
function iaagg_BitmapFont$BitmapFontData_load($this, $fontFile, $flip) {
    var $reader, $line, var$5, $padding, var$7, $padY, $common, var$10, $baseLine, $pageCount, $p, $matcher, $id, $pageID, $ex, $fileName, $glyph, $tokens, $ch, $first, $second, $amount, $spaceGlyph, $xadvanceGlyph, $xGlyph, var$28, $xChar, $capGlyph, $capChar, $page, var$33, var$34, var$35, $$je;
    if ($this.$imagePaths !== null)
        $rt_throw(jl_IllegalStateException__init_($rt_s(1026)));
    $reader = ji_BufferedReader__init_(ji_InputStreamReader__init_($fontFile.$read2()), 512);
    a: {
        b: {
            try {
                $line = $reader.$readLine();
                if ($line === null)
                    $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1027)));
                var$5 = $line.$substring($line.$indexOf4($rt_s(1028)) + 8 | 0);
                $padding = var$5.$substring0(0, var$5.$indexOf3(32)).$split4($rt_s(430), 4);
                var$7 = $padding.data;
                if (var$7.length != 4)
                    $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1029)));
                $this.$padTop1 = jl_Integer_parseInt0(var$7[0]);
                $this.$padRight1 = jl_Integer_parseInt0(var$7[1]);
                $this.$padBottom1 = jl_Integer_parseInt0(var$7[2]);
                $this.$padLeft1 = jl_Integer_parseInt0(var$7[3]);
                $padY = $this.$padTop1 + $this.$padBottom1;
                var$5 = $reader.$readLine();
                if (var$5 === null)
                    $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1030)));
                $common = var$5.$split4($rt_s(32), 7);
                var$7 = $common.data;
                var$10 = var$7.length;
                if (var$10 < 3)
                    $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1031)));
                if (!var$7[1].$startsWith($rt_s(1032)))
                    $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1033)));
                $this.$lineHeight = jl_Integer_parseInt0(var$7[1].$substring(11));
                if (!var$7[2].$startsWith($rt_s(1034)))
                    $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1035)));
                c: {
                    $baseLine = jl_Integer_parseInt0(var$7[2].$substring(5));
                    $pageCount = 1;
                    if (var$10 >= 6 && var$7[5] !== null && var$7[5].$startsWith($rt_s(1036)))
                        try {
                            $pageCount = jl_Math_max1(1, jl_Integer_parseInt0(var$7[5].$substring(6)));
                            break c;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_NumberFormatException) {
                            } else {
                                throw $$e;
                            }
                        }
                }
                $this.$imagePaths = $rt_createArray(jl_String, $pageCount);
                $p = 0;
                d: {
                    e: {
                        f: {
                            while (true) {
                                if ($p >= $pageCount)
                                    break d;
                                var$5 = $reader.$readLine();
                                if (var$5 === null)
                                    $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1037)));
                                g: {
                                    $matcher = jur_Pattern_matcher(jur_Pattern_compile($rt_s(1038)), var$5);
                                    if (jur_Matcher_find($matcher)) {
                                        $id = jur_Matcher_group($matcher, 1);
                                        try {
                                            $pageID = jl_Integer_parseInt0($id);
                                            if ($pageID != $p)
                                                break f;
                                            break g;
                                        } catch ($$e) {
                                            $$je = $rt_wrapException($$e);
                                            if ($$je instanceof jl_NumberFormatException) {
                                                $ex = $$je;
                                                break e;
                                            } else {
                                                throw $$e;
                                            }
                                        }
                                    }
                                }
                                var$5 = jur_Pattern_matcher(jur_Pattern_compile($rt_s(1039)), var$5);
                                if (!jur_Matcher_find(var$5))
                                    break;
                                $fileName = jur_Matcher_group(var$5, 1);
                                $this.$imagePaths.data[$p] = $fontFile.$parent0().$child($fileName).$path0().$replaceAll0($rt_s(1040), $rt_s(556));
                                $p = $p + 1 | 0;
                            }
                            $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1041)));
                        }
                        try {
                            $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(1042)).$append($id).$toString()));
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_NumberFormatException) {
                                $ex = $$je;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                    $rt_throw(iaau_ArcRuntimeException__init_(jl_StringBuilder__init_().$append($rt_s(1043)).$append($id).$toString(), $ex));
                }
                $this.$descent = 0.0;
                h: {
                    while (true) {
                        var$5 = $reader.$readLine();
                        if (var$5 === null)
                            break;
                        if (var$5.$startsWith($rt_s(1044)))
                            break h;
                        if (!var$5.$startsWith($rt_s(1045)))
                            continue;
                        $glyph = iaagg_BitmapFont$Glyph__init_();
                        $tokens = ju_StringTokenizer__init_(var$5, $rt_s(1046));
                        $tokens.$nextToken();
                        $tokens.$nextToken();
                        $ch = jl_Integer_parseInt0($tokens.$nextToken());
                        if ($ch <= 0)
                            $this.$missingGlyph = $glyph;
                        else {
                            if ($ch > 65535)
                                continue;
                            $this.$setGlyph($ch, $glyph);
                        }
                        $glyph.$id0 = $ch;
                        $tokens.$nextToken();
                        $glyph.$srcX = jl_Integer_parseInt0($tokens.$nextToken());
                        $tokens.$nextToken();
                        $glyph.$srcY = jl_Integer_parseInt0($tokens.$nextToken());
                        $tokens.$nextToken();
                        $glyph.$width6 = jl_Integer_parseInt0($tokens.$nextToken());
                        $tokens.$nextToken();
                        $glyph.$height10 = jl_Integer_parseInt0($tokens.$nextToken());
                        $tokens.$nextToken();
                        $glyph.$xoffset = jl_Integer_parseInt0($tokens.$nextToken());
                        $tokens.$nextToken();
                        if ($flip)
                            $glyph.$yoffset = jl_Integer_parseInt0($tokens.$nextToken());
                        else
                            $glyph.$yoffset =  -($glyph.$height10 + jl_Integer_parseInt0($tokens.$nextToken()) | 0);
                        $tokens.$nextToken();
                        $glyph.$xadvance = jl_Integer_parseInt0($tokens.$nextToken());
                        if ($tokens.$hasMoreTokens())
                            $tokens.$nextToken();
                        i: {
                            if ($tokens.$hasMoreTokens())
                                try {
                                    $glyph.$page0 = jl_Integer_parseInt0($tokens.$nextToken());
                                    break i;
                                } catch ($$e) {
                                    $$je = $rt_wrapException($$e);
                                    if ($$je instanceof jl_NumberFormatException) {
                                    } else {
                                        throw $$e;
                                    }
                                }
                        }
                        if ($glyph.$width6 > 0 && $glyph.$height10 > 0)
                            $this.$descent = jl_Math_min($baseLine + $glyph.$yoffset, $this.$descent);
                    }
                }
                $this.$descent = $this.$descent + $this.$padBottom1;
                j: {
                    while (true) {
                        var$5 = $reader.$readLine();
                        if (var$5 === null)
                            break;
                        if (!var$5.$startsWith($rt_s(1047)))
                            break j;
                        $tokens = ju_StringTokenizer__init_(var$5, $rt_s(1046));
                        $tokens.$nextToken();
                        $tokens.$nextToken();
                        $first = jl_Integer_parseInt0($tokens.$nextToken());
                        $tokens.$nextToken();
                        $second = jl_Integer_parseInt0($tokens.$nextToken());
                        if ($first < 0)
                            continue;
                        if ($first > 65535)
                            continue;
                        if ($second < 0)
                            continue;
                        if ($second > 65535)
                            continue;
                        $glyph = $this.$getGlyph($first & 65535);
                        $tokens.$nextToken();
                        $amount = jl_Integer_parseInt0($tokens.$nextToken());
                        if ($glyph !== null)
                            $glyph.$setKerning($second, $amount);
                    }
                }
                $spaceGlyph = $this.$getGlyph(32);
                if ($spaceGlyph === null) {
                    $spaceGlyph = iaagg_BitmapFont$Glyph__init_();
                    $spaceGlyph.$id0 = 32;
                    $xadvanceGlyph = $this.$getGlyph(108);
                    if ($xadvanceGlyph === null)
                        $xadvanceGlyph = $this.$getFirstGlyph();
                    $spaceGlyph.$xadvance = $xadvanceGlyph.$xadvance;
                    $this.$setGlyph(32, $spaceGlyph);
                }
                if (!$spaceGlyph.$width6) {
                    $spaceGlyph.$width6 = $this.$padLeft1 + $spaceGlyph.$xadvance + $this.$padRight1 | 0;
                    $spaceGlyph.$xoffset =  -$this.$padLeft1 | 0;
                }
                $this.$spaceXadvance = $spaceGlyph.$xadvance;
                $xGlyph = null;
                var$7 = $this.$xChars.data;
                var$28 = var$7.length;
                var$10 = 0;
                k: {
                    while (var$10 < var$28) {
                        $xChar = var$7[var$10];
                        $xGlyph = $this.$getGlyph($xChar);
                        if ($xGlyph !== null)
                            break k;
                        var$10 = var$10 + 1 | 0;
                    }
                }
                if ($xGlyph === null)
                    $xGlyph = $this.$getFirstGlyph();
                $this.$xHeight = $xGlyph.$height10 - $padY;
                $capGlyph = null;
                var$7 = $this.$capChars.data;
                var$28 = var$7.length;
                var$10 = 0;
                l: {
                    while (var$10 < var$28) {
                        $capChar = var$7[var$10];
                        $capGlyph = $this.$getGlyph($capChar);
                        if ($capGlyph !== null)
                            break l;
                        var$10 = var$10 + 1 | 0;
                    }
                }
                if ($capGlyph !== null)
                    $this.$capHeight = $capGlyph.$height10;
                else {
                    var$7 = $this.$glyphs0.data;
                    var$28 = var$7.length;
                    var$10 = 0;
                    while (var$10 < var$28) {
                        m: {
                            $page = var$7[var$10];
                            if ($page !== null) {
                                var$33 = $page.data;
                                var$34 = var$33.length;
                                var$35 = 0;
                                while (true) {
                                    if (var$35 >= var$34)
                                        break m;
                                    $glyph = var$33[var$35];
                                    if ($glyph !== null && $glyph.$height10 && $glyph.$width6)
                                        $this.$capHeight = jl_Math_max($this.$capHeight, $glyph.$height10);
                                    var$35 = var$35 + 1 | 0;
                                }
                            }
                        }
                        var$10 = var$10 + 1 | 0;
                    }
                }
                $this.$capHeight = $this.$capHeight - $padY;
                $this.$ascent = $baseLine - $this.$capHeight;
                $this.$down =  -$this.$lineHeight;
                if ($flip) {
                    $this.$ascent =  -$this.$ascent;
                    $this.$down =  -$this.$down;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $ex = $$je;
                    break b;
                } else{
                    var$5 = $$je;
                    break a;
                }
            }
            iaaui_Streams_closeQuietly($reader);
            return;
        }
        try {
            $rt_throw(iaau_ArcRuntimeException__init_(jl_StringBuilder__init_().$append($rt_s(1048)).$append1($fontFile).$toString(), $ex));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;

        }
    }
    iaaui_Streams_closeQuietly($reader);
    $rt_throw(var$5);
}
function iaagg_BitmapFont$BitmapFontData_setGlyphRegion($this, $glyph, $region) {
    var $texture, $invTexWidth, $invTexHeight, $offsetX, $offsetY, $u, $v, $regionWidth, $regionHeight, $atlasRegion, $x, $x2, $y, $y2, var$17, $amount;
    $texture = $region.$getTexture();
    $invTexWidth = 1.0 / $texture.$getWidth0();
    $invTexHeight = 1.0 / $texture.$getHeight0();
    $offsetX = 0.0;
    $offsetY = 0.0;
    $u = $region.$u;
    $v = $region.$v;
    $regionWidth = $region.$getWidth0();
    $regionHeight = $region.$getHeight0();
    if ($region instanceof iaagg_TextureAtlas$AtlasRegion) {
        $atlasRegion = $region;
        $offsetX = $atlasRegion.$offsetX0;
        $offsetY = ($atlasRegion.$originalHeight0 - $atlasRegion.$packedHeight | 0) - $atlasRegion.$offsetY0;
    }
    $x = $glyph.$srcX;
    $x2 = $glyph.$srcX + $glyph.$width6 | 0;
    $y = $glyph.$srcY;
    $y2 = $glyph.$srcY + $glyph.$height10 | 0;
    if ($offsetX <= 0.0)
        $regionWidth = $x2;
    else {
        $x = $x - $offsetX;
        if ($x < 0.0) {
            $glyph.$width6 = $glyph.$width6 + $x | 0;
            $glyph.$xoffset = $glyph.$xoffset - $x | 0;
            $x = 0.0;
        }
        var$17 = $x2 - $offsetX;
        if (var$17 <= $regionWidth)
            $regionWidth = var$17;
        else
            $glyph.$width6 = $glyph.$width6 - (var$17 - $regionWidth) | 0;
    }
    if ($offsetY <= 0.0)
        $regionHeight = $y2;
    else {
        $y = $y - $offsetY;
        if ($y < 0.0) {
            $glyph.$height10 = $glyph.$height10 + $y | 0;
            if ($glyph.$height10 < 0)
                $glyph.$height10 = 0;
            $y = 0.0;
        }
        var$17 = $y2 - $offsetY;
        if (var$17 <= $regionHeight)
            $regionHeight = var$17;
        else {
            $amount = var$17 - $regionHeight;
            $glyph.$height10 = $glyph.$height10 - $amount | 0;
            $glyph.$yoffset = $glyph.$yoffset + $amount | 0;
        }
    }
    $glyph.$u0 = $u + $x * $invTexWidth;
    $glyph.$u20 = $u + $regionWidth * $invTexWidth;
    if (!$this.$flipped0) {
        $glyph.$v20 = $v + $y * $invTexHeight;
        $glyph.$v0 = $v + $regionHeight * $invTexHeight;
    } else {
        $glyph.$v0 = $v + $y * $invTexHeight;
        $glyph.$v20 = $v + $regionHeight * $invTexHeight;
    }
}
function iaagg_BitmapFont$BitmapFontData_setGlyph($this, $ch, $glyph) {
    var var$3, var$4, $page;
    var$3 = $this.$glyphs0.data;
    var$4 = $ch / 512 | 0;
    $page = var$3[var$4];
    if ($page === null) {
        var$3 = $this.$glyphs0.data;
        $page = $rt_createArray(iaagg_BitmapFont$Glyph, 512);
        var$3[var$4] = $page;
    }
    $page.data[$ch & 511] = $glyph;
}
function iaagg_BitmapFont$BitmapFontData_getFirstGlyph($this) {
    var var$1, var$2, var$3, $page, var$5, var$6, var$7, $glyph;
    var$1 = $this.$glyphs0.data;
    var$2 = var$1.length;
    var$3 = 0;
    a: while (true) {
        if (var$3 >= var$2)
            $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1049)));
        b: {
            $page = var$1[var$3];
            if ($page !== null) {
                var$5 = $page.data;
                var$6 = var$5.length;
                var$7 = 0;
                while (true) {
                    if (var$7 >= var$6)
                        break b;
                    $glyph = var$5[var$7];
                    if ($glyph !== null && $glyph.$height10 && $glyph.$width6)
                        break a;
                    var$7 = var$7 + 1 | 0;
                }
            }
        }
        var$3 = var$3 + 1 | 0;
    }
    return $glyph;
}
function iaagg_BitmapFont$BitmapFontData_getGlyph($this, $ch) {
    var $page;
    $page = $this.$glyphs0.data[$ch / 512 | 0];
    if ($page === null)
        return null;
    return $page.data[$ch & 511];
}
function iaagg_BitmapFont$BitmapFontData_getGlyphs($this, $run, $str, $start, $end, $lastGlyph) {
    var $markupEnabled, $scaleX, $missingGlyph, $glyphs, $xAdvances, var$11, var$12, $ch, $glyph, $lastGlyphWidth;
    $markupEnabled = $this.$markupEnabled;
    $scaleX = $this.$scaleX1;
    $missingGlyph = $this.$missingGlyph;
    $glyphs = $run.$glyphs;
    $xAdvances = $run.$xAdvances;
    var$11 = $end - $start | 0;
    $glyphs.$ensureCapacity0(var$11);
    $xAdvances.$ensureCapacity1(var$11 + 1 | 0);
    while ($start < $end) {
        var$12 = $start + 1 | 0;
        $ch = $str.$charAt($start);
        $glyph = $this.$getGlyph($ch);
        if ($glyph === null) {
            if ($missingGlyph === null) {
                $start = var$12;
                continue;
            }
            $glyph = $missingGlyph;
        }
        $glyphs.$add1($glyph);
        if ($lastGlyph !== null)
            $xAdvances.$add12(($lastGlyph.$xadvance + $lastGlyph.$getKerning($ch) | 0) * $scaleX);
        else
            $xAdvances.$add12($glyph.$fixedWidth ? 0.0 :  -$glyph.$xoffset * $scaleX - $this.$padLeft1);
        $start = !$markupEnabled ? var$12 : $ch != 91 ? var$12 : var$12 >= $end ? var$12 : $str.$charAt(var$12) != 91 ? var$12 : var$12 + 1 | 0;
        $lastGlyph = $glyph;
    }
    if ($lastGlyph !== null) {
        $lastGlyphWidth = $lastGlyph.$fixedWidth ? $lastGlyph.$xadvance * $scaleX : ($lastGlyph.$width6 + $lastGlyph.$xoffset | 0) * $scaleX - $this.$padRight1;
        $xAdvances.$add12($lastGlyphWidth);
    }
}
function iaagg_BitmapFont$BitmapFontData_getWrapIndex($this, $glyphs, $start) {
    var $i, $ch;
    $i = $start - 1 | 0;
    if ($this.$isWhitespace($glyphs.$get($i).$id0 & 65535))
        return $i;
    a: {
        while ($i > 0) {
            if (!$this.$isWhitespace($glyphs.$get($i).$id0 & 65535))
                break a;
            $i = $i + (-1) | 0;
        }
    }
    b: {
        while ($i > 0) {
            $ch = $glyphs.$get($i).$id0 & 65535;
            if ($this.$isWhitespace($ch))
                break b;
            if ($this.$isBreakChar($ch))
                break b;
            $i = $i + (-1) | 0;
        }
        return 0;
    }
    return $i + 1 | 0;
}
function iaagg_BitmapFont$BitmapFontData_isBreakChar($this, $c) {
    var var$2, var$3, var$4, $br;
    if ($this.$breakChars === null)
        return 0;
    var$2 = $this.$breakChars.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $br = var$2[var$4];
        if ($c == $br)
            return 1;
        var$4 = var$4 + 1 | 0;
    }
    return 0;
}
function iaagg_BitmapFont$BitmapFontData_isWhitespace($this, $c) {
    switch ($c) {
        case 9:
        case 10:
        case 13:
        case 32:
            break;
        default:
            return 0;
    }
    return 1;
}
function iaagg_BitmapFont$BitmapFontData_setScale($this, $scaleX, $scaleY) {
    var $x, $y;
    if ($scaleX === 0.0)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1050)));
    if ($scaleY === 0.0)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1051)));
    $x = $scaleX / $this.$scaleX1;
    $y = $scaleY / $this.$scaleY2;
    $this.$lineHeight = $this.$lineHeight * $y;
    $this.$spaceXadvance = $this.$spaceXadvance * $x;
    $this.$xHeight = $this.$xHeight * $y;
    $this.$capHeight = $this.$capHeight * $y;
    $this.$ascent = $this.$ascent * $y;
    $this.$descent = $this.$descent * $y;
    $this.$down = $this.$down * $y;
    $this.$padLeft1 = $this.$padLeft1 * $x;
    $this.$padRight1 = $this.$padRight1 * $x;
    $this.$padTop1 = $this.$padTop1 * $y;
    $this.$padBottom1 = $this.$padBottom1 * $y;
    $this.$scaleX1 = $scaleX;
    $this.$scaleY2 = $scaleY;
}
function iaag_TextureData$Factory() {
    jl_Object.call(this);
}
function iaag_TextureData$Factory_loadFromFile($file, $format, $useMipMaps) {
    if ($file === null)
        return null;
    return iaagg_FileTextureData__init_($file, iaag_Pixmap__init_0($file), $format, $useMipMaps);
}
function jlr_Modifier() {
    jl_Object.call(this);
}
var jlr_Modifier_modifierNames = null;
var jlr_Modifier_canonicalOrder = null;
function jlr_Modifier_$callClinit() {
    jlr_Modifier_$callClinit = $rt_eraseClinit(jlr_Modifier);
    jlr_Modifier__clinit_();
}
function jlr_Modifier_isPublic($mod) {
    jlr_Modifier_$callClinit();
    return !($mod & 1) ? 0 : 1;
}
function jlr_Modifier_toString($mod) {
    var $sb, $modifierNames, $index, var$5, var$6, var$7, $modifier;
    jlr_Modifier_$callClinit();
    $sb = jl_StringBuilder__init_();
    $modifierNames = jlr_Modifier_getModifierNames();
    $index = 0;
    var$5 = jlr_Modifier_canonicalOrder.data;
    var$6 = var$5.length;
    var$7 = 0;
    while (var$7 < var$6) {
        $modifier = var$5[var$7];
        if ($mod & $modifier) {
            if ($sb.$length() > 0)
                $sb.$append0(32);
            $sb.$append($modifierNames.data[$index]);
        }
        $index = $index + 1 | 0;
        var$7 = var$7 + 1 | 0;
    }
    return $sb.$toString();
}
function jlr_Modifier_getModifierNames() {
    var var$1, var$2;
    jlr_Modifier_$callClinit();
    if (jlr_Modifier_modifierNames === null) {
        var$1 = $rt_createArray(jl_String, 12);
        var$2 = var$1.data;
        var$2[0] = $rt_s(1052);
        var$2[1] = $rt_s(1053);
        var$2[2] = $rt_s(1054);
        var$2[3] = $rt_s(1055);
        var$2[4] = $rt_s(1056);
        var$2[5] = $rt_s(1057);
        var$2[6] = $rt_s(1058);
        var$2[7] = $rt_s(1059);
        var$2[8] = $rt_s(1060);
        var$2[9] = $rt_s(1061);
        var$2[10] = $rt_s(1062);
        var$2[11] = $rt_s(1063);
        jlr_Modifier_modifierNames = var$1;
    }
    return jlr_Modifier_modifierNames;
}
function jlr_Modifier__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(12);
    var$2 = var$1.data;
    var$2[0] = 1;
    var$2[1] = 4;
    var$2[2] = 2;
    var$2[3] = 1024;
    var$2[4] = 8;
    var$2[5] = 16;
    var$2[6] = 128;
    var$2[7] = 64;
    var$2[8] = 32;
    var$2[9] = 256;
    var$2[10] = 2048;
    var$2[11] = 512;
    jlr_Modifier_canonicalOrder = var$1;
}
function iaamo_PolygonMapObject() {
    iaam_MapObject.call(this);
    this.$polygon = null;
}
function iaamo_PolygonMapObject__init_(var_0) {
    var var_1 = new iaamo_PolygonMapObject();
    iaamo_PolygonMapObject__init_0(var_1, var_0);
    return var_1;
}
function iaamo_PolygonMapObject__init_0($this, $polygon) {
    iaam_MapObject__init_0($this);
    $this.$polygon = $polygon;
}
function iaam_TileSet() {
    var a = this; jl_Object.call(a);
    a.$name12 = null;
    a.$properties2 = null;
    a.$tiles0 = null;
}
function iaam_TileSet__init_() {
    var var_0 = new iaam_TileSet();
    iaam_TileSet__init_0(var_0);
    return var_0;
}
function iaam_TileSet__init_0($this) {
    jl_Object__init_0($this);
    $this.$properties2 = iaam_MapProperties__init_();
    $this.$tiles0 = iaac_IntMap__init_();
}
function iaam_TileSet_getProperties($this) {
    return $this.$properties2;
}
function iaam_TileSet_get($this, $id) {
    return $this.$tiles0.$get($id);
}
function iaam_TileSet_iterator($this) {
    return $this.$tiles0.$values5().$iterator();
}
function iaam_TileSet_put($this, $id, $tile) {
    $this.$tiles0.$put11($id, $tile);
}
function it_Phases$3$lambda$null$6$lambda$_26_0() {
    var a = this; jl_Object.call(a);
    a.$_070 = 0;
    a.$_127 = 0.0;
}
function it_Phases$3$lambda$null$6$lambda$_26_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$3$lambda$null$6$lambda$_26_0();
    it_Phases$3$lambda$null$6$lambda$_26_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$3$lambda$null$6$lambda$_26_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_070 = var$1;
    var$0.$_127 = var$2;
}
function it_Phases$3$lambda$null$6$lambda$_26_0_get(var$0, var$1) {
    it_Phases$3_lambda$null$5(var$0.$_070, var$0.$_127, var$1);
}
function iaam_TileSets() {
    jl_Object.call(this);
    this.$tilesets0 = null;
}
function iaam_TileSets__init_() {
    var var_0 = new iaam_TileSets();
    iaam_TileSets__init_0(var_0);
    return var_0;
}
function iaam_TileSets__init_0($this) {
    jl_Object__init_0($this);
    $this.$tilesets0 = iaac_Array__init_0();
}
function iaam_TileSets_getTileSet($this, $index) {
    return $this.$tilesets0.$get($index);
}
function iaam_TileSets_addTileSet($this, $tileset) {
    $this.$tilesets0.$add1($tileset);
}
function iaam_TileSets_getTile($this, $id) {
    var $i, $tileset, $tile;
    $i = $this.$tilesets0.$size - 1 | 0;
    while (true) {
        if ($i < 0)
            return null;
        $tileset = $this.$tilesets0.$get($i);
        $tile = $tileset.$get48($id);
        if ($tile !== null)
            break;
        $i = $i + (-1) | 0;
    }
    return $tile;
}
function iaa_KeyBinds$KeyBind() {
}
function it_Phases$lambda$static$5$lambda$_62_0() {
    jl_Object.call(this);
    this.$_071 = 0.0;
}
function it_Phases$lambda$static$5$lambda$_62_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$static$5$lambda$_62_0();
    it_Phases$lambda$static$5$lambda$_62_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$static$5$lambda$_62_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_071 = var$1;
}
function it_Phases$lambda$static$5$lambda$_62_0_get(var$0, var$1) {
    it_Phases_lambda$null$4(var$0.$_071, var$1);
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable();
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function cjj_Inflater() {
    cjj_ZStream.call(this);
    this.$finished1 = 0;
}
function cjj_Inflater__init_(var_0) {
    var var_1 = new cjj_Inflater();
    cjj_Inflater__init_0(var_1, var_0);
    return var_1;
}
function cjj_Inflater__init_1(var_0, var_1) {
    var var_2 = new cjj_Inflater();
    cjj_Inflater__init_2(var_2, var_0, var_1);
    return var_2;
}
function cjj_Inflater__init_0($this, $nowrap) {
    cjj_Inflater__init_2($this, 15, $nowrap);
}
function cjj_Inflater__init_2($this, $w, $nowrap) {
    var $ret;
    cjj_ZStream__init_0($this);
    $this.$finished1 = 0;
    $ret = cjj_Inflater_init($this, $w, $nowrap);
    if (!$ret)
        return;
    $rt_throw(cjj_GZIPException__init_(jl_StringBuilder__init_().$append3($ret).$append($rt_s(16)).$append($this.$msg).$toString()));
}
function cjj_Inflater_init($this, $w, $nowrap) {
    var var$3;
    $this.$finished1 = 0;
    $this.$istate = cjj_Inflate__init_($this);
    var$3 = $this.$istate;
    if ($nowrap)
        $w =  -$w;
    return cjj_Inflate_inflateInit(var$3, $w);
}
function cjj_Inflater_inflate($this, $f) {
    var $ret;
    if ($this.$istate === null)
        return (-2);
    $ret = cjj_Inflate_inflate($this.$istate, $f);
    if ($ret == 1)
        $this.$finished1 = 1;
    return $ret;
}
function ju_AbstractMap() {
    jl_Object.call(this);
    this.$cachedValues = null;
}
function ju_AbstractMap__init_() {
    var var_0 = new ju_AbstractMap();
    ju_AbstractMap__init_0(var_0);
    return var_0;
}
function ju_AbstractMap__init_0($this) {
    jl_Object__init_0($this);
}
function ju_HashMap() {
    var a = this; ju_AbstractMap.call(a);
    a.$elementCount0 = 0;
    a.$elementData0 = null;
    a.$modCount0 = 0;
    a.$loadFactor2 = 0.0;
    a.$threshold3 = 0;
}
function ju_HashMap__init_() {
    var var_0 = new ju_HashMap();
    ju_HashMap__init_0(var_0);
    return var_0;
}
function ju_HashMap__init_1(var_0) {
    var var_1 = new ju_HashMap();
    ju_HashMap__init_2(var_1, var_0);
    return var_1;
}
function ju_HashMap__init_3(var_0, var_1) {
    var var_2 = new ju_HashMap();
    ju_HashMap__init_4(var_2, var_0, var_1);
    return var_2;
}
function ju_HashMap_newElementArray($this, $s) {
    return $rt_createArray(ju_HashMap$HashEntry, $s);
}
function ju_HashMap__init_0($this) {
    ju_HashMap__init_2($this, 16);
}
function ju_HashMap__init_2($this, $capacity) {
    ju_HashMap__init_4($this, $capacity, 0.75);
}
function ju_HashMap_calculateCapacity($x) {
    var var$2, var$3;
    if ($x >= 1073741824)
        return 1073741824;
    if (!$x)
        return 16;
    var$2 = $x - 1 | 0;
    var$3 = var$2 | var$2 >> 1;
    var$3 = var$3 | var$3 >> 2;
    var$3 = var$3 | var$3 >> 4;
    var$3 = var$3 | var$3 >> 8;
    var$3 = var$3 | var$3 >> 16;
    return var$3 + 1 | 0;
}
function ju_HashMap__init_4($this, $capacity, $loadFactor) {
    var var$3;
    ju_AbstractMap__init_0($this);
    if ($capacity >= 0 && $loadFactor > 0.0) {
        var$3 = ju_HashMap_calculateCapacity($capacity);
        $this.$elementCount0 = 0;
        $this.$elementData0 = $this.$newElementArray0(var$3);
        $this.$loadFactor2 = $loadFactor;
        ju_HashMap_computeThreshold($this);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
}
function ju_HashMap_computeThreshold($this) {
    $this.$threshold3 = $this.$elementData0.data.length * $this.$loadFactor2 | 0;
}
function ju_HashMap_get($this, $key) {
    var $m;
    $m = ju_HashMap_getEntry($this, $key);
    if ($m === null)
        return null;
    return $m.$value2;
}
function ju_HashMap_getEntry($this, $key) {
    var $m, $hash, $index;
    if ($key === null)
        $m = ju_HashMap_findNullKeyEntry($this);
    else {
        $hash = ju_HashMap_computeHashCode($key);
        $index = $hash & ($this.$elementData0.data.length - 1 | 0);
        $m = ju_HashMap_findNonNullKeyEntry($this, $key, $index, $hash);
    }
    return $m;
}
function ju_HashMap_findNonNullKeyEntry($this, $key, $index, $keyHash) {
    var $m, var$5;
    $m = $this.$elementData0.data[$index];
    while ($m !== null) {
        if ($m.$origKeyHash == $keyHash) {
            var$5 = $m.$key0;
            if (ju_HashMap_areEqualKeys($key, var$5))
                break;
        }
        $m = $m.$next2;
    }
    return $m;
}
function ju_HashMap_findNullKeyEntry($this) {
    var $m;
    $m = $this.$elementData0.data[0];
    while ($m !== null && $m.$key0 !== null) {
        $m = $m.$next2;
    }
    return $m;
}
function ju_HashMap_put($this, $key, $value) {
    return $this.$putImpl($key, $value);
}
function ju_HashMap_putImpl($this, $key, $value) {
    var $entry, var$4, $hash, $index, $result;
    if ($key === null) {
        $entry = ju_HashMap_findNullKeyEntry($this);
        if ($entry === null) {
            $this.$modCount0 = $this.$modCount0 + 1 | 0;
            $entry = $this.$createHashedEntry(null, 0, 0);
            var$4 = $this.$elementCount0 + 1 | 0;
            $this.$elementCount0 = var$4;
            if (var$4 > $this.$threshold3)
                $this.$rehash();
        }
    } else {
        $hash = ju_HashMap_computeHashCode($key);
        $index = $hash & ($this.$elementData0.data.length - 1 | 0);
        $entry = ju_HashMap_findNonNullKeyEntry($this, $key, $index, $hash);
        if ($entry === null) {
            $this.$modCount0 = $this.$modCount0 + 1 | 0;
            $entry = $this.$createHashedEntry($key, $index, $hash);
            var$4 = $this.$elementCount0 + 1 | 0;
            $this.$elementCount0 = var$4;
            if (var$4 > $this.$threshold3)
                $this.$rehash();
        }
    }
    $result = $entry.$value2;
    $entry.$value2 = $value;
    return $result;
}
function ju_HashMap_createHashedEntry($this, $key, $index, $hash) {
    var $entry;
    $entry = ju_HashMap$HashEntry__init_($key, $hash);
    $entry.$next2 = $this.$elementData0.data[$index];
    $this.$elementData0.data[$index] = $entry;
    return $entry;
}
function ju_HashMap_rehash($this, $capacity) {
    var $length, $newData, $i, $entry, var$6, $index, $next;
    $length = ju_HashMap_calculateCapacity(!$capacity ? 1 : $capacity << 1);
    $newData = $this.$newElementArray0($length);
    $i = 0;
    while ($i < $this.$elementData0.data.length) {
        $entry = $this.$elementData0.data[$i];
        $this.$elementData0.data[$i] = null;
        while ($entry !== null) {
            var$6 = $newData.data;
            $index = $entry.$origKeyHash & ($length - 1 | 0);
            $next = $entry.$next2;
            $entry.$next2 = var$6[$index];
            var$6[$index] = $entry;
            $entry = $next;
        }
        $i = $i + 1 | 0;
    }
    $this.$elementData0 = $newData;
    ju_HashMap_computeThreshold($this);
}
function ju_HashMap_rehash0($this) {
    $this.$rehash0($this.$elementData0.data.length);
}
function ju_HashMap_remove($this, $key) {
    var $entry;
    $entry = ju_HashMap_removeEntry($this, $key);
    if ($entry === null)
        return null;
    return $entry.$value2;
}
function ju_HashMap_removeEntry($this, $key) {
    var $index, $last, $entry, $entry_0, $hash;
    a: {
        $index = 0;
        $last = null;
        if ($key === null) {
            $entry = $this.$elementData0.data[0];
            while ($entry !== null) {
                if ($entry.$key0 === null)
                    break a;
                $entry_0 = $entry.$next2;
                $last = $entry;
                $entry = $entry_0;
            }
        } else {
            $hash = ju_HashMap_computeHashCode($key);
            $index = $hash & ($this.$elementData0.data.length - 1 | 0);
            $entry = $this.$elementData0.data[$index];
            while ($entry !== null && !($entry.$origKeyHash == $hash && ju_HashMap_areEqualKeys($key, $entry.$key0))) {
                $entry_0 = $entry.$next2;
                $last = $entry;
                $entry = $entry_0;
            }
        }
    }
    if ($entry === null)
        return null;
    if ($last !== null)
        $last.$next2 = $entry.$next2;
    else
        $this.$elementData0.data[$index] = $entry.$next2;
    $this.$modCount0 = $this.$modCount0 + 1 | 0;
    $this.$elementCount0 = $this.$elementCount0 - 1 | 0;
    return $entry;
}
function ju_HashMap_values($this) {
    if ($this.$cachedValues === null)
        $this.$cachedValues = ju_HashMap$2__init_($this);
    return $this.$cachedValues;
}
function ju_HashMap_computeHashCode($key) {
    return $key.$hashCode();
}
function ju_HashMap_areEqualKeys($key1, $key2) {
    return $key1 !== $key2 && !$key1.$equals($key2) ? 0 : 1;
}
function iaag_PixmapIO() {
    jl_Object.call(this);
}
function iaag_PixmapIO_readCIM($file) {
    return iaag_PixmapIO$CIM_read($file);
}
function it_Boss$laser$lambda$_19_0() {
    var a = this; jl_Object.call(a);
    a.$_072 = null;
    a.$_128 = null;
    a.$_26 = 0.0;
}
function it_Boss$laser$lambda$_19_0__init_(var_0, var_1, var_2) {
    var var_3 = new it_Boss$laser$lambda$_19_0();
    it_Boss$laser$lambda$_19_0__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function it_Boss$laser$lambda$_19_0__init_0(var$0, var$1, var$2, var$3) {
    jl_Object__init_0(var$0);
    var$0.$_072 = var$1;
    var$0.$_128 = var$2;
    var$0.$_26 = var$3;
}
function it_Boss$laser$lambda$_19_0_run(var$0) {
    it_Boss_lambda$laser$5(var$0.$_072, var$0.$_128, var$0.$_26);
}
function it_Phases$3$lambda$null$2$lambda$_30_0() {
    jl_Object.call(this);
}
function it_Phases$3$lambda$null$2$lambda$_30_0__init_() {
    var var_0 = new it_Phases$3$lambda$null$2$lambda$_30_0();
    it_Phases$3$lambda$null$2$lambda$_30_0__init_0(var_0);
    return var_0;
}
function it_Phases$3$lambda$null$2$lambda$_30_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$3$lambda$null$2$lambda$_30_0_get(var$0, var$1) {
    it_Phases$3_lambda$null$1(var$1);
}
function jnc_CoderResult() {
    var a = this; jl_Object.call(a);
    a.$kind = 0;
    a.$length3 = 0;
}
var jnc_CoderResult_UNDERFLOW = null;
var jnc_CoderResult_OVERFLOW = null;
function jnc_CoderResult_$callClinit() {
    jnc_CoderResult_$callClinit = $rt_eraseClinit(jnc_CoderResult);
    jnc_CoderResult__clinit_();
}
function jnc_CoderResult__init_(var_0, var_1) {
    var var_2 = new jnc_CoderResult();
    jnc_CoderResult__init_0(var_2, var_0, var_1);
    return var_2;
}
function jnc_CoderResult__init_0($this, $kind, $length) {
    jnc_CoderResult_$callClinit();
    jl_Object__init_0($this);
    $this.$kind = $kind;
    $this.$length3 = $length;
}
function jnc_CoderResult_isUnderflow($this) {
    return $this.$kind ? 0 : 1;
}
function jnc_CoderResult_isOverflow($this) {
    return $this.$kind != 1 ? 0 : 1;
}
function jnc_CoderResult_isError($this) {
    return !$this.$isMalformed() && !$this.$isUnmappable() ? 0 : 1;
}
function jnc_CoderResult_isMalformed($this) {
    return $this.$kind != 2 ? 0 : 1;
}
function jnc_CoderResult_isUnmappable($this) {
    return $this.$kind != 3 ? 0 : 1;
}
function jnc_CoderResult_length($this) {
    if ($this.$isError())
        return $this.$length3;
    $rt_throw(jl_UnsupportedOperationException__init_());
}
function jnc_CoderResult_malformedForLength($length) {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult__init_(2, $length);
}
function jnc_CoderResult_throwException($this) {
    switch ($this.$kind) {
        case 0:
            $rt_throw(jnc_BufferUnderflowException__init_());
        case 1:
            $rt_throw(jnc_BufferOverflowException__init_());
        case 2:
            $rt_throw(jnc_MalformedInputException__init_($this.$length3));
        case 3:
            $rt_throw(jnc_UnmappableCharacterException__init_($this.$length3));
        default:
    }
}
function jnc_CoderResult__clinit_() {
    jnc_CoderResult_UNDERFLOW = jnc_CoderResult__init_(0, 0);
    jnc_CoderResult_OVERFLOW = jnc_CoderResult__init_(1, 0);
}
function oti_Structure() {
    jl_Object.call(this);
}
function jur_EOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter1 = 0;
}
function jur_EOLSet__init_(var_0) {
    var var_1 = new jur_EOLSet();
    jur_EOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_EOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_0($this);
    $this.$consCounter1 = $counter;
}
function jur_EOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound, var$5, var$6, $ch;
    $rightBound = !$matchResult.$hasAnchoringBounds() ? $testString.$length() : $matchResult.$getRightBound();
    if ($strIndex >= $rightBound) {
        $matchResult.$setConsumed($this.$consCounter1, 0);
        return $this.$next.$matches($strIndex, $testString, $matchResult);
    }
    var$5 = $rightBound - $strIndex | 0;
    if (var$5 == 2 && $testString.$charAt($strIndex) == 13) {
        var$6 = $strIndex + 1 | 0;
        if ($testString.$charAt(var$6) == 10) {
            $matchResult.$setConsumed($this.$consCounter1, 0);
            return $this.$next.$matches($strIndex, $testString, $matchResult);
        }
    }
    a: {
        if (var$5 == 1) {
            $ch = $testString.$charAt($strIndex);
            if ($ch == 10)
                break a;
            if ($ch == 13)
                break a;
            if ($ch == 133)
                break a;
            if (($ch | 1) == 8233)
                break a;
        }
        return (-1);
    }
    $matchResult.$setConsumed($this.$consCounter1, 0);
    return $this.$next.$matches($strIndex, $testString, $matchResult);
}
function jur_EOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter1) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter1, (-1));
    return $res;
}
function jur_EOLSet_getName($this) {
    return $rt_s(1064);
}
function iaag_TextureData() {
}
function i_Renderer$1() {
    iaagg_Shader.call(this);
    this.$this$014 = null;
}
function i_Renderer$1__init_(var_0, var_1, var_2) {
    var var_3 = new i_Renderer$1();
    i_Renderer$1__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function i_Renderer$1__init_0($this, $this$0, $x0, $x1) {
    $this.$this$014 = $this$0;
    iaagg_Shader__init_0($this, $x0, $x1);
}
function i_Renderer$1_apply($this) {
    i_Renderer_access$100($this.$this$014).$setUniformf2($rt_s(1065), i_Renderer_access$000($this.$this$014));
}
function jur_Lexer() {
    var a = this; jl_Object.call(a);
    a.$pattern = null;
    a.$flags0 = 0;
    a.$mode4 = 0;
    a.$savedMode = 0;
    a.$lookBack = 0;
    a.$ch1 = 0;
    a.$lookAhead = 0;
    a.$patternFullLength = 0;
    a.$curST = null;
    a.$lookAheadST = null;
    a.$index7 = 0;
    a.$prevNW = 0;
    a.$curToc = 0;
    a.$lookAheadToc = 0;
    a.$orig = null;
}
var jur_Lexer_decompTable = null;
var jur_Lexer_singleDecompTable = null;
var jur_Lexer_singleDecompTableSize = 0;
function jur_Lexer__init_(var_0, var_1) {
    var var_2 = new jur_Lexer();
    jur_Lexer__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_Lexer__init_0($this, $pattern, $flags) {
    jl_Object__init_0($this);
    $this.$mode4 = 1;
    $this.$orig = $pattern;
    if (($flags & 16) > 0)
        $pattern = jur_Pattern_quote($pattern);
    else if (($flags & 128) > 0)
        $pattern = jur_Lexer_normalize($pattern);
    $this.$pattern = $rt_createCharArray($pattern.$length() + 2 | 0);
    jl_System_arraycopy($pattern.$toCharArray(), 0, $this.$pattern, 0, $pattern.$length());
    $this.$pattern.data[$this.$pattern.data.length - 1 | 0] = 0;
    $this.$pattern.data[$this.$pattern.data.length - 2 | 0] = 0;
    $this.$patternFullLength = $this.$pattern.data.length;
    $this.$flags0 = $flags;
    jur_Lexer_movePointer($this);
    jur_Lexer_movePointer($this);
}
function jur_Lexer_peek($this) {
    return $this.$ch1;
}
function jur_Lexer_setMode($this, $mode) {
    if ($mode > 0 && $mode < 3)
        $this.$mode4 = $mode;
    if ($mode == 1)
        jur_Lexer_reread($this);
}
function jur_Lexer_restoreFlags($this, $flags) {
    $this.$flags0 = $flags;
    $this.$lookAhead = $this.$ch1;
    $this.$lookAheadST = $this.$curST;
    $this.$index7 = $this.$curToc + 1 | 0;
    $this.$lookAheadToc = $this.$curToc;
    jur_Lexer_movePointer($this);
}
function jur_Lexer_peekSpecial($this) {
    return $this.$curST;
}
function jur_Lexer_isSpecial($this) {
    return $this.$curST === null ? 0 : 1;
}
function jur_Lexer_isNextSpecial($this) {
    return $this.$lookAheadST === null ? 0 : 1;
}
function jur_Lexer_next($this) {
    jur_Lexer_movePointer($this);
    return $this.$lookBack;
}
function jur_Lexer_nextSpecial($this) {
    var $res;
    $res = $this.$curST;
    jur_Lexer_movePointer($this);
    return $res;
}
function jur_Lexer_lookAhead($this) {
    return $this.$lookAhead;
}
function jur_Lexer_back($this) {
    return $this.$lookBack;
}
function jur_Lexer_normalize($input) {
    return $input;
}
function jur_Lexer_reread($this) {
    $this.$lookAhead = $this.$ch1;
    $this.$lookAheadST = $this.$curST;
    $this.$index7 = $this.$lookAheadToc;
    $this.$lookAheadToc = $this.$curToc;
    jur_Lexer_movePointer($this);
}
function jur_Lexer_movePointer($this) {
    var $reread, $nonCap, $behind, $mod, var$5, $cs, $negative, $$je;
    $this.$lookBack = $this.$ch1;
    $this.$ch1 = $this.$lookAhead;
    $this.$curST = $this.$lookAheadST;
    $this.$curToc = $this.$lookAheadToc;
    $this.$lookAheadToc = $this.$index7;
    while (true) {
        $reread = 0;
        $this.$lookAhead = $this.$index7 >= $this.$pattern.data.length ? 0 : jur_Lexer_nextCodePoint($this);
        $this.$lookAheadST = null;
        if ($this.$mode4 == 4) {
            if ($this.$lookAhead != 92)
                return;
            $this.$lookAhead = $this.$index7 >= $this.$pattern.data.length ? 0 : $this.$pattern.data[jur_Lexer_nextIndex($this)];
            switch ($this.$lookAhead) {
                case 69:
                    break;
                default:
                    $this.$lookAhead = 92;
                    $this.$index7 = $this.$prevNW;
                    return;
            }
            $this.$mode4 = $this.$savedMode;
            $this.$lookAhead = $this.$index7 > ($this.$pattern.data.length - 2 | 0) ? 0 : jur_Lexer_nextCodePoint($this);
        }
        a: {
            if ($this.$lookAhead != 92) {
                if ($this.$mode4 == 1)
                    switch ($this.$lookAhead) {
                        case 36:
                            $this.$lookAhead = (-536870876);
                            break a;
                        case 40:
                            if ($this.$pattern.data[$this.$index7] != 63) {
                                $this.$lookAhead = (-2147483608);
                                break a;
                            }
                            jur_Lexer_nextIndex($this);
                            $nonCap = $this.$pattern.data[$this.$index7];
                            $behind = 0;
                            while (true) {
                                b: {
                                    if ($behind) {
                                        $behind = 0;
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 61:
                                                $this.$lookAhead = (-134217688);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$toString(), $this.$index7));
                                        }
                                        $this.$lookAhead = (-67108824);
                                        jur_Lexer_nextIndex($this);
                                    } else {
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 60:
                                                jur_Lexer_nextIndex($this);
                                                $nonCap = $this.$pattern.data[$this.$index7];
                                                $behind = 1;
                                                break b;
                                            case 61:
                                                $this.$lookAhead = (-536870872);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            case 62:
                                                $this.$lookAhead = (-33554392);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $this.$lookAhead = jur_Lexer_readFlags($this);
                                                if ($this.$lookAhead < 256) {
                                                    $this.$flags0 = $this.$lookAhead;
                                                    $this.$lookAhead = $this.$lookAhead << 16;
                                                    $this.$lookAhead = (-1073741784) | $this.$lookAhead;
                                                    break b;
                                                }
                                                $this.$lookAhead = $this.$lookAhead & 255;
                                                $this.$flags0 = $this.$lookAhead;
                                                $this.$lookAhead = $this.$lookAhead << 16;
                                                $this.$lookAhead = (-16777176) | $this.$lookAhead;
                                                break b;
                                        }
                                        $this.$lookAhead = (-268435416);
                                        jur_Lexer_nextIndex($this);
                                    }
                                }
                                if (!$behind)
                                    break;
                            }
                            break a;
                        case 41:
                            $this.$lookAhead = (-536870871);
                            break a;
                        case 42:
                        case 43:
                        case 63:
                            $mod = $this.$index7 >= $this.$pattern.data.length ? 42 : $this.$pattern.data[$this.$index7];
                            switch ($mod) {
                                case 43:
                                    $this.$lookAhead = $this.$lookAhead | (-2147483648);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                case 63:
                                    $this.$lookAhead = $this.$lookAhead | (-1073741824);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                default:
                            }
                            $this.$lookAhead = $this.$lookAhead | (-536870912);
                            break a;
                        case 46:
                            $this.$lookAhead = (-536870866);
                            break a;
                        case 91:
                            $this.$lookAhead = (-536870821);
                            $this.$setMode(2);
                            break a;
                        case 93:
                            if ($this.$mode4 != 2)
                                break a;
                            $this.$lookAhead = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead = (-536870818);
                            break a;
                        case 123:
                            $this.$lookAheadST = jur_Lexer_processQuantifier($this, $this.$lookAhead);
                            break a;
                        case 124:
                            $this.$lookAhead = (-536870788);
                            break a;
                        default:
                    }
                else if ($this.$mode4 == 2)
                    switch ($this.$lookAhead) {
                        case 38:
                            $this.$lookAhead = (-536870874);
                            break a;
                        case 45:
                            $this.$lookAhead = (-536870867);
                            break a;
                        case 91:
                            $this.$lookAhead = (-536870821);
                            break a;
                        case 93:
                            $this.$lookAhead = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead = (-536870818);
                            break a;
                        default:
                    }
            } else {
                var$5 = $this.$index7 >= ($this.$pattern.data.length - 2 | 0) ? (-1) : jur_Lexer_nextCodePoint($this);
                c: {
                    $this.$lookAhead = var$5;
                    switch ($this.$lookAhead) {
                        case -1:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$toString(), $this.$index7));
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 64:
                        case 91:
                        case 92:
                        case 93:
                        case 94:
                        case 95:
                        case 96:
                        case 118:
                            break;
                        case 48:
                            $this.$lookAhead = jur_Lexer_readOctals($this);
                            break a;
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                            if ($this.$mode4 != 1)
                                break a;
                            $this.$lookAhead = (-2147483648) | $this.$lookAhead;
                            break a;
                        case 65:
                            $this.$lookAhead = (-2147483583);
                            break a;
                        case 66:
                            $this.$lookAhead = (-2147483582);
                            break a;
                        case 67:
                        case 69:
                        case 70:
                        case 72:
                        case 73:
                        case 74:
                        case 75:
                        case 76:
                        case 77:
                        case 78:
                        case 79:
                        case 82:
                        case 84:
                        case 85:
                        case 86:
                        case 88:
                        case 89:
                        case 103:
                        case 104:
                        case 105:
                        case 106:
                        case 107:
                        case 108:
                        case 109:
                        case 111:
                        case 113:
                        case 121:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$toString(), $this.$index7));
                        case 68:
                        case 83:
                        case 87:
                        case 100:
                        case 115:
                        case 119:
                            $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass(jl_String__init_0($this.$pattern, $this.$prevNW, 1), 0);
                            $this.$lookAhead = 0;
                            break a;
                        case 71:
                            $this.$lookAhead = (-2147483577);
                            break a;
                        case 80:
                        case 112:
                            break c;
                        case 81:
                            $this.$savedMode = $this.$mode4;
                            $this.$mode4 = 4;
                            $reread = 1;
                            break a;
                        case 90:
                            $this.$lookAhead = (-2147483558);
                            break a;
                        case 97:
                            $this.$lookAhead = 7;
                            break a;
                        case 98:
                            $this.$lookAhead = (-2147483550);
                            break a;
                        case 99:
                            if ($this.$index7 >= ($this.$pattern.data.length - 2 | 0))
                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$toString(), $this.$index7));
                            $this.$lookAhead = $this.$pattern.data[jur_Lexer_nextIndex($this)] & 31;
                            break a;
                        case 101:
                            $this.$lookAhead = 27;
                            break a;
                        case 102:
                            $this.$lookAhead = 12;
                            break a;
                        case 110:
                            $this.$lookAhead = 10;
                            break a;
                        case 114:
                            $this.$lookAhead = 13;
                            break a;
                        case 116:
                            $this.$lookAhead = 9;
                            break a;
                        case 117:
                            $this.$lookAhead = jur_Lexer_readHex($this, 4);
                            break a;
                        case 120:
                            $this.$lookAhead = jur_Lexer_readHex($this, 2);
                            break a;
                        case 122:
                            $this.$lookAhead = (-2147483526);
                            break a;
                        default:
                    }
                    break a;
                }
                $cs = jur_Lexer_parseCharClassName($this);
                $negative = 0;
                if ($this.$lookAhead == 80)
                    $negative = 1;
                try {
                    $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass($cs, $negative);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof ju_MissingResourceException) {
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$toString(), $this.$index7));
                    } else {
                        throw $$e;
                    }
                }
                $this.$lookAhead = 0;
            }
        }
        if ($reread)
            continue;
        else
            break;
    }
}
function jur_Lexer_parseCharClassName($this) {
    var $sb, $ch, $res;
    $sb = jl_StringBuilder__init_0(10);
    if ($this.$index7 < ($this.$pattern.data.length - 2 | 0)) {
        if ($this.$pattern.data[$this.$index7] != 123)
            return jl_StringBuilder__init_().$append($rt_s(1066)).$append(jl_String__init_0($this.$pattern, jur_Lexer_nextIndex($this), 1)).$toString();
        jur_Lexer_nextIndex($this);
        $ch = 0;
        a: {
            while ($this.$index7 < ($this.$pattern.data.length - 2 | 0)) {
                $ch = $this.$pattern.data[jur_Lexer_nextIndex($this)];
                if ($ch == 125)
                    break a;
                $sb.$append0($ch);
            }
        }
        if ($ch != 125)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$toString(), $this.$index7));
    }
    if (!$sb.$length())
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$toString(), $this.$index7));
    $res = $sb.$toString();
    if ($res.$length() == 1)
        return jl_StringBuilder__init_().$append($rt_s(1066)).$append($res).$toString();
    b: {
        c: {
            if ($res.$length() > 3) {
                if ($res.$startsWith($rt_s(1066)))
                    break c;
                if ($res.$startsWith($rt_s(1067)))
                    break c;
            }
            break b;
        }
        $res = $res.$substring(2);
    }
    return $res;
}
function jur_Lexer_processQuantifier($this, $ch) {
    var $sb, $min, $max, $mod, $$je;
    $sb = jl_StringBuilder__init_0(4);
    $min = (-1);
    $max = 2147483647;
    a: {
        while (true) {
            if ($this.$index7 >= $this.$pattern.data.length)
                break a;
            $ch = $this.$pattern.data[jur_Lexer_nextIndex($this)];
            if ($ch == 125)
                break a;
            if ($ch == 44 && $min < 0)
                try {
                    $min = jl_Integer_parseInt($sb.$toString(), 10);
                    $sb.$delete0(0, $sb.$length());
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_NumberFormatException) {
                        break;
                    } else {
                        throw $$e;
                    }
                }
            $sb.$append0($ch & 65535);
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$toString(), $this.$index7));
    }
    if ($ch != 125)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$toString(), $this.$index7));
    if ($sb.$length() > 0)
        b: {
            try {
                $max = jl_Integer_parseInt($sb.$toString(), 10);
                if ($min >= 0)
                    break b;
                $min = $max;
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                } else {
                    throw $$e;
                }
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$toString(), $this.$index7));
        }
    else if ($min < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$toString(), $this.$index7));
    if (($min | $max | ($max - $min | 0)) < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$toString(), $this.$index7));
    $mod = $this.$index7 >= $this.$pattern.data.length ? 42 : $this.$pattern.data[$this.$index7];
    c: {
        switch ($mod) {
            case 43:
                $this.$lookAhead = (-2147483525);
                jur_Lexer_nextIndex($this);
                break c;
            case 63:
                $this.$lookAhead = (-1073741701);
                jur_Lexer_nextIndex($this);
                break c;
            default:
        }
        $this.$lookAhead = (-536870789);
    }
    return jur_Quantifier__init_($min, $max);
}
function jur_Lexer_toString($this) {
    return $this.$orig;
}
function jur_Lexer_isEmpty($this) {
    return !$this.$ch1 && !$this.$lookAhead && $this.$index7 == $this.$patternFullLength && !$this.$isSpecial() ? 1 : 0;
}
function jur_Lexer_isLetter($ch) {
    return $ch < 0 ? 0 : 1;
}
function jur_Lexer_isLetter0($this) {
    return !$this.$isEmpty() && !$this.$isSpecial() && jur_Lexer_isLetter($this.$ch1) ? 1 : 0;
}
function jur_Lexer_isHighSurrogate0($this) {
    return $this.$ch1 <= 56319 && $this.$ch1 >= 55296 ? 1 : 0;
}
function jur_Lexer_isLowSurrogate0($this) {
    return $this.$ch1 <= 57343 && $this.$ch1 >= 56320 ? 1 : 0;
}
function jur_Lexer_isHighSurrogate($ch) {
    return $ch <= 56319 && $ch >= 55296 ? 1 : 0;
}
function jur_Lexer_isLowSurrogate($ch) {
    return $ch <= 57343 && $ch >= 56320 ? 1 : 0;
}
function jur_Lexer_readHex($this, $max) {
    var $st, $length, $i, var$5, $$je;
    $st = jl_StringBuilder__init_0($max);
    $length = $this.$pattern.data.length - 2 | 0;
    $i = 0;
    while (true) {
        var$5 = $rt_compare($i, $max);
        if (var$5 >= 0)
            break;
        if ($this.$index7 >= $length)
            break;
        $st.$append0($this.$pattern.data[jur_Lexer_nextIndex($this)]);
        $i = $i + 1 | 0;
    }
    if (!var$5)
        a: {
            try {
                var$5 = jl_Integer_parseInt($st.$toString(), 16);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$5;
        }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$toString(), $this.$index7));
}
function jur_Lexer_readOctals($this) {
    var $max, $i, $length, $res, var$5;
    $max = 3;
    $i = 1;
    $length = $this.$pattern.data.length - 2 | 0;
    $res = jl_Character_digit($this.$pattern.data[$this.$index7], 8);
    switch ($res) {
        case -1:
            break;
        default:
            if ($res > 3)
                $max = 2;
            jur_Lexer_nextIndex($this);
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if ($this.$index7 >= $length)
                        break a;
                    var$5 = jl_Character_digit($this.$pattern.data[$this.$index7], 8);
                    if (var$5 < 0)
                        break;
                    $res = ($res * 8 | 0) + var$5 | 0;
                    jur_Lexer_nextIndex($this);
                    $i = $i + 1 | 0;
                }
            }
            return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$toString(), $this.$index7));
}
function jur_Lexer_readFlags($this) {
    var $pos, $res, $ch;
    $pos = 1;
    $res = $this.$flags0;
    a: while (true) {
        if ($this.$index7 >= $this.$pattern.data.length)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$toString(), $this.$index7));
        b: {
            c: {
                $ch = $this.$pattern.data[$this.$index7];
                switch ($ch) {
                    case 41:
                        jur_Lexer_nextIndex($this);
                        return $res | 256;
                    case 45:
                        if (!$pos)
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$toString(), $this.$index7));
                        $pos = 0;
                        break b;
                    case 58:
                        break a;
                    case 100:
                        break c;
                    case 105:
                        $res = $pos ? $res | 2 : ($res ^ 2) & $res;
                        break b;
                    case 109:
                        $res = $pos ? $res | 8 : ($res ^ 8) & $res;
                        break b;
                    case 115:
                        $res = $pos ? $res | 32 : ($res ^ 32) & $res;
                        break b;
                    case 117:
                        $res = $pos ? $res | 64 : ($res ^ 64) & $res;
                        break b;
                    case 120:
                        $res = $pos ? $res | 4 : ($res ^ 4) & $res;
                        break b;
                    default:
                }
                break b;
            }
            $res = $pos ? $res | 1 : ($res ^ 1) & $res;
        }
        jur_Lexer_nextIndex($this);
    }
    jur_Lexer_nextIndex($this);
    return $res;
}
function jur_Lexer_nextIndex($this) {
    $this.$prevNW = $this.$index7;
    if ($this.$flags0 & 4)
        jur_Lexer_skipComments($this);
    else
        $this.$index7 = $this.$index7 + 1 | 0;
    return $this.$prevNW;
}
function jur_Lexer_skipComments($this) {
    var $length;
    $length = $this.$pattern.data.length - 2 | 0;
    $this.$index7 = $this.$index7 + 1 | 0;
    a: while (true) {
        if ($this.$index7 < $length && jl_Character_isWhitespace($this.$pattern.data[$this.$index7])) {
            $this.$index7 = $this.$index7 + 1 | 0;
            continue;
        }
        if ($this.$index7 >= $length)
            break;
        if ($this.$pattern.data[$this.$index7] != 35)
            break;
        $this.$index7 = $this.$index7 + 1 | 0;
        while (true) {
            if ($this.$index7 >= $length)
                continue a;
            if (jur_Lexer_isLineSeparator($this, $this.$pattern.data[$this.$index7]))
                continue a;
            $this.$index7 = $this.$index7 + 1 | 0;
        }
    }
    return $this.$index7;
}
function jur_Lexer_isLineSeparator($this, $ch) {
    return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
}
function jur_Lexer_getDecomposition($ch) {
    return jur_Lexer_decompTable.$get49($ch);
}
function jur_Lexer_getHangulDecomposition($ch) {
    var $sIndex, $l, $v, $t, $decomp, var$7, var$8;
    $sIndex = $ch - 44032 | 0;
    if ($sIndex >= 0 && $sIndex < 11172) {
        $l = 4352 + ($sIndex / 588 | 0) | 0;
        $v = 4449 + (($sIndex % 588 | 0) / 28 | 0) | 0;
        $t = $sIndex % 28 | 0;
        if (!$t) {
            $decomp = $rt_createIntArray(2);
            var$7 = $decomp.data;
            var$7[0] = $l;
            var$7[1] = $v;
        } else {
            var$8 = 4519 + $t | 0;
            $decomp = $rt_createIntArray(3);
            var$7 = $decomp.data;
            var$7[0] = $l;
            var$7[1] = $v;
            var$7[2] = var$8;
        }
        return $decomp;
    }
    return null;
}
function jur_Lexer_hasSingleCodepointDecomposition($ch) {
    var $hasSingleDecomp;
    $hasSingleDecomp = jur_Lexer_singleDecompTable.$get29($ch);
    return $hasSingleDecomp == jur_Lexer_singleDecompTableSize ? 0 : 1;
}
function jur_Lexer_hasDecompositionNonNullCanClass($ch) {
    return ($ch != 832 ? 0 : 1) | ($ch != 833 ? 0 : 1) | ($ch != 835 ? 0 : 1) | ($ch != 836 ? 0 : 1);
}
function jur_Lexer_nextCodePoint($this) {
    var $high, $lowExpectedIndex, $low;
    $high = $this.$pattern.data[jur_Lexer_nextIndex($this)];
    if (jl_Character_isHighSurrogate($high)) {
        $lowExpectedIndex = $this.$prevNW + 1 | 0;
        if ($lowExpectedIndex < $this.$pattern.data.length) {
            $low = $this.$pattern.data[$lowExpectedIndex];
            if (jl_Character_isLowSurrogate($low)) {
                jur_Lexer_nextIndex($this);
                return jl_Character_toCodePoint($high, $low);
            }
        }
    }
    return $high;
}
function jur_Lexer_getIndex($this) {
    return $this.$curToc;
}
function it_Bullet$update$lambda$_5_0() {
    jl_Object.call(this);
    this.$_073 = null;
}
function it_Bullet$update$lambda$_5_0__init_(var_0) {
    var var_1 = new it_Bullet$update$lambda$_5_0();
    it_Bullet$update$lambda$_5_0__init_0(var_1, var_0);
    return var_1;
}
function it_Bullet$update$lambda$_5_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_073 = var$1;
}
function it_Bullet$update$lambda$_5_0_solid(var$0, var$1, var$2) {
    return var$0.$_073.$solid0(var$1, var$2);
}
function iaagg_TextureAtlas$TextureAtlasData$Region() {
    var a = this; jl_Object.call(a);
    a.$page = null;
    a.$index0 = 0;
    a.$name5 = null;
    a.$offsetX = 0.0;
    a.$offsetY = 0.0;
    a.$originalWidth = 0;
    a.$originalHeight = 0;
    a.$rotate = 0;
    a.$left = 0;
    a.$top = 0;
    a.$width2 = 0;
    a.$height2 = 0;
    a.$flip0 = 0;
    a.$splits = null;
    a.$pads = null;
}
function iaagg_TextureAtlas$TextureAtlasData$Region__init_() {
    var var_0 = new iaagg_TextureAtlas$TextureAtlasData$Region();
    iaagg_TextureAtlas$TextureAtlasData$Region__init_0(var_0);
    return var_0;
}
function iaagg_TextureAtlas$TextureAtlasData$Region__init_0($this) {
    jl_Object__init_0($this);
}
function jur_AbstractCharClass$LazyNonSpace() {
    jur_AbstractCharClass$LazySpace.call(this);
}
function jur_AbstractCharClass$LazyNonSpace__init_() {
    var var_0 = new jur_AbstractCharClass$LazyNonSpace();
    jur_AbstractCharClass$LazyNonSpace__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonSpace__init_0($this) {
    jur_AbstractCharClass$LazySpace__init_0($this);
}
function jur_AbstractCharClass$LazyNonSpace_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazySpace_computeValue($this).$setNegative(1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function otjt_Int32Array() {
    otjt_ArrayBufferView.call(this);
}
function it_Bullets$9$lambda$null$7$lambda$_7_1() {
    var a = this; jl_Object.call(a);
    a.$_074 = null;
    a.$_129 = 0.0;
}
function it_Bullets$9$lambda$null$7$lambda$_7_1__init_(var_0, var_1) {
    var var_2 = new it_Bullets$9$lambda$null$7$lambda$_7_1();
    it_Bullets$9$lambda$null$7$lambda$_7_1__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Bullets$9$lambda$null$7$lambda$_7_1__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_074 = var$1;
    var$0.$_129 = var$2;
}
function it_Bullets$9$lambda$null$7$lambda$_7_1_run(var$0) {
    it_Bullets$9_lambda$null$6(var$0.$_074, var$0.$_129);
}
function iaat_Parser$baseParse$lambda$_2_0() {
    var a = this; jl_Object.call(a);
    a.$_075 = null;
    a.$_130 = null;
    a.$_27 = null;
    a.$_32 = null;
    a.$_4 = null;
}
function iaat_Parser$baseParse$lambda$_2_0__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new iaat_Parser$baseParse$lambda$_2_0();
    iaat_Parser$baseParse$lambda$_2_0__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function iaat_Parser$baseParse$lambda$_2_0__init_0(var$0, var$1, var$2, var$3, var$4, var$5) {
    jl_Object__init_0(var$0);
    var$0.$_075 = var$1;
    var$0.$_130 = var$2;
    var$0.$_27 = var$3;
    var$0.$_32 = var$4;
    var$0.$_4 = var$5;
}
function iaat_Parser$baseParse$lambda$_2_0_get(var$0, var$1, var$2) {
    iaat_Parser_lambda$baseParse$0(var$0.$_075, var$0.$_130, var$0.$_27, var$0.$_32, var$0.$_4, var$1, var$2);
}
function iaase_SceneEvent() {
    var a = this; jl_Object.call(a);
    a.$targetActor = null;
    a.$listenerActor = null;
    a.$capture = 0;
    a.$bubbles = 0;
    a.$handled = 0;
    a.$stopped = 0;
    a.$cancelled = 0;
}
function iaase_SceneEvent__init_() {
    var var_0 = new iaase_SceneEvent();
    iaase_SceneEvent__init_0(var_0);
    return var_0;
}
function iaase_SceneEvent__init_0($this) {
    jl_Object__init_0($this);
    $this.$bubbles = 1;
}
function iaase_SceneEvent_handle($this) {
    $this.$handled = 1;
}
function iaase_SceneEvent_reset($this) {
    $this.$targetActor = null;
    $this.$listenerActor = null;
    $this.$capture = 0;
    $this.$bubbles = 1;
    $this.$handled = 0;
    $this.$stopped = 0;
    $this.$cancelled = 0;
}
function iaase_InputEvent() {
    var a = this; iaase_SceneEvent.call(a);
    a.$type = null;
    a.$stageX = 0.0;
    a.$stageY = 0.0;
    a.$pointer = 0;
    a.$scrollAmountX = 0.0;
    a.$scrollAmountY = 0.0;
    a.$keyCode = null;
    a.$character = 0;
    a.$relatedActor = null;
}
function iaase_InputEvent__init_() {
    var var_0 = new iaase_InputEvent();
    iaase_InputEvent__init_0(var_0);
    return var_0;
}
function iaase_InputEvent__init_0($this) {
    iaase_SceneEvent__init_0($this);
}
function iaase_InputEvent_reset($this) {
    iaase_SceneEvent_reset($this);
    $this.$relatedActor = null;
}
function iaase_InputEvent_toString($this) {
    return $this.$type.$toString();
}
function it_Bullets$9$lambda$null$7$lambda$_7_0() {
    var a = this; jl_Object.call(a);
    a.$_076 = null;
    a.$_131 = 0.0;
}
function it_Bullets$9$lambda$null$7$lambda$_7_0__init_(var_0, var_1) {
    var var_2 = new it_Bullets$9$lambda$null$7$lambda$_7_0();
    it_Bullets$9$lambda$null$7$lambda$_7_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Bullets$9$lambda$null$7$lambda$_7_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_076 = var$1;
    var$0.$_131 = var$2;
}
function it_Bullets$9$lambda$null$7$lambda$_7_0_run(var$0) {
    it_Bullets$9_lambda$null$4(var$0.$_076, var$0.$_131);
}
function iaau_Structs() {
    jl_Object.call(this);
}
function iaau_Structs_inBounds($x, $y, $width, $height) {
    return $x >= 0 && $y >= 0 && $x < $width && $y < $height ? 1 : 0;
}
function it_Phases$2$lambda$$5$lambda$_19_0() {
    jl_Object.call(this);
}
function it_Phases$2$lambda$$5$lambda$_19_0__init_() {
    var var_0 = new it_Phases$2$lambda$$5$lambda$_19_0();
    it_Phases$2$lambda$$5$lambda$_19_0__init_0(var_0);
    return var_0;
}
function it_Phases$2$lambda$$5$lambda$_19_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$2$lambda$$5$lambda$_19_0_run(var$0) {
    it_Phases$2_lambda$null$4();
}
function jn_ShortBufferOverByteBufferBigEndian() {
    jn_ShortBufferOverByteBuffer.call(this);
}
function jn_ShortBufferOverByteBufferBigEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_ShortBufferOverByteBufferBigEndian();
    jn_ShortBufferOverByteBufferBigEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_ShortBufferOverByteBufferBigEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_ShortBufferOverByteBuffer__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_ShortBufferOverByteBufferBigEndian_duplicate($this, $start, $capacity, $position, $limit, $readOnly) {
    return jn_ShortBufferOverByteBufferBigEndian__init_($this.$start5 + ($start * 2 | 0) | 0, $capacity, $this.$byteByffer1, $position, $limit, $readOnly);
}
function jn_ShortBufferOverByteBufferBigEndian_getElement($this, $index) {
    var var$2, var$3, var$4, $value;
    var$2 = $this.$byteByffer1.$array.data;
    var$3 = $this.$start5;
    var$4 = $index * 2 | 0;
    $value = (var$2[var$3 + var$4 | 0] & 255) << 8 | $this.$byteByffer1.$array.data[($this.$start5 + var$4 | 0) + 1 | 0] & 255;
    return $value << 16 >> 16;
}
function jn_ShortBufferOverByteBufferBigEndian_putElement($this, $index, $value) {
    var var$3, var$4, var$5;
    var$3 = $this.$byteByffer1.$array.data;
    var$4 = $this.$start5;
    var$5 = $index * 2 | 0;
    var$3[var$4 + var$5 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer1.$array.data[($this.$start5 + var$5 | 0) + 1 | 0] = $value << 24 >> 24;
}
function iaabte_PixmapEmulator$DrawType() {
    jl_Enum.call(this);
}
var iaabte_PixmapEmulator$DrawType_FILL = null;
var iaabte_PixmapEmulator$DrawType_STROKE = null;
var iaabte_PixmapEmulator$DrawType_$VALUES = null;
function iaabte_PixmapEmulator$DrawType_$callClinit() {
    iaabte_PixmapEmulator$DrawType_$callClinit = $rt_eraseClinit(iaabte_PixmapEmulator$DrawType);
    iaabte_PixmapEmulator$DrawType__clinit_();
}
function iaabte_PixmapEmulator$DrawType__init_(var_0, var_1) {
    var var_2 = new iaabte_PixmapEmulator$DrawType();
    iaabte_PixmapEmulator$DrawType__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaabte_PixmapEmulator$DrawType_values() {
    iaabte_PixmapEmulator$DrawType_$callClinit();
    return iaabte_PixmapEmulator$DrawType_$VALUES.$clone();
}
function iaabte_PixmapEmulator$DrawType__init_0($this, var$1, var$2) {
    iaabte_PixmapEmulator$DrawType_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaabte_PixmapEmulator$DrawType__clinit_() {
    var var$1, var$2;
    iaabte_PixmapEmulator$DrawType_FILL = iaabte_PixmapEmulator$DrawType__init_($rt_s(1068), 0);
    iaabte_PixmapEmulator$DrawType_STROKE = iaabte_PixmapEmulator$DrawType__init_($rt_s(1069), 1);
    var$1 = $rt_createArray(iaabte_PixmapEmulator$DrawType, 2);
    var$2 = var$1.data;
    var$2[0] = iaabte_PixmapEmulator$DrawType_FILL;
    var$2[1] = iaabte_PixmapEmulator$DrawType_STROKE;
    iaabte_PixmapEmulator$DrawType_$VALUES = var$1;
}
function it_Phases$lambda$null$23$lambda$_44_0() {
    var a = this; jl_Object.call(a);
    a.$_077 = 0.0;
    a.$_132 = 0;
}
function it_Phases$lambda$null$23$lambda$_44_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$lambda$null$23$lambda$_44_0();
    it_Phases$lambda$null$23$lambda$_44_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$lambda$null$23$lambda$_44_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_077 = var$1;
    var$0.$_132 = var$2;
}
function it_Phases$lambda$null$23$lambda$_44_0_run(var$0) {
    it_Phases_lambda$null$22(var$0.$_077, var$0.$_132);
}
function it_Phases$lambda$null$25$lambda$_42_0() {
    jl_Object.call(this);
    this.$_078 = null;
}
function it_Phases$lambda$null$25$lambda$_42_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$null$25$lambda$_42_0();
    it_Phases$lambda$null$25$lambda$_42_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$null$25$lambda$_42_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_078 = var$1;
}
function it_Phases$lambda$null$25$lambda$_42_0_get(var$0, var$1) {
    var$0.$_078.$shootf(var$1);
}
function iaat_Parser$parseReplacements$lambda$_3_0() {
    jl_Object.call(this);
    this.$_079 = null;
}
function iaat_Parser$parseReplacements$lambda$_3_0__init_(var_0) {
    var var_1 = new iaat_Parser$parseReplacements$lambda$_3_0();
    iaat_Parser$parseReplacements$lambda$_3_0__init_0(var_1, var_0);
    return var_1;
}
function iaat_Parser$parseReplacements$lambda$_3_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_079 = var$1;
}
function iaat_Parser$parseReplacements$lambda$_3_0_handle(var$0, var$1, var$2) {
    return iaat_Parser_lambda$parseReplacements$1(var$0.$_079, var$1, var$2);
}
function iaaml_TmxMapLoader$Parameters() {
    iaaml_BaseTmxMapLoader$Parameters.call(this);
}
function iaaml_TmxMapLoader$Parameters__init_() {
    var var_0 = new iaaml_TmxMapLoader$Parameters();
    iaaml_TmxMapLoader$Parameters__init_0(var_0);
    return var_0;
}
function iaaml_TmxMapLoader$Parameters__init_0($this) {
    iaaml_BaseTmxMapLoader$Parameters__init_0($this);
}
function it_Phases$lambda$null$30$lambda$_37_0() {
    var a = this; jl_Object.call(a);
    a.$_080 = 0.0;
    a.$_133 = 0;
}
function it_Phases$lambda$null$30$lambda$_37_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$lambda$null$30$lambda$_37_0();
    it_Phases$lambda$null$30$lambda$_37_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$lambda$null$30$lambda$_37_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_080 = var$1;
    var$0.$_133 = var$2;
}
function it_Phases$lambda$null$30$lambda$_37_0_run(var$0) {
    it_Phases_lambda$null$29(var$0.$_080, var$0.$_133);
}
function iaaun_Noise() {
    jl_Object.call(this);
}
var iaaun_Noise_seed = 0;
var iaaun_Noise_p = null;
var iaaun_Noise_g2 = null;
var iaaun_Noise_g1 = null;
var iaaun_Noise_points = null;
function iaaun_Noise_$callClinit() {
    iaaun_Noise_$callClinit = $rt_eraseClinit(iaaun_Noise);
    iaaun_Noise__clinit_();
}
function iaaun_Noise_lerp($t, $a, $b) {
    iaaun_Noise_$callClinit();
    return $a + $t * ($b - $a);
}
function iaaun_Noise_s_curve($t) {
    iaaun_Noise_$callClinit();
    return $t * $t * (3.0 - $t - $t);
}
function iaaun_Noise_snoise($x, $y, $scale, $mag) {
    iaaun_Noise_$callClinit();
    return iaaun_Noise_noise($x / $scale, $y / $scale) * $mag;
}
function iaaun_Noise_nnoise($x, $y, $scale, $mag) {
    iaaun_Noise_$callClinit();
    return iaaun_Noise_snoise($x, $y, $scale, $mag) / 2.0;
}
function iaaun_Noise_noise($x, $y) {
    var $t, var$4, $bx0, $bx1, $rx0, $rx1, var$9, var$10, $by0, $by1, $ry0, $ry1, $i, $j, $b00, $b10, $b01, $b11, $sx, $sy, $q, var$24, $u, $v, $a, var$28, $b;
    iaaun_Noise_$callClinit();
    $t = $x + 256.0;
    var$4 = $t | 0;
    $bx0 = var$4 & 255;
    $bx1 = ($bx0 + 1 | 0) & 255;
    $rx0 = $t - var$4;
    $rx1 = $rx0 - 1.0;
    var$9 = $y + 256.0;
    var$10 = var$9 | 0;
    $by0 = var$10 & 255;
    $by1 = ($by0 + 1 | 0) & 255;
    $ry0 = var$9 - var$10;
    $ry1 = $ry0 - 1.0;
    $i = iaaun_Noise_p.data[$bx0];
    $j = iaaun_Noise_p.data[$bx1];
    $b00 = iaaun_Noise_p.data[$i + $by0 | 0];
    $b10 = iaaun_Noise_p.data[$j + $by0 | 0];
    $b01 = iaaun_Noise_p.data[$i + $by1 | 0];
    $b11 = iaaun_Noise_p.data[$j + $by1 | 0];
    $sx = iaaun_Noise_s_curve($rx0);
    $sy = iaaun_Noise_s_curve($ry0);
    $q = iaaun_Noise_g2.data[$b00];
    var$24 = $q.data;
    $u = $rx0 * var$24[0] + $ry0 * var$24[1];
    var$24 = iaaun_Noise_g2.data[$b10].data;
    $v = $rx1 * var$24[0] + $ry0 * var$24[1];
    $a = iaaun_Noise_lerp($sx, $u, $v);
    var$24 = iaaun_Noise_g2.data[$b01].data;
    var$28 = $rx0 * var$24[0] + $ry1 * var$24[1];
    var$24 = iaaun_Noise_g2.data[$b11].data;
    var$9 = $rx1 * var$24[0] + $ry1 * var$24[1];
    $b = iaaun_Noise_lerp($sx, var$28, var$9);
    return iaaun_Noise_lerp($sy, $a, $b);
}
function iaaun_Noise_init() {
    var $r, $i, $u, $v, var$5, var$6, $w, $U, $V, $W, $Lo, $Hi, $k, $j, var$15, var$16, var$17, var$18, var$19, $r2, $s, $n, $m, var$24;
    iaaun_Noise_$callClinit();
    $r = ju_Random__init_1(Long_fromInt(iaaun_Noise_seed));
    $i = 0;
    while ($i < 256) {
        iaaun_Noise_p.data[$i] = $i;
        iaaun_Noise_g1.data[$i] = 2.0 * $r.$nextDouble() - 1.0;
        while (true) {
            while (true) {
                $u = 2.0 * $r.$nextDouble() - 1.0;
                $v = 2.0 * $r.$nextDouble() - 1.0;
                if ($u * $u + $v * $v > 1.0)
                    continue;
                else
                    break;
            }
            if (jl_Math_abs1($u) > 2.5 * jl_Math_abs1($v))
                continue;
            if (jl_Math_abs1($v) > 2.5 * jl_Math_abs1($u))
                continue;
            if (jl_Math_abs1(jl_Math_abs1($u) - jl_Math_abs1($v)) < 0.4)
                continue;
            else
                break;
        }
        iaaun_Noise_g2.data[$i].data[0] = $u;
        iaaun_Noise_g2.data[$i].data[1] = $v;
        iaaun_Noise_normalize2(iaaun_Noise_g2.data[$i]);
        while (true) {
            while (true) {
                var$5 = 2.0 * $r.$nextDouble() - 1.0;
                var$6 = 2.0 * $r.$nextDouble() - 1.0;
                $w = 2.0 * $r.$nextDouble() - 1.0;
                $U = jl_Math_abs1(var$5);
                $V = jl_Math_abs1(var$6);
                $W = jl_Math_abs1($w);
                $Lo = jl_Math_min0($U, jl_Math_min0($V, $W));
                $Hi = jl_Math_max0($U, jl_Math_max0($V, $W));
                if (var$5 * var$5 + var$6 * var$6 + $w * $w > 1.0)
                    continue;
                else
                    break;
            }
            if ($Hi > 4.0 * $Lo)
                continue;
            var$5 = $U - $V;
            if (jl_Math_min0(jl_Math_abs1(var$5), jl_Math_min0(jl_Math_abs1($U - $W), jl_Math_abs1($V - $W))) < 0.2)
                continue;
            else
                break;
        }
        $i = $i + 1 | 0;
    }
    while (true) {
        $i = $i + (-1) | 0;
        if ($i <= 0)
            break;
        $k = iaaun_Noise_p.data[$i];
        $j = Long_and($r.$nextLong(), Long_fromInt(255)).lo;
        iaaun_Noise_p.data[$i] = iaaun_Noise_p.data[$j];
        iaaun_Noise_p.data[$j] = $k;
    }
    var$15 = 0;
    while (var$15 < 258) {
        var$16 = iaaun_Noise_p.data;
        var$17 = 256 + var$15 | 0;
        var$16[var$17] = iaaun_Noise_p.data[var$15];
        iaaun_Noise_g1.data[var$17] = iaaun_Noise_g1.data[var$15];
        $j = 0;
        while ($j < 2) {
            iaaun_Noise_g2.data[var$17].data[$j] = iaaun_Noise_g2.data[var$15].data[$j];
            $j = $j + 1 | 0;
        }
        var$15 = var$15 + 1 | 0;
    }
    var$16 = iaaun_Noise_points.data[3].data;
    var$18 = iaaun_Noise_points.data[3].data;
    var$19 = iaaun_Noise_points.data[3].data;
    var$5 = jl_Math_sqrt(0.3333333333333333);
    var$19[2] = var$5;
    var$18[1] = var$5;
    var$16[0] = var$5;
    $r2 = jl_Math_sqrt(0.5);
    $s = jl_Math_sqrt(2.0 + $r2 + $r2);
    var$15 = 0;
    while (var$15 < 3) {
        $j = 0;
        while ($j < 3) {
            var$19 = iaaun_Noise_points.data[var$15];
            var$5 = var$15 != $j ? $r2 : 1.0 + $r2 + $r2;
            var$19.data[$j] = var$5 / $s;
            $j = $j + 1 | 0;
        }
        var$15 = var$15 + 1 | 0;
    }
    var$15 = 0;
    while (var$15 <= 1) {
        $j = 0;
        while ($j <= 1) {
            $k = 0;
            while ($k <= 1) {
                a: {
                    $n = (var$15 + ($j * 2 | 0) | 0) + ($k * 4 | 0) | 0;
                    if ($n > 0) {
                        $m = 0;
                        while (true) {
                            if ($m >= 4)
                                break a;
                            var$19 = iaaun_Noise_points.data;
                            var$17 = (4 * $n | 0) + $m | 0;
                            var$19 = var$19[var$17];
                            var$19.data[0] = (var$15 ? (-1) : 1) * iaaun_Noise_points.data[$m].data[0];
                            var$19 = iaaun_Noise_points.data[var$17];
                            var$19.data[1] = ($j ? (-1) : 1) * iaaun_Noise_points.data[$m].data[1];
                            var$19 = iaaun_Noise_points.data[var$17];
                            var$24 = $k ? (-1) : 1;
                            var$19.data[2] = var$24 * iaaun_Noise_points.data[$m].data[2];
                            $m = $m + 1 | 0;
                        }
                    }
                }
                $k = $k + 1 | 0;
            }
            $j = $j + 1 | 0;
        }
        var$15 = var$15 + 1 | 0;
    }
}
function iaaun_Noise_normalize2($v) {
    var var$2, $s;
    iaaun_Noise_$callClinit();
    var$2 = $v.data;
    $s = jl_Math_sqrt(var$2[0] * var$2[0] + var$2[1] * var$2[1]);
    var$2[0] = var$2[0] / $s;
    var$2[1] = var$2[1] / $s;
}
function iaaun_Noise__clinit_() {
    iaaun_Noise_seed = 100;
    iaaun_Noise_p = $rt_createIntArray(514);
    iaaun_Noise_g2 = $rt_createDoubleMultiArray([2, 514]);
    iaaun_Noise_g1 = $rt_createDoubleArray(514);
    iaaun_Noise_points = $rt_createDoubleMultiArray([3, 32]);
    iaaun_Noise_init();
}
function it_Phases$lambda$null$34$lambda$_33_0() {
    var a = this; jl_Object.call(a);
    a.$_081 = 0.0;
    a.$_134 = 0;
}
function it_Phases$lambda$null$34$lambda$_33_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$lambda$null$34$lambda$_33_0();
    it_Phases$lambda$null$34$lambda$_33_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$lambda$null$34$lambda$_33_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_081 = var$1;
    var$0.$_134 = var$2;
}
function it_Phases$lambda$null$34$lambda$_33_0_get(var$0, var$1) {
    it_Phases_lambda$null$33(var$0.$_081, var$0.$_134, var$1);
}
function it_Phases$lambda$null$10$lambda$_57_0() {
    var a = this; jl_Object.call(a);
    a.$_082 = 0;
    a.$_135 = 0;
    a.$_28 = 0.0;
}
function it_Phases$lambda$null$10$lambda$_57_0__init_(var_0, var_1, var_2) {
    var var_3 = new it_Phases$lambda$null$10$lambda$_57_0();
    it_Phases$lambda$null$10$lambda$_57_0__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function it_Phases$lambda$null$10$lambda$_57_0__init_0(var$0, var$1, var$2, var$3) {
    jl_Object__init_0(var$0);
    var$0.$_082 = var$1;
    var$0.$_135 = var$2;
    var$0.$_28 = var$3;
}
function it_Phases$lambda$null$10$lambda$_57_0_run(var$0) {
    it_Phases_lambda$null$7(var$0.$_082, var$0.$_135, var$0.$_28);
}
function it_Phases$lambda$null$36$lambda$_31_1() {
    jl_Object.call(this);
}
function it_Phases$lambda$null$36$lambda$_31_1__init_() {
    var var_0 = new it_Phases$lambda$null$36$lambda$_31_1();
    it_Phases$lambda$null$36$lambda$_31_1__init_0(var_0);
    return var_0;
}
function it_Phases$lambda$null$36$lambda$_31_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$lambda$null$36$lambda$_31_1_get(var$0, var$1) {
    it_Phases_lambda$null$35(var$1);
}
function it_Phases$lambda$null$16$lambda$_51_0() {
    jl_Object.call(this);
    this.$_083 = null;
}
function it_Phases$lambda$null$16$lambda$_51_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$null$16$lambda$_51_0();
    it_Phases$lambda$null$16$lambda$_51_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$null$16$lambda$_51_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_083 = var$1;
}
function it_Phases$lambda$null$16$lambda$_51_0_get(var$0, var$1) {
    var$0.$_083.$shoot(var$1);
}
function iaau_I18NBundle() {
    var a = this; jl_Object.call(a);
    a.$parent1 = null;
    a.$locale = null;
    a.$properties3 = null;
}
var iaau_I18NBundle_ROOT_LOCALE = null;
var iaau_I18NBundle_simpleFormatter = 0;
function iaau_I18NBundle_$callClinit() {
    iaau_I18NBundle_$callClinit = $rt_eraseClinit(iaau_I18NBundle);
    iaau_I18NBundle__clinit_();
}
function iaau_I18NBundle__init_() {
    var var_0 = new iaau_I18NBundle();
    iaau_I18NBundle__init_0(var_0);
    return var_0;
}
function iaau_I18NBundle__init_0($this) {
    iaau_I18NBundle_$callClinit();
    jl_Object__init_0($this);
}
function iaau_I18NBundle_createEmptyBundle() {
    var $bundle;
    iaau_I18NBundle_$callClinit();
    $bundle = iaau_I18NBundle__init_();
    $bundle.$locale = iaau_I18NBundle_ROOT_LOCALE;
    $bundle.$properties3 = iaac_ObjectMap__init_();
    return $bundle;
}
function iaau_I18NBundle_get($this, $key) {
    var $result;
    $result = $this.$properties3.$get9($key);
    if ($result === null) {
        if ($this.$parent1 !== null)
            $result = iaau_I18NBundle_get($this.$parent1, $key);
        if ($result === null)
            return jl_StringBuilder__init_().$append($rt_s(1070)).$append($key).$append($rt_s(1070)).$toString();
    }
    return $result;
}
function iaau_I18NBundle_get0($this, $key, $def) {
    if ($this.$has($key))
        $def = iaau_I18NBundle_get($this, $key);
    return $def;
}
function iaau_I18NBundle_has($this, $key) {
    if ($this.$properties3.$containsKey($key))
        return 1;
    if ($this.$parent1 === null)
        return 0;
    return $this.$parent1.$has($key);
}
function iaau_I18NBundle__clinit_() {
    iaau_I18NBundle_ROOT_LOCALE = ju_Locale__init_1($rt_s(58), $rt_s(58), $rt_s(58));
    iaau_I18NBundle_simpleFormatter = 0;
}
function otcju_TSet() {
}
function iaac_TimSort() {
    var a = this; jl_Object.call(a);
    a.$runBase0 = null;
    a.$runLen0 = null;
    a.$a2 = null;
    a.$c0 = null;
    a.$minGallop0 = 0;
    a.$tmp1 = null;
    a.$tmpCount0 = 0;
    a.$stackSize0 = 0;
}
function iaac_TimSort__init_() {
    var var_0 = new iaac_TimSort();
    iaac_TimSort__init_0(var_0);
    return var_0;
}
function iaac_TimSort__init_0($this) {
    jl_Object__init_0($this);
    $this.$minGallop0 = 7;
    $this.$stackSize0 = 0;
    $this.$tmp1 = $rt_createArray(jl_Object, 256);
    $this.$runBase0 = $rt_createIntArray(40);
    $this.$runLen0 = $rt_createIntArray(40);
}
function iaac_TimSort_binarySort($a, $lo, $hi, $start, $c) {
    var var$6, $pivot, $right, var$9, $mid, $n;
    if ($start == $lo)
        $start = $start + 1 | 0;
    while ($start < $hi) {
        var$6 = $a.data;
        $pivot = var$6[$start];
        $right = $start;
        var$9 = $lo;
        while (var$9 < $right) {
            $mid = (var$9 + $right | 0) >>> 1;
            if ($c.$compare2($pivot, var$6[$mid]) < 0)
                $right = $mid;
            else
                var$9 = $mid + 1 | 0;
        }
        a: {
            b: {
                $n = $start - var$9 | 0;
                switch ($n) {
                    case 1:
                        break b;
                    case 2:
                        var$6[var$9 + 2 | 0] = var$6[var$9 + 1 | 0];
                        break b;
                    default:
                }
                jl_System_arraycopy($a, var$9, $a, var$9 + 1 | 0, $n);
                break a;
            }
            var$6[var$9 + 1 | 0] = var$6[var$9];
        }
        var$6[var$9] = $pivot;
        $start = $start + 1 | 0;
    }
}
function iaac_TimSort_countRunAndMakeAscending($a, $lo, $hi, $c) {
    var $runHi, var$6, var$7;
    $runHi = $lo + 1 | 0;
    if ($runHi == $hi)
        return 1;
    a: {
        var$6 = $a.data;
        var$7 = $runHi + 1 | 0;
        if ($c.$compare2(var$6[$runHi], var$6[$lo]) >= 0)
            while (var$7 < $hi) {
                if ($c.$compare2(var$6[var$7], var$6[var$7 - 1 | 0]) < 0)
                    break a;
                var$7 = var$7 + 1 | 0;
            }
        else {
            while (var$7 < $hi && $c.$compare2(var$6[var$7], var$6[var$7 - 1 | 0]) < 0) {
                var$7 = var$7 + 1 | 0;
            }
            iaac_TimSort_reverseRange($a, $lo, var$7);
        }
    }
    return var$7 - $lo | 0;
}
function iaac_TimSort_reverseRange($a, $lo, $hi) {
    var var$4, var$5, $t, var$7, var$8;
    var$4 = $hi + (-1) | 0;
    while ($lo < var$4) {
        var$5 = $a.data;
        $t = var$5[$lo];
        var$7 = $lo + 1 | 0;
        var$5[$lo] = var$5[var$4];
        var$8 = var$4 + (-1) | 0;
        var$5[var$4] = $t;
        $lo = var$7;
        var$4 = var$8;
    }
}
function iaac_TimSort_minRunLength($n) {
    var $r;
    $r = 0;
    while ($n >= 32) {
        $r = $r | $n & 1;
        $n = $n >> 1;
    }
    return $n + $r | 0;
}
function iaac_TimSort_gallopLeft($key, $a, $base, $len, $hint, $c) {
    var var$7, $lastOfs, $ofs, var$10, $maxOfs, var$12, var$13, $m;
    var$7 = $a.data;
    $lastOfs = 0;
    $ofs = 1;
    var$10 = $base + $hint | 0;
    if ($c.$compare2($key, var$7[var$10]) > 0) {
        $maxOfs = $len - $hint | 0;
        while (true) {
            var$12 = $rt_compare($ofs, $maxOfs);
            if (var$12 >= 0)
                break;
            if ($c.$compare2($key, var$7[var$10 + $ofs | 0]) <= 0)
                break;
            var$13 = ($ofs << 1) + 1 | 0;
            if (var$13 > 0) {
                $lastOfs = $ofs;
                $ofs = var$13;
                continue;
            }
            var$13 = $maxOfs;
            $lastOfs = $ofs;
            $ofs = var$13;
        }
        if (var$12 <= 0)
            $maxOfs = $ofs;
        var$13 = $lastOfs + $hint | 0;
        var$10 = $maxOfs + $hint | 0;
    } else {
        $maxOfs = $hint + 1 | 0;
        while (true) {
            var$13 = $rt_compare($ofs, $maxOfs);
            if (var$13 >= 0)
                break;
            if ($c.$compare2($key, var$7[var$10 - $ofs | 0]) > 0)
                break;
            var$13 = ($ofs << 1) + 1 | 0;
            if (var$13 > 0) {
                $lastOfs = $ofs;
                $ofs = var$13;
                continue;
            }
            var$13 = $maxOfs;
            $lastOfs = $ofs;
            $ofs = var$13;
        }
        if (var$13 <= 0)
            $maxOfs = $ofs;
        var$13 = $hint - $maxOfs | 0;
        var$10 = $hint - $lastOfs | 0;
    }
    var$13 = var$13 + 1 | 0;
    while (var$13 < var$10) {
        $m = var$13 + ((var$10 - var$13 | 0) >>> 1) | 0;
        if ($c.$compare2($key, var$7[$base + $m | 0]) > 0) {
            var$13 = $m + 1 | 0;
            $m = var$10;
        }
        var$10 = $m;
    }
    return var$10;
}
function iaac_TimSort_gallopRight($key, $a, $base, $len, $hint, $c) {
    var var$7, $ofs, $lastOfs, var$10, $maxOfs, var$12, var$13, $m;
    var$7 = $a.data;
    $ofs = 1;
    $lastOfs = 0;
    var$10 = $base + $hint | 0;
    if ($c.$compare2($key, var$7[var$10]) >= 0) {
        $maxOfs = $len - $hint | 0;
        while (true) {
            var$12 = $rt_compare($ofs, $maxOfs);
            if (var$12 >= 0)
                break;
            if ($c.$compare2($key, var$7[var$10 + $ofs | 0]) < 0)
                break;
            var$12 = ($ofs << 1) + 1 | 0;
            if (var$12 > 0) {
                $lastOfs = $ofs;
                $ofs = var$12;
                continue;
            }
            var$12 = $maxOfs;
            $lastOfs = $ofs;
            $ofs = var$12;
        }
        if (var$12 <= 0)
            $maxOfs = $ofs;
        var$12 = $lastOfs + $hint | 0;
        var$13 = $maxOfs + $hint | 0;
    } else {
        $maxOfs = $hint + 1 | 0;
        while (true) {
            var$12 = $rt_compare($ofs, $maxOfs);
            if (var$12 >= 0)
                break;
            if ($c.$compare2($key, var$7[var$10 - $ofs | 0]) >= 0)
                break;
            var$12 = ($ofs << 1) + 1 | 0;
            if (var$12 > 0) {
                $lastOfs = $ofs;
                $ofs = var$12;
                continue;
            }
            var$12 = $maxOfs;
            $lastOfs = $ofs;
            $ofs = var$12;
        }
        if (var$12 <= 0)
            $maxOfs = $ofs;
        var$12 = $hint - $maxOfs | 0;
        var$13 = $hint - $lastOfs | 0;
    }
    var$12 = var$12 + 1 | 0;
    while (var$12 < var$13) {
        $m = var$12 + ((var$13 - var$12 | 0) >>> 1) | 0;
        if ($c.$compare2($key, var$7[$base + $m | 0]) < 0)
            var$13 = $m;
        else
            var$12 = $m + 1 | 0;
    }
    return var$13;
}
function iaac_TimSort_rangeCheck($arrayLen, $fromIndex, $toIndex) {
    if ($fromIndex <= $toIndex) {
        if ($fromIndex < 0)
            $rt_throw(jl_ArrayIndexOutOfBoundsException__init_3($fromIndex));
        if ($toIndex <= $arrayLen)
            return;
        $rt_throw(jl_ArrayIndexOutOfBoundsException__init_3($toIndex));
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(601)).$append3($fromIndex).$append($rt_s(602)).$append3($toIndex).$append($rt_s(364)).$toString()));
}
function iaac_TimSort_doSort($this, $a, $c, $lo, $hi) {
    var var$5, $nRemaining, $initRunLen, $minRun, $runLen, $force, $tmp, $i, $n;
    var$5 = $a.data;
    $this.$stackSize0 = 0;
    iaac_TimSort_rangeCheck(var$5.length, $lo, $hi);
    $nRemaining = $hi - $lo | 0;
    if ($nRemaining < 2)
        return;
    if ($nRemaining < 32) {
        $initRunLen = iaac_TimSort_countRunAndMakeAscending($a, $lo, $hi, $c);
        iaac_TimSort_binarySort($a, $lo, $hi, $lo + $initRunLen | 0, $c);
        return;
    }
    $this.$a2 = $a;
    $this.$c0 = $c;
    $this.$tmpCount0 = 0;
    $minRun = iaac_TimSort_minRunLength($nRemaining);
    while (true) {
        $runLen = iaac_TimSort_countRunAndMakeAscending($a, $lo, $hi, $c);
        if ($runLen >= $minRun)
            $force = $runLen;
        else {
            $force = $nRemaining > $minRun ? $minRun : $nRemaining;
            iaac_TimSort_binarySort($a, $lo, $lo + $force | 0, $lo + $runLen | 0, $c);
        }
        iaac_TimSort_pushRun($this, $lo, $force);
        iaac_TimSort_mergeCollapse($this);
        $lo = $lo + $force | 0;
        $nRemaining = $nRemaining - $force | 0;
        if (!$nRemaining)
            break;
    }
    iaac_TimSort_mergeForceCollapse($this);
    $this.$a2 = null;
    $this.$c0 = null;
    $tmp = $this.$tmp1;
    $i = 0;
    $n = $this.$tmpCount0;
    while ($i < $n) {
        $tmp.data[$i] = null;
        $i = $i + 1 | 0;
    }
}
function iaac_TimSort_pushRun($this, $runBase, $runLen) {
    $this.$runBase0.data[$this.$stackSize0] = $runBase;
    $this.$runLen0.data[$this.$stackSize0] = $runLen;
    $this.$stackSize0 = $this.$stackSize0 + 1 | 0;
}
function iaac_TimSort_mergeCollapse($this) {
    var $n;
    a: {
        while (true) {
            if ($this.$stackSize0 <= 1)
                break a;
            $n = $this.$stackSize0 - 2 | 0;
            if (!($n >= 1 && $this.$runLen0.data[$n - 1 | 0] <= ($this.$runLen0.data[$n] + $this.$runLen0.data[$n + 1 | 0] | 0)) && !($n >= 2 && $this.$runLen0.data[$n - 2 | 0] <= ($this.$runLen0.data[$n] + $this.$runLen0.data[$n - 1 | 0] | 0))) {
                if ($this.$runLen0.data[$n] > $this.$runLen0.data[$n + 1 | 0])
                    break;
            } else if ($this.$runLen0.data[$n - 1 | 0] < $this.$runLen0.data[$n + 1 | 0])
                $n = $n + (-1) | 0;
            iaac_TimSort_mergeAt($this, $n);
        }
    }
}
function iaac_TimSort_mergeForceCollapse($this) {
    var $n;
    while ($this.$stackSize0 > 1) {
        $n = $this.$stackSize0 - 2 | 0;
        if ($n > 0 && $this.$runLen0.data[$n - 1 | 0] < $this.$runLen0.data[$n + 1 | 0])
            $n = $n + (-1) | 0;
        iaac_TimSort_mergeAt($this, $n);
    }
}
function iaac_TimSort_mergeAt($this, $i) {
    var $base1, $len1, var$4, var$5, $base2, $len2, var$8, var$9, $k, var$11, var$12;
    $base1 = $this.$runBase0.data[$i];
    $len1 = $this.$runLen0.data[$i];
    var$4 = $this.$runBase0.data;
    var$5 = $i + 1 | 0;
    $base2 = var$4[var$5];
    $len2 = $this.$runLen0.data[var$5];
    $this.$runLen0.data[$i] = $len1 + $len2 | 0;
    if ($i == ($this.$stackSize0 - 3 | 0)) {
        var$8 = $this.$runBase0.data;
        var$4 = $this.$runBase0.data;
        var$9 = $i + 2 | 0;
        var$8[var$5] = var$4[var$9];
        $this.$runLen0.data[var$5] = $this.$runLen0.data[var$9];
    }
    $this.$stackSize0 = $this.$stackSize0 - 1 | 0;
    $k = iaac_TimSort_gallopRight($this.$a2.data[$base2], $this.$a2, $base1, $len1, 0, $this.$c0);
    var$9 = $base1 + $k | 0;
    var$11 = $len1 - $k | 0;
    if (!var$11)
        return;
    var$12 = iaac_TimSort_gallopLeft($this.$a2.data[(var$9 + var$11 | 0) - 1 | 0], $this.$a2, $base2, $len2, $len2 - 1 | 0, $this.$c0);
    if (!var$12)
        return;
    if (var$11 > var$12)
        iaac_TimSort_mergeHi($this, var$9, var$11, $base2, var$12);
    else
        iaac_TimSort_mergeLo($this, var$9, var$11, $base2, var$12);
}
function iaac_TimSort_mergeLo($this, $base1, $len1, $base2, $len2) {
    var $a, var$6, $tmp, $cursor1, var$9, var$10, var$11, var$12, $c, $minGallop, $count1, $count2, var$17, var$18, var$19, var$20, var$21;
    $a = $this.$a2;
    var$6 = $a.data;
    $tmp = iaac_TimSort_ensureCapacity($this, $len1);
    jl_System_arraycopy($a, $base1, $tmp, 0, $len1);
    $cursor1 = 0;
    var$9 = $base1 + 1 | 0;
    var$10 = $base2 + 1 | 0;
    var$6[$base1] = var$6[$base2];
    var$11 = $len2 + (-1) | 0;
    if (!var$11) {
        jl_System_arraycopy($tmp, $cursor1, $a, var$9, $len1);
        return;
    }
    if ($len1 == 1) {
        var$12 = $tmp.data;
        jl_System_arraycopy($a, var$10, $a, var$9, var$11);
        var$6[var$9 + var$11 | 0] = var$12[$cursor1];
        return;
    }
    $c = $this.$c0;
    $minGallop = $this.$minGallop0;
    a: {
        b: while (true) {
            $count1 = 0;
            $count2 = 0;
            var$17 = var$9;
            var$18 = var$10;
            var$19 = $cursor1;
            while (true) {
                var$12 = $tmp.data;
                if ($c.$compare2(var$6[var$18], var$12[var$19]) < 0) {
                    var$9 = var$17 + 1 | 0;
                    var$10 = var$18 + 1 | 0;
                    var$6[var$17] = var$6[var$18];
                    $count2 = $count2 + 1 | 0;
                    $count1 = 0;
                    var$11 = var$11 + (-1) | 0;
                    if (!var$11)
                        break a;
                    var$18 = var$10;
                    $cursor1 = var$19;
                } else {
                    var$9 = var$17 + 1 | 0;
                    $cursor1 = var$19 + 1 | 0;
                    var$6[var$17] = var$12[var$19];
                    $count1 = $count1 + 1 | 0;
                    $count2 = 0;
                    $len1 = $len1 + (-1) | 0;
                    if ($len1 == 1) {
                        var$19 = $cursor1;
                        var$10 = var$18;
                        break a;
                    }
                }
                if (($count1 | $count2) >= $minGallop)
                    break;
                var$17 = var$9;
                var$19 = $cursor1;
            }
            var$10 = var$18;
            while (true) {
                var$17 = iaac_TimSort_gallopRight(var$6[var$10], $tmp, $cursor1, $len1, 0, $c);
                if (!var$17) {
                    var$18 = var$9;
                    var$19 = $cursor1;
                } else {
                    jl_System_arraycopy($tmp, $cursor1, $a, var$9, var$17);
                    var$9 = var$9 + var$17 | 0;
                    var$19 = $cursor1 + var$17 | 0;
                    $len1 = $len1 - var$17 | 0;
                    if ($len1 <= 1)
                        break a;
                    var$18 = var$9;
                }
                var$9 = var$18 + 1 | 0;
                var$20 = var$10 + 1 | 0;
                var$6[var$18] = var$6[var$10];
                var$11 = var$11 + (-1) | 0;
                if (!var$11) {
                    var$10 = var$20;
                    break a;
                }
                var$18 = iaac_TimSort_gallopLeft(var$12[var$19], $a, var$20, var$11, 0, $c);
                if (!var$18) {
                    var$21 = var$9;
                    var$10 = var$20;
                } else {
                    jl_System_arraycopy($a, var$20, $a, var$9, var$18);
                    var$9 = var$9 + var$18 | 0;
                    var$10 = var$20 + var$18 | 0;
                    var$11 = var$11 - var$18 | 0;
                    if (!var$11)
                        break b;
                    var$21 = var$9;
                }
                var$9 = var$21 + 1 | 0;
                $cursor1 = var$19 + 1 | 0;
                var$6[var$21] = var$12[var$19];
                $len1 = $len1 + (-1) | 0;
                if ($len1 == 1) {
                    var$19 = $cursor1;
                    break a;
                }
                $minGallop = $minGallop + (-1) | 0;
                if (!((var$17 < 7 ? 0 : 1) | (var$18 < 7 ? 0 : 1)))
                    break;
            }
            if ($minGallop < 0)
                $minGallop = 0;
            $minGallop = $minGallop + 2 | 0;
        }
    }
    if ($minGallop < 1)
        $minGallop = 1;
    $this.$minGallop0 = $minGallop;
    if ($len1 == 1) {
        jl_System_arraycopy($a, var$10, $a, var$9, var$11);
        var$6[var$9 + var$11 | 0] = var$12[var$19];
    } else {
        if (!$len1)
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(603)));
        jl_System_arraycopy($tmp, var$19, $a, var$9, $len1);
    }
}
function iaac_TimSort_mergeHi($this, $base1, $len1, $base2, $len2) {
    var $a, var$6, $tmp, $cursor1, $cursor2, $dest, var$11, var$12, var$13, var$14, var$15, var$16, $c, $minGallop, $count1, $count2, var$21, var$22;
    $a = $this.$a2;
    var$6 = $a.data;
    $tmp = iaac_TimSort_ensureCapacity($this, $len2);
    jl_System_arraycopy($a, $base2, $tmp, 0, $len2);
    $cursor1 = ($base1 + $len1 | 0) - 1 | 0;
    $cursor2 = $len2 - 1 | 0;
    $dest = ($base2 + $len2 | 0) - 1 | 0;
    var$11 = $dest + (-1) | 0;
    var$12 = $cursor1 + (-1) | 0;
    var$6[$dest] = var$6[$cursor1];
    var$13 = $len1 + (-1) | 0;
    if (!var$13) {
        jl_System_arraycopy($tmp, 0, $a, var$11 - $cursor2 | 0, $len2);
        return;
    }
    if ($len2 == 1) {
        var$14 = $tmp.data;
        var$15 = var$11 - var$13 | 0;
        var$16 = var$12 - var$13 | 0;
        jl_System_arraycopy($a, var$16 + 1 | 0, $a, var$15 + 1 | 0, var$13);
        var$6[var$15] = var$14[$cursor2];
        return;
    }
    $c = $this.$c0;
    $minGallop = $this.$minGallop0;
    a: {
        b: while (true) {
            $count1 = 0;
            $count2 = 0;
            var$21 = var$11;
            while (true) {
                var$14 = $tmp.data;
                if ($c.$compare2(var$14[$cursor2], var$6[var$12]) < 0) {
                    var$11 = var$21 + (-1) | 0;
                    var$16 = var$12 + (-1) | 0;
                    var$6[var$21] = var$6[var$12];
                    $count1 = $count1 + 1 | 0;
                    $count2 = 0;
                    var$13 = var$13 + (-1) | 0;
                    if (!var$13)
                        break a;
                    var$12 = var$16;
                    var$15 = $cursor2;
                } else {
                    var$11 = var$21 + (-1) | 0;
                    var$15 = $cursor2 + (-1) | 0;
                    var$6[var$21] = var$14[$cursor2];
                    $count2 = $count2 + 1 | 0;
                    $count1 = 0;
                    $len2 = $len2 + (-1) | 0;
                    if ($len2 == 1) {
                        var$16 = var$12;
                        $cursor2 = var$15;
                        break a;
                    }
                }
                if (($count1 | $count2) >= $minGallop)
                    break;
                var$21 = var$11;
                $cursor2 = var$15;
            }
            $cursor2 = var$15;
            while (true) {
                var$21 = var$13 - iaac_TimSort_gallopRight(var$14[$cursor2], $a, $base1, var$13, var$13 - 1 | 0, $c) | 0;
                if (!var$21) {
                    var$15 = var$11;
                    var$16 = var$12;
                } else {
                    var$11 = var$11 - var$21 | 0;
                    var$16 = var$12 - var$21 | 0;
                    var$13 = var$13 - var$21 | 0;
                    jl_System_arraycopy($a, var$16 + 1 | 0, $a, var$11 + 1 | 0, var$21);
                    if (!var$13)
                        break a;
                    var$15 = var$11;
                }
                var$11 = var$15 + (-1) | 0;
                var$12 = $cursor2 + (-1) | 0;
                var$6[var$15] = var$14[$cursor2];
                $len2 = $len2 + (-1) | 0;
                if ($len2 == 1) {
                    $cursor2 = var$12;
                    break a;
                }
                var$22 = $len2 - iaac_TimSort_gallopLeft(var$6[var$16], $tmp, 0, $len2, $len2 - 1 | 0, $c) | 0;
                if (!var$22) {
                    var$15 = var$11;
                    $cursor2 = var$12;
                } else {
                    var$11 = var$11 - var$22 | 0;
                    $cursor2 = var$12 - var$22 | 0;
                    $len2 = $len2 - var$22 | 0;
                    jl_System_arraycopy($tmp, $cursor2 + 1 | 0, $a, var$11 + 1 | 0, var$22);
                    if ($len2 <= 1)
                        break b;
                    var$15 = var$11;
                }
                var$11 = var$15 + (-1) | 0;
                var$12 = var$16 + (-1) | 0;
                var$6[var$15] = var$6[var$16];
                var$13 = var$13 + (-1) | 0;
                if (!var$13) {
                    var$16 = var$12;
                    break a;
                }
                $minGallop = $minGallop + (-1) | 0;
                if (!((var$21 < 7 ? 0 : 1) | (var$22 < 7 ? 0 : 1)))
                    break;
            }
            if ($minGallop < 0)
                $minGallop = 0;
            $minGallop = $minGallop + 2 | 0;
        }
    }
    if ($minGallop < 1)
        $minGallop = 1;
    $this.$minGallop0 = $minGallop;
    if ($len2 == 1) {
        var$15 = var$11 - var$13 | 0;
        var$16 = var$16 - var$13 | 0;
        jl_System_arraycopy($a, var$16 + 1 | 0, $a, var$15 + 1 | 0, var$13);
        var$6[var$15] = var$14[$cursor2];
    } else {
        if (!$len2)
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(603)));
        jl_System_arraycopy($tmp, 0, $a, var$11 - ($len2 - 1 | 0) | 0, $len2);
    }
}
function iaac_TimSort_ensureCapacity($this, $minCapacity) {
    var var$2;
    $this.$tmpCount0 = jl_Math_max1($this.$tmpCount0, $minCapacity);
    if ($this.$tmp1.data.length < $minCapacity) {
        var$2 = $minCapacity | $minCapacity >> 1;
        var$2 = var$2 | var$2 >> 2;
        var$2 = var$2 | var$2 >> 4;
        var$2 = var$2 | var$2 >> 8;
        var$2 = var$2 | var$2 >> 16;
        var$2 = var$2 + 1 | 0;
        if (var$2 >= 0)
            $minCapacity = jl_Math_min1(var$2, $this.$a2.data.length >>> 1);
        $this.$tmp1 = $rt_createArray(jl_Object, $minCapacity);
    }
    return $this.$tmp1;
}
function it_Phases$lambda$null$10$lambda$_57_1() {
    var a = this; jl_Object.call(a);
    a.$_084 = 0;
    a.$_136 = 0;
    a.$_29 = 0.0;
}
function it_Phases$lambda$null$10$lambda$_57_1__init_(var_0, var_1, var_2) {
    var var_3 = new it_Phases$lambda$null$10$lambda$_57_1();
    it_Phases$lambda$null$10$lambda$_57_1__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function it_Phases$lambda$null$10$lambda$_57_1__init_0(var$0, var$1, var$2, var$3) {
    jl_Object__init_0(var$0);
    var$0.$_084 = var$1;
    var$0.$_136 = var$2;
    var$0.$_29 = var$3;
}
function it_Phases$lambda$null$10$lambda$_57_1_run(var$0) {
    it_Phases_lambda$null$9(var$0.$_084, var$0.$_136, var$0.$_29);
}
function it_Phases$lambda$null$36$lambda$_31_0() {
    var a = this; jl_Object.call(a);
    a.$_085 = 0.0;
    a.$_137 = 0;
}
function it_Phases$lambda$null$36$lambda$_31_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$lambda$null$36$lambda$_31_0();
    it_Phases$lambda$null$36$lambda$_31_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$lambda$null$36$lambda$_31_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_085 = var$1;
    var$0.$_137 = var$2;
}
function it_Phases$lambda$null$36$lambda$_31_0_run(var$0) {
    it_Phases_lambda$null$34(var$0.$_085, var$0.$_137);
}
function jl_AbstractStringBuilder$Constants() {
    jl_Object.call(this);
}
var jl_AbstractStringBuilder$Constants_intPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_longPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_longLogPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_doubleAnalysisResult = null;
var jl_AbstractStringBuilder$Constants_floatAnalysisResult = null;
function jl_AbstractStringBuilder$Constants_$callClinit() {
    jl_AbstractStringBuilder$Constants_$callClinit = $rt_eraseClinit(jl_AbstractStringBuilder$Constants);
    jl_AbstractStringBuilder$Constants__clinit_();
}
function jl_AbstractStringBuilder$Constants__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(10);
    var$2 = var$1.data;
    var$2[0] = 1;
    var$2[1] = 10;
    var$2[2] = 100;
    var$2[3] = 1000;
    var$2[4] = 10000;
    var$2[5] = 100000;
    var$2[6] = 1000000;
    var$2[7] = 10000000;
    var$2[8] = 100000000;
    var$2[9] = 1000000000;
    jl_AbstractStringBuilder$Constants_intPowersOfTen = var$1;
    var$1 = $rt_createLongArray(19);
    var$2 = var$1.data;
    var$2[0] = Long_fromInt(1);
    var$2[1] = Long_fromInt(10);
    var$2[2] = Long_fromInt(100);
    var$2[3] = Long_fromInt(1000);
    var$2[4] = Long_fromInt(10000);
    var$2[5] = Long_fromInt(100000);
    var$2[6] = Long_fromInt(1000000);
    var$2[7] = Long_fromInt(10000000);
    var$2[8] = Long_fromInt(100000000);
    var$2[9] = Long_fromInt(1000000000);
    var$2[10] = new Long(1410065408, 2);
    var$2[11] = new Long(1215752192, 23);
    var$2[12] = new Long(3567587328, 232);
    var$2[13] = new Long(1316134912, 2328);
    var$2[14] = new Long(276447232, 23283);
    var$2[15] = new Long(2764472320, 232830);
    var$2[16] = new Long(1874919424, 2328306);
    var$2[17] = new Long(1569325056, 23283064);
    var$2[18] = new Long(2808348672, 232830643);
    jl_AbstractStringBuilder$Constants_longPowersOfTen = var$1;
    var$1 = $rt_createLongArray(6);
    var$2 = var$1.data;
    var$2[0] = Long_fromInt(1);
    var$2[1] = Long_fromInt(10);
    var$2[2] = Long_fromInt(100);
    var$2[3] = Long_fromInt(10000);
    var$2[4] = Long_fromInt(100000000);
    var$2[5] = new Long(1874919424, 2328306);
    jl_AbstractStringBuilder$Constants_longLogPowersOfTen = var$1;
    jl_AbstractStringBuilder$Constants_doubleAnalysisResult = otcit_DoubleAnalyzer$Result__init_();
    jl_AbstractStringBuilder$Constants_floatAnalysisResult = otcit_FloatAnalyzer$Result__init_();
}
function iaac_ObjectFloatMap() {
    var a = this; jl_Object.call(a);
    a.$size9 = 0;
    a.$keyTable2 = null;
    a.$valueTable1 = null;
    a.$capacity4 = 0;
    a.$stashSize2 = 0;
    a.$loadFactor3 = 0.0;
    a.$hashShift1 = 0;
    a.$mask2 = 0;
    a.$threshold4 = 0;
    a.$stashCapacity1 = 0;
    a.$pushIterations1 = 0;
}
function iaac_ObjectFloatMap__init_() {
    var var_0 = new iaac_ObjectFloatMap();
    iaac_ObjectFloatMap__init_0(var_0);
    return var_0;
}
function iaac_ObjectFloatMap__init_1(var_0, var_1) {
    var var_2 = new iaac_ObjectFloatMap();
    iaac_ObjectFloatMap__init_2(var_2, var_0, var_1);
    return var_2;
}
function iaac_ObjectFloatMap__init_0($this) {
    iaac_ObjectFloatMap__init_2($this, 51, 0.800000011920929);
}
function iaac_ObjectFloatMap__init_2($this, $initialCapacity, $loadFactor) {
    var var$3;
    jl_Object__init_0($this);
    if ($initialCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(280)).$append3($initialCapacity).$toString()));
    var$3 = iaam_Mathf_nextPowerOfTwo(jl_Math_ceil($initialCapacity / $loadFactor) | 0);
    if (var$3 > 1073741824)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(281)).$append3(var$3).$toString()));
    $this.$capacity4 = var$3;
    if ($loadFactor <= 0.0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(282)).$append13($loadFactor).$toString()));
    $this.$loadFactor3 = $loadFactor;
    $this.$threshold4 = $this.$capacity4 * $loadFactor | 0;
    $this.$mask2 = $this.$capacity4 - 1 | 0;
    $this.$hashShift1 = 31 - jl_Integer_numberOfTrailingZeros($this.$capacity4) | 0;
    $this.$stashCapacity1 = jl_Math_max1(3, (jl_Math_ceil(jl_Math_log($this.$capacity4)) | 0) * 2 | 0);
    $this.$pushIterations1 = jl_Math_max1(jl_Math_min1($this.$capacity4, 8), (jl_Math_sqrt($this.$capacity4) | 0) / 8 | 0);
    $this.$keyTable2 = $rt_createArray(jl_Object, $this.$capacity4 + $this.$stashCapacity1 | 0);
    $this.$valueTable1 = $rt_createFloatArray($this.$keyTable2.data.length);
}
function iaac_ObjectFloatMap_put($this, $key, $value) {
    var $keyTable, var$4, $hashCode, $index1, $key1, $index2, $key2, $index3, $key3, $i, $n, var$14;
    if ($key === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(283)));
    $keyTable = $this.$keyTable2;
    var$4 = $keyTable.data;
    $hashCode = $key.$hashCode();
    $index1 = $hashCode & $this.$mask2;
    $key1 = var$4[$index1];
    if ($key.$equals($key1)) {
        $this.$valueTable1.data[$index1] = $value;
        return;
    }
    $index2 = iaac_ObjectFloatMap_hash2($this, $hashCode);
    $key2 = var$4[$index2];
    if ($key.$equals($key2)) {
        $this.$valueTable1.data[$index2] = $value;
        return;
    }
    $index3 = iaac_ObjectFloatMap_hash3($this, $hashCode);
    $key3 = var$4[$index3];
    if ($key.$equals($key3)) {
        $this.$valueTable1.data[$index3] = $value;
        return;
    }
    $i = $this.$capacity4;
    $n = $i + $this.$stashSize2 | 0;
    while (true) {
        if ($i >= $n) {
            if ($key1 === null) {
                var$4[$index1] = $key;
                $this.$valueTable1.data[$index1] = $value;
                var$14 = $this.$size9;
                $this.$size9 = var$14 + 1 | 0;
                if (var$14 >= $this.$threshold4)
                    iaac_ObjectFloatMap_resize($this, $this.$capacity4 << 1);
                return;
            }
            if ($key2 === null) {
                var$4[$index2] = $key;
                $this.$valueTable1.data[$index2] = $value;
                var$14 = $this.$size9;
                $this.$size9 = var$14 + 1 | 0;
                if (var$14 >= $this.$threshold4)
                    iaac_ObjectFloatMap_resize($this, $this.$capacity4 << 1);
                return;
            }
            if ($key3 !== null) {
                iaac_ObjectFloatMap_push($this, $key, $value, $index1, $key1, $index2, $key2, $index3, $key3);
                return;
            }
            var$4[$index3] = $key;
            $this.$valueTable1.data[$index3] = $value;
            var$14 = $this.$size9;
            $this.$size9 = var$14 + 1 | 0;
            if (var$14 >= $this.$threshold4)
                iaac_ObjectFloatMap_resize($this, $this.$capacity4 << 1);
            return;
        }
        if ($key.$equals(var$4[$i]))
            break;
        $i = $i + 1 | 0;
    }
    $this.$valueTable1.data[$i] = $value;
}
function iaac_ObjectFloatMap_putResize($this, $key, $value) {
    var $hashCode, $index1, $key1, var$6, $index2, $key2, $index3, $key3;
    $hashCode = $key.$hashCode();
    $index1 = $hashCode & $this.$mask2;
    $key1 = $this.$keyTable2.data[$index1];
    if ($key1 === null) {
        $this.$keyTable2.data[$index1] = $key;
        $this.$valueTable1.data[$index1] = $value;
        var$6 = $this.$size9;
        $this.$size9 = var$6 + 1 | 0;
        if (var$6 >= $this.$threshold4)
            iaac_ObjectFloatMap_resize($this, $this.$capacity4 << 1);
        return;
    }
    $index2 = iaac_ObjectFloatMap_hash2($this, $hashCode);
    $key2 = $this.$keyTable2.data[$index2];
    if ($key2 === null) {
        $this.$keyTable2.data[$index2] = $key;
        $this.$valueTable1.data[$index2] = $value;
        var$6 = $this.$size9;
        $this.$size9 = var$6 + 1 | 0;
        if (var$6 >= $this.$threshold4)
            iaac_ObjectFloatMap_resize($this, $this.$capacity4 << 1);
        return;
    }
    $index3 = iaac_ObjectFloatMap_hash3($this, $hashCode);
    $key3 = $this.$keyTable2.data[$index3];
    if ($key3 !== null) {
        iaac_ObjectFloatMap_push($this, $key, $value, $index1, $key1, $index2, $key2, $index3, $key3);
        return;
    }
    $this.$keyTable2.data[$index3] = $key;
    $this.$valueTable1.data[$index3] = $value;
    var$6 = $this.$size9;
    $this.$size9 = var$6 + 1 | 0;
    if (var$6 >= $this.$threshold4)
        iaac_ObjectFloatMap_resize($this, $this.$capacity4 << 1);
}
function iaac_ObjectFloatMap_push($this, $insertKey, $insertValue, $index1, $key1, $index2, $key2, $index3, $key3) {
    var $keyTable, $valueTable, $mask, $i, $pushIterations, var$14, var$15, $evictedValue, $hashCode, var$18, var$19, var$20;
    $keyTable = $this.$keyTable2;
    $valueTable = $this.$valueTable1;
    $mask = $this.$mask2;
    $i = 0;
    $pushIterations = $this.$pushIterations1;
    while (true) {
        a: {
            switch (iaam_Mathf_random(2)) {
                case 0:
                    break;
                case 1:
                    var$14 = $valueTable.data;
                    var$15 = $keyTable.data;
                    $evictedValue = var$14[$index2];
                    var$15[$index2] = $insertKey;
                    var$14[$index2] = $insertValue;
                    $key1 = $key2;
                    break a;
                default:
                    var$14 = $valueTable.data;
                    var$15 = $keyTable.data;
                    $evictedValue = var$14[$index3];
                    var$15[$index3] = $insertKey;
                    var$14[$index3] = $insertValue;
                    $key1 = $key3;
                    break a;
            }
            var$14 = $valueTable.data;
            var$15 = $keyTable.data;
            $evictedValue = var$14[$index1];
            var$15[$index1] = $insertKey;
            var$14[$index1] = $insertValue;
        }
        var$15 = $keyTable.data;
        $hashCode = $key1.$hashCode();
        $index1 = $hashCode & $mask;
        var$18 = var$15[$index1];
        if (var$18 === null) {
            var$14 = $valueTable.data;
            var$15[$index1] = $key1;
            var$14[$index1] = $evictedValue;
            var$19 = $this.$size9;
            $this.$size9 = var$19 + 1 | 0;
            if (var$19 >= $this.$threshold4)
                iaac_ObjectFloatMap_resize($this, $this.$capacity4 << 1);
            return;
        }
        $index2 = iaac_ObjectFloatMap_hash2($this, $hashCode);
        $key2 = var$15[$index2];
        if ($key2 === null) {
            var$14 = $valueTable.data;
            var$15[$index2] = $key1;
            var$14[$index2] = $evictedValue;
            var$19 = $this.$size9;
            $this.$size9 = var$19 + 1 | 0;
            if (var$19 >= $this.$threshold4)
                iaac_ObjectFloatMap_resize($this, $this.$capacity4 << 1);
            return;
        }
        $index3 = iaac_ObjectFloatMap_hash3($this, $hashCode);
        $key3 = var$15[$index3];
        if ($key3 === null) {
            var$14 = $valueTable.data;
            var$15[$index3] = $key1;
            var$14[$index3] = $evictedValue;
            var$20 = $this.$size9;
            $this.$size9 = var$20 + 1 | 0;
            if (var$20 >= $this.$threshold4)
                iaac_ObjectFloatMap_resize($this, $this.$capacity4 << 1);
            return;
        }
        $i = $i + 1 | 0;
        if ($i == $pushIterations)
            break;
        $insertKey = $key1;
        $key1 = var$18;
        $insertValue = $evictedValue;
    }
    iaac_ObjectFloatMap_putStash($this, $key1, $evictedValue);
}
function iaac_ObjectFloatMap_putStash($this, $key, $value) {
    var $index;
    if ($this.$stashSize2 == $this.$stashCapacity1) {
        iaac_ObjectFloatMap_resize($this, $this.$capacity4 << 1);
        iaac_ObjectFloatMap_putResize($this, $key, $value);
        return;
    }
    $index = $this.$capacity4 + $this.$stashSize2 | 0;
    $this.$keyTable2.data[$index] = $key;
    $this.$valueTable1.data[$index] = $value;
    $this.$stashSize2 = $this.$stashSize2 + 1 | 0;
    $this.$size9 = $this.$size9 + 1 | 0;
}
function iaac_ObjectFloatMap_get($this, $key, $defaultValue) {
    var $hashCode, $index;
    $hashCode = $key.$hashCode();
    $index = $hashCode & $this.$mask2;
    if (!$key.$equals($this.$keyTable2.data[$index])) {
        $index = iaac_ObjectFloatMap_hash2($this, $hashCode);
        if (!$key.$equals($this.$keyTable2.data[$index])) {
            $index = iaac_ObjectFloatMap_hash3($this, $hashCode);
            if (!$key.$equals($this.$keyTable2.data[$index]))
                return iaac_ObjectFloatMap_getStash($this, $key, $defaultValue);
        }
    }
    return $this.$valueTable1.data[$index];
}
function iaac_ObjectFloatMap_getStash($this, $key, $defaultValue) {
    var $keyTable, $i, $n;
    $keyTable = $this.$keyTable2;
    $i = $this.$capacity4;
    $n = $i + $this.$stashSize2 | 0;
    while ($i < $n) {
        if ($key.$equals($keyTable.data[$i]))
            return $this.$valueTable1.data[$i];
        $i = $i + 1 | 0;
    }
    return $defaultValue;
}
function iaac_ObjectFloatMap_resize($this, $newSize) {
    var $oldEndIndex, var$3, $oldKeyTable, $oldValueTable, $oldSize, $i, $key;
    a: {
        $oldEndIndex = $this.$capacity4 + $this.$stashSize2 | 0;
        $this.$capacity4 = $newSize;
        $this.$threshold4 = $newSize * $this.$loadFactor3 | 0;
        $this.$mask2 = $newSize - 1 | 0;
        $this.$hashShift1 = 31 - jl_Integer_numberOfTrailingZeros($newSize) | 0;
        var$3 = $newSize;
        $this.$stashCapacity1 = jl_Math_max1(3, (jl_Math_ceil(jl_Math_log(var$3)) | 0) * 2 | 0);
        $this.$pushIterations1 = jl_Math_max1(jl_Math_min1($newSize, 8), (jl_Math_sqrt(var$3) | 0) / 8 | 0);
        $oldKeyTable = $this.$keyTable2;
        $oldValueTable = $this.$valueTable1;
        $this.$keyTable2 = $rt_createArray(jl_Object, $newSize + $this.$stashCapacity1 | 0);
        $this.$valueTable1 = $rt_createFloatArray($newSize + $this.$stashCapacity1 | 0);
        $oldSize = $this.$size9;
        $this.$size9 = 0;
        $this.$stashSize2 = 0;
        if ($oldSize > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldEndIndex)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key !== null)
                    iaac_ObjectFloatMap_putResize($this, $key, $oldValueTable.data[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
}
function iaac_ObjectFloatMap_hash2($this, $h) {
    var var$2;
    var$2 = $rt_imul($h, (-1262997959));
    return (var$2 ^ var$2 >>> $this.$hashShift1) & $this.$mask2;
}
function iaac_ObjectFloatMap_hash3($this, $h) {
    var var$2;
    var$2 = $rt_imul($h, (-825114047));
    return (var$2 ^ var$2 >>> $this.$hashShift1) & $this.$mask2;
}
function jur_SingleSet() {
    jur_JointSet.call(this);
    this.$kid = null;
}
function jur_SingleSet__init_(var_0, var_1) {
    var var_2 = new jur_SingleSet();
    jur_SingleSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_SingleSet__init_0($this, $child, $fSet) {
    jur_JointSet__init_0($this);
    $this.$kid = $child;
    $this.$fSet = $fSet;
    $this.$groupIndex0 = $fSet.$getGroupIndex();
}
function jur_SingleSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $shift;
    $start = $matchResult.$getStart($this.$groupIndex0);
    $matchResult.$setStart($this.$groupIndex0, $stringIndex);
    $shift = $this.$kid.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    $matchResult.$setStart($this.$groupIndex0, $start);
    return (-1);
}
function jur_SingleSet_find($this, $stringIndex, $testString, $matchResult) {
    var $res;
    $res = $this.$kid.$find0($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        $matchResult.$setStart($this.$groupIndex0, $res);
    return $res;
}
function jur_SingleSet_findBack($this, $stringIndex, $lastIndex, $testString, $matchResult) {
    var $res;
    $res = $this.$kid.$findBack($stringIndex, $lastIndex, $testString, $matchResult);
    if ($res >= 0)
        $matchResult.$setStart($this.$groupIndex0, $res);
    return $res;
}
function jur_SingleSet_first($this, $set) {
    return $this.$kid.$first($set);
}
function jur_SingleSet_processBackRefReplacement($this) {
    var $set;
    $set = jur_BackReferencedSingleSet__init_($this);
    $this.$next = $set;
    return $set;
}
function jur_SingleSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$fSet !== null && !$this.$fSet.$isSecondPassVisited)
        $this.$fSet.$processSecondPass();
    if ($this.$kid !== null && !$this.$kid.$isSecondPassVisited) {
        $set = $this.$kid.$processBackRefReplacement();
        if ($set !== null) {
            $this.$kid.$isSecondPassVisited = 1;
            $this.$kid = $set;
        }
        $this.$kid.$processSecondPass();
    }
}
function it_Phases$4$lambda$$8$lambda$_9_0() {
    jl_Object.call(this);
}
function it_Phases$4$lambda$$8$lambda$_9_0__init_() {
    var var_0 = new it_Phases$4$lambda$$8$lambda$_9_0();
    it_Phases$4$lambda$$8$lambda$_9_0__init_0(var_0);
    return var_0;
}
function it_Phases$4$lambda$$8$lambda$_9_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$4$lambda$$8$lambda$_9_0_run(var$0) {
    it_Phases$4_lambda$null$7();
}
function iaam_Interpolation$10() {
    iaam_Interpolation.call(this);
}
function iaam_Interpolation$10__init_() {
    var var_0 = new iaam_Interpolation$10();
    iaam_Interpolation$10__init_0(var_0);
    return var_0;
}
function iaam_Interpolation$10__init_0($this) {
    iaam_Interpolation__init_0($this);
}
function iaam_Interpolation$11() {
    iaam_Interpolation.call(this);
}
function iaam_Interpolation$11__init_() {
    var var_0 = new iaam_Interpolation$11();
    iaam_Interpolation$11__init_0(var_0);
    return var_0;
}
function iaam_Interpolation$11__init_0($this) {
    iaam_Interpolation__init_0($this);
}
function iaam_Interpolation$12() {
    iaam_Interpolation.call(this);
}
function iaam_Interpolation$12__init_() {
    var var_0 = new iaam_Interpolation$12();
    iaam_Interpolation$12__init_0(var_0);
    return var_0;
}
function iaam_Interpolation$12__init_0($this) {
    iaam_Interpolation__init_0($this);
}
function it_Phases$5$lambda$null$1$lambda$_21_0() {
    jl_Object.call(this);
    this.$_086 = null;
}
function it_Phases$5$lambda$null$1$lambda$_21_0__init_(var_0) {
    var var_1 = new it_Phases$5$lambda$null$1$lambda$_21_0();
    it_Phases$5$lambda$null$1$lambda$_21_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$5$lambda$null$1$lambda$_21_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_086 = var$1;
}
function it_Phases$5$lambda$null$1$lambda$_21_0_get(var$0, var$1) {
    it_Phases$5_lambda$null$0(var$0.$_086, var$1);
}
function jl_Thread() {
    var a = this; jl_Object.call(a);
    a.$id5 = Long_ZERO;
    a.$timeSliceStart = Long_ZERO;
    a.$finishedLock = null;
    a.$name13 = null;
    a.$alive = 0;
    a.$target0 = null;
}
var jl_Thread_mainThread = null;
var jl_Thread_currentThread0 = null;
var jl_Thread_nextId = Long_ZERO;
var jl_Thread_activeCount = 0;
function jl_Thread_$callClinit() {
    jl_Thread_$callClinit = $rt_eraseClinit(jl_Thread);
    jl_Thread__clinit_();
}
function jl_Thread__init_(var_0) {
    var var_1 = new jl_Thread();
    jl_Thread__init_0(var_1, var_0);
    return var_1;
}
function jl_Thread__init_1(var_0, var_1) {
    var var_2 = new jl_Thread();
    jl_Thread__init_2(var_2, var_0, var_1);
    return var_2;
}
function jl_Thread__init_0($this, $name) {
    jl_Thread_$callClinit();
    jl_Thread__init_2($this, null, $name);
}
function jl_Thread__init_2($this, $target, $name) {
    var var$3;
    jl_Thread_$callClinit();
    jl_Object__init_0($this);
    $this.$finishedLock = jl_Object__init_();
    $this.$alive = 1;
    $this.$name13 = $name;
    $this.$target0 = $target;
    var$3 = jl_Thread_nextId;
    jl_Thread_nextId = Long_add(var$3, Long_fromInt(1));
    $this.$id5 = var$3;
}
function jl_Thread_setCurrentThread($thread) {
    jl_Thread_$callClinit();
    if (jl_Thread_currentThread0 !== $thread)
        jl_Thread_currentThread0 = $thread;
    jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
}
function jl_Thread_currentThread() {
    jl_Thread_$callClinit();
    return jl_Thread_currentThread0;
}
function jl_Thread__clinit_() {
    jl_Thread_mainThread = jl_Thread__init_($rt_s(1071));
    jl_Thread_currentThread0 = jl_Thread_mainThread;
    jl_Thread_nextId = Long_fromInt(1);
    jl_Thread_activeCount = 1;
}
function iaamg_Plane() {
    var a = this; jl_Object.call(a);
    a.$normal = null;
    a.$d = 0.0;
}
function iaamg_Plane__init_(var_0, var_1) {
    var var_2 = new iaamg_Plane();
    iaamg_Plane__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaamg_Plane__init_0($this, $normal, $d) {
    jl_Object__init_0($this);
    $this.$normal = iaamg_Vector3__init_0();
    $this.$d = 0.0;
    $this.$normal.$set19($normal).$nor0();
    $this.$d = $d;
}
function jur_BackReferencedSingleSet() {
    jur_SingleSet.call(this);
}
function jur_BackReferencedSingleSet__init_(var_0) {
    var var_1 = new jur_BackReferencedSingleSet();
    jur_BackReferencedSingleSet__init_0(var_1, var_0);
    return var_1;
}
function jur_BackReferencedSingleSet__init_0($this, $node) {
    jur_SingleSet__init_0($this, $node.$kid, $node.$fSet);
}
function jur_BackReferencedSingleSet_find($this, $startSearch, $testString, $matchResult) {
    var $res, $lastIndex, $saveStart;
    $res = 0;
    $lastIndex = $matchResult.$getRightBound();
    a: {
        while (true) {
            if ($startSearch > $lastIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = $matchResult.$getStart($this.$groupIndex0);
            $matchResult.$setStart($this.$groupIndex0, $startSearch);
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            $matchResult.$setStart($this.$groupIndex0, $saveStart);
            $startSearch = $startSearch + 1 | 0;
        }
    }
    return $startSearch;
}
function jur_BackReferencedSingleSet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    var $res, $saveStart;
    $res = 0;
    a: {
        while (true) {
            if ($startSearch < $stringIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = $matchResult.$getStart($this.$groupIndex0);
            $matchResult.$setStart($this.$groupIndex0, $startSearch);
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            $matchResult.$setStart($this.$groupIndex0, $saveStart);
            $startSearch = $startSearch + (-1) | 0;
        }
    }
    return $startSearch;
}
function jur_BackReferencedSingleSet_processBackRefReplacement($this) {
    return null;
}
function jnc_BufferOverflowException() {
    jl_RuntimeException.call(this);
}
function jnc_BufferOverflowException__init_() {
    var var_0 = new jnc_BufferOverflowException();
    jnc_BufferOverflowException__init_0(var_0);
    return var_0;
}
function jnc_BufferOverflowException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function iaam_Interpolation$13() {
    iaam_Interpolation.call(this);
}
function iaam_Interpolation$13__init_() {
    var var_0 = new iaam_Interpolation$13();
    iaam_Interpolation$13__init_0(var_0);
    return var_0;
}
function iaam_Interpolation$13__init_0($this) {
    iaam_Interpolation__init_0($this);
}
function otp_PlatformQueue() {
    jl_Object.call(this);
}
function otp_PlatformQueue_wrap($obj) {
    return $obj;
}
function otp_PlatformQueue_isEmpty$static($this) {
    return $this.length ? 0 : 1;
}
function otp_PlatformQueue_add$static($this, $e) {
    var var$3;
    var$3 = otp_PlatformQueue_wrap($e);
    $this.push(var$3);
}
function otp_PlatformQueue_remove$static($this) {
    return $this.shift();
}
function iaam_Interpolation$14() {
    iaam_Interpolation.call(this);
}
function iaam_Interpolation$14__init_() {
    var var_0 = new iaam_Interpolation$14();
    iaam_Interpolation$14__init_0(var_0);
    return var_0;
}
function iaam_Interpolation$14__init_0($this) {
    iaam_Interpolation__init_0($this);
}
function iaag_Colors() {
    jl_Object.call(this);
}
var iaag_Colors_map = null;
function iaag_Colors_$callClinit() {
    iaag_Colors_$callClinit = $rt_eraseClinit(iaag_Colors);
    iaag_Colors__clinit_();
}
function iaag_Colors_get($name) {
    iaag_Colors_$callClinit();
    return iaag_Colors_map.$get9($name);
}
function iaag_Colors_reset() {
    var var$1;
    iaag_Colors_$callClinit();
    iaag_Colors_map.$clear();
    var$1 = iaag_Colors_map;
    iaag_Color_$callClinit();
    var$1.$put($rt_s(712), iaag_Color_clear);
    iaag_Colors_map.$put($rt_s(1072), iaag_Color_black);
    iaag_Colors_map.$put($rt_s(1073), iaag_Color_white);
    iaag_Colors_map.$put($rt_s(1074), iaag_Color_lightGray);
    iaag_Colors_map.$put($rt_s(1075), iaag_Color_gray);
    iaag_Colors_map.$put($rt_s(1076), iaag_Color_darkGray);
    iaag_Colors_map.$put($rt_s(1077), iaag_Color_blue);
    iaag_Colors_map.$put($rt_s(1078), iaag_Color_navy);
    iaag_Colors_map.$put($rt_s(1079), iaag_Color_royal);
    iaag_Colors_map.$put($rt_s(1080), iaag_Color_slate);
    iaag_Colors_map.$put($rt_s(1081), iaag_Color_sky);
    iaag_Colors_map.$put($rt_s(1082), iaag_Color_cyan);
    iaag_Colors_map.$put($rt_s(1083), iaag_Color_teal);
    iaag_Colors_map.$put($rt_s(1084), iaag_Color_green);
    iaag_Colors_map.$put($rt_s(1085), iaag_Color_acid);
    iaag_Colors_map.$put($rt_s(1086), iaag_Color_lime);
    iaag_Colors_map.$put($rt_s(1087), iaag_Color_forest);
    iaag_Colors_map.$put($rt_s(1088), iaag_Color_olive);
    iaag_Colors_map.$put($rt_s(1089), iaag_Color_yellow);
    iaag_Colors_map.$put($rt_s(1090), iaag_Color_gold);
    iaag_Colors_map.$put($rt_s(1091), iaag_Color_goldenrod);
    iaag_Colors_map.$put($rt_s(1092), iaag_Color_orange);
    iaag_Colors_map.$put($rt_s(1093), iaag_Color_brown);
    iaag_Colors_map.$put($rt_s(1094), iaag_Color_tan);
    iaag_Colors_map.$put($rt_s(1095), iaag_Color_brick);
    iaag_Colors_map.$put($rt_s(1096), iaag_Color_red);
    iaag_Colors_map.$put($rt_s(1097), iaag_Color_scarlet);
    iaag_Colors_map.$put($rt_s(1098), iaag_Color_coral);
    iaag_Colors_map.$put($rt_s(1099), iaag_Color_salmon);
    iaag_Colors_map.$put($rt_s(1100), iaag_Color_pink);
    iaag_Colors_map.$put($rt_s(1101), iaag_Color_magenta);
    iaag_Colors_map.$put($rt_s(1102), iaag_Color_purple);
    iaag_Colors_map.$put($rt_s(1103), iaag_Color_violet);
    iaag_Colors_map.$put($rt_s(1104), iaag_Color_maroon);
    iaag_Colors_map.$put($rt_s(512), iaag_Color_clear);
    iaag_Colors_map.$put($rt_s(1105), iaag_Color_black);
    iaag_Colors_map.$put($rt_s(1106), iaag_Color_white);
    iaag_Colors_map.$put($rt_s(1107), iaag_Color_lightGray);
    iaag_Colors_map.$put($rt_s(1108), iaag_Color_gray);
    iaag_Colors_map.$put($rt_s(1109), iaag_Color_darkGray);
    iaag_Colors_map.$put($rt_s(1110), iaag_Color_blue);
    iaag_Colors_map.$put($rt_s(1111), iaag_Color_navy);
    iaag_Colors_map.$put($rt_s(1112), iaag_Color_royal);
    iaag_Colors_map.$put($rt_s(1113), iaag_Color_slate);
    iaag_Colors_map.$put($rt_s(1114), iaag_Color_sky);
    iaag_Colors_map.$put($rt_s(1115), iaag_Color_cyan);
    iaag_Colors_map.$put($rt_s(1116), iaag_Color_teal);
    iaag_Colors_map.$put($rt_s(1117), iaag_Color_green);
    iaag_Colors_map.$put($rt_s(1118), iaag_Color_acid);
    iaag_Colors_map.$put($rt_s(1119), iaag_Color_lime);
    iaag_Colors_map.$put($rt_s(1120), iaag_Color_forest);
    iaag_Colors_map.$put($rt_s(1121), iaag_Color_olive);
    iaag_Colors_map.$put($rt_s(1122), iaag_Color_yellow);
    iaag_Colors_map.$put($rt_s(1123), iaag_Color_gold);
    iaag_Colors_map.$put($rt_s(1124), iaag_Color_goldenrod);
    iaag_Colors_map.$put($rt_s(1125), iaag_Color_orange);
    iaag_Colors_map.$put($rt_s(1126), iaag_Color_brown);
    iaag_Colors_map.$put($rt_s(1127), iaag_Color_tan);
    iaag_Colors_map.$put($rt_s(1128), iaag_Color_brick);
    iaag_Colors_map.$put($rt_s(1129), iaag_Color_red);
    iaag_Colors_map.$put($rt_s(1130), iaag_Color_scarlet);
    iaag_Colors_map.$put($rt_s(1131), iaag_Color_coral);
    iaag_Colors_map.$put($rt_s(1132), iaag_Color_salmon);
    iaag_Colors_map.$put($rt_s(1133), iaag_Color_pink);
    iaag_Colors_map.$put($rt_s(1134), iaag_Color_magenta);
    iaag_Colors_map.$put($rt_s(1135), iaag_Color_purple);
    iaag_Colors_map.$put($rt_s(1136), iaag_Color_violet);
    iaag_Colors_map.$put($rt_s(1137), iaag_Color_maroon);
    iaag_Colors_map.$put($rt_s(1138), iaag_Color_scarlet);
    iaag_Colors_map.$put($rt_s(1130), iaag_Color_scarlet);
}
function iaag_Colors__clinit_() {
    iaag_Colors_map = iaac_OrderedMap__init_();
    iaag_Colors_reset();
}
function otciu_CLDRHelper() {
    jl_Object.call(this);
}
var otciu_CLDRHelper_$$metadata$$10 = null;
function otciu_CLDRHelper_getDefaultLocale() {
    if (otciu_CLDRHelper_$$metadata$$10 === null)
        otciu_CLDRHelper_$$metadata$$10 = otciu_CLDRHelper_getDefaultLocale$$create();
    return otciu_CLDRHelper_$$metadata$$10;
}
function otciu_CLDRHelper_getDefaultLocale$$create() {
    return {"value" : "en_GB"};
}
function iw_MapLoader() {
    iaaml_TmxMapLoader.call(this);
}
function iw_MapLoader__init_() {
    var var_0 = new iw_MapLoader();
    iw_MapLoader__init_0(var_0);
    return var_0;
}
function iw_MapLoader__init_0($this) {
    iaaml_TmxMapLoader__init_0($this);
}
function iw_MapLoader_load($this, $fileName, $parameters) {
    var $tmxFile;
    $this.$convertObjectToTileSpace = $parameters.$convertObjectToTileSpace0;
    $this.$flipY = $parameters.$flipY0;
    $tmxFile = $this.$resolve($fileName);
    $this.$root1 = $this.$xml.$parse1($tmxFile);
    return $this.$loadTilemap($this.$root1, $tmxFile, null);
}
function iw_MapLoader_loadTilemap($this, $root, $tmxFile, $imageResolver) {
    var $map, $mapOrientation, $mapWidth, $mapHeight, $tileWidth, $tileHeight, $hexSideLength, $staggerAxis, $staggerIndex, $mapBackgroundColor, $mapProperties, $properties, $tilesets, var$17, $element, $i, $j, $name;
    $map = iaam_TiledMap__init_();
    $mapOrientation = $root.$getAttribute($rt_s(1139), null);
    $mapWidth = $root.$getIntAttribute($rt_s(443), 0);
    $mapHeight = $root.$getIntAttribute($rt_s(444), 0);
    $tileWidth = $root.$getIntAttribute($rt_s(445), 0);
    $tileHeight = $root.$getIntAttribute($rt_s(446), 0);
    $hexSideLength = $root.$getIntAttribute($rt_s(1140), 0);
    $staggerAxis = $root.$getAttribute($rt_s(1141), null);
    $staggerIndex = $root.$getAttribute($rt_s(1142), null);
    $mapBackgroundColor = $root.$getAttribute($rt_s(1143), null);
    $mapProperties = $map.$properties;
    if ($mapOrientation !== null)
        $mapProperties.$put2($rt_s(1139), $mapOrientation);
    $mapProperties.$put2($rt_s(443), jl_Integer_valueOf0($mapWidth));
    $mapProperties.$put2($rt_s(444), jl_Integer_valueOf0($mapHeight));
    $mapProperties.$put2($rt_s(445), jl_Integer_valueOf0($tileWidth));
    $mapProperties.$put2($rt_s(446), jl_Integer_valueOf0($tileHeight));
    $mapProperties.$put2($rt_s(1140), jl_Integer_valueOf0($hexSideLength));
    if ($staggerAxis !== null)
        $mapProperties.$put2($rt_s(1141), $staggerAxis);
    if ($staggerIndex !== null)
        $mapProperties.$put2($rt_s(1142), $staggerIndex);
    if ($mapBackgroundColor !== null)
        $mapProperties.$put2($rt_s(1143), $mapBackgroundColor);
    $this.$mapTileWidth = $tileWidth;
    $this.$mapTileHeight = $tileHeight;
    $this.$mapWidthInPixels = $rt_imul($mapWidth, $tileWidth);
    $this.$mapHeightInPixels = $rt_imul($mapHeight, $tileHeight);
    if ($mapOrientation !== null && $rt_s(1144).$equals($mapOrientation) && $mapHeight > 1) {
        $this.$mapWidthInPixels = $this.$mapWidthInPixels + ($tileWidth / 2 | 0) | 0;
        $this.$mapHeightInPixels = ($this.$mapHeightInPixels / 2 | 0) + ($tileHeight / 2 | 0) | 0;
    }
    $properties = $root.$getChildByName($rt_s(447));
    if ($properties !== null)
        $this.$loadProperties($map.$properties, $properties);
    $tilesets = $root.$getChildrenByName($rt_s(1145));
    var$17 = $tilesets.$iterator();
    while (var$17.$hasNext()) {
        $element = var$17.$next0();
        $this.$loadTileSet($map, $element, $tmxFile, $imageResolver);
        $root.$removeChild0($element);
    }
    $i = 0;
    $j = $root.$getChildCount();
    while ($i < $j) {
        $element = $root.$getChild($i);
        $name = $element.$getName();
        if ($name.$equals($rt_s(442)))
            $this.$loadTileLayer($map, $map.$layers, $element);
        else if ($name.$equals($rt_s(448)))
            $this.$loadObjectGroup($map, $map.$layers, $element);
        $i = $i + 1 | 0;
    }
    return $map;
}
function iw_MapLoader_loadTileSet($this, $map, $element, $tmxFile, $imageResolver) {
    var $name, $firstgid, $source, $offsetX, $offsetY, $imageSource, $offset, $imageElement, $tsx, $tileset, $tileElements, var$16, $tileElement, $regionName, $tile, var$20, $localtid, $objectgroupElement, var$23, $objectElement, $terrain, $probability, $properties, $$je;
    if ($element.$getName().$equals($rt_s(1145))) {
        $name = $element.$get50($rt_s(450), null);
        $firstgid = $element.$getIntAttribute($rt_s(1146), 1);
        $element.$getIntAttribute($rt_s(445), 0);
        $element.$getIntAttribute($rt_s(446), 0);
        $element.$getIntAttribute($rt_s(1147), 0);
        $element.$getIntAttribute($rt_s(1148), 0);
        $source = $element.$getAttribute($rt_s(1149), null);
        $offsetX = 0;
        $offsetY = 0;
        $imageSource = $rt_s(58);
        if ($source === null) {
            $offset = $element.$getChildByName($rt_s(1150));
            if ($offset !== null) {
                $offsetX = $offset.$getIntAttribute($rt_s(268), 0);
                $offsetY = $offset.$getIntAttribute($rt_s(269), 0);
            }
            $imageElement = $element.$getChildByName($rt_s(1151));
            if ($imageElement !== null) {
                $imageSource = $imageElement.$getAttribute0($rt_s(1149));
                $imageElement.$getIntAttribute($rt_s(443), 0);
                $imageElement.$getIntAttribute($rt_s(444), 0);
                iaaml_BaseTmxMapLoader_getRelativeFileHandle($tmxFile, $imageSource);
            }
        } else {
            $tsx = iaaml_BaseTmxMapLoader_getRelativeFileHandle($tmxFile, $source);
            a: {
                try {
                    $element = $this.$xml.$parse1($tsx);
                    $name = $element.$get50($rt_s(450), null);
                    $element.$getIntAttribute($rt_s(445), 0);
                    $element.$getIntAttribute($rt_s(446), 0);
                    $element.$getIntAttribute($rt_s(1147), 0);
                    $element.$getIntAttribute($rt_s(1148), 0);
                    $offset = $element.$getChildByName($rt_s(1150));
                    if ($offset !== null) {
                        $offsetX = $offset.$getIntAttribute($rt_s(268), 0);
                        $offsetY = $offset.$getIntAttribute($rt_s(269), 0);
                    }
                    $imageElement = $element.$getChildByName($rt_s(1151));
                    if ($imageElement === null)
                        break a;
                    $imageSource = $imageElement.$getAttribute0($rt_s(1149));
                    $imageElement.$getIntAttribute($rt_s(443), 0);
                    $imageElement.$getIntAttribute($rt_s(444), 0);
                    iaaml_BaseTmxMapLoader_getRelativeFileHandle($tsx, $imageSource);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof iaaus_SerializationException) {
                    } else {
                        throw $$e;
                    }
                }
                $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1152)));
            }
        }
        $tileset = iaam_TileSet__init_();
        $tileset.$name12 = $name;
        $tileset.$getProperties().$put2($rt_s(1146), jl_Integer_valueOf0($firstgid));
        $tileElements = $element.$getChildrenByName($rt_s(1153));
        var$16 = $tileElements.$iterator();
        while (var$16.$hasNext()) {
            $tileElement = var$16.$next0();
            $imageElement = $tileElement.$getChildByName($rt_s(1151));
            if ($imageElement !== null) {
                $imageSource = $imageElement.$getAttribute0($rt_s(1149));
                $imageElement.$getIntAttribute($rt_s(443), 0);
                $imageElement.$getIntAttribute($rt_s(444), 0);
                if ($source === null)
                    iaaml_BaseTmxMapLoader_getRelativeFileHandle($tmxFile, $imageSource);
                else
                    iaaml_BaseTmxMapLoader_getRelativeFileHandle(iaaml_BaseTmxMapLoader_getRelativeFileHandle($tmxFile, $source), $imageSource);
            }
            $regionName = $imageSource.$substring(1 + $imageSource.$lastIndexOf2($rt_s(556)) | 0).$replace($rt_s(1008), $rt_s(58));
            $tile = iaam_MapTile__init_(null);
            iaa_Core_$callClinit();
            $tile.$region0 = iaa_Core_atlas.$has($regionName) ? iaa_Core_atlas.$find($regionName) : iw_MapLoader$1__init_($this, iaa_Core_atlas.$find($rt_s(1154)), $regionName);
            $tile.$id1 = $firstgid + $tileElement.$getIntAttribute0($rt_s(463)) | 0;
            $tile.$offsetX2 = $offsetX;
            $tile.$offsetY2 = !$this.$flipY ? $offsetY :  -$offsetY;
            $tileset.$put12($tile.$id1, $tile);
        }
        var$20 = $tileElements.$iterator();
        while (var$20.$hasNext()) {
            $tileElement = var$20.$next0();
            $localtid = $tileElement.$getIntAttribute($rt_s(463), 0);
            $tile = $tileset.$get48($firstgid + $localtid | 0);
            if ($tile !== null) {
                b: {
                    $objectgroupElement = $tileElement.$getChildByName($rt_s(448));
                    if ($objectgroupElement !== null) {
                        var$23 = $objectgroupElement.$getChildrenByName($rt_s(449)).$iterator();
                        while (true) {
                            if (!var$23.$hasNext())
                                break b;
                            $objectElement = var$23.$next0();
                            $this.$loadObject1($map, $tile, $objectElement);
                        }
                    }
                }
                $terrain = $tileElement.$getAttribute($rt_s(1155), null);
                if ($terrain !== null)
                    $tile.$getProperties().$put2($rt_s(1155), $terrain);
                $probability = $tileElement.$getAttribute($rt_s(1156), null);
                if ($probability !== null)
                    $tile.$getProperties().$put2($rt_s(1156), $probability);
                $properties = $tileElement.$getChildByName($rt_s(447));
                if ($properties !== null)
                    $this.$loadProperties($tile.$getProperties(), $properties);
            }
        }
        $properties = $element.$getChildByName($rt_s(447));
        if ($properties !== null)
            $this.$loadProperties($tileset.$getProperties(), $properties);
        $map.$tilesets.$addTileSet($tileset);
    }
}
function jl_StringIndexOutOfBoundsException() {
    jl_IndexOutOfBoundsException.call(this);
}
function jl_StringIndexOutOfBoundsException__init_() {
    var var_0 = new jl_StringIndexOutOfBoundsException();
    jl_StringIndexOutOfBoundsException__init_0(var_0);
    return var_0;
}
function jl_StringIndexOutOfBoundsException__init_0($this) {
    jl_IndexOutOfBoundsException__init_2($this);
}
function ju_MissingResourceException() {
    var a = this; jl_RuntimeException.call(a);
    a.$className = null;
    a.$key1 = null;
}
function ju_MissingResourceException__init_(var_0, var_1, var_2) {
    var var_3 = new ju_MissingResourceException();
    ju_MissingResourceException__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function ju_MissingResourceException__init_0($this, $s, $className, $key) {
    jl_RuntimeException__init_4($this, $s);
    $this.$className = $className;
    $this.$key1 = $key;
}
function it_Phases$6$reset$lambda$_3_0() {
    jl_Object.call(this);
}
function it_Phases$6$reset$lambda$_3_0__init_() {
    var var_0 = new it_Phases$6$reset$lambda$_3_0();
    it_Phases$6$reset$lambda$_3_0__init_0(var_0);
    return var_0;
}
function it_Phases$6$reset$lambda$_3_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$6$reset$lambda$_3_0_get(var$0, var$1) {
    it_Phases$6$reset$lambda$_3_0_get0(var$0, var$1);
}
function it_Phases$6$reset$lambda$_3_0_get0(var$0, var$1) {
    it_Phases$6_lambda$reset$2(var$1);
}
function ig_Drawf() {
    jl_Object.call(this);
}
var ig_Drawf_symbols0 = null;
function ig_Drawf_symbols($seed, $x, $y, $radius) {
    var $region, $split, var$7, var$8, $i, $amount, $ang;
    a: {
        if (ig_Drawf_symbols0 === null) {
            iaa_Core_$callClinit();
            $region = iaa_Core_atlas.$find($rt_s(1157));
            $split = $region.$split5(7, 7);
            var$7 = $split.data;
            var$8 = var$7.length;
            ig_Drawf_symbols0 = $rt_createArray(iaagg_TextureRegion, var$8);
            $i = 0;
            while (true) {
                if ($i >= var$8)
                    break a;
                ig_Drawf_symbols0.data[$i] = var$7[$i].data[0];
                $i = $i + 1 | 0;
            }
        }
    }
    $amount = $radius * 6.2831854820251465 / 10.0 | 0;
    $i = 0;
    while ($i < $amount) {
        $ang = $i / $amount * 360.0;
        iaagg_Draw_rect(ig_Drawf_symbols0.data[iaam_Mathf_randomSeed(Long_fromInt($seed + $i | 0), 0, ig_Drawf_symbols0.data.length - 1 | 0)], $x + iaam_Angles_trnsx($ang, $radius), $y + iaam_Angles_trnsy($ang, $radius));
        $i = $i + 1 | 0;
    }
}
function ig_Drawf_light($x, $y, $rad, $color) {
    ig_Drawf_light1($x, $y, $rad, $color, 1.0);
}
function ig_Drawf_light1($x, $y, $rad, $color, $alpha) {
    var var$6;
    var$6 = $rad * 2.0;
    ig_Drawf_light2($x, $y, var$6, var$6, $color, $alpha);
}
function ig_Drawf_light2($x, $y, $width, $height, $color, $alpha) {
    var var$7;
    var$7 = i_Inferno_renderer.$lbatch;
    iaa_Core_$callClinit();
    iaa_Core_batch = var$7;
    iaagg_Draw_color2($color, $alpha);
    iaagg_Draw_rect2($rt_s(1158), $x, $y, $width, $height);
    iaagg_Draw_color0();
    iaa_Core_batch = i_Inferno_renderer.$zbatch;
}
function ig_Drawf_light0($color, $alpha, $run) {
    var var$4;
    var$4 = i_Inferno_renderer.$lbatch;
    iaa_Core_$callClinit();
    iaa_Core_batch = var$4;
    iaagg_Draw_color2($color, $alpha);
    $run.$run();
    iaagg_Draw_color0();
    iaa_Core_batch = i_Inferno_renderer.$zbatch;
}
function ig_Drawf_z($z) {
    i_Inferno_renderer.$zbatch.$z5 = $z;
}
function ig_Drawf_sort($sort) {
    i_Inferno_renderer.$zbatch.$sort2($sort);
}
function iaagg_GLFrameBuffer$FrameBufferBuilder() {
    iaagg_GLFrameBuffer$GLFrameBufferBuilder.call(this);
}
function iaagg_GLFrameBuffer$FrameBufferBuilder__init_(var_0, var_1) {
    var var_2 = new iaagg_GLFrameBuffer$FrameBufferBuilder();
    iaagg_GLFrameBuffer$FrameBufferBuilder__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaagg_GLFrameBuffer$FrameBufferBuilder__init_0($this, $width, $height) {
    iaagg_GLFrameBuffer$GLFrameBufferBuilder__init_0($this, $width, $height);
}
function iaagg_GLFrameBuffer$FrameBufferBuilder_addBasicStencilRenderBuffer($this) {
    return iaagg_GLFrameBuffer$GLFrameBufferBuilder_addBasicStencilRenderBuffer($this);
}
function iaagg_GLFrameBuffer$FrameBufferBuilder_addBasicDepthRenderBuffer($this) {
    return iaagg_GLFrameBuffer$GLFrameBufferBuilder_addBasicDepthRenderBuffer($this);
}
function iaagg_GLFrameBuffer$FrameBufferBuilder_addStencilRenderBuffer($this, var$1) {
    return iaagg_GLFrameBuffer$GLFrameBufferBuilder_addStencilRenderBuffer($this, var$1);
}
function iaagg_GLFrameBuffer$FrameBufferBuilder_addDepthRenderBuffer($this, var$1) {
    return iaagg_GLFrameBuffer$GLFrameBufferBuilder_addDepthRenderBuffer($this, var$1);
}
function iaagg_GLFrameBuffer$FrameBufferBuilder_addBasicColorTextureAttachment($this, var$1) {
    return iaagg_GLFrameBuffer$GLFrameBufferBuilder_addBasicColorTextureAttachment($this, var$1);
}
function iaagg_GLFrameBuffer$FrameBufferBuilder_addColorTextureAttachment($this, var$1, var$2, var$3) {
    return iaagg_GLFrameBuffer$GLFrameBufferBuilder_addColorTextureAttachment($this, var$1, var$2, var$3);
}
function jur_UCIBackReferenceSet() {
    jur_CIBackReferenceSet.call(this);
    this.$groupIndex1 = 0;
}
function jur_UCIBackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_UCIBackReferenceSet();
    jur_UCIBackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_UCIBackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    jur_CIBackReferenceSet__init_0($this, $groupIndex, $consCounter);
}
function jur_UCIBackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $group, $i, var$6, var$7;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $i = 0;
        while (true) {
            if ($i >= $group.$length()) {
                $matchResult.$setConsumed($this.$consCounter0, $group.$length());
                return $this.$next.$matches($stringIndex + $group.$length() | 0, $testString, $matchResult);
            }
            var$6 = jl_Character_toLowerCase(jl_Character_toUpperCase0($group.$charAt($i)));
            var$7 = $stringIndex + $i | 0;
            var$7 = jl_Character_toUpperCase0($testString.$charAt(var$7));
            if (var$6 != jl_Character_toLowerCase(var$7))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
}
function jur_UCIBackReferenceSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(1159)).$append3($this.$groupIndex1).$toString();
}
function jn_ByteOrder() {
    jl_Object.call(this);
    this.$name14 = null;
}
var jn_ByteOrder_BIG_ENDIAN = null;
var jn_ByteOrder_LITTLE_ENDIAN = null;
function jn_ByteOrder_$callClinit() {
    jn_ByteOrder_$callClinit = $rt_eraseClinit(jn_ByteOrder);
    jn_ByteOrder__clinit_();
}
function jn_ByteOrder__init_(var_0) {
    var var_1 = new jn_ByteOrder();
    jn_ByteOrder__init_0(var_1, var_0);
    return var_1;
}
function jn_ByteOrder__init_0($this, $name) {
    jn_ByteOrder_$callClinit();
    jl_Object__init_0($this);
    $this.$name14 = $name;
}
function jn_ByteOrder_nativeOrder() {
    jn_ByteOrder_$callClinit();
    return jn_ByteOrder_BIG_ENDIAN;
}
function jn_ByteOrder__clinit_() {
    jn_ByteOrder_BIG_ENDIAN = jn_ByteOrder__init_($rt_s(1160));
    jn_ByteOrder_LITTLE_ENDIAN = jn_ByteOrder__init_($rt_s(1161));
}
function iaa_Audio() {
    jl_Object.call(this);
    this.$falloff = 0.0;
}
function iaa_Audio__init_() {
    var var_0 = new iaa_Audio();
    iaa_Audio__init_0(var_0);
    return var_0;
}
function iaa_Audio__init_0($this) {
    jl_Object__init_0($this);
    $this.$falloff = 16000.0;
}
function iaabt_TeaAudio() {
    iaa_Audio.call(this);
}
function iaabt_TeaAudio__init_() {
    var var_0 = new iaabt_TeaAudio();
    iaabt_TeaAudio__init_0(var_0);
    return var_0;
}
function iaabt_TeaAudio__init_0($this) {
    iaa_Audio__init_0($this);
}
function jur_DotAllQuantifierSet() {
    jur_QuantifierSet.call(this);
}
function jur_DotAllQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_DotAllQuantifierSet();
    jur_DotAllQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_DotAllQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_QuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_DotAllQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength;
    $strLength = $matchResult.$getRightBound();
    if ($strLength > $stringIndex)
        return $this.$next.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_DotAllQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
    var $strLength;
    $strLength = $matchResult.$getRightBound();
    if ($this.$next.$findBack($stringIndex, $strLength, $testString, $matchResult) >= 0)
        return $stringIndex;
    return (-1);
}
function jur_DotAllQuantifierSet_getName($this) {
    return $rt_s(1162);
}
function iaasu_Label() {
    var a = this; iaas_Element.call(a);
    a.$layout1 = null;
    a.$prefSize = null;
    a.$text1 = null;
    a.$style = null;
    a.$cache0 = null;
    a.$labelAlign = 0;
    a.$lineAlign = 0;
    a.$wrap7 = 0;
    a.$lastPrefHeight = 0.0;
    a.$prefSizeInvalid = 0;
    a.$fontScaleX = 0.0;
    a.$fontScaleY = 0.0;
    a.$fontScaleChanged = 0;
    a.$ellipsis = null;
}
var iaasu_Label_tempColor = null;
var iaasu_Label_prefSizeLayout = null;
function iaasu_Label_$callClinit() {
    iaasu_Label_$callClinit = $rt_eraseClinit(iaasu_Label);
    iaasu_Label__clinit_();
}
function iaasu_Label__init_(var_0) {
    var var_1 = new iaasu_Label();
    iaasu_Label__init_0(var_1, var_0);
    return var_1;
}
function iaasu_Label__init_1(var_0) {
    var var_1 = new iaasu_Label();
    iaasu_Label__init_2(var_1, var_0);
    return var_1;
}
function iaasu_Label__init_3(var_0, var_1) {
    var var_2 = new iaasu_Label();
    iaasu_Label__init_4(var_2, var_0, var_1);
    return var_2;
}
function iaasu_Label__init_0($this, $sup) {
    var var$2, $$je;
    iaasu_Label_$callClinit();
    var$2 = new iaasu_Label$LabelStyle;
    iaa_Core_$callClinit();
    iaasu_Label$LabelStyle__init_2(var$2, iaa_Core_scene.$getStyle($rt_cls(iaasu_Label$LabelStyle)));
    iaasu_Label__init_4($this, $rt_s(58), var$2);
    $this.$update4(iaasu_Label$_init_$lambda$_0_0__init_($this, $sup));
    a: {
        try {
            $this.$setText1($sup.$get0());
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
            } else {
                throw $$e;
            }
        }
    }
}
function iaasu_Label__init_2($this, $text) {
    iaasu_Label_$callClinit();
    iaa_Core_$callClinit();
    iaasu_Label__init_4($this, $text, iaa_Core_scene.$getStyle($rt_cls(iaasu_Label$LabelStyle)));
}
function iaasu_Label__init_4($this, $text, $style) {
    iaasu_Label_$callClinit();
    iaas_Element__init_0($this);
    $this.$layout1 = iaagg_GlyphLayout__init_();
    $this.$prefSize = iaamg_Vector2__init_0();
    $this.$text1 = jl_StringBuilder__init_();
    $this.$labelAlign = 8;
    $this.$lineAlign = 8;
    $this.$prefSizeInvalid = 1;
    $this.$fontScaleX = 1.0;
    $this.$fontScaleY = 1.0;
    $this.$fontScaleChanged = 0;
    if ($style === null) {
        $this.$text1.$setLength(0);
        $this.$text1.$append15($text);
        return;
    }
    $this.$setStyle(iaasu_Label$LabelStyle__init_1($style));
    if ($text !== null)
        $this.$setText1($text);
    if ($text !== null && $text.$length() > 0)
        $this.$setSize($this.$getPrefWidth(), $this.$getPrefHeight());
}
function iaasu_Label_getStyle($this) {
    return $this.$style;
}
function iaasu_Label_setStyle($this, $style) {
    if ($style === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1163)));
    if ($style.$font === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1164)));
    $this.$style = $style;
    $this.$cache0 = $style.$font.$newFontCache();
    $this.$invalidateHierarchy();
}
function iaasu_Label_setTextInternal($this, $newText) {
    if ($newText === null)
        $newText = $rt_s(58);
    if ($this.$textEquals($newText))
        return;
    $this.$text1.$setLength(0);
    $this.$text1.$append15($newText);
    $this.$invalidateHierarchy();
}
function iaasu_Label_textEquals($this, $other) {
    var $length, $i;
    $length = $this.$text1.$length();
    if ($length != $other.$length())
        return 0;
    $i = 0;
    while ($i < $length) {
        if ($this.$text1.$charAt($i) != $other.$charAt($i))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
function iaasu_Label_getText($this) {
    return $this.$text1;
}
function iaasu_Label_setText($this, $newText) {
    var $out;
    iaa_Core_$callClinit();
    if (iaa_Core_bundle !== null && $newText !== null && $newText.$length() > 0 && $newText.$charAt(0) == 36) {
        $out = $newText.$toString().$substring(1);
        iaasu_Label_setTextInternal($this, iaa_Core_bundle.$get50($out, $out));
    } else
        iaasu_Label_setTextInternal($this, $newText);
}
function iaasu_Label_invalidate($this) {
    iaas_Element_invalidate($this);
    $this.$prefSizeInvalid = 1;
}
function iaasu_Label_scaleAndComputePrefSize($this) {
    var $font, $oldScaleX, $oldScaleY;
    $font = $this.$cache0.$getFont();
    $oldScaleX = $font.$getScaleX();
    $oldScaleY = $font.$getScaleY();
    if ($this.$fontScaleChanged)
        $font.$getData().$setScale($this.$fontScaleX, $this.$fontScaleY);
    iaasu_Label_computePrefSize($this);
    if ($this.$fontScaleChanged)
        $font.$getData().$setScale($oldScaleX, $oldScaleY);
}
function iaasu_Label_computePrefSize($this) {
    var $prefSizeLayout, $width, var$3, var$4, var$5, var$6;
    $this.$prefSizeInvalid = 0;
    $prefSizeLayout = iaasu_Label_prefSizeLayout;
    if ($this.$wrap7 && $this.$ellipsis === null) {
        $width = $this.$getWidth();
        if ($this.$style.$background !== null)
            $width = $width - ($this.$style.$background.$getLeftWidth() + $this.$style.$background.$getRightWidth());
        var$3 = $this.$cache0.$getFont();
        var$4 = $this.$text1;
        iaag_Color_$callClinit();
        $prefSizeLayout.$setText2(var$3, var$4, iaag_Color_white, $width, 8, 1);
    } else {
        var$4 = $this.$cache0.$getFont();
        var$5 = $this.$text1;
        var$6 = $this.$text1.$length();
        iaag_Color_$callClinit();
        $prefSizeLayout.$setText0(var$4, var$5, 0, var$6, iaag_Color_white, $this.$width, $this.$lineAlign, $this.$wrap7, $this.$ellipsis);
    }
    $this.$prefSize.$set2($prefSizeLayout.$width5, $prefSizeLayout.$height5);
}
function iaasu_Label_layout($this) {
    var $font, $oldScaleX, $oldScaleY, $wrap, $prefHeight, $width, $height, $background, $x, $y, $layout, $textHeight, var$13, var$14, $textWidth, var$16, var$17, var$18;
    $font = $this.$cache0.$getFont();
    $oldScaleX = $font.$getScaleX();
    $oldScaleY = $font.$getScaleY();
    if ($this.$fontScaleChanged)
        $font.$getData().$setScale($this.$fontScaleX, $this.$fontScaleY);
    $wrap = $this.$wrap7 && $this.$ellipsis === null ? 1 : 0;
    if ($wrap) {
        $prefHeight = $this.$getPrefHeight();
        if ($prefHeight !== $this.$lastPrefHeight) {
            $this.$lastPrefHeight = $prefHeight;
            $this.$invalidateHierarchy();
        }
    }
    $width = $this.$getWidth();
    $height = $this.$getHeight();
    $background = $this.$style.$background;
    $x = 0.0;
    $y = 0.0;
    if ($background !== null) {
        $x = $background.$getLeftWidth();
        $y = $background.$getBottomHeight();
        $width = $width - ($background.$getLeftWidth() + $background.$getRightWidth());
        $height = $height - ($background.$getBottomHeight() + $background.$getTopHeight());
    }
    $layout = $this.$layout1;
    if (!$wrap && $this.$text1.$indexOf4($rt_s(337)) == (-1))
        $textHeight = $font.$getData().$capHeight;
    else {
        var$13 = $this.$text1;
        var$14 = $this.$text1.$length();
        iaag_Color_$callClinit();
        $layout.$setText0($font, var$13, 0, var$14, iaag_Color_white, $width, $this.$lineAlign, $wrap, $this.$ellipsis);
        $textWidth = $layout.$width5;
        $textHeight = $layout.$height5;
        if ($this.$labelAlign & 8)
            $width = $textWidth;
        else if ($this.$labelAlign & 16) {
            $x = $x + $width - $textWidth;
            $width = $textWidth;
        } else {
            $x = $x + ($width - $textWidth) / 2.0;
            $width = $textWidth;
        }
    }
    if ($this.$labelAlign & 2) {
        var$16 = $y + (!$this.$cache0.$getFont().$isFlipped() ? $height - $textHeight : 0.0);
        var$16 = var$16 + $this.$style.$font.$getDescent();
    } else if (!($this.$labelAlign & 4))
        var$16 = $y + ($height - $textHeight) / 2.0;
    else {
        var$16 = $y + (!$this.$cache0.$getFont().$isFlipped() ? 0.0 : $height - $textHeight);
        var$16 = var$16 - $this.$style.$font.$getDescent();
    }
    if (!$this.$cache0.$getFont().$isFlipped())
        var$16 = var$16 + $textHeight;
    var$17 = $this.$text1;
    var$18 = $this.$text1.$length();
    iaag_Color_$callClinit();
    $layout.$setText0($font, var$17, 0, var$18, iaag_Color_white, $width, $this.$lineAlign, $wrap, $this.$ellipsis);
    $this.$cache0.$setText3($layout, $x, var$16);
    if ($this.$fontScaleChanged)
        $font.$getData().$setScale($oldScaleX, $oldScaleY);
}
function iaasu_Label_draw($this) {
    var $color;
    $this.$validate();
    $color = iaasu_Label_tempColor.$set($this.$getColor());
    $color.$a = $color.$a * $this.$parentAlpha;
    if ($this.$style.$background !== null) {
        iaagg_Draw_color1($color.$r0, $color.$g, $color.$b, $color.$a);
        $this.$style.$background.$draw0($this.$x, $this.$y, $this.$width, $this.$height);
    }
    if ($this.$style.$fontColor !== null)
        $color.$mul($this.$style.$fontColor);
    $this.$cache0.$tint($color);
    $this.$cache0.$setPosition($this.$getX(), $this.$getY());
    $this.$cache0.$draw();
}
function iaasu_Label_getPrefWidth($this) {
    var $width, $background;
    if ($this.$wrap7)
        return 0.0;
    if ($this.$prefSizeInvalid)
        iaasu_Label_scaleAndComputePrefSize($this);
    $width = $this.$prefSize.$x0;
    $background = $this.$style.$background;
    if ($background !== null)
        $width = $width + $background.$getLeftWidth() + $background.$getRightWidth();
    return $width;
}
function iaasu_Label_getPrefHeight($this) {
    var $descentScaleCorrection, $height, $background;
    if ($this.$prefSizeInvalid)
        iaasu_Label_scaleAndComputePrefSize($this);
    $descentScaleCorrection = 1.0;
    if ($this.$fontScaleChanged)
        $descentScaleCorrection = $this.$fontScaleY / $this.$style.$font.$getScaleY();
    $height = $this.$prefSize.$y0 - $this.$style.$font.$getDescent() * $descentScaleCorrection * 2.0;
    $background = $this.$style.$background;
    if ($background !== null)
        $height = $height + $background.$getTopHeight() + $background.$getBottomHeight();
    return $height;
}
function iaasu_Label_getGlyphLayout($this) {
    return $this.$layout1;
}
function iaasu_Label_setWrap($this, $wrap) {
    $this.$wrap7 = $wrap;
    $this.$invalidateHierarchy();
}
function iaasu_Label_getLabelAlign($this) {
    return $this.$labelAlign;
}
function iaasu_Label_getLineAlign($this) {
    return $this.$lineAlign;
}
function iaasu_Label_setAlignment($this, $alignment) {
    $this.$setAlignment($alignment, $alignment);
}
function iaasu_Label_setAlignment0($this, $labelAlign, $lineAlign) {
    $this.$labelAlign = $labelAlign;
    if ($lineAlign & 8)
        $this.$lineAlign = 8;
    else if (!($lineAlign & 16))
        $this.$lineAlign = 1;
    else
        $this.$lineAlign = 16;
    $this.$invalidate();
}
function iaasu_Label_getFontScaleX($this) {
    return $this.$fontScaleX;
}
function iaasu_Label_getFontScaleY($this) {
    return $this.$fontScaleY;
}
function iaasu_Label_getBitmapFontCache($this) {
    return $this.$cache0;
}
function iaasu_Label_toString($this) {
    return jl_StringBuilder__init_().$append(iaas_Element_toString($this)).$append($rt_s(16)).$append1($this.$text1).$toString();
}
function iaasu_Label_lambda$new$0($this, $sup) {
    $this.$setText1($sup.$get0());
}
function iaasu_Label__clinit_() {
    iaasu_Label_tempColor = iaag_Color__init_0();
    iaasu_Label_prefSizeLayout = iaagg_GlyphLayout__init_();
}
function iaat_TypeLabel() {
    var a = this; iaasu_Label.call(a);
    a.$variables = null;
    a.$tokenEntries = null;
    a.$clearColor = null;
    a.$listener0 = null;
    a.$forceMarkupColor = 0;
    a.$originalText = null;
    a.$glyphCache = null;
    a.$glyphRunCapacities = null;
    a.$offsetCache = null;
    a.$layoutLineBreaks = null;
    a.$activeEffects = null;
    a.$textSpeed = 0.0;
    a.$charCooldown = 0.0;
    a.$rawCharIndex = 0;
    a.$glyphCharIndex = 0;
    a.$glyphCharCompensation = 0;
    a.$cachedGlyphCharIndex = 0;
    a.$lastLayoutX = 0.0;
    a.$lastLayoutY = 0.0;
    a.$parsed = 0;
    a.$paused = 0;
    a.$ended = 0;
    a.$skipping = 0;
    a.$ignoringEvents = 0;
    a.$ignoringEffects = 0;
    a.$defaultToken = null;
}
function iaat_TypeLabel__init_(var_0) {
    var var_1 = new iaat_TypeLabel();
    iaat_TypeLabel__init_0(var_1, var_0);
    return var_1;
}
function iaat_TypeLabel__init_0($this, $text) {
    var var$2;
    iaasu_Label__init_2($this, $text);
    $this.$variables = iaac_ObjectMap__init_();
    $this.$tokenEntries = iaac_Array__init_0();
    var$2 = new iaag_Color;
    iaat_TypingConfig_$callClinit();
    iaag_Color__init_8(var$2, iaat_TypingConfig_DEFAULT_CLEAR_COLOR);
    $this.$clearColor = var$2;
    $this.$listener0 = null;
    $this.$forceMarkupColor = iaat_TypingConfig_FORCE_COLOR_MARKUP_BY_DEFAULT;
    $this.$originalText = jl_StringBuilder__init_();
    $this.$glyphCache = iaac_Array__init_0();
    $this.$glyphRunCapacities = iaac_IntArray__init_0();
    $this.$offsetCache = iaac_IntArray__init_0();
    $this.$layoutLineBreaks = iaac_IntArray__init_0();
    $this.$activeEffects = iaac_Array__init_0();
    $this.$textSpeed = iaat_TypingConfig_DEFAULT_SPEED_PER_CHAR;
    $this.$charCooldown = $this.$textSpeed;
    $this.$rawCharIndex = (-2);
    $this.$glyphCharIndex = (-1);
    $this.$glyphCharCompensation = 0;
    $this.$cachedGlyphCharIndex = (-1);
    $this.$lastLayoutX = 0.0;
    $this.$lastLayoutY = 0.0;
    $this.$parsed = 0;
    $this.$paused = 0;
    $this.$ended = 0;
    $this.$skipping = 0;
    $this.$ignoringEvents = 0;
    $this.$ignoringEffects = 0;
    $this.$defaultToken = $rt_s(58);
    $this.$saveOriginalText();
}
function iaat_TypeLabel_setText($this, $newText) {
    $this.$setText4($newText, 1);
}
function iaat_TypeLabel_setText0($this, $newText, $modifyOriginalText) {
    iaasu_Label_setText($this, $newText);
    if ($modifyOriginalText && $this.$originalText !== null)
        $this.$saveOriginalText();
}
function iaat_TypeLabel_saveOriginalText($this) {
    $this.$originalText.$setLength(0);
    $this.$originalText.$insert13(0, $this.$getText0());
    $this.$originalText.$trimToSize();
}
function iaat_TypeLabel_getTypingListener($this) {
    return $this.$listener0;
}
function iaat_TypeLabel_setTypingListener($this, $listener) {
    $this.$listener0 = $listener;
}
function iaat_TypeLabel_getClearColor($this) {
    return $this.$clearColor;
}
function iaat_TypeLabel_getDefaultToken($this) {
    return $this.$defaultToken;
}
function iaat_TypeLabel_parseTokens($this) {
    $this.$setText4(jl_StringBuilder__init_().$append($this.$getDefaultToken()).$append1($this.$getText0()).$toString(), 0);
    iaat_Parser_parseTokens($this);
    $this.$parsed = 1;
}
function iaat_TypeLabel_skipToTheEnd($this, $ignoreEvents) {
    $this.$skipToTheEnd($ignoreEvents, 0);
}
function iaat_TypeLabel_skipToTheEnd0($this, $ignoreEvents, $ignoreEffects) {
    $this.$skipping = 1;
    $this.$ignoringEvents = $ignoreEvents;
    $this.$ignoringEffects = $ignoreEffects;
}
function iaat_TypeLabel_hasEnded($this) {
    return $this.$ended;
}
function iaat_TypeLabel_restart($this, $newText) {
    iaaup_Pools_freeAll($this.$glyphCache);
    $this.$glyphCache.$clear();
    $this.$glyphRunCapacities.$clear();
    $this.$offsetCache.$clear();
    $this.$layoutLineBreaks.$clear();
    $this.$activeEffects.$clear();
    iaat_TypingConfig_$callClinit();
    $this.$textSpeed = iaat_TypingConfig_DEFAULT_SPEED_PER_CHAR;
    $this.$charCooldown = $this.$textSpeed;
    $this.$rawCharIndex = (-2);
    $this.$glyphCharIndex = (-1);
    $this.$glyphCharCompensation = 0;
    $this.$cachedGlyphCharIndex = (-1);
    $this.$lastLayoutX = 0.0;
    $this.$lastLayoutY = 0.0;
    $this.$parsed = 0;
    $this.$paused = 0;
    $this.$ended = 0;
    $this.$skipping = 0;
    $this.$ignoringEvents = 0;
    $this.$ignoringEffects = 0;
    $this.$setText1($newText);
    $this.$invalidate();
    $this.$tokenEntries.$clear();
    $this.$parseTokens0();
}
function iaat_TypeLabel_getVariables($this) {
    return $this.$variables;
}
function iaat_TypeLabel_act($this, $delta) {
    var var$2, $i, $glyph, var$5, var$6, $effect, $start, $end, $j;
    iaas_Element_act($this, $delta);
    if (!$this.$parsed)
        $this.$parseTokens0();
    a: {
        if (!$this.$skipping) {
            if ($this.$ended)
                break a;
            if ($this.$paused)
                break a;
        }
        if (!$this.$skipping) {
            var$2 = $this.$charCooldown - $delta;
            $this.$charCooldown = var$2;
            if (var$2 >= 0.0)
                break a;
        }
        iaat_TypeLabel_processCharProgression($this);
    }
    b: {
        if ($this.$activeEffects.$size > 0) {
            $i = 0;
            while (true) {
                if ($i >= $this.$glyphCache.$size)
                    break b;
                $glyph = $this.$glyphCache.$get($i);
                var$5 = $this.$offsetCache;
                var$6 = $i * 2 | 0;
                $glyph.$xoffset = var$5.$get29(var$6);
                $glyph.$yoffset = $this.$offsetCache.$get29(var$6 + 1 | 0);
                $i = $i + 1 | 0;
            }
        }
    }
    c: {
        if (!$this.$ignoringEffects) {
            $i = $this.$activeEffects.$size - 1 | 0;
            while (true) {
                if ($i < 0)
                    break c;
                $effect = $this.$activeEffects.$get($i);
                $effect.$update3($delta);
                $start = $effect.$indexStart;
                $end = $effect.$indexEnd < 0 ? $this.$glyphCharIndex : $effect.$indexEnd;
                d: {
                    if ($effect.$isFinished())
                        $this.$activeEffects.$remove($i);
                    else {
                        $j = jl_Math_max1(0, $start);
                        while (true) {
                            if ($j > $this.$glyphCharIndex)
                                break d;
                            if ($j > $end)
                                break d;
                            if ($j >= $this.$glyphCache.$size)
                                break d;
                            $glyph = $this.$glyphCache.$get($j);
                            iaat_Effect_apply($effect, $glyph, $j, $delta);
                            $j = $j + 1 | 0;
                        }
                    }
                }
                $i = $i + (-1) | 0;
            }
        }
    }
}
function iaat_TypeLabel_processCharProgression($this) {
    var $charCounter, $safeIndex, $primitiveChar, $intervalMultiplier, $textLen, $isLayoutLineBreak, $entry, $token, $category, $isStart, $i, $effect, $nextIndex, $nextChar, var$15, $charLimit;
    $charCounter = 0;
    a: {
        b: {
            while (true) {
                if (!$this.$skipping && $this.$charCooldown >= 0.0)
                    break b;
                if ($this.$glyphCharCompensation) {
                    if ($this.$glyphCharCompensation <= 0) {
                        $this.$glyphCharIndex = $this.$glyphCharIndex - 1 | 0;
                        $this.$glyphCharCompensation = $this.$glyphCharCompensation + 1 | 0;
                    } else {
                        $this.$glyphCharIndex = $this.$glyphCharIndex + 1 | 0;
                        $this.$glyphCharCompensation = $this.$glyphCharCompensation - 1 | 0;
                    }
                    $this.$charCooldown = $this.$charCooldown + $this.$textSpeed;
                    continue;
                }
                $this.$rawCharIndex = $this.$rawCharIndex + 1 | 0;
                $safeIndex = iaam_Mathf_clamp1($this.$glyphCharIndex + 1 | 0, 0, $this.$glyphCache.$size - 1 | 0);
                $primitiveChar = 0;
                if ($this.$glyphCache.$size > 0) {
                    $primitiveChar = $this.$glyphCache.$get($safeIndex).$id0 & 65535;
                    iaat_TypingConfig_$callClinit();
                    $intervalMultiplier = iaat_TypingConfig_INTERVAL_MULTIPLIERS_BY_CHAR.$get51(jl_Character_valueOf($primitiveChar), 1.0);
                    $this.$charCooldown = $this.$charCooldown + $this.$textSpeed * $intervalMultiplier;
                }
                $textLen = $this.$getText0().$length();
                if (!$textLen)
                    break a;
                if ($this.$rawCharIndex >= $textLen)
                    break a;
                $isLayoutLineBreak = 0;
                if ($this.$layoutLineBreaks.$contains($this.$glyphCharIndex)) {
                    $this.$layoutLineBreaks.$removeValue0($this.$glyphCharIndex);
                    $isLayoutLineBreak = 1;
                }
                if ($this.$rawCharIndex >= 0 && $primitiveChar != 10 && !$isLayoutLineBreak)
                    $this.$glyphCharIndex = $this.$glyphCharIndex + 1 | 0;
                c: while ($this.$tokenEntries.$size > 0 && $this.$tokenEntries.$peek().$index8 == $this.$rawCharIndex) {
                    d: {
                        e: {
                            $entry = $this.$tokenEntries.$pop();
                            $token = $entry.$token;
                            $category = $entry.$category2;
                            iaat_TypeLabel$1_$callClinit();
                            switch (iaat_TypeLabel$1_$SwitchMap$io$anuke$arc$typelabel$TokenCategory.data[jl_Enum_ordinal($category)]) {
                                case 1:
                                    $this.$textSpeed = $entry.$floatValue;
                                    continue c;
                                case 2:
                                    $this.$glyphCharIndex = $this.$glyphCharIndex - 1 | 0;
                                    $this.$glyphCharCompensation = $this.$glyphCharCompensation + 1 | 0;
                                    $this.$charCooldown = $this.$charCooldown + $entry.$floatValue;
                                    continue c;
                                case 3:
                                    break e;
                                case 4:
                                    if ($this.$listener0 === null)
                                        continue c;
                                    if ($this.$ignoringEvents)
                                        continue c;
                                    $this.$listener0.$event($entry.$stringValue);
                                    continue c;
                                case 5:
                                case 6:
                                    break d;
                                default:
                            }
                            continue c;
                        }
                        iaau_Log_info(jl_StringBuilder__init_().$append($rt_s(1165)).$append3($this.$rawCharIndex).$append($rt_s(1166)).$append3($this.$rawCharIndex).$append($rt_s(254)).$append3($this.$rawCharIndex + $entry.$stringValue.$length() | 0).$toString());
                        if ($entry.$stringValue === null)
                            continue c;
                        $this.$rawCharIndex = $this.$rawCharIndex + $entry.$stringValue.$length() | 0;
                        continue c;
                    }
                    iaat_TokenCategory_$callClinit();
                    $isStart = $category !== iaat_TokenCategory_EFFECT_START ? 0 : 1;
                    $i = 0;
                    while ($i < $this.$activeEffects.$size) {
                        $effect = $this.$activeEffects.$get($i);
                        if ($effect.$indexEnd < 0 && $effect.$endToken.$equals($token))
                            $effect.$indexEnd = $this.$glyphCharIndex - 1 | 0;
                        $i = $i + 1 | 0;
                    }
                    if (!$isStart)
                        continue;
                    $entry.$effect3.$indexStart = $this.$glyphCharIndex;
                    $this.$activeEffects.$add1($entry.$effect3);
                }
                if ($this.$listener0 !== null && $this.$rawCharIndex > 0) {
                    $nextIndex = iaam_Mathf_clamp1($this.$rawCharIndex, 0, $this.$getText0().$length() - 1 | 0);
                    $nextChar = $this.$getText0().$charAt($nextIndex);
                    $this.$listener0.$onChar($nextChar);
                }
                var$15 = $charCounter + 1 | 0;
                if ($this.$glyphCharIndex == (-1)) {
                    $this.$charCooldown = $this.$textSpeed;
                    break b;
                }
                $charCounter = var$15 + 1 | 0;
                iaat_TypingConfig_$callClinit();
                $charLimit = iaat_TypingConfig_CHAR_LIMIT_PER_FRAME;
                if (!$this.$skipping && $charLimit > 0 && $charCounter > $charLimit)
                    break;
            }
            $this.$charCooldown = $this.$textSpeed;
        }
        return;
    }
    if (!$this.$ended) {
        $this.$ended = 1;
        $this.$skipping = 0;
        if ($this.$listener0 !== null)
            $this.$listener0.$end();
    }
}
function iaat_TypeLabel_getBitmapFontCache($this) {
    return iaasu_Label_getBitmapFontCache($this);
}
function iaat_TypeLabel_setWrap($this, $wrap) {
    iaasu_Label_setWrap($this, $wrap);
    $this.$wrap7 = $wrap;
}
function iaat_TypeLabel_layout($this) {
    var $cache, $text, $layout, $lineAlign, $labelAlign, $style, $font, $oldScaleX, $oldScaleY, $wrap, $prefHeight, $width, $height, $background, $x, $y, var$17, $textWidth, $textHeight, var$20, var$21;
    $cache = $this.$getBitmapFontCache();
    $text = $this.$getText0();
    $layout = iaasu_Label_getGlyphLayout($this);
    $lineAlign = $this.$getLineAlign();
    $labelAlign = $this.$getLabelAlign();
    $style = $this.$getStyle0();
    $font = $cache.$getFont();
    $oldScaleX = $font.$getScaleX();
    $oldScaleY = $font.$getScaleY();
    if ($this.$fontScaleChanged)
        $font.$getData().$setScale($this.$getFontScaleX(), $this.$getFontScaleY());
    $wrap = $this.$wrap7 && $this.$ellipsis === null ? 1 : 0;
    if ($wrap) {
        $prefHeight = $this.$getPrefHeight();
        if ($prefHeight !== $this.$lastPrefHeight) {
            $this.$lastPrefHeight = $prefHeight;
            $this.$invalidateHierarchy();
        }
    }
    $width = $this.$getWidth();
    $height = $this.$getHeight();
    $background = $style.$background;
    $x = 0.0;
    $y = 0.0;
    if ($background !== null) {
        $x = $background.$getLeftWidth();
        $y = $background.$getBottomHeight();
        $width = $width - ($background.$getLeftWidth() + $background.$getRightWidth());
        $height = $height - ($background.$getBottomHeight() + $background.$getTopHeight());
    }
    var$17 = $text.$length();
    iaag_Color_$callClinit();
    $layout.$setText0($font, $text, 0, var$17, iaag_Color_white, $width, $lineAlign, $wrap, $this.$ellipsis);
    $textWidth = $layout.$width5;
    $textHeight = $layout.$height5;
    if (!($labelAlign & 8))
        $x = $labelAlign & 16 ? $x + $width - $textWidth : $x + ($width - $textWidth) / 2.0;
    if ($labelAlign & 2) {
        var$20 = $y + (!$cache.$getFont().$isFlipped() ? $height - $textHeight : 0.0);
        var$21 = var$20 + $style.$font.$getDescent();
    } else if (!($labelAlign & 4))
        var$21 = $y + ($height - $textHeight) / 2.0;
    else {
        var$21 = $y + (!$cache.$getFont().$isFlipped() ? 0.0 : $height - $textHeight);
        var$21 = var$21 - $style.$font.$getDescent();
    }
    if (!$cache.$getFont().$isFlipped())
        var$21 = var$21 + $textHeight;
    if ($this.$fontScaleChanged)
        $font.$getData().$setScale($oldScaleX, $oldScaleY);
    $this.$lastLayoutX = $x;
    $this.$lastLayoutY = var$21;
    iaaup_Pools_freeAll($this.$glyphCache);
    $this.$glyphCache.$clear();
    iaat_TypeLabel_layoutCache($this);
}
function iaat_TypeLabel_layoutCache($this) {
    var $cache, $layout, $runs, $glyphCount, $i, $glyphs, $index, $lastY, $run, $j, $original, $clone, var$13, var$14, $glyphCountdown;
    $cache = $this.$getBitmapFontCache();
    $layout = iaasu_Label_getGlyphLayout($this);
    $runs = $layout.$runs;
    $this.$layoutLineBreaks.$clear();
    $glyphCount = 0;
    $this.$glyphRunCapacities.$setSize2($runs.$size);
    $i = 0;
    while ($i < $runs.$size) {
        $glyphs = $runs.$get($i).$glyphs;
        $this.$glyphRunCapacities.$set4($i, $glyphs.$size);
        $glyphCount = $glyphCount + $glyphs.$size | 0;
        $i = $i + 1 | 0;
    }
    if ($this.$glyphCache.$size < $glyphCount) {
        $this.$glyphCache.$setSize3($glyphCount);
        $this.$offsetCache.$setSize2($glyphCount * 2 | 0);
    }
    $index = (-1);
    $lastY = 0.0;
    $i = 0;
    while ($i < $runs.$size) {
        $run = $runs.$get($i);
        $glyphs = $run.$glyphs;
        $j = 0;
        while ($j < $glyphs.$size) {
            if (!iaam_Mathf_equal($run.$y5, $lastY)) {
                $lastY = $run.$y5;
                $this.$layoutLineBreaks.$add6($index);
            }
            $index = $index + 1 | 0;
            $original = $glyphs.$get($j);
            $clone = null;
            if ($index < $this.$glyphCache.$size)
                $clone = $this.$glyphCache.$get($index);
            if ($clone === null) {
                $clone = iaaup_Pools_obtain($rt_cls(iaat_TypingGlyph), iaat_TypeLabel$layoutCache$lambda$_39_0__init_());
                $this.$glyphCache.$set20($index, $clone);
            }
            $clone.$set21($original);
            $clone.$width6 = $clone.$width6 * $this.$getFontScaleX() | 0;
            $clone.$height10 = $clone.$height10 * $this.$getFontScaleY() | 0;
            $clone.$xoffset = $clone.$xoffset * $this.$getFontScaleX() | 0;
            $clone.$yoffset = $clone.$yoffset * $this.$getFontScaleY() | 0;
            $clone.$run2 = $run;
            var$13 = $this.$offsetCache;
            var$14 = $index * 2 | 0;
            var$13.$set4(var$14, $clone.$xoffset);
            $this.$offsetCache.$set4(var$14 + 1 | 0, $clone.$yoffset);
            $glyphs.$set20($j, $clone);
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    $glyphCountdown = $this.$glyphCharIndex;
    $i = 0;
    while ($i < $runs.$size) {
        a: {
            $glyphs = $runs.$get($i).$glyphs;
            if ($glyphs.$size < $glyphCountdown)
                $glyphCountdown = $glyphCountdown - $glyphs.$size | 0;
            else {
                $j = 0;
                while ($j < $glyphs.$size) {
                    if ($glyphCountdown < 0) {
                        $glyphs.$removeRange($j, $glyphs.$size - 1 | 0);
                        break a;
                    }
                    $glyphCountdown = $glyphCountdown + (-1) | 0;
                    $j = $j + 1 | 0;
                }
            }
        }
        $i = $i + 1 | 0;
    }
    $cache.$setText3($layout, $this.$lastLayoutX, $this.$lastLayoutY);
}
function iaat_TypeLabel_addMissingGlyphs($this) {
    var $glyphLeft, $layout, $runs, $glyphCount, $runIndex, $runCapacity, var$7, $glyphs, $runSize, $glyph;
    $glyphLeft = $this.$glyphCharIndex - $this.$cachedGlyphCharIndex | 0;
    if ($glyphLeft < 1)
        return;
    $layout = iaasu_Label_getGlyphLayout($this);
    $runs = $layout.$runs;
    $glyphCount = 0;
    $runIndex = 0;
    while ($runIndex < $this.$glyphRunCapacities.$size5) {
        a: {
            $runCapacity = $this.$glyphRunCapacities.$get29($runIndex);
            var$7 = $glyphCount + $runCapacity | 0;
            if (var$7 >= $this.$cachedGlyphCharIndex) {
                $glyphs = $runs.$get($runIndex).$glyphs;
                var$7 = $glyphCount + $glyphs.$size | 0;
                while ($glyphLeft > 0) {
                    $runSize = $glyphs.$size;
                    if ($runCapacity == $runSize)
                        break a;
                    $this.$cachedGlyphCharIndex = $this.$cachedGlyphCharIndex + 1 | 0;
                    $glyph = $this.$glyphCache.$get($this.$cachedGlyphCharIndex);
                    $glyphs.$add1($glyph);
                    $glyph.$internalIndex = var$7;
                    var$7 = var$7 + 1 | 0;
                    $glyphLeft = $glyphLeft + (-1) | 0;
                }
            }
        }
        $runIndex = $runIndex + 1 | 0;
        $glyphCount = var$7;
    }
}
function iaat_TypeLabel_draw($this) {
    var $bitmapFontCache, var$2, $glyph;
    iaas_Element_validate($this);
    iaat_TypeLabel_addMissingGlyphs($this);
    $bitmapFontCache = $this.$getBitmapFontCache();
    $this.$getBitmapFontCache().$setText3($this.$getGlyphLayout(), $this.$lastLayoutX, $this.$lastLayoutY);
    var$2 = $this.$glyphCache.$iterator();
    while (var$2.$hasNext()) {
        $glyph = var$2.$next0();
        if ($glyph.$internalIndex >= 0 && $glyph.$color11 !== null)
            $bitmapFontCache.$setColors($glyph.$color11, $glyph.$internalIndex, $glyph.$internalIndex + 1 | 0);
    }
    iaasu_Label_draw($this);
}
function iaas_Scene$keyUp$lambda$_26_0() {
    jl_Object.call(this);
}
function iaas_Scene$keyUp$lambda$_26_0__init_() {
    var var_0 = new iaas_Scene$keyUp$lambda$_26_0();
    iaas_Scene$keyUp$lambda$_26_0__init_0(var_0);
    return var_0;
}
function iaas_Scene$keyUp$lambda$_26_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaas_Scene$keyUp$lambda$_26_0_get(var$0) {
    return iaas_Scene$keyUp$lambda$_26_0_get0(var$0);
}
function iaas_Scene$keyUp$lambda$_26_0_get0(var$0) {
    return iaase_InputEvent__init_();
}
function iaat_Parser$stripTokens$lambda$_6_0() {
    jl_Object.call(this);
}
function iaat_Parser$stripTokens$lambda$_6_0__init_() {
    var var_0 = new iaat_Parser$stripTokens$lambda$_6_0();
    iaat_Parser$stripTokens$lambda$_6_0__init_0(var_0);
    return var_0;
}
function iaat_Parser$stripTokens$lambda$_6_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaat_Parser$stripTokens$lambda$_6_0_handle(var$0, var$1, var$2) {
    return iaat_Parser_lambda$stripTokens$3(var$1, var$2);
}
function iaat_Parser$stripTokens$lambda$_6_1() {
    jl_Object.call(this);
    this.$_087 = null;
}
function iaat_Parser$stripTokens$lambda$_6_1__init_(var_0) {
    var var_1 = new iaat_Parser$stripTokens$lambda$_6_1();
    iaat_Parser$stripTokens$lambda$_6_1__init_0(var_1, var_0);
    return var_1;
}
function iaat_Parser$stripTokens$lambda$_6_1__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_087 = var$1;
}
function iaat_Parser$stripTokens$lambda$_6_1_get(var$0, var$1, var$2) {
    iaat_Parser_lambda$stripTokens$4(var$0.$_087, var$1, var$2);
}
function otcju_TMap$Entry() {
}
function otcju_TMapEntry() {
    jl_Object.call(this);
}
function jur_ReluctantGroupQuantifierSet() {
    jur_GroupQuantifierSet.call(this);
}
function jur_ReluctantGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_ReluctantGroupQuantifierSet();
    jur_ReluctantGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_ReluctantGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_ReluctantGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $res;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    $res = $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        return $res;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
}
function iaaui_DefaultSerializers() {
    jl_Object.call(this);
}
var iaaui_DefaultSerializers_typeMappings = null;
function iaaui_DefaultSerializers_$callClinit() {
    iaaui_DefaultSerializers_$callClinit = $rt_eraseClinit(iaaui_DefaultSerializers);
    iaaui_DefaultSerializers__clinit_();
}
function iaaui_DefaultSerializers_register($settings) {
    iaaui_DefaultSerializers_$callClinit();
    $settings.$setSerializer($rt_cls(iaac_IntArray), iaaui_DefaultSerializers$1__init_());
    $settings.$setSerializer($rt_cls(jl_String), iaaui_DefaultSerializers$2__init_());
    $settings.$setSerializer($rt_cls(iaac_Array), iaaui_DefaultSerializers$3__init_($settings));
    $settings.$setSerializer($rt_cls(iaac_ObjectSet), iaaui_DefaultSerializers$4__init_($settings));
    $settings.$setSerializer($rt_cls(iaac_ObjectMap), iaaui_DefaultSerializers$5__init_($settings));
    $settings.$setSerializer($rt_cls(iaac_ObjectIntMap), iaaui_DefaultSerializers$6__init_($settings));
}
function iaaui_DefaultSerializers__clinit_() {
    iaaui_DefaultSerializers_typeMappings = iaac_StringMap__init_();
}
function it_Bullets$8() {
    it_BulletType.call(this);
}
function it_Bullets$8__init_() {
    var var_0 = new it_Bullets$8();
    it_Bullets$8__init_0(var_0);
    return var_0;
}
function it_Bullets$8__init_0($this) {
    it_BulletType__init_0($this);
    $this.$speed = 7.0;
    ig_Pal_$callClinit();
    $this.$lightColor = ig_Pal_candle;
    $this.$lifetime0 = 600.0;
    $this.$damage0 = 8.0;
}
function it_Bullets$8_draw($this, $bullet) {
    ig_Drawf_z($bullet.$y2 - 64.0);
    ig_Pal_$callClinit();
    iaagg_Draw_color(ig_Pal_candle);
    iaagg_Draw_rect7($rt_s(311), $bullet.$x2, $bullet.$y2, 14.0, 9.0, $bullet.$angle2());
    iaag_Color_$callClinit();
    iaagg_Draw_color(iaag_Color_white);
    iaagg_Draw_rect7($rt_s(311), $bullet.$x2, $bullet.$y2, 6.0, 3.5, $bullet.$angle2());
}
function it_Bullets$9() {
    it_BulletType.call(this);
}
function it_Bullets$9__init_() {
    var var_0 = new it_Bullets$9();
    it_Bullets$9__init_0(var_0);
    return var_0;
}
function it_Bullets$9__init_0($this) {
    it_BulletType__init_0($this);
    $this.$speed = 3.0;
    iaag_Color_$callClinit();
    $this.$lightColor = iaag_Color_orange;
    $this.$light = 120.0;
    $this.$size3 = 10.0;
    $this.$lifetime0 = 1000.0;
    $this.$deflect = 0;
    $this.$damage0 = 30.0;
}
function it_Bullets$9_init($this, $bullet) {
    it_BulletType_init($this, $bullet);
    i_Inferno_renderer.$shake1(5.0);
}
function it_Bullets$9_update($this, $bullet) {
    var var$2, var$3, var$4, var$5;
    it_BulletType_update($this, $bullet);
    if (iaam_Mathf_chance(0.3 * iaau_Time_delta())) {
        it_Fx_$callClinit();
        var$2 = it_Fx_fireballtrail;
        var$3 = $bullet.$x2;
        var$4 = $bullet.$y2;
        iaau_Tmp_$callClinit();
        var$5 = iaau_Tmp_c1;
        ig_Pal_$callClinit();
        var$2.$at0(var$3, var$4, var$5.$set(ig_Pal_fireball).$lerp(iaag_Color_white, 0.10000000149011612 + $bullet.$fin() * 0.6000000238418579));
    }
}
function it_Bullets$9_hit($this, $bullet) {
    var $aim;
    it_BulletType_hit($this, $bullet);
    iaam_Angles_loop(7, it_Bullets$9$hit$lambda$_3_0__init_($bullet));
    i_Inferno_renderer.$shake1(10.0);
    $aim = $bullet.$velocity.$angle2();
    iaau_Time_run(15.0, it_Bullets$9$hit$lambda$_3_1__init_($bullet, $aim));
    it_Fx_$callClinit();
    it_Fx_fireballfire.$at($bullet.$x2, $bullet.$y2);
}
function it_Bullets$9_despawn($this, $bullet) {
    it_Bullets$9_hit($this, $bullet);
}
function it_Bullets$9_draw($this, $bullet) {
    var $glow, var$3;
    ig_Drawf_z($bullet.$y2 - 64.0);
    $glow = 0.10000000149011612 + $bullet.$fin() * 0.6000000238418579;
    ig_Pal_$callClinit();
    var$3 = ig_Pal_fireball;
    iaag_Color_$callClinit();
    iaagg_Draw_color4(var$3, iaag_Color_white, $glow);
    iaagg_Draw_alpha(0.30000001192092896);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 20.0 + iaam_Mathf_absin(iaau_Time_time(), 6.0, 4.0) + $bullet.$fin() * 4.0);
    iaagg_Draw_color4(ig_Pal_fireball, iaag_Color_white, $glow);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 14.0);
    iaagg_Draw_color4(iaag_Color_white, iaag_Color_white, $glow);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 8.0);
}
function it_Bullets$9_lambda$hit$8($bullet, $aim) {
    iaam_Angles_loop(7, it_Bullets$9$lambda$hit$8$lambda$_6_0__init_($bullet, $aim));
}
function it_Bullets$9_lambda$null$7($bullet, $aim, $i) {
    var var$4;
    var$4 = $i * 4 | 0;
    iaau_Time_run(10.0 + var$4, it_Bullets$9$lambda$null$7$lambda$_7_0__init_($bullet, $aim));
    iaau_Time_run(var$4, it_Bullets$9$lambda$null$7$lambda$_7_1__init_($bullet, $aim));
}
function it_Bullets$9_lambda$null$6($bullet, $aim) {
    iaam_Angles_circle0(7, it_Bullets$9$lambda$null$6$lambda$_8_0__init_($bullet, $aim));
}
function it_Bullets$9_lambda$null$5($bullet, $aim, $f) {
    var var$4;
    var$4 = i_Inferno_boss;
    it_Bullets_$callClinit();
    var$4.$shoot1(it_Bullets_candle, $bullet.$x2, $bullet.$y2, $f + $aim);
}
function it_Bullets$9_lambda$null$4($bullet, $aim) {
    iaam_Angles_circle0(7, it_Bullets$9$lambda$null$4$lambda$_10_0__init_($bullet, $aim));
}
function it_Bullets$9_lambda$null$3($bullet, $aim, $f) {
    var var$4;
    var$4 = i_Inferno_boss;
    it_Bullets_$callClinit();
    var$4.$shoot1(it_Bullets_candle, $bullet.$x2, $bullet.$y2, $f + 25.0 + $aim);
}
function it_Bullets$9_lambda$hit$2($bullet, $i) {
    iaau_Time_run(3.0 * $i, it_Bullets$9$lambda$hit$2$lambda$_12_0__init_($i, $bullet));
}
function it_Bullets$9_lambda$null$1($i, $bullet) {
    iaam_Angles_circle(30, $i * 9.0, it_Bullets$9$lambda$null$1$lambda$_13_0__init_($bullet));
}
function it_Bullets$9_lambda$null$0($bullet, $f) {
    var var$3;
    var$3 = $bullet.$shooter;
    it_Bullets_$callClinit();
    var$3.$shoot1(it_Bullets_candle, $bullet.$x2, $bullet.$y2, $f);
}
function iaagg_VertexBufferObjectSubData() {
    var a = this; jl_Object.call(a);
    a.$attributes3 = null;
    a.$buffer7 = null;
    a.$byteBuffer0 = null;
    a.$isDirect1 = 0;
    a.$isStatic1 = 0;
    a.$usage4 = 0;
    a.$bufferHandle3 = 0;
    a.$isDirty3 = 0;
    a.$isBound3 = 0;
}
function iaagg_VertexBufferObjectSubData__init_(var_0, var_1, var_2) {
    var var_3 = new iaagg_VertexBufferObjectSubData();
    iaagg_VertexBufferObjectSubData__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaagg_VertexBufferObjectSubData__init_0($this, $isStatic, $numVertices, $attributes) {
    jl_Object__init_0($this);
    $this.$isDirty3 = 0;
    $this.$isBound3 = 0;
    $this.$isStatic1 = $isStatic;
    $this.$attributes3 = $attributes;
    $this.$byteBuffer0 = iaau_BufferUtils_newByteBuffer($rt_imul($this.$attributes3.$vertexSize, $numVertices));
    $this.$isDirect1 = 1;
    $this.$usage4 = !$isStatic ? 35048 : 35044;
    $this.$buffer7 = $this.$byteBuffer0.$asFloatBuffer();
    $this.$bufferHandle3 = iaagg_VertexBufferObjectSubData_createBufferObject($this);
    $this.$buffer7.$flip();
    $this.$byteBuffer0.$flip();
}
function iaagg_VertexBufferObjectSubData_createBufferObject($this) {
    var $result;
    iaa_Core_$callClinit();
    $result = iaa_Core_gl20.$glGenBuffer();
    iaa_Core_gl20.$glBindBuffer(34962, $result);
    iaa_Core_gl20.$glBufferData(34962, jn_Buffer_capacity($this.$byteBuffer0), null, $this.$usage4);
    iaa_Core_gl20.$glBindBuffer(34962, 0);
    return $result;
}
function iaagg_VertexBufferObjectSubData_getNumVertices($this) {
    return (jn_Buffer_limit($this.$buffer7) * 4 | 0) / $this.$attributes3.$vertexSize | 0;
}
function iaagg_VertexBufferObjectSubData_getBuffer($this) {
    $this.$isDirty3 = 1;
    return $this.$buffer7;
}
function iaagg_VertexBufferObjectSubData_bufferChanged($this) {
    if ($this.$isBound3) {
        iaa_Core_$callClinit();
        iaa_Core_gl20.$glBufferSubData(34962, 0, jn_Buffer_limit($this.$byteBuffer0), $this.$byteBuffer0);
        $this.$isDirty3 = 0;
    }
}
function iaagg_VertexBufferObjectSubData_setVertices($this, $vertices, $offset, $count) {
    $this.$isDirty3 = 1;
    if ($this.$isDirect1) {
        iaau_BufferUtils_copy($vertices, $this.$byteBuffer0, $count, $offset);
        $this.$buffer7.$position(0);
        $this.$buffer7.$limit0($count);
    } else {
        $this.$buffer7.$clear2();
        $this.$buffer7.$put13($vertices, $offset, $count);
        $this.$buffer7.$flip();
        $this.$byteBuffer0.$position(0);
        $this.$byteBuffer0.$limit0(jn_Buffer_limit($this.$buffer7) << 2);
    }
    iaagg_VertexBufferObjectSubData_bufferChanged($this);
}
function iaagg_VertexBufferObjectSubData_bind($this, $shader, $locations) {
    var $gl, $numAttributes, $i, var$6, $attribute, $location;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    $gl.$glBindBuffer(34962, $this.$bufferHandle3);
    if ($this.$isDirty3) {
        $this.$byteBuffer0.$limit0(jn_Buffer_limit($this.$buffer7) * 4 | 0);
        $gl.$glBufferData(34962, jn_Buffer_limit($this.$byteBuffer0), $this.$byteBuffer0, $this.$usage4);
        $this.$isDirty3 = 0;
    }
    a: {
        $numAttributes = iaag_VertexAttributes_size($this.$attributes3);
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                var$6 = $locations.data;
                $attribute = iaag_VertexAttributes_get($this.$attributes3, $i);
                $location = var$6[$i];
                if ($location >= 0) {
                    $shader.$enableVertexAttribute($location);
                    $shader.$setVertexAttribute($location, $attribute.$numComponents, $attribute.$type2, $attribute.$normalized, $this.$attributes3.$vertexSize, $attribute.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < $numAttributes) {
            $attribute = iaag_VertexAttributes_get($this.$attributes3, $i);
            $location = $shader.$getAttributeLocation($attribute.$alias);
            if ($location >= 0) {
                $shader.$enableVertexAttribute($location);
                $shader.$setVertexAttribute($location, $attribute.$numComponents, $attribute.$type2, $attribute.$normalized, $this.$attributes3.$vertexSize, $attribute.$offset);
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$isBound3 = 1;
}
function iaagg_VertexBufferObjectSubData_unbind($this, $shader, $locations) {
    var $gl, $numAttributes, $i, $location;
    a: {
        iaa_Core_$callClinit();
        $gl = iaa_Core_gl20;
        $numAttributes = iaag_VertexAttributes_size($this.$attributes3);
        if ($locations === null) {
            $i = 0;
            while ($i < $numAttributes) {
                $shader.$disableVertexAttribute(iaag_VertexAttributes_get($this.$attributes3, $i).$alias);
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                $location = $locations.data[$i];
                if ($location >= 0)
                    $shader.$disableVertexAttribute0($location);
                $i = $i + 1 | 0;
            }
        }
    }
    $gl.$glBindBuffer(34962, 0);
    $this.$isBound3 = 0;
}
function iaagg_VertexBufferObjectSubData_dispose($this) {
    var $gl;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    $gl.$glBindBuffer(34962, 0);
    $gl.$glDeleteBuffer($this.$bufferHandle3);
    $this.$bufferHandle3 = 0;
}
function it_Phases$2$lambda$null$12$lambda$_12_0() {
    jl_Object.call(this);
    this.$_088 = 0.0;
}
function it_Phases$2$lambda$null$12$lambda$_12_0__init_(var_0) {
    var var_1 = new it_Phases$2$lambda$null$12$lambda$_12_0();
    it_Phases$2$lambda$null$12$lambda$_12_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$2$lambda$null$12$lambda$_12_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_088 = var$1;
}
function it_Phases$2$lambda$null$12$lambda$_12_0_get(var$0, var$1) {
    it_Phases$2_lambda$null$11(var$0.$_088, var$1);
}
function it_Phases$2$lambda$null$4$lambda$_20_0() {
    jl_Object.call(this);
    this.$_089 = 0.0;
}
function it_Phases$2$lambda$null$4$lambda$_20_0__init_(var_0) {
    var var_1 = new it_Phases$2$lambda$null$4$lambda$_20_0();
    it_Phases$2$lambda$null$4$lambda$_20_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$2$lambda$null$4$lambda$_20_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_089 = var$1;
}
function it_Phases$2$lambda$null$4$lambda$_20_0_get(var$0, var$1) {
    it_Phases$2_lambda$null$3(var$0.$_089, var$1);
}
function it_Phases$4$lambda$null$5$lambda$_12_0() {
    var a = this; jl_Object.call(a);
    a.$_090 = 0.0;
    a.$_138 = 0.0;
    a.$_210 = 0;
    a.$_33 = 0.0;
    a.$_40 = 0.0;
}
function it_Phases$4$lambda$null$5$lambda$_12_0__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new it_Phases$4$lambda$null$5$lambda$_12_0();
    it_Phases$4$lambda$null$5$lambda$_12_0__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function it_Phases$4$lambda$null$5$lambda$_12_0__init_0(var$0, var$1, var$2, var$3, var$4, var$5) {
    jl_Object__init_0(var$0);
    var$0.$_090 = var$1;
    var$0.$_138 = var$2;
    var$0.$_210 = var$3;
    var$0.$_33 = var$4;
    var$0.$_40 = var$5;
}
function it_Phases$4$lambda$null$5$lambda$_12_0_run(var$0) {
    it_Phases$4_lambda$null$4(var$0.$_090, var$0.$_138, var$0.$_210, var$0.$_33, var$0.$_40);
}
function jnc_CoderMalfunctionError() {
    jl_Error.call(this);
}
function jnc_CoderMalfunctionError__init_(var_0) {
    var var_1 = new jnc_CoderMalfunctionError();
    jnc_CoderMalfunctionError__init_0(var_1, var_0);
    return var_1;
}
function jnc_CoderMalfunctionError__init_0($this, $cause) {
    jl_Error__init_4($this, $cause);
}
function iaas_Scene() {
    var a = this; jl_Object.call(a);
    a.$root = null;
    a.$styleDefaults = null;
    a.$tempCoords = null;
    a.$pointerOverActors = null;
    a.$pointerTouched = null;
    a.$pointerScreenX = null;
    a.$pointerScreenY = null;
    a.$touchFocuses = null;
    a.$viewport0 = null;
    a.$mouseScreenX = 0;
    a.$mouseScreenY = 0;
    a.$mouseOverElement = null;
    a.$keyboardFocus = null;
    a.$scrollFocus = null;
    a.$actionsRequestRendering = 0;
}
function iaas_Scene__init_() {
    var var_0 = new iaas_Scene();
    iaas_Scene__init_0(var_0);
    return var_0;
}
function iaas_Scene__init_0($this) {
    var var$1;
    jl_Object__init_0($this);
    $this.$styleDefaults = iaac_ObjectMap__init_();
    $this.$tempCoords = iaamg_Vector2__init_0();
    $this.$pointerOverActors = $rt_createArray(iaas_Element, 20);
    $this.$pointerTouched = $rt_createBooleanArray(20);
    $this.$pointerScreenX = $rt_createIntArray(20);
    $this.$pointerScreenY = $rt_createIntArray(20);
    $this.$touchFocuses = iaac_SnapshotArray__init_(1, 4, $rt_cls(iaas_Scene$TouchFocus));
    $this.$actionsRequestRendering = 1;
    $this.$viewport0 = iaas_Scene$1__init_($this);
    $this.$root = iaas_Scene$2__init_($this);
    $this.$root.$setScene($this);
    var$1 = $this.$viewport0;
    iaa_Core_$callClinit();
    var$1.$update6(iaa_Core_graphics.$getWidth0(), iaa_Core_graphics.$getHeight0(), 1);
}
function iaas_Scene_getStyle($this, $type) {
    return $this.$styleDefaults.$getThrow($type, iaas_Scene$getStyle$lambda$_2_0__init_($type));
}
function iaas_Scene_addStyle($this, $type, $style) {
    $this.$styleDefaults.$put($type, $style);
}
function iaas_Scene_draw($this) {
    var $camera;
    $camera = $this.$viewport0.$getCamera();
    $camera.$update1();
    if (!$this.$root.$isVisible())
        return;
    iaagg_Draw_proj($camera.$projection());
    $this.$root.$draw();
    iaagg_Draw_flush();
}
function iaas_Scene_act($this) {
    iaa_Core_$callClinit();
    $this.$act0(iaa_Core_graphics.$getDeltaTime());
}
function iaas_Scene_act0($this, $delta) {
    var $pointer, $n, $overLast, $event, $type;
    $pointer = 0;
    $n = $this.$pointerOverActors.data.length;
    while ($pointer < $n) {
        $overLast = $this.$pointerOverActors.data[$pointer];
        if ($this.$pointerTouched.data[$pointer])
            $this.$pointerOverActors.data[$pointer] = iaas_Scene_fireEnterAndExit($this, $overLast, $this.$pointerScreenX.data[$pointer], $this.$pointerScreenY.data[$pointer], $pointer);
        else if ($overLast !== null) {
            $this.$pointerOverActors.data[$pointer] = null;
            $this.$screenToStageCoordinates($this.$tempCoords.$set2($this.$pointerScreenX.data[$pointer], $this.$pointerScreenY.data[$pointer]));
            $event = iaaup_Pools_obtain($rt_cls(iaase_InputEvent), iaas_Scene$act$lambda$_12_0__init_());
            iaase_InputEvent$Type_$callClinit();
            $event.$type = iaase_InputEvent$Type_exit;
            $event.$stageX = $this.$tempCoords.$x0;
            $event.$stageY = $this.$tempCoords.$y0;
            $event.$relatedActor = $overLast;
            $event.$pointer = $pointer;
            $overLast.$fire($event);
            iaaup_Pools_free($event);
        }
        $pointer = $pointer + 1 | 0;
    }
    iaa_Core_$callClinit();
    $type = iaa_Core_app.$getType0();
    iaa_Application$ApplicationType_$callClinit();
    if (!($type !== iaa_Application$ApplicationType_Desktop && $type !== iaa_Application$ApplicationType_WebGL))
        $this.$mouseOverElement = iaas_Scene_fireEnterAndExit($this, $this.$mouseOverElement, $this.$mouseScreenX, $this.$mouseScreenY, (-1));
    if ($this.$scrollFocus !== null && !($this.$scrollFocus.$isVisible() && $this.$scrollFocus.$getScene() !== null))
        $this.$scrollFocus = null;
    if ($this.$keyboardFocus !== null && !($this.$keyboardFocus.$isVisible() && $this.$keyboardFocus.$getScene() !== null))
        $this.$keyboardFocus = null;
    $this.$root.$act0($delta);
}
function iaas_Scene_table($this, $cons) {
    var $table;
    $table = iaasul_Table__init_();
    $table.$setFillParent(1);
    $this.$add13($table);
    $cons.$get5($table);
    return $table;
}
function iaas_Scene_fireEnterAndExit($this, $overLast, $screenX, $screenY, $pointer) {
    var $over, $event;
    $this.$screenToStageCoordinates($this.$tempCoords.$set2($screenX, $screenY));
    $over = $this.$hit($this.$tempCoords.$x0, $this.$tempCoords.$y0, 1);
    if ($over === $overLast)
        return $overLast;
    if ($overLast !== null) {
        $event = iaaup_Pools_obtain($rt_cls(iaase_InputEvent), iaas_Scene$fireEnterAndExit$lambda$_19_0__init_());
        $event.$stageX = $this.$tempCoords.$x0;
        $event.$stageY = $this.$tempCoords.$y0;
        $event.$pointer = $pointer;
        iaase_InputEvent$Type_$callClinit();
        $event.$type = iaase_InputEvent$Type_exit;
        $event.$relatedActor = $over;
        $overLast.$fire($event);
        iaaup_Pools_free($event);
    }
    if ($over !== null) {
        $event = iaaup_Pools_obtain($rt_cls(iaase_InputEvent), iaas_Scene$fireEnterAndExit$lambda$_19_1__init_());
        $event.$stageX = $this.$tempCoords.$x0;
        $event.$stageY = $this.$tempCoords.$y0;
        $event.$pointer = $pointer;
        iaase_InputEvent$Type_$callClinit();
        $event.$type = iaase_InputEvent$Type_enter;
        $event.$relatedActor = $overLast;
        $over.$fire($event);
        iaaup_Pools_free($event);
    }
    return $over;
}
function iaas_Scene_touchDown($this, $screenX, $screenY, $pointer, $button) {
    var $event, $target, var$7, $handled;
    if (!$this.$isInsideViewport($screenX, $screenY))
        return 0;
    $this.$pointerTouched.data[$pointer] = 1;
    $this.$pointerScreenX.data[$pointer] = $screenX;
    $this.$pointerScreenY.data[$pointer] = $screenY;
    $this.$screenToStageCoordinates($this.$tempCoords.$set2($screenX, $screenY));
    $event = iaaup_Pools_obtain($rt_cls(iaase_InputEvent), iaas_Scene$touchDown$lambda$_20_0__init_());
    iaase_InputEvent$Type_$callClinit();
    $event.$type = iaase_InputEvent$Type_touchDown;
    $event.$stageX = $this.$tempCoords.$x0;
    $event.$stageY = $this.$tempCoords.$y0;
    $event.$pointer = $pointer;
    $event.$keyCode = $button;
    $target = $this.$hit($this.$tempCoords.$x0, $this.$tempCoords.$y0, 1);
    if ($target !== null)
        $target.$fire($event);
    else {
        var$7 = $this.$root.$getTouchable();
        iaase_Touchable_$callClinit();
        if (var$7 === iaase_Touchable_enabled)
            $this.$root.$fire($event);
    }
    $handled = $event.$handled;
    iaaup_Pools_free($event);
    return $handled;
}
function iaas_Scene_touchDragged($this, $screenX, $screenY, $pointer) {
    var $event, $touchFocuses, $focuses, $i, $n, $focus, $handled;
    $this.$pointerScreenX.data[$pointer] = $screenX;
    $this.$pointerScreenY.data[$pointer] = $screenY;
    $this.$mouseScreenX = $screenX;
    $this.$mouseScreenY = $screenY;
    if (!$this.$touchFocuses.$size)
        return 0;
    $this.$screenToStageCoordinates($this.$tempCoords.$set2($screenX, $screenY));
    $event = iaaup_Pools_obtain($rt_cls(iaase_InputEvent), iaas_Scene$touchDragged$lambda$_21_0__init_());
    iaase_InputEvent$Type_$callClinit();
    $event.$type = iaase_InputEvent$Type_touchDragged;
    $event.$stageX = $this.$tempCoords.$x0;
    $event.$stageY = $this.$tempCoords.$y0;
    $event.$pointer = $pointer;
    $touchFocuses = $this.$touchFocuses;
    $focuses = $touchFocuses.$begin0();
    $i = 0;
    $n = $touchFocuses.$size;
    while ($i < $n) {
        $focus = $focuses.data[$i];
        if ($focus.$pointer0 == $pointer && $touchFocuses.$contains1($focus, 1)) {
            $event.$targetActor = $focus.$target;
            $event.$listenerActor = $focus.$listenerActor0;
            if ($focus.$listener.$handle($event))
                $event.$handle0();
        }
        $i = $i + 1 | 0;
    }
    $touchFocuses.$end();
    $handled = $event.$handled;
    iaaup_Pools_free($event);
    return $handled;
}
function iaas_Scene_touchUp($this, $screenX, $screenY, $pointer, $button) {
    var $event, $touchFocuses, $focuses, $i, $n, $focus, $handled;
    $this.$pointerTouched.data[$pointer] = 0;
    $this.$pointerScreenX.data[$pointer] = $screenX;
    $this.$pointerScreenY.data[$pointer] = $screenY;
    if (!$this.$touchFocuses.$size)
        return 0;
    $this.$screenToStageCoordinates($this.$tempCoords.$set2($screenX, $screenY));
    $event = iaaup_Pools_obtain($rt_cls(iaase_InputEvent), iaas_Scene$touchUp$lambda$_22_0__init_());
    iaase_InputEvent$Type_$callClinit();
    $event.$type = iaase_InputEvent$Type_touchUp;
    $event.$stageX = $this.$tempCoords.$x0;
    $event.$stageY = $this.$tempCoords.$y0;
    $event.$pointer = $pointer;
    $event.$keyCode = $button;
    $touchFocuses = $this.$touchFocuses;
    $focuses = $touchFocuses.$begin0();
    $i = 0;
    $n = $touchFocuses.$size;
    while ($i < $n) {
        $focus = $focuses.data[$i];
        if ($focus.$pointer0 == $pointer && $focus.$button === $button && $touchFocuses.$removeValue($focus, 1)) {
            $event.$targetActor = $focus.$target;
            $event.$listenerActor = $focus.$listenerActor0;
            if ($focus.$listener.$handle($event))
                $event.$handle0();
            iaaup_Pools_free($focus);
        }
        $i = $i + 1 | 0;
    }
    $touchFocuses.$end();
    $handled = $event.$handled;
    iaaup_Pools_free($event);
    return $handled;
}
function iaas_Scene_mouseMoved($this, $screenX, $screenY) {
    var $event, $target, $handled;
    if (!$this.$isInsideViewport($screenX, $screenY))
        return 0;
    $this.$mouseScreenX = $screenX;
    $this.$mouseScreenY = $screenY;
    $this.$screenToStageCoordinates($this.$tempCoords.$set2($screenX, $screenY));
    $event = iaaup_Pools_obtain($rt_cls(iaase_InputEvent), iaas_Scene$mouseMoved$lambda$_23_0__init_());
    iaase_InputEvent$Type_$callClinit();
    $event.$type = iaase_InputEvent$Type_mouseMoved;
    $event.$stageX = $this.$tempCoords.$x0;
    $event.$stageY = $this.$tempCoords.$y0;
    $target = $this.$hit($this.$tempCoords.$x0, $this.$tempCoords.$y0, 1);
    if ($target === null)
        $target = $this.$root;
    $target.$fire($event);
    $handled = $event.$handled;
    iaaup_Pools_free($event);
    return $handled;
}
function iaas_Scene_scrolled($this, $amountX, $amountY) {
    var $target, $event, $handled;
    $target = $this.$scrollFocus !== null ? $this.$scrollFocus : $this.$root;
    $this.$screenToStageCoordinates($this.$tempCoords.$set2($this.$mouseScreenX, $this.$mouseScreenY));
    $event = iaaup_Pools_obtain($rt_cls(iaase_InputEvent), iaas_Scene$scrolled$lambda$_24_0__init_());
    iaase_InputEvent$Type_$callClinit();
    $event.$type = iaase_InputEvent$Type_scrolled;
    $event.$scrollAmountX = $amountX;
    $event.$scrollAmountY = $amountY;
    $event.$stageX = $this.$tempCoords.$x0;
    $event.$stageY = $this.$tempCoords.$y0;
    $target.$fire($event);
    $handled = $event.$handled;
    iaaup_Pools_free($event);
    return $handled;
}
function iaas_Scene_keyDown($this, $keyCode) {
    var $target, $event, $handled;
    $target = $this.$keyboardFocus !== null ? $this.$keyboardFocus : $this.$root;
    $event = iaaup_Pools_obtain($rt_cls(iaase_InputEvent), iaas_Scene$keyDown$lambda$_25_0__init_());
    iaase_InputEvent$Type_$callClinit();
    $event.$type = iaase_InputEvent$Type_keyDown;
    $event.$keyCode = $keyCode;
    $target.$fire($event);
    $handled = $event.$handled;
    iaaup_Pools_free($event);
    return $handled;
}
function iaas_Scene_keyUp($this, $keyCode) {
    var $target, $event, $handled;
    $target = $this.$keyboardFocus !== null ? $this.$keyboardFocus : $this.$root;
    $event = iaaup_Pools_obtain($rt_cls(iaase_InputEvent), iaas_Scene$keyUp$lambda$_26_0__init_());
    iaase_InputEvent$Type_$callClinit();
    $event.$type = iaase_InputEvent$Type_keyUp;
    $event.$keyCode = $keyCode;
    $target.$fire($event);
    $handled = $event.$handled;
    iaaup_Pools_free($event);
    return $handled;
}
function iaas_Scene_keyTyped($this, $character) {
    var $target, $event, $handled;
    $target = $this.$keyboardFocus !== null ? $this.$keyboardFocus : $this.$root;
    $event = iaaup_Pools_obtain($rt_cls(iaase_InputEvent), iaas_Scene$keyTyped$lambda$_27_0__init_());
    iaase_InputEvent$Type_$callClinit();
    $event.$type = iaase_InputEvent$Type_keyTyped;
    $event.$character = $character;
    $target.$fire($event);
    $handled = $event.$handled;
    iaaup_Pools_free($event);
    return $handled;
}
function iaas_Scene_addTouchFocus($this, $listener, $listenerActor, $target, $pointer, $button) {
    var $focus;
    $focus = iaaup_Pools_obtain($rt_cls(iaas_Scene$TouchFocus), iaas_Scene$addTouchFocus$lambda$_28_0__init_());
    $focus.$listenerActor0 = $listenerActor;
    $focus.$target = $target;
    $focus.$listener = $listener;
    $focus.$pointer0 = $pointer;
    $focus.$button = $button;
    $this.$touchFocuses.$add1($focus);
}
function iaas_Scene_cancelTouchFocus($this, $actor) {
    var $event, $touchFocuses, $items, $i, $n, $focus;
    $event = iaaup_Pools_obtain($rt_cls(iaase_InputEvent), iaas_Scene$cancelTouchFocus$lambda$_30_0__init_());
    iaase_InputEvent$Type_$callClinit();
    $event.$type = iaase_InputEvent$Type_touchUp;
    $event.$stageX = (-2.147483648E9);
    $event.$stageY = (-2.147483648E9);
    $touchFocuses = $this.$touchFocuses;
    $items = $touchFocuses.$begin0();
    $i = 0;
    $n = $touchFocuses.$size;
    while ($i < $n) {
        $focus = $items.data[$i];
        if ($focus.$listenerActor0 === $actor && $touchFocuses.$removeValue($focus, 1)) {
            $event.$targetActor = $focus.$target;
            $event.$listenerActor = $focus.$listenerActor0;
            $event.$pointer = $focus.$pointer0;
            $event.$keyCode = $focus.$button;
            $focus.$listener.$handle($event);
        }
        $i = $i + 1 | 0;
    }
    $touchFocuses.$end();
    iaaup_Pools_free($event);
}
function iaas_Scene_add($this, $actor) {
    $this.$root.$addChild0($actor);
}
function iaas_Scene_unfocus($this, $actor) {
    $this.$cancelTouchFocus($actor);
    if ($this.$scrollFocus !== null && $this.$scrollFocus.$isDescendantOf($actor))
        $this.$setScrollFocus(null);
    if ($this.$keyboardFocus !== null && $this.$keyboardFocus.$isDescendantOf($actor))
        $this.$setKeyboardFocus(null);
}
function iaas_Scene_setKeyboardFocus($this, $actor) {
    var $event, $oldKeyboardFocus, $success;
    if ($this.$keyboardFocus === $actor)
        return 1;
    $event = iaaup_Pools_obtain($rt_cls(iaase_FocusListener$FocusEvent), iaas_Scene$setKeyboardFocus$lambda$_43_0__init_());
    iaase_FocusListener$FocusEvent$Type_$callClinit();
    $event.$type9 = iaase_FocusListener$FocusEvent$Type_keyboard;
    $oldKeyboardFocus = $this.$keyboardFocus;
    if ($oldKeyboardFocus !== null) {
        $event.$focused = 0;
        $event.$relatedActor0 = $actor;
        $oldKeyboardFocus.$fire($event);
    }
    $success = $event.$cancelled ? 0 : 1;
    if ($success) {
        $this.$keyboardFocus = $actor;
        if ($actor !== null) {
            $event.$focused = 1;
            $event.$relatedActor0 = $oldKeyboardFocus;
            $actor.$fire($event);
            $success = $event.$cancelled ? 0 : 1;
            if (!$success)
                $this.$setKeyboardFocus($oldKeyboardFocus);
        }
    }
    iaaup_Pools_free($event);
    return $success;
}
function iaas_Scene_setScrollFocus($this, $actor) {
    var $event, $oldScrollFocus, $success;
    if ($this.$scrollFocus === $actor)
        return 1;
    $event = iaaup_Pools_obtain($rt_cls(iaase_FocusListener$FocusEvent), iaas_Scene$setScrollFocus$lambda$_45_0__init_());
    iaase_FocusListener$FocusEvent$Type_$callClinit();
    $event.$type9 = iaase_FocusListener$FocusEvent$Type_scroll;
    $oldScrollFocus = $this.$scrollFocus;
    if ($oldScrollFocus !== null) {
        $event.$focused = 0;
        $event.$relatedActor0 = $actor;
        $oldScrollFocus.$fire($event);
    }
    $success = $event.$cancelled ? 0 : 1;
    if ($success) {
        $this.$scrollFocus = $actor;
        if ($actor !== null) {
            $event.$focused = 1;
            $event.$relatedActor0 = $oldScrollFocus;
            $actor.$fire($event);
            $success = $event.$cancelled ? 0 : 1;
            if (!$success)
                $this.$setScrollFocus($oldScrollFocus);
        }
    }
    iaaup_Pools_free($event);
    return $success;
}
function iaas_Scene_getWidth($this) {
    return $this.$viewport0.$getWorldWidth();
}
function iaas_Scene_getHeight($this) {
    return $this.$viewport0.$getWorldHeight();
}
function iaas_Scene_hit($this, $stageX, $stageY, $touchable) {
    $this.$root.$parentToLocalCoordinates($this.$tempCoords.$set2($stageX, $stageY));
    return $this.$root.$hit($this.$tempCoords.$x0, $this.$tempCoords.$y0, $touchable);
}
function iaas_Scene_screenToStageCoordinates($this, $screenCoords) {
    $this.$viewport0.$unproject($screenCoords);
    return $screenCoords;
}
function iaas_Scene_calculateScissors($this, $localRect, $scissorRect) {
    var $transformMatrix;
    $transformMatrix = iaagg_Draw_trans();
    $this.$viewport0.$calculateScissors0($transformMatrix, $localRect, $scissorRect);
}
function iaas_Scene_getActionsRequestRendering($this) {
    return $this.$actionsRequestRendering;
}
function iaas_Scene_isInsideViewport($this, $screenX, $screenY) {
    var $x0, $x1, $y0, $y1, var$7;
    $x0 = $this.$viewport0.$getScreenX();
    $x1 = $x0 + $this.$viewport0.$getScreenWidth() | 0;
    $y0 = $this.$viewport0.$getScreenY();
    $y1 = $y0 + $this.$viewport0.$getScreenHeight() | 0;
    iaa_Core_$callClinit();
    var$7 = iaa_Core_graphics.$getHeight0() - $screenY | 0;
    return $screenX >= $x0 && $screenX < $x1 && var$7 >= $y0 && var$7 < $y1 ? 1 : 0;
}
function iaas_Scene_resize($this, $width, $height) {
    $this.$viewport0.$update6($width, $height, 1);
}
function iaas_Scene_lambda$addTouchFocus$1() {
    return iaas_Scene$TouchFocus__init_1(null);
}
function iaas_Scene_lambda$getStyle$0($type) {
    return jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1167)).$append($type.$getSimpleName()).$toString());
}
function it_Bullets$2() {
    it_BulletType.call(this);
}
function it_Bullets$2__init_() {
    var var_0 = new it_Bullets$2();
    it_Bullets$2__init_0(var_0);
    return var_0;
}
function it_Bullets$2__init_0($this) {
    it_BulletType__init_0($this);
    $this.$speed = 3.0;
    $this.$damage0 = 5.0;
    ig_Pal_$callClinit();
    $this.$lightColor = ig_Pal_lucine;
}
function it_Bullets$2_draw($this, $bullet) {
    ig_Pal_$callClinit();
    iaagg_Draw_color(ig_Pal_lucine);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 5.0);
    iaag_Color_$callClinit();
    iaagg_Draw_color(iaag_Color_white);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 2.0);
}
function it_Bullets$3() {
    it_BulletType.call(this);
    this.$fs = 0.0;
}
function it_Bullets$3__init_() {
    var var_0 = new it_Bullets$3();
    it_Bullets$3__init_0(var_0);
    return var_0;
}
function it_Bullets$3__init_0($this) {
    it_BulletType__init_0($this);
    $this.$fs = 0.10000000149011612;
    $this.$speed = 1.5;
    $this.$damage0 = 5.0;
    ig_Pal_$callClinit();
    $this.$lightColor = ig_Pal_lucine;
}
function it_Bullets$3_draw($this, $bullet) {
    var $sizemult;
    $sizemult = iaam_Mathf_clamp0($bullet.$fin() / $this.$fs);
    ig_Pal_$callClinit();
    iaagg_Draw_color(ig_Pal_lucine);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 5.0 * $sizemult);
    iaag_Color_$callClinit();
    iaagg_Draw_color(iaag_Color_white);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 2.0 * $sizemult);
}
function it_Bullets$3_drawLight($this, $bullet) {
    if ($this.$light <= 0.0)
        return;
    ig_Drawf_light($bullet.$x2, $bullet.$y2, $this.$light * iaam_Mathf_clamp0($bullet.$fin() / $this.$fs), $this.$lightColor);
}
function it_Bullets$1() {
    it_BulletType.call(this);
}
function it_Bullets$1__init_() {
    var var_0 = new it_Bullets$1();
    it_Bullets$1__init_0(var_0);
    return var_0;
}
function it_Bullets$1__init_0($this) {
    it_BulletType__init_0($this);
    $this.$speed = 7.0;
    ig_Pal_$callClinit();
    $this.$lightColor = ig_Pal_player;
    $this.$damage0 = 1.0;
    $this.$lifetime0 = 50.0;
}
function it_Bullets$1_draw($this, $bullet) {
    ig_Pal_$callClinit();
    iaagg_Draw_color(ig_Pal_player);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 5.0);
    iaag_Color_$callClinit();
    iaagg_Draw_color(iaag_Color_white);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 2.0);
}
function it_Phases$2$_init_$lambda$_0_0() {
    jl_Object.call(this);
}
function it_Phases$2$_init_$lambda$_0_0__init_() {
    var var_0 = new it_Phases$2$_init_$lambda$_0_0();
    it_Phases$2$_init_$lambda$_0_0__init_0(var_0);
    return var_0;
}
function it_Phases$2$_init_$lambda$_0_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$2$_init_$lambda$_0_0_run(var$0) {
    it_Phases$2_lambda$$5();
}
function it_Bullets$6() {
    it_BulletType.call(this);
}
function it_Bullets$6__init_() {
    var var_0 = new it_Bullets$6();
    it_Bullets$6__init_0(var_0);
    return var_0;
}
function it_Bullets$6__init_0($this) {
    it_BulletType__init_0($this);
    $this.$speed = 1.2000000476837158;
    ig_Pal_$callClinit();
    $this.$lightColor = ig_Pal_candle;
    $this.$lifetime0 = 600.0;
    $this.$damage0 = 8.0;
}
function it_Bullets$6_draw($this, $bullet) {
    ig_Pal_$callClinit();
    iaagg_Draw_color(ig_Pal_candle);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 5.0);
    iaag_Color_$callClinit();
    iaagg_Draw_color(iaag_Color_white);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 2.0);
}
function it_Bullets$6_solid($this, $x, $y) {
    var $tile;
    $tile = i_Inferno_world.$tileOpt($x, $y);
    if ($tile !== null && $tile.$wall !== null && $tile.$wall.$clear0)
        return 0;
    return i_Inferno_world.$solid0($x, $y);
}
function it_Phases$2$_init_$lambda$_0_1() {
    jl_Object.call(this);
}
function it_Phases$2$_init_$lambda$_0_1__init_() {
    var var_0 = new it_Phases$2$_init_$lambda$_0_1();
    it_Phases$2$_init_$lambda$_0_1__init_0(var_0);
    return var_0;
}
function it_Phases$2$_init_$lambda$_0_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$2$_init_$lambda$_0_1_run(var$0) {
    it_Phases$2_lambda$$10();
}
function it_Bullets$7() {
    it_BulletType.call(this);
}
function it_Bullets$7__init_() {
    var var_0 = new it_Bullets$7();
    it_Bullets$7__init_0(var_0);
    return var_0;
}
function it_Bullets$7__init_0($this) {
    it_BulletType__init_0($this);
    $this.$speed = 2.0;
    ig_Pal_$callClinit();
    $this.$lightColor = ig_Pal_candle;
    $this.$lifetime0 = 600.0;
    $this.$damage0 = 8.0;
}
function it_Bullets$7_draw($this, $bullet) {
    ig_Drawf_z($bullet.$y2 - 64.0);
    ig_Pal_$callClinit();
    iaagg_Draw_color(ig_Pal_candle);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 5.0);
    iaag_Color_$callClinit();
    iaagg_Draw_color(iaag_Color_white);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 2.0);
}
function iaamo_PolylineMapObject() {
    iaam_MapObject.call(this);
    this.$polyline1 = null;
}
function iaamo_PolylineMapObject__init_(var_0) {
    var var_1 = new iaamo_PolylineMapObject();
    iaamo_PolylineMapObject__init_0(var_1, var_0);
    return var_1;
}
function iaamo_PolylineMapObject__init_0($this, $polyline) {
    iaam_MapObject__init_0($this);
    $this.$polyline1 = $polyline;
}
function it_Bullets$4() {
    it_BulletType.call(this);
}
function it_Bullets$4__init_() {
    var var_0 = new it_Bullets$4();
    it_Bullets$4__init_0(var_0);
    return var_0;
}
function it_Bullets$4__init_0($this) {
    it_BulletType__init_0($this);
    $this.$speed = 7.0;
    $this.$damage0 = 6.0;
    ig_Pal_$callClinit();
    $this.$lightColor = ig_Pal_lucine;
}
function it_Bullets$4_draw($this, $bullet) {
    ig_Pal_$callClinit();
    iaagg_Draw_color(ig_Pal_lucine);
    iaagg_Draw_rect7($rt_s(311), $bullet.$x2, $bullet.$y2, 14.0, 9.0, $bullet.$angle2());
    iaag_Color_$callClinit();
    iaagg_Draw_color(iaag_Color_white);
    iaagg_Draw_rect7($rt_s(311), $bullet.$x2, $bullet.$y2, 6.0, 3.5, $bullet.$angle2());
}
function i_Inferno() {
    iaa_ApplicationCore.call(this);
}
var i_Inferno_bulletGroup = null;
var i_Inferno_charGroup = null;
var i_Inferno_effectGroup = null;
var i_Inferno_player = null;
var i_Inferno_boss = null;
var i_Inferno_ui = null;
var i_Inferno_renderer = null;
var i_Inferno_control = null;
var i_Inferno_world = null;
function i_Inferno__init_() {
    var var_0 = new i_Inferno();
    i_Inferno__init_0(var_0);
    return var_0;
}
function i_Inferno__init_0($this) {
    iaa_ApplicationCore__init_0($this);
}
function i_Inferno_setup($this) {
    var var$1;
    i_Inferno_bulletGroup = ie_EntityGroup__init_(1);
    i_Inferno_charGroup = ie_EntityGroup__init_(1);
    i_Inferno_effectGroup = ie_EntityGroup__init_(0);
    var$1 = i_Control__init_();
    i_Inferno_control = var$1;
    $this.$add14(var$1);
    var$1 = i_Renderer__init_();
    i_Inferno_renderer = var$1;
    $this.$add14(var$1);
    var$1 = i_World__init_();
    i_Inferno_world = var$1;
    $this.$add14(var$1);
    var$1 = i_UI__init_();
    i_Inferno_ui = var$1;
    $this.$add14(var$1);
}
function it_Bullets$5() {
    it_BulletType.call(this);
}
function it_Bullets$5__init_() {
    var var_0 = new it_Bullets$5();
    it_Bullets$5__init_0(var_0);
    return var_0;
}
function it_Bullets$5__init_0($this) {
    it_BulletType__init_0($this);
    $this.$speed = 2.0;
    ig_Pal_$callClinit();
    $this.$lightColor = ig_Pal_candle;
    $this.$lifetime0 = 500.0;
    $this.$size3 = 10.0;
    $this.$deflect = 0;
    $this.$damage0 = 15.0;
}
function it_Bullets$5_draw($this, $bullet) {
    var $glow, var$3;
    ig_Drawf_z($bullet.$y2 - 64.0);
    $glow = iaam_Mathf_absin(iaau_Time_time(), 5.0, 0.5);
    ig_Pal_$callClinit();
    var$3 = ig_Pal_fireball;
    iaag_Color_$callClinit();
    iaagg_Draw_color4(var$3, iaag_Color_white, $glow);
    iaagg_Draw_alpha(0.30000001192092896);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 10.0 + iaam_Mathf_absin(iaau_Time_time(), 6.0, 4.0));
    iaagg_Draw_color4(ig_Pal_fireball, iaag_Color_white, $glow);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 7.0);
    iaagg_Draw_color(iaag_Color_white);
    iaagg_Fill_circle($bullet.$x2, $bullet.$y2, 4.0);
}
function it_Bullets$5_update($this, $bullet) {
    var var$2, var$3, var$4, $s, var$6;
    if (iaam_Mathf_chance(0.15 * iaau_Time_delta())) {
        it_Fx_$callClinit();
        var$2 = it_Fx_fireballtrail;
        var$3 = $bullet.$x2;
        var$4 = $bullet.$y2;
        ig_Pal_$callClinit();
        var$2.$at0(var$3, var$4, ig_Pal_fireball);
    }
    if (iaam_Mathf_chance(0.02 * iaau_Time_delta())) {
        $s = 0.0;
        var$6 = $bullet.$shooter;
        it_Bullets_$callClinit();
        var$6.$shoot1(it_Bullets_breathsmall, $bullet.$x2, $bullet.$y2, iaam_Mathf_chance(0.20000000298023224) ? $bullet.$angleTo0(i_Inferno_player) : $bullet.$angle2() + 110.0 - $s);
        $bullet.$shooter.$shoot1(it_Bullets_breathsmall, $bullet.$x2, $bullet.$y2, iaam_Mathf_chance(0.20000000298023224) ? $bullet.$angleTo0(i_Inferno_player) : $bullet.$angle2() - 110.0 + $s);
    }
}
function it_Boss() {
    var a = this; it_Char.call(a);
    a.$direction0 = null;
    a.$dialogged = 0;
    a.$midSpeech = 0;
    a.$phase = null;
    a.$anim0 = null;
    a.$animdur = 0.0;
    a.$animtime = 0.0;
}
var it_Boss_adash = null;
var it_Boss_awave = null;
function it_Boss_$callClinit() {
    it_Boss_$callClinit = $rt_eraseClinit(it_Boss);
    it_Boss__clinit_();
}
function it_Boss__init_() {
    var var_0 = new it_Boss();
    it_Boss__init_0(var_0);
    return var_0;
}
function it_Boss__init_0($this) {
    it_Boss_$callClinit();
    it_Char__init_0($this);
    it_Direction_$callClinit();
    $this.$direction0 = it_Direction_down;
    it_Phases_$callClinit();
    $this.$phase = it_Phases_phases.$first0();
    $this.$anim0 = null;
}
function it_Boss_onDeath($this) {
    var $index;
    $this.$dialogged = 0;
    it_Phases_$callClinit();
    $index = it_Phases_phases.$indexOf2($this.$phase);
    if ($index >= (it_Phases_phases.$size - 1 | 0)) {
        iaam_Angles_circle0(100, it_Boss$onDeath$lambda$_1_0__init_($this));
        $this.$remove0();
    } else
        $this.$nextPhase(it_Phases_phases.$get($index + 1 | 0));
}
function it_Boss_midPhase($this) {
    $this.$dialogged = 0;
    it_Phases_$callClinit();
    $this.$phase = it_Phases_phases.$get(it_Phases_phases.$indexOf2($this.$phase) + 1 | 0);
    i_Inferno_bulletGroup.$all().$each(it_Boss$midPhase$lambda$_2_0__init_());
    iaau_Time_clear();
    i_Inferno_bulletGroup.$clear();
}
function it_Boss_nextPhase($this, $phase) {
    var var$2;
    $this.$heal();
    $phase.$reset();
    $this.$dead = 0;
    $this.$phase = $phase;
    $this.$dialogged = 0;
    $phase.$begin();
    var$2 = i_Inferno_player;
    var$2.$health = var$2.$health + i_Inferno_player.$maxHealth() / 2.0;
    i_Inferno_player.$health = iaam_Mathf_clamp(i_Inferno_player.$health, 0.0, i_Inferno_player.$maxHealth());
    i_Inferno_effectGroup.$clear();
    i_Inferno_bulletGroup.$all().$each(it_Boss$nextPhase$lambda$_3_0__init_());
    iaau_Time_clear();
    i_Inferno_bulletGroup.$clear();
}
function it_Boss_reset($this) {
    i_Inferno_world.$wallUndetonate();
    it_Phases_$callClinit();
    $this.$phase = it_Phases_phases.$get(5);
    i_Inferno_world.$wallDetonate();
    i_Inferno_world.$wallExtinguish();
    $this.$phase.$reset();
    $this.$phase.$begin();
}
function it_Boss_anim($this, $anim, $duration) {
    $this.$anim0 = $anim;
    $this.$animdur = $duration;
    $this.$animtime = 0.0;
}
function it_Boss_update($this) {
    var var$1;
    if (!$this.$dialogged && $this.$phase.$startText !== null) {
        $this.$midSpeech = 1;
        it_Phases_$callClinit();
        iaau_Time_run(it_Phases_phases.$first0() !== $this.$phase ? 60.0 : 0.0, it_Boss$update$lambda$_6_0__init_($this));
        $this.$dialogged = 1;
    }
    $this.$hitTime = $this.$hitTime - 0.20000000298023224 * iaau_Time_delta();
    if (!$this.$midSpeech)
        $this.$phase.$update1();
    if (i_Inferno_player.$x2 >= $this.$x2) {
        it_Direction_$callClinit();
        var$1 = it_Direction_right;
    } else {
        it_Direction_$callClinit();
        var$1 = it_Direction_left;
    }
    $this.$direction0 = var$1;
    if ($this.$anim0 !== null) {
        $this.$animtime = $this.$animtime + iaau_Time_delta() / $this.$animdur;
        if ($this.$animtime >= 1.0)
            $this.$anim0 = null;
    }
}
function it_Boss_maxHealth($this) {
    return 350.0;
}
function it_Boss_draw($this) {
    var $region;
    if ($this.$isStatue())
        $this.$drawStatue();
    else {
        iaag_Color_$callClinit();
        iaagg_Draw_mixcol(iaag_Color_white, iaam_Mathf_clamp0($this.$hitTime));
        if ($this.$anim0 !== null)
            $region = $this.$anim0.$frame($this.$animtime);
        else {
            iaa_Core_$callClinit();
            $region = iaa_Core_atlas.$find($rt_s(1168));
        }
        iaagg_Draw_rect3($region, $this.$x2, $this.$y2 + $region.$getHeight0() / 2.0 + iaam_Mathf_absin(iaau_Time_time(), 6.0, 2.0), $rt_imul($region.$getWidth0(),  -iaam_Mathf_sign0($this.$direction0.$flipped)), $region.$getHeight0());
        ig_Drawf_light($this.$x2, $this.$y2 + $this.$height8(), 160.0, iaag_Color_scarlet);
        iaagg_Draw_mixcol0();
        ig_Pal_$callClinit();
        iaagg_Draw_color4(ig_Pal_lucine, iaag_Color_white, iaam_Mathf_clamp0($this.$hitTime));
        ig_Drawf_z($this.$y2 + 600.0);
        iaagg_Lines_stroke0(2.0);
        iaagg_Draw_reset();
    }
}
function it_Boss_isStatue($this) {
    var var$1;
    var$1 = $this.$phase;
    it_Phases_$callClinit();
    return var$1 !== it_Phases_phases.$get(4) ? 0 : 1;
}
function it_Boss_drawStatue($this) {
    var $x, $y, $r;
    $x = 648.0;
    $y = (i_Inferno_world.$height4() - 10.5) * 16.0;
    ig_Drawf_z($y - 1.0);
    iaa_Core_$callClinit();
    $r = iaa_Core_atlas.$find($rt_s(1169));
    iaag_Color_$callClinit();
    iaagg_Draw_mixcol(iaag_Color_white, $this.$hitTime / 2.0);
    iaagg_Draw_rect($r, $x, $y + $r.$getHeight0() / 2.0);
    iaagg_Draw_reset();
    ig_Drawf_light1($x, $y + $r.$getHeight0() / 2.0, 150.0 + iaam_Mathf_absin(iaau_Time_time(), 6.0, 10.0), iaag_Color_red, 0.8999999761581421);
}
function it_Boss_move($this, $x, $y) {
    ie_SolidEntity_move0($this, $x, $y);
}
function it_Boss_hitbox($this, $rectangle) {
    var $w, $h;
    $w = !$this.$isStatue() ? 12.0 : 96.0;
    $h = !$this.$isStatue() ? 24.0 : 80.0;
    $rectangle.$set15($this.$x2 - $w / 2.0, $this.$y2 - (!$this.$isStatue() ? 0.0 : $h / 2.0), $w, $h);
}
function it_Boss_hitboxTile($this, $rectangle) {
    var $w, $h;
    $w = 7.0;
    $h = 12.0;
    $rectangle.$set15($this.$x2 - 3.5, $this.$y2, $w, $h);
}
function it_Boss_collides($this, $other) {
    return $other instanceof it_Bullet && $other.$shooter instanceof it_Player ? 1 : 0;
}
function it_Boss_drawShadow($this) {
    iaagg_Draw_rect2($rt_s(311), $this.$x2 | 0, $this.$y2 | 0, 16.0, 7.0);
}
function it_Boss_dash($this, $speed, $done) {
    var $seg, $i, $i_0, var$6;
    $seg = 10.0;
    $i = 0;
    while ($speed > $seg) {
        $i_0 = $i + 1 | 0;
        iaau_Time_run($i * 1.0, it_Boss$dash$lambda$_16_0__init_($this, $seg));
        $speed = $speed - $seg;
        $i = $i_0;
    }
    var$6 = $i * 1.0;
    iaau_Time_run(var$6, $done);
    $this.$toward(i_Inferno_player, $speed);
    it_Fx_$callClinit();
    it_Fx_wave.$at($this.$x2, $this.$y2);
    i_Inferno_renderer.$shake1(5.0);
    return var$6;
}
function it_Boss_shoot($this, $angle, $mover) {
    it_Bullets_$callClinit();
    $this.$shoot5(it_Bullets_lbasic, $angle, $mover);
}
function it_Boss_shoot0($this, $angle) {
    it_Bullets_$callClinit();
    $this.$shoot3(it_Bullets_lbasic, $angle);
}
function it_Boss_laser($this, $type, $angle) {
    it_Fx_$callClinit();
    it_Fx_indlaser.$at1($this.$x2, $this.$y2, $angle);
    iaau_Time_run(it_Fx_indlaser.$lifetime + 1.0, it_Boss$laser$lambda$_19_0__init_($this, $type, $angle));
}
function it_Boss_shootf($this, $angle) {
    it_Bullets_$callClinit();
    $this.$shoot3(it_Bullets_lfast, $angle);
}
function it_Boss_aim($this) {
    return $this.$angleTo0(i_Inferno_player);
}
function it_Boss_seesPlayer($this) {
    return iaamg_Geometry_raycast(i_Inferno_world.$world($this.$x2), i_Inferno_world.$world($this.$y2), i_Inferno_world.$world(i_Inferno_player.$x2), i_Inferno_world.$world(i_Inferno_player.$y2), it_Boss$seesPlayer$lambda$_23_0__init_()) ? 0 : 1;
}
function it_Boss_lambda$seesPlayer$7($x, $y) {
    it_Boss_$callClinit();
    return i_Inferno_world.$solid0($x, $y);
}
function it_Boss_lambda$laser$5($this, $type, $angle) {
    it_Laser__init_($type, $this.$x2, $this.$y2, $angle).$add15();
}
function it_Boss_lambda$dash$4($this, $seg) {
    var var$2, var$3, var$4, var$5;
    $this.$toward(i_Inferno_player, $seg);
    it_Fx_$callClinit();
    var$2 = it_Fx_dash;
    var$3 = $this.$x2;
    var$4 = $this.$y2 + 6.0;
    var$5 = $this.$angleTo0(i_Inferno_player) + 180.0;
    ig_Pal_$callClinit();
    var$2.$at3(var$3, var$4, var$5, ig_Pal_lucine);
    it_Fx_ldash.$at1($this.$x2, $this.$y2, !$this.$direction0.$flipped ? 1.0 : (-1.0));
}
function it_Boss_lambda$update$3($this) {
    $this.$midSpeech = 0;
}
function it_Boss_lambda$nextPhase$2($b) {
    it_Boss_$callClinit();
    it_Fx_$callClinit();
    it_Fx_spark.$at0($b.$x2, $b.$y2, $b.$type8.$lightColor);
}
function it_Boss_lambda$midPhase$1($b) {
    it_Boss_$callClinit();
    it_Fx_$callClinit();
    it_Fx_spark.$at0($b.$x2, $b.$y2, $b.$type8.$lightColor);
}
function it_Boss_lambda$onDeath$0($this, $f) {
    it_Bullets_$callClinit();
    $this.$shoot3(it_Bullets_basic, $f);
}
function it_Boss__clinit_() {
    var var$1, var$2, var$3;
    var$1 = new ig_Anim;
    var$2 = $rt_createArray(jl_String, 1);
    var$2.data[0] = $rt_s(1170);
    ig_Anim__init_(var$1, var$2);
    it_Boss_adash = var$1;
    var$1 = new ig_Anim;
    var$2 = $rt_createArray(jl_String, 2);
    var$3 = var$2.data;
    var$3[0] = $rt_s(1171);
    var$3[1] = $rt_s(1172);
    ig_Anim__init_(var$1, var$2);
    it_Boss_awave = var$1;
}
function it_Phases$2$_init_$lambda$_0_2() {
    jl_Object.call(this);
}
function it_Phases$2$_init_$lambda$_0_2__init_() {
    var var_0 = new it_Phases$2$_init_$lambda$_0_2();
    it_Phases$2$_init_$lambda$_0_2__init_0(var_0);
    return var_0;
}
function it_Phases$2$_init_$lambda$_0_2__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$2$_init_$lambda$_0_2_run(var$0) {
    it_Phases$2_lambda$$18();
}
function it_Phases$2$_init_$lambda$_0_3() {
    jl_Object.call(this);
}
function it_Phases$2$_init_$lambda$_0_3__init_() {
    var var_0 = new it_Phases$2$_init_$lambda$_0_3();
    it_Phases$2$_init_$lambda$_0_3__init_0(var_0);
    return var_0;
}
function it_Phases$2$_init_$lambda$_0_3__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$2$_init_$lambda$_0_3_run(var$0) {
    it_Phases$2_lambda$$22();
}
function jur_CIDecomposedCharSet() {
    jur_DecomposedCharSet.call(this);
}
function jur_CIDecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_CIDecomposedCharSet();
    jur_CIDecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CIDecomposedCharSet__init_0($this, $decomp, $decomposedCharLength) {
    jur_DecomposedCharSet__init_0($this, $decomp, $decomposedCharLength);
}
function iaamg_Point2() {
    var a = this; jl_Object.call(a);
    a.$x3 = 0;
    a.$y3 = 0;
}
function iaamg_Point2__init_0() {
    var var_0 = new iaamg_Point2();
    iaamg_Point2__init_1(var_0);
    return var_0;
}
function iaamg_Point2__init_(var_0, var_1) {
    var var_2 = new iaamg_Point2();
    iaamg_Point2__init_2(var_2, var_0, var_1);
    return var_2;
}
function iaamg_Point2__init_1($this) {
    jl_Object__init_0($this);
}
function iaamg_Point2__init_2($this, $x, $y) {
    jl_Object__init_0($this);
    $this.$x3 = $x;
    $this.$y3 = $y;
}
function iaamg_Point2_equals($this, $o) {
    var $g;
    if ($this === $o)
        return 1;
    if ($o !== null && jl_Object_getClass($o) === jl_Object_getClass($this)) {
        $g = $o;
        return $this.$x3 == $g.$x3 && $this.$y3 == $g.$y3 ? 1 : 0;
    }
    return 0;
}
function iaamg_Point2_toString($this) {
    return jl_StringBuilder__init_().$append($rt_s(1173)).$append3($this.$x3).$append($rt_s(516)).$append3($this.$y3).$append($rt_s(364)).$toString();
}
function it_Phases$4$lambda$null$1$lambda$_16_0() {
    var a = this; jl_Object.call(a);
    a.$_091 = 0.0;
    a.$_139 = 0;
}
function it_Phases$4$lambda$null$1$lambda$_16_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$4$lambda$null$1$lambda$_16_0();
    it_Phases$4$lambda$null$1$lambda$_16_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$4$lambda$null$1$lambda$_16_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_091 = var$1;
    var$0.$_139 = var$2;
}
function it_Phases$4$lambda$null$1$lambda$_16_0_get(var$0, var$1) {
    it_Phases$4_lambda$null$0(var$0.$_091, var$0.$_139, var$1);
}
function iaas_Scene$cancelTouchFocus$lambda$_30_0() {
    jl_Object.call(this);
}
function iaas_Scene$cancelTouchFocus$lambda$_30_0__init_() {
    var var_0 = new iaas_Scene$cancelTouchFocus$lambda$_30_0();
    iaas_Scene$cancelTouchFocus$lambda$_30_0__init_0(var_0);
    return var_0;
}
function iaas_Scene$cancelTouchFocus$lambda$_30_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaas_Scene$cancelTouchFocus$lambda$_30_0_get(var$0) {
    return iaas_Scene$cancelTouchFocus$lambda$_30_0_get0(var$0);
}
function iaas_Scene$cancelTouchFocus$lambda$_30_0_get0(var$0) {
    return iaase_InputEvent__init_();
}
function otjw_WebGLContextAttributes() {
    jl_Object.call(this);
}
function otjw_WebGLContextAttributes_create$js_body$_13() {
    return {  };
}
function iaas_Scene$act$lambda$_12_0() {
    jl_Object.call(this);
}
function iaas_Scene$act$lambda$_12_0__init_() {
    var var_0 = new iaas_Scene$act$lambda$_12_0();
    iaas_Scene$act$lambda$_12_0__init_0(var_0);
    return var_0;
}
function iaas_Scene$act$lambda$_12_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaas_Scene$act$lambda$_12_0_get(var$0) {
    return iaas_Scene$act$lambda$_12_0_get0(var$0);
}
function iaas_Scene$act$lambda$_12_0_get0(var$0) {
    return iaase_InputEvent__init_();
}
function iaagg_BitmapFontCache() {
    var a = this; jl_Object.call(a);
    a.$font0 = null;
    a.$layouts = null;
    a.$pooledLayouts = null;
    a.$color12 = null;
    a.$integer = 0;
    a.$glyphCount = 0;
    a.$x9 = 0.0;
    a.$y9 = 0.0;
    a.$currentTint = 0.0;
    a.$pageVertices = null;
    a.$idx0 = null;
    a.$pageGlyphIndices = null;
    a.$tempGlyphCount = null;
}
var iaagg_BitmapFontCache_tempColor = null;
function iaagg_BitmapFontCache_$callClinit() {
    iaagg_BitmapFontCache_$callClinit = $rt_eraseClinit(iaagg_BitmapFontCache);
    iaagg_BitmapFontCache__clinit_();
}
function iaagg_BitmapFontCache__init_(var_0, var_1) {
    var var_2 = new iaagg_BitmapFontCache();
    iaagg_BitmapFontCache__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaagg_BitmapFontCache__init_0($this, $font, $integer) {
    var $pageCount, $i, $n;
    iaagg_BitmapFontCache_$callClinit();
    jl_Object__init_0($this);
    $this.$layouts = iaac_Array__init_0();
    $this.$pooledLayouts = iaac_Array__init_0();
    $this.$color12 = iaag_Color__init_(1.0, 1.0, 1.0, 1.0);
    $this.$font0 = $font;
    $this.$integer = $integer;
    $pageCount = $font.$regions1.$size;
    if (!$pageCount)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1174)));
    a: {
        $this.$pageVertices = $rt_createArray($rt_arraycls($rt_floatcls()), $pageCount);
        $this.$idx0 = $rt_createIntArray($pageCount);
        if ($pageCount > 1) {
            $this.$pageGlyphIndices = $rt_createArray(iaac_IntArray, $pageCount);
            $i = 0;
            $n = $this.$pageGlyphIndices.data.length;
            while (true) {
                if ($i >= $n)
                    break a;
                $this.$pageGlyphIndices.data[$i] = iaac_IntArray__init_0();
                $i = $i + 1 | 0;
            }
        }
    }
    $this.$tempGlyphCount = $rt_createIntArray($pageCount);
}
function iaagg_BitmapFontCache_setPosition($this, $x, $y) {
    $this.$translate0($x - $this.$x9, $y - $this.$y9);
}
function iaagg_BitmapFontCache_translate($this, $xAmount, $yAmount) {
    var $pageVertices, var$4, $i, $n, $vertices, $ii, $nn, var$10, var$11;
    if ($xAmount === 0.0 && $yAmount === 0.0)
        return;
    if ($this.$integer) {
        $xAmount = jl_Math_round0($xAmount);
        $yAmount = jl_Math_round0($yAmount);
    }
    $this.$x9 = $this.$x9 + $xAmount;
    $this.$y9 = $this.$y9 + $yAmount;
    $pageVertices = $this.$pageVertices;
    var$4 = $pageVertices.data;
    $i = 0;
    $n = var$4.length;
    while ($i < $n) {
        $vertices = var$4[$i];
        $ii = 0;
        $nn = $this.$idx0.data[$i];
        while ($ii < $nn) {
            var$10 = $vertices.data;
            var$10[$ii] = var$10[$ii] + $xAmount;
            var$11 = $ii + 1 | 0;
            var$10[var$11] = var$10[var$11] + $yAmount;
            $ii = $ii + 6 | 0;
        }
        $i = $i + 1 | 0;
    }
}
function iaagg_BitmapFontCache_tint($this, $tint) {
    var $newTint, $tempGlyphCount, var$4, $i, $n, $layout, $ii, $nn, $run, $glyphs, $colorFloat, $iii, $nnn, $glyph, $page, $offset, $vertices, $v;
    $newTint = $tint.$toFloatBits();
    if ($this.$currentTint === $newTint)
        return;
    $this.$currentTint = $newTint;
    $tempGlyphCount = $this.$tempGlyphCount;
    var$4 = $tempGlyphCount.data;
    $i = 0;
    $n = var$4.length;
    while ($i < $n) {
        var$4[$i] = 0;
        $i = $i + 1 | 0;
    }
    $i = 0;
    $n = $this.$layouts.$size;
    while ($i < $n) {
        $layout = $this.$layouts.$get($i);
        $ii = 0;
        $nn = $layout.$runs.$size;
        while ($ii < $nn) {
            $run = $layout.$runs.$get($ii);
            $glyphs = $run.$glyphs;
            $colorFloat = iaagg_BitmapFontCache_tempColor.$set($run.$color5).$mul($tint).$toFloatBits();
            $iii = 0;
            $nnn = $glyphs.$size;
            while ($iii < $nnn) {
                $glyph = $glyphs.$get($iii);
                $page = $glyph.$page0;
                $offset = (var$4[$page] * 24 | 0) + 2 | 0;
                var$4[$page] = var$4[$page] + 1 | 0;
                $vertices = $this.$pageVertices.data[$page];
                $v = 0;
                while ($v < 24) {
                    $vertices.data[$offset + $v | 0] = $colorFloat;
                    $v = $v + 6 | 0;
                }
                $iii = $iii + 1 | 0;
            }
            $ii = $ii + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
}
function iaagg_BitmapFontCache_setColors($this, $tint, $start, $end) {
    $this.$setColors0($tint.$toFloatBits(), $start, $end);
}
function iaagg_BitmapFontCache_setColors0($this, $color, $start, $end) {
    var $vertices, $i, $n, $pageCount, $glyphIndices, $j, $glyphIndex, $off;
    if ($this.$pageVertices.data.length == 1) {
        $vertices = $this.$pageVertices.data[0];
        $i = ($start * 24 | 0) + 2 | 0;
        $n = $end * 24 | 0;
        while ($i < $n) {
            $vertices.data[$i] = $color;
            $i = $i + 6 | 0;
        }
        return;
    }
    $pageCount = $this.$pageVertices.data.length;
    $i = 0;
    while ($i < $pageCount) {
        $vertices = $this.$pageVertices.data[$i];
        $glyphIndices = $this.$pageGlyphIndices.data[$i];
        $j = 0;
        $n = $glyphIndices.$size5;
        a: {
            while (true) {
                if ($j >= $n)
                    break a;
                $glyphIndex = $glyphIndices.$items3.data[$j];
                if ($glyphIndex >= $end)
                    break;
                b: {
                    if ($glyphIndex >= $start) {
                        $off = 0;
                        while (true) {
                            if ($off >= 24)
                                break b;
                            $vertices.data[$off + (($j * 24 | 0) + 2 | 0) | 0] = $color;
                            $off = $off + 6 | 0;
                        }
                    }
                }
                $j = $j + 1 | 0;
            }
        }
        $i = $i + 1 | 0;
    }
}
function iaagg_BitmapFontCache_draw($this) {
    var $regions, $j, $n, $vertices;
    $regions = $this.$font0.$getRegions();
    $j = 0;
    $n = $this.$pageVertices.data.length;
    while ($j < $n) {
        if ($this.$idx0.data[$j] > 0) {
            $vertices = $this.$pageVertices.data[$j];
            iaagg_Draw_vert($regions.$get($j).$getTexture(), $vertices, 0, $this.$idx0.data[$j]);
        }
        $j = $j + 1 | 0;
    }
}
function iaagg_BitmapFontCache_clear($this) {
    var $i, $n;
    $this.$x9 = 0.0;
    $this.$y9 = 0.0;
    iaaup_Pools_freeAll0($this.$pooledLayouts, 1);
    $this.$pooledLayouts.$clear();
    $this.$layouts.$clear();
    $i = 0;
    $n = $this.$idx0.data.length;
    while ($i < $n) {
        if ($this.$pageGlyphIndices !== null)
            $this.$pageGlyphIndices.data[$i].$clear();
        $this.$idx0.data[$i] = 0;
        $i = $i + 1 | 0;
    }
}
function iaagg_BitmapFontCache_requireGlyphs($this, $layout) {
    var $newGlyphCount, $i, $n, $tempGlyphCount, var$6, $n_0, $glyphs, $ii, $nn, var$11;
    a: {
        if ($this.$pageVertices.data.length == 1) {
            $newGlyphCount = 0;
            $i = 0;
            $n = $layout.$runs.$size;
            while ($i < $n) {
                $newGlyphCount = $newGlyphCount + $layout.$runs.$get($i).$glyphs.$size | 0;
                $i = $i + 1 | 0;
            }
            iaagg_BitmapFontCache_requirePageGlyphs($this, 0, $newGlyphCount);
        } else {
            $tempGlyphCount = $this.$tempGlyphCount;
            var$6 = $tempGlyphCount.data;
            $i = 0;
            $n = var$6.length;
            while ($i < $n) {
                var$6[$i] = 0;
                $i = $i + 1 | 0;
            }
            $i = 0;
            $n_0 = $layout.$runs.$size;
            while ($i < $n_0) {
                $glyphs = $layout.$runs.$get($i).$glyphs;
                $ii = 0;
                $nn = $glyphs.$size;
                while ($ii < $nn) {
                    var$11 = $glyphs.$get($ii).$page0;
                    var$6[var$11] = var$6[var$11] + 1 | 0;
                    $ii = $ii + 1 | 0;
                }
                $i = $i + 1 | 0;
            }
            $i = 0;
            while (true) {
                if ($i >= $n)
                    break a;
                iaagg_BitmapFontCache_requirePageGlyphs($this, $i, var$6[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
}
function iaagg_BitmapFontCache_requirePageGlyphs($this, $page, $glyphCount) {
    var $vertexCount, $vertices, $newVertices;
    if ($this.$pageGlyphIndices !== null && $glyphCount > $this.$pageGlyphIndices.data[$page].$items3.data.length)
        $this.$pageGlyphIndices.data[$page].$ensureCapacity2($glyphCount - $this.$pageGlyphIndices.data[$page].$items3.data.length | 0);
    $vertexCount = $this.$idx0.data[$page] + ($glyphCount * 24 | 0) | 0;
    $vertices = $this.$pageVertices.data[$page];
    if ($vertices === null)
        $this.$pageVertices.data[$page] = $rt_createFloatArray($vertexCount);
    else if ($vertices.data.length < $vertexCount) {
        $newVertices = $rt_createFloatArray($vertexCount);
        jl_System_arraycopy($vertices, 0, $newVertices, 0, $this.$idx0.data[$page]);
        $this.$pageVertices.data[$page] = $newVertices;
    }
}
function iaagg_BitmapFontCache_addToCache($this, $layout, $x, $y) {
    var $pageCount, $newPageVertices, $newIdx, $newPageGlyphIndices, $i, $n, $run, $glyphs, $xAdvances, $color, $gx, $gy, $ii, $nn, $glyph;
    $pageCount = $this.$font0.$regions1.$size;
    if ($this.$pageVertices.data.length < $pageCount) {
        $newPageVertices = $rt_createArray($rt_arraycls($rt_floatcls()), $pageCount);
        jl_System_arraycopy($this.$pageVertices, 0, $newPageVertices, 0, $this.$pageVertices.data.length);
        $this.$pageVertices = $newPageVertices;
        $newIdx = $rt_createIntArray($pageCount);
        jl_System_arraycopy($this.$idx0, 0, $newIdx, 0, $this.$idx0.data.length);
        $this.$idx0 = $newIdx;
        $newPageGlyphIndices = $rt_createArray(iaac_IntArray, $pageCount);
        $i = 0;
        if ($this.$pageGlyphIndices !== null) {
            $i = $this.$pageGlyphIndices.data.length;
            jl_System_arraycopy($this.$pageGlyphIndices, 0, $newPageGlyphIndices, 0, $this.$pageGlyphIndices.data.length);
        }
        while ($i < $pageCount) {
            $newPageGlyphIndices.data[$i] = iaac_IntArray__init_0();
            $i = $i + 1 | 0;
        }
        $this.$pageGlyphIndices = $newPageGlyphIndices;
        $this.$tempGlyphCount = $rt_createIntArray($pageCount);
    }
    $this.$layouts.$add1($layout);
    iaagg_BitmapFontCache_requireGlyphs($this, $layout);
    $i = 0;
    $n = $layout.$runs.$size;
    while ($i < $n) {
        $run = $layout.$runs.$get($i);
        $glyphs = $run.$glyphs;
        $xAdvances = $run.$xAdvances;
        $color = $run.$color5.$toFloatBits();
        $gx = $x + $run.$x5;
        $gy = $y + $run.$y5;
        $ii = 0;
        $nn = $glyphs.$size;
        while ($ii < $nn) {
            $glyph = $glyphs.$get($ii);
            $gx = $gx + $xAdvances.$get21($ii);
            iaagg_BitmapFontCache_addGlyph($this, $glyph, $gx, $gy, $color);
            $ii = $ii + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    iaag_Color_$callClinit();
    $this.$currentTint = iaag_Color_whiteFloatBits;
}
function iaagg_BitmapFontCache_addGlyph($this, $glyph, $x, $y, $color) {
    var $scaleX, $scaleY, var$7, var$8, $width, $height, $u, $u2, $v, $v2, $x2, $y2, $page, $idx, var$19, var$20, var$21, $vertices, var$23;
    $scaleX = $this.$font0.$data1.$scaleX1;
    $scaleY = $this.$font0.$data1.$scaleY2;
    var$7 = $x + $glyph.$xoffset * $scaleX;
    var$8 = $y + $glyph.$yoffset * $scaleY;
    $width = $glyph.$width6 * $scaleX;
    $height = $glyph.$height10 * $scaleY;
    $u = $glyph.$u0;
    $u2 = $glyph.$u20;
    $v = $glyph.$v0;
    $v2 = $glyph.$v20;
    if ($this.$integer) {
        var$7 = jl_Math_round0(var$7);
        var$8 = jl_Math_round0(var$8);
        $width = jl_Math_round0($width);
        $height = jl_Math_round0($height);
    }
    $x2 = var$7 + $width;
    $y2 = var$8 + $height;
    $page = $glyph.$page0;
    $idx = $this.$idx0.data[$page];
    var$19 = $this.$idx0.data;
    var$19[$page] = var$19[$page] + 24 | 0;
    if ($this.$pageGlyphIndices !== null) {
        var$20 = $this.$pageGlyphIndices.data[$page];
        var$21 = $this.$glyphCount;
        $this.$glyphCount = var$21 + 1 | 0;
        var$20.$add6(var$21);
    }
    $vertices = $this.$pageVertices.data[$page];
    var$19 = $vertices.data;
    var$23 = $idx + 1 | 0;
    var$19[$idx] = var$7;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = var$8;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $color;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $u;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $v;
    var$23 = var$23 + 1 | 0;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = var$7;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $y2;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $color;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $u;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $v2;
    var$23 = var$21 + 1 | 0;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $x2;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $y2;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $color;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $u2;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $v2;
    var$23 = var$21 + 1 | 0;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $x2;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = var$8;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $color;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $u2;
    var$19[var$23] = $v;
}
function iaagg_BitmapFontCache_setText($this, $layout, $x, $y) {
    $this.$clear();
    $this.$addText($layout, $x, $y);
}
function iaagg_BitmapFontCache_addText($this, $layout, $x, $y) {
    iaagg_BitmapFontCache_addToCache($this, $layout, $x, $y + $this.$font0.$data1.$ascent);
}
function iaagg_BitmapFontCache_getFont($this) {
    return $this.$font0;
}
function iaagg_BitmapFontCache__clinit_() {
    iaagg_BitmapFontCache_tempColor = iaag_Color__init_(1.0, 1.0, 1.0, 1.0);
}
function it_Phases$lambda$null$54$lambda$_13_0() {
    jl_Object.call(this);
    this.$_092 = null;
}
function it_Phases$lambda$null$54$lambda$_13_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$null$54$lambda$_13_0();
    it_Phases$lambda$null$54$lambda$_13_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$null$54$lambda$_13_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_092 = var$1;
}
function it_Phases$lambda$null$54$lambda$_13_0_run(var$0) {
    it_Phases_lambda$null$53(var$0.$_092);
}
function it_Phases$3$lambda$null$9$lambda$_23_0() {
    jl_Object.call(this);
    this.$_093 = 0.0;
}
function it_Phases$3$lambda$null$9$lambda$_23_0__init_(var_0) {
    var var_1 = new it_Phases$3$lambda$null$9$lambda$_23_0();
    it_Phases$3$lambda$null$9$lambda$_23_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$3$lambda$null$9$lambda$_23_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_093 = var$1;
}
function it_Phases$3$lambda$null$9$lambda$_23_0_get(var$0, var$1) {
    it_Phases$3_lambda$null$8(var$0.$_093, var$1);
}
function iaag_Pixmap() {
    var a = this; jl_Object.call(a);
    a.$width11 = 0;
    a.$height11 = 0;
    a.$format1 = null;
    a.$canvas2 = null;
    a.$context0 = null;
    a.$id6 = 0;
    a.$r2 = 0;
    a.$g1 = 0;
    a.$b1 = 0;
    a.$a3 = 0.0;
    a.$color13 = null;
    a.$blending0 = null;
    a.$pixels = null;
}
var iaag_Pixmap_window = null;
var iaag_Pixmap_document = null;
var iaag_Pixmap_pixmaps = null;
var iaag_Pixmap_nextId = 0;
var iaag_Pixmap_clearColor = null;
function iaag_Pixmap_$callClinit() {
    iaag_Pixmap_$callClinit = $rt_eraseClinit(iaag_Pixmap);
    iaag_Pixmap__clinit_();
}
function iaag_Pixmap__init_0(var_0) {
    var var_1 = new iaag_Pixmap();
    iaag_Pixmap__init_1(var_1, var_0);
    return var_1;
}
function iaag_Pixmap__init_(var_0, var_1, var_2) {
    var var_3 = new iaag_Pixmap();
    iaag_Pixmap__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaag_Pixmap__init_1($this, $file) {
    var $teavmFile, $entry, $img, var$5, var$6, var$7, var$8;
    iaag_Pixmap_$callClinit();
    jl_Object__init_0($this);
    $this.$r2 = 255;
    $this.$g1 = 255;
    $this.$b1 = 255;
    $this.$color13 = iaag_Pixmap_make($this.$r2, $this.$g1, $this.$b1, $this.$a3);
    $teavmFile = $file;
    $entry = $teavmFile.$entry0();
    $img = $entry.$imageElem;
    if ($img === null)
        $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(1175)).$append($file.$path0()).$append($rt_s(1176)).$toString()));
    var$5 = $img.width;
    var$6 = $img.height;
    iaag_Pixmap$Format_$callClinit();
    iaag_Pixmap_create($this, var$5, var$6, iaag_Pixmap$Format_RGBA8888);
    var$7 = $this.$context0;
    var$8 = "copy";
    var$7.globalCompositeOperation = var$8;
    $this.$context0.drawImage($img, 0.0, 0.0);
    var$7 = $this.$context0;
    var$8 = "source-over";
    var$7.globalCompositeOperation = var$8;
}
function iaag_Pixmap__init_2($this, $width, $height, $format) {
    iaag_Pixmap_$callClinit();
    jl_Object__init_0($this);
    $this.$r2 = 255;
    $this.$g1 = 255;
    $this.$b1 = 255;
    $this.$color13 = iaag_Pixmap_make($this.$r2, $this.$g1, $this.$b1, $this.$a3);
    iaag_Pixmap_create($this, $width, $height, $format);
}
function iaag_Pixmap_create($this, $width, $height, $format2) {
    var var$4, var$5, var$6, var$7;
    $this.$width11 = $width;
    $this.$height11 = $height;
    iaag_Pixmap$Format_$callClinit();
    $this.$format1 = iaag_Pixmap$Format_RGBA8888;
    $this.$canvas2 = iaag_Pixmap_document.createElement("canvas");
    $this.$canvas2.style.setProperty("display", "none");
    var$4 = iaag_Pixmap_document.body;
    var$5 = $this.$canvas2;
    var$4.appendChild(var$5);
    var$4 = $this.$canvas2;
    var$6 = $width;
    var$4.width = var$6;
    var$6 = $this.$canvas2;
    var$5 = $height;
    var$6.height = var$5;
    $this.$context0 = $this.$canvas2.getContext("2d");
    var$6 = $this.$context0;
    var$5 = "source-over";
    var$6.globalCompositeOperation = var$5;
    var$7 = iaag_Pixmap_nextId;
    iaag_Pixmap_nextId = var$7 + 1 | 0;
    $this.$id6 = var$7;
    iaag_Pixmap_pixmaps.$put(jl_Integer_valueOf0($this.$id6), $this);
}
function iaag_Pixmap_make($r2, $g2, $b2, $a2) {
    iaag_Pixmap_$callClinit();
    return jl_StringBuilder__init_().$append($rt_s(1177)).$append3($r2).$append($rt_s(430)).$append3($g2).$append($rt_s(430)).$append3($b2).$append($rt_s(430)).$append13($a2).$append($rt_s(364)).$toString();
}
function iaag_Pixmap_setBlending($this, $blending) {
    var var$2, $pixmap, var$4, var$5;
    $this.$blending0 = $blending;
    var$2 = iaag_Pixmap_pixmaps.$values6().$iterator();
    while (var$2.$hasNext()) {
        $pixmap = var$2.$next0();
        var$4 = $pixmap.$context0;
        var$5 = "source-over";
        var$4.globalCompositeOperation = var$5;
    }
}
function iaag_Pixmap_getFormat($this) {
    return $this.$format1;
}
function iaag_Pixmap_getGLInternalFormat($this) {
    return 6408;
}
function iaag_Pixmap_getGLFormat($this) {
    return 6408;
}
function iaag_Pixmap_getGLType($this) {
    return 5121;
}
function iaag_Pixmap_getWidth($this) {
    return $this.$width11;
}
function iaag_Pixmap_getHeight($this) {
    return $this.$height11;
}
function iaag_Pixmap_dispose($this) {
    var $pixmap, var$2, var$3;
    $pixmap = iaag_Pixmap_pixmaps.$remove4(jl_Integer_valueOf0($this.$id6));
    if ($pixmap.$canvas2 !== null) {
        var$2 = $pixmap.$canvas2.parentNode;
        var$3 = $pixmap.$canvas2;
        var$2.removeChild(var$3);
    }
}
function iaag_Pixmap_drawPixmap($this, $pixmap, $x, $y, $srcx, $srcy, $srcWidth, $srcHeight) {
    var $image;
    $image = $pixmap.$canvas2;
    iaag_Pixmap_image($this, $image, $srcx, $srcy, $srcWidth, $srcHeight, $x, $y, $srcWidth, $srcHeight);
}
function iaag_Pixmap_drawPixmap0($this, $pixmap, $srcx, $srcy, $srcWidth, $srcHeight, $dstx, $dsty, $dstWidth, $dstHeight) {
    iaag_Pixmap_image($this, $pixmap.$canvas2, $srcx, $srcy, $srcWidth, $srcHeight, $dstx, $dsty, $dstWidth, $dstHeight);
}
function iaag_Pixmap_getPixels($this) {
    var var$1, var$2, var$3;
    if ($this.$pixels === null) {
        var$1 = $this.$context0;
        var$2 = $this.$width11;
        var$3 = $this.$height11;
        $this.$pixels = var$1.getImageData(0.0, 0.0, var$2, var$3).data;
    }
    return jn_ByteBuffer_wrap(iaag_Pixmap_bufferAsArray($this, $this.$pixels.buffer));
}
function iaag_Pixmap_bufferAsArray(var$0, var$1) {
    return $rt_wrapArray($rt_bytecls(), new Int8Array(var$1));
}
function iaag_Pixmap_image($this, $image, $srcX, $srcY, $srcWidth, $srcHeight, $dstX, $dstY, $dstWidth, $dstHeight) {
    var var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, var$19, var$20;
    var$10 = $this.$blending0;
    iaag_Pixmap$Blending_$callClinit();
    if (var$10 === iaag_Pixmap$Blending_None) {
        var$11 = $this.$context0;
        var$10 = $rt_ustr(iaag_Pixmap_clearColor);
        var$11.fillStyle = var$10;
        var$11 = $this.$context0;
        var$10 = $rt_ustr(iaag_Pixmap_clearColor);
        var$11.strokeStyle = var$10;
        var$11 = $this.$context0;
        var$10 = "clear";
        var$11.globalCompositeOperation = var$10;
        $this.$context0.beginPath();
        var$11 = $this.$context0;
        var$12 = $dstX;
        var$13 = $dstY;
        var$14 = $dstWidth;
        var$15 = $dstHeight;
        var$11.rect(var$12, var$13, var$14, var$15);
        iaabte_PixmapEmulator$DrawType_$callClinit();
        iaag_Pixmap_fillOrStrokePath($this, iaabte_PixmapEmulator$DrawType_FILL);
        $this.$context0.closePath();
        var$11 = $this.$context0;
        var$10 = $rt_ustr($this.$color13);
        var$11.fillStyle = var$10;
        var$10 = $this.$context0;
        var$16 = $rt_ustr($this.$color13);
        var$10.strokeStyle = var$16;
        var$16 = $this.$context0;
        var$11 = "source-over";
        var$16.globalCompositeOperation = var$11;
    }
    var$11 = $this.$context0;
    var$12 = $srcX;
    var$13 = $srcY;
    var$14 = $srcWidth;
    var$15 = $srcHeight;
    var$17 = $dstX;
    var$18 = $dstY;
    var$19 = $dstWidth;
    var$20 = $dstHeight;
    var$11.drawImage($image, var$12, var$13, var$14, var$15, var$17, var$18, var$19, var$20);
    $this.$pixels = null;
}
function iaag_Pixmap_fillOrStrokePath($this, $drawType) {
    a: {
        iaabte_PixmapEmulator$1_$callClinit();
        switch (iaabte_PixmapEmulator$1_$SwitchMap$io$anuke$arc$backends$teavm$emu$PixmapEmulator$DrawType.data[jl_Enum_ordinal($drawType)]) {
            case 1:
                break;
            case 2:
                $this.$context0.stroke();
                break a;
            default:
                break a;
        }
        $this.$context0.fill();
    }
}
function iaag_Pixmap__clinit_() {
    iaag_Pixmap_window = window;
    iaag_Pixmap_document = iaag_Pixmap_window.document;
    iaag_Pixmap_pixmaps = ju_HashMap__init_();
    iaag_Pixmap_nextId = 0;
    iaag_Pixmap_clearColor = iaag_Pixmap_make(255, 255, 255, 1.0);
}
function it_Phases$1$lambda$null$16$lambda$_8_0() {
    jl_Object.call(this);
}
function it_Phases$1$lambda$null$16$lambda$_8_0__init_() {
    var var_0 = new it_Phases$1$lambda$null$16$lambda$_8_0();
    it_Phases$1$lambda$null$16$lambda$_8_0__init_0(var_0);
    return var_0;
}
function it_Phases$1$lambda$null$16$lambda$_8_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$1$lambda$null$16$lambda$_8_0_run(var$0) {
    it_Phases$1_lambda$null$15();
}
function it_Phases$lambda$null$14$lambda$_53_0() {
    var a = this; jl_Object.call(a);
    a.$_094 = 0.0;
    a.$_140 = 0;
}
function it_Phases$lambda$null$14$lambda$_53_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$lambda$null$14$lambda$_53_0();
    it_Phases$lambda$null$14$lambda$_53_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$lambda$null$14$lambda$_53_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_094 = var$1;
    var$0.$_140 = var$2;
}
function it_Phases$lambda$null$14$lambda$_53_0_run(var$0) {
    it_Phases_lambda$null$12(var$0.$_094, var$0.$_140);
}
function it_Phases$lambda$null$50$lambda$_17_0() {
    var a = this; jl_Object.call(a);
    a.$_095 = 0.0;
    a.$_141 = 0.0;
}
function it_Phases$lambda$null$50$lambda$_17_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$lambda$null$50$lambda$_17_0();
    it_Phases$lambda$null$50$lambda$_17_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$lambda$null$50$lambda$_17_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_095 = var$1;
    var$0.$_141 = var$2;
}
function it_Phases$lambda$null$50$lambda$_17_0_get(var$0, var$1) {
    it_Phases_lambda$null$49(var$0.$_095, var$0.$_141, var$1);
}
function it_Phases$3$lambda$null$5$lambda$_27_0() {
    var a = this; jl_Object.call(a);
    a.$_096 = 0;
    a.$_142 = 0;
    a.$_211 = 0.0;
}
function it_Phases$3$lambda$null$5$lambda$_27_0__init_(var_0, var_1, var_2) {
    var var_3 = new it_Phases$3$lambda$null$5$lambda$_27_0();
    it_Phases$3$lambda$null$5$lambda$_27_0__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function it_Phases$3$lambda$null$5$lambda$_27_0__init_0(var$0, var$1, var$2, var$3) {
    jl_Object__init_0(var$0);
    var$0.$_096 = var$1;
    var$0.$_142 = var$2;
    var$0.$_211 = var$3;
}
function it_Phases$3$lambda$null$5$lambda$_27_0_get(var$0, var$1) {
    it_Phases$3_lambda$null$4(var$0.$_096, var$0.$_142, var$0.$_211, var$1);
}
function it_Phases$lambda$null$41$lambda$_26_0() {
    jl_Object.call(this);
    this.$_097 = 0.0;
}
function it_Phases$lambda$null$41$lambda$_26_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$null$41$lambda$_26_0();
    it_Phases$lambda$null$41$lambda$_26_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$null$41$lambda$_26_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_097 = var$1;
}
function it_Phases$lambda$null$41$lambda$_26_0_get(var$0, var$1) {
    it_Phases_lambda$null$40(var$0.$_097, var$1);
}
function it_Phases$lambda$null$14$lambda$_53_1() {
    var a = this; jl_Object.call(a);
    a.$_098 = 0.0;
    a.$_143 = 0;
}
function it_Phases$lambda$null$14$lambda$_53_1__init_(var_0, var_1) {
    var var_2 = new it_Phases$lambda$null$14$lambda$_53_1();
    it_Phases$lambda$null$14$lambda$_53_1__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$lambda$null$14$lambda$_53_1__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_098 = var$1;
    var$0.$_143 = var$2;
}
function it_Phases$lambda$null$14$lambda$_53_1_run(var$0) {
    it_Phases_lambda$null$13(var$0.$_098, var$0.$_143);
}
function it_Phases$lambda$null$32$lambda$_35_0() {
    jl_Object.call(this);
    this.$_099 = null;
}
function it_Phases$lambda$null$32$lambda$_35_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$null$32$lambda$_35_0();
    it_Phases$lambda$null$32$lambda$_35_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$null$32$lambda$_35_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_099 = var$1;
}
function it_Phases$lambda$null$32$lambda$_35_0_get(var$0, var$1) {
    var$0.$_099.$shootf(var$1);
}
function iaac_ObjectMap$Keys() {
    iaac_ObjectMap$MapIterator.call(this);
}
function iaac_ObjectMap$Keys__init_(var_0) {
    var var_1 = new iaac_ObjectMap$Keys();
    iaac_ObjectMap$Keys__init_0(var_1, var_0);
    return var_1;
}
function iaac_ObjectMap$Keys__init_0($this, $map) {
    iaac_ObjectMap$MapIterator__init_0($this, $map);
}
function iaac_ObjectMap$Keys_hasNext($this) {
    if ($this.$valid0)
        return $this.$hasNext1;
    $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1178)));
}
function iaac_ObjectMap$Keys_next($this) {
    var $key;
    if (!$this.$hasNext1)
        $rt_throw(ju_NoSuchElementException__init_0());
    if (!$this.$valid0)
        $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1178)));
    $key = $this.$map1.$keyTable0.data[$this.$nextIndex0];
    $this.$currentIndex0 = $this.$nextIndex0;
    $this.$findNextIndex();
    return $key;
}
function iaac_ObjectMap$Keys_iterator($this) {
    return $this;
}
function iaac_ObjectMap$Keys_toArray($this, $array) {
    while ($this.$hasNext1) {
        $array.$add1($this.$next0());
    }
    return $array;
}
function iaac_ObjectMap$Keys_reset($this) {
    iaac_ObjectMap$MapIterator_reset($this);
}
function iaac_ObjectMap$Keys_iterator0($this) {
    return $this.$iterator0();
}
function iaat_TypeLabel$1() {
    jl_Object.call(this);
}
var iaat_TypeLabel$1_$SwitchMap$io$anuke$arc$typelabel$TokenCategory = null;
function iaat_TypeLabel$1_$callClinit() {
    iaat_TypeLabel$1_$callClinit = $rt_eraseClinit(iaat_TypeLabel$1);
    iaat_TypeLabel$1__clinit_();
}
function iaat_TypeLabel$1__clinit_() {
    var $$je;
    iaat_TypeLabel$1_$SwitchMap$io$anuke$arc$typelabel$TokenCategory = $rt_createIntArray(iaat_TokenCategory_values().data.length);
    a: {
        try {
            iaat_TypeLabel$1_$SwitchMap$io$anuke$arc$typelabel$TokenCategory.data[jl_Enum_ordinal(iaat_TokenCategory_SPEED)] = 1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    b: {
        try {
            iaat_TypeLabel$1_$SwitchMap$io$anuke$arc$typelabel$TokenCategory.data[jl_Enum_ordinal(iaat_TokenCategory_WAIT)] = 2;
            break b;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    c: {
        try {
            iaat_TypeLabel$1_$SwitchMap$io$anuke$arc$typelabel$TokenCategory.data[jl_Enum_ordinal(iaat_TokenCategory_SKIP)] = 3;
            break c;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    d: {
        try {
            iaat_TypeLabel$1_$SwitchMap$io$anuke$arc$typelabel$TokenCategory.data[jl_Enum_ordinal(iaat_TokenCategory_EVENT)] = 4;
            break d;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    e: {
        try {
            iaat_TypeLabel$1_$SwitchMap$io$anuke$arc$typelabel$TokenCategory.data[jl_Enum_ordinal(iaat_TokenCategory_EFFECT_START)] = 5;
            break e;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    f: {
        try {
            iaat_TypeLabel$1_$SwitchMap$io$anuke$arc$typelabel$TokenCategory.data[jl_Enum_ordinal(iaat_TokenCategory_EFFECT_END)] = 6;
            break f;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
}
function otcit_DoubleAnalyzer$Result() {
    jl_Object.call(this);
}
function otcit_DoubleAnalyzer$Result__init_() {
    var var_0 = new otcit_DoubleAnalyzer$Result();
    otcit_DoubleAnalyzer$Result__init_0(var_0);
    return var_0;
}
function otcit_DoubleAnalyzer$Result__init_0($this) {
    jl_Object__init_0($this);
}
function i_UI() {
    var a = this; jl_Object.call(a);
    a.$label0 = null;
    a.$image0 = null;
    a.$text2 = null;
    a.$displayName = null;
    a.$textIndex = 0;
    a.$dialogueTime = 0.0;
}
function i_UI__init_() {
    var var_0 = new i_UI();
    i_UI__init_0(var_0);
    return var_0;
}
function i_UI__init_0($this) {
    jl_Object__init_0($this);
    $this.$text2 = iaac_Array__init_0();
    $this.$displayName = $rt_s(58);
}
function i_UI_init($this) {
    var var$1;
    var$1 = iaas_Scene__init_();
    iaa_Core_$callClinit();
    iaa_Core_scene = var$1;
    iaa_Core_input.$addProcessor(iaa_Core_scene);
    iu_Styles_load();
    $this.$image0 = iaasu_Image__init_(iu_Styles_dim);
    $this.$label0 = iaat_TypeLabel__init_($rt_s(58));
    $this.$label0.$setTypingListener(i_UI$1__init_($this));
    $this.$setup();
}
function i_UI_resize($this, $width, $height) {
    iaa_Core_$callClinit();
    iaa_Core_scene.$resize1($width, $height);
}
function i_UI_update($this) {
    ig_Drawf_sort(0);
    if ($this.$label0.$getText0().$length() > 0)
        $this.$dialogueTime = 1.0;
    else
        $this.$dialogueTime = $this.$dialogueTime - iaau_Time_delta() / 30.0;
    iaa_Core_$callClinit();
    iaa_Core_scene.$act1();
    iaa_Core_scene.$draw();
}
function i_UI_getDialogueFace($this) {
    return $this.$image0.$getRegion().$asAtlas().$name11.$contains0($rt_s(1179)) && $this.$label0.$getText0().$length() > 0 ? i_Inferno_boss : !$this.$image0.$getRegion().$asAtlas().$name11.$contains0($rt_s(1180)) && $this.$label0.$getText0().$length() ? null : i_Inferno_player;
}
function i_UI_hasDialogue($this) {
    return $this.$label0.$getText0().$length() <= 0 && $this.$dialogueTime <= 0.0 ? 0 : 1;
}
function i_UI_setup($this) {
    iaa_Core_$callClinit();
    iaa_Core_scene.$table1(i_UI$setup$lambda$_7_0__init_($this));
    iaa_Core_scene.$table1(i_UI$setup$lambda$_7_1__init_());
    iaa_Core_scene.$table1(i_UI$setup$lambda$_7_2__init_());
    iaa_Core_scene.$table1(i_UI$setup$lambda$_7_3__init_());
}
function i_UI_lambda$setup$11($t) {
    $t.$top0().$right();
    $t.$label1(i_UI$lambda$setup$11$lambda$_8_0__init_());
}
function i_UI_lambda$null$10() {
    var var$1;
    var$1 = jl_StringBuilder__init_();
    iaa_Core_$callClinit();
    return var$1.$append3(iaa_Core_graphics.$getFramesPerSecond()).$append($rt_s(1181)).$toString();
}
function i_UI_lambda$setup$9($t) {
    var var$2;
    var$2 = $t.$top0().$right();
    iu_Styles_$callClinit();
    var$2.$table2(iu_Styles_dim, i_UI$lambda$setup$9$lambda$_10_0__init_());
}
function i_UI_lambda$null$8($b) {
    $b.$margin0(8.0).$add4(ig_HealthBar__init_(i_Inferno_boss)).$size10(340.0, 20.0);
}
function i_UI_lambda$setup$7($t) {
    var var$2;
    var$2 = $t.$top0().$left1();
    iu_Styles_$callClinit();
    var$2.$table2(iu_Styles_dim, i_UI$lambda$setup$7$lambda$_12_0__init_());
}
function i_UI_lambda$null$6($b) {
    $b.$margin0(8.0).$add4(ig_HealthBar__init_(i_Inferno_player)).$size10(340.0, 20.0);
}
function i_UI_lambda$setup$5($this, $t) {
    var var$2;
    $t.$bottom();
    iu_Styles_$callClinit();
    var$2 = $t.$table2(iu_Styles_dim, i_UI$lambda$setup$5$lambda$_14_0__init_($this));
    var$2.$width12(600.0);
}
function i_UI_lambda$null$4($this, $c) {
    var var$2;
    $c.$visible3(i_UI$lambda$null$4$lambda$_15_0__init_($this));
    $c.$margin0(14.0).$top0().$left1().$defaults1().$top1().$left2();
    $c.$add4($this.$image0).$size11(128.0).$padRight2(8.0);
    var$2 = $c.$table3(i_UI$lambda$null$4$lambda$_15_1__init_($this));
    var$2.$growX();
    $this.$label0.$setAlignment0(10);
    $this.$label0.$update4(i_UI$lambda$null$4$lambda$_15_2__init_($this));
}
function i_UI_lambda$null$3($this) {
    var var$1, var$2, var$3;
    iaa_Core_$callClinit();
    var$1 = iaa_Core_input;
    iaai_KeyCode_$callClinit();
    if (var$1.$keyTap0(iaai_KeyCode_SPACE)) {
        if (!$this.$label0.$hasEnded())
            $this.$label0.$skipToTheEnd0(0);
        else if ($this.$textIndex >= ($this.$text2.$size - 1 | 0)) {
            var$1 = $this.$image0;
            iu_Styles_$callClinit();
            var$1.$setDrawable(iu_Styles_dim);
            $this.$label0.$setText1($rt_s(58));
        } else {
            var$1 = $this.$label0;
            var$2 = $this.$text2;
            var$3 = $this.$textIndex + 1 | 0;
            $this.$textIndex = var$3;
            var$1.$restart(var$2.$get(var$3));
            $this.$label0.$act0(0.009999999776482582);
        }
    }
}
function i_UI_lambda$null$2($this, $text) {
    var var$2;
    $text.$left1();
    var$2 = $text.$label1(i_UI$lambda$null$2$lambda$_17_0__init_($this));
    iaag_Color_$callClinit();
    var$2.$color14(iaag_Color_coral).$padBottom2(3.0).$left2();
    $text.$row0();
    $text.$add4($this.$label0).$growX().$wrap8();
}
function i_UI_lambda$null$1($this) {
    return $this.$displayName;
}
function i_UI_lambda$null$0($this) {
    return !$this.$label0.$getText0().$length() ? 0 : 1;
}
function i_UI_access$000($x0) {
    return $x0.$image0;
}
function i_UI_access$102($x0, $x1) {
    $x0.$displayName = $x1;
    return $x1;
}
function it_Phases$1$lambda$null$20$lambda$_4_0() {
    jl_Object.call(this);
    this.$_0100 = 0;
}
function it_Phases$1$lambda$null$20$lambda$_4_0__init_(var_0) {
    var var_1 = new it_Phases$1$lambda$null$20$lambda$_4_0();
    it_Phases$1$lambda$null$20$lambda$_4_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$1$lambda$null$20$lambda$_4_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0100 = var$1;
}
function it_Phases$1$lambda$null$20$lambda$_4_0_move(var$0, var$1) {
    return it_Phases$1_lambda$null$19(var$0.$_0100, var$1);
}
function ji_ByteArrayInputStream() {
    var a = this; ji_InputStream.call(a);
    a.$buf2 = null;
    a.$pos0 = 0;
    a.$mark1 = 0;
    a.$count3 = 0;
}
function ji_ByteArrayInputStream__init_0(var_0, var_1, var_2) {
    var var_3 = new ji_ByteArrayInputStream();
    ji_ByteArrayInputStream__init_1(var_3, var_0, var_1, var_2);
    return var_3;
}
function ji_ByteArrayInputStream__init_(var_0) {
    var var_1 = new ji_ByteArrayInputStream();
    ji_ByteArrayInputStream__init_2(var_1, var_0);
    return var_1;
}
function ji_ByteArrayInputStream__init_1($this, $buf, $offset, $length) {
    ji_InputStream__init_0($this);
    $this.$buf2 = $buf;
    $this.$pos0 = $offset;
    $this.$mark1 = $offset;
    $this.$count3 = $offset + $length | 0;
}
function ji_ByteArrayInputStream__init_2($this, $buf) {
    ji_ByteArrayInputStream__init_1($this, $buf, 0, $buf.data.length);
}
function ji_ByteArrayInputStream_read($this) {
    var var$1, var$2, var$3;
    if ($this.$pos0 >= $this.$count3)
        var$1 = (-1);
    else {
        var$2 = $this.$buf2.data;
        var$3 = $this.$pos0;
        $this.$pos0 = var$3 + 1 | 0;
        var$1 = var$2[var$3] & 255;
    }
    return var$1;
}
function ji_ByteArrayInputStream_read0($this, $b, $off, $len) {
    var $bytesToRead, $i, var$6, var$7, var$8, var$9;
    $bytesToRead = jl_Math_min1($len, $this.$count3 - $this.$pos0 | 0);
    $i = 0;
    while ($i < $bytesToRead) {
        var$6 = $b.data;
        var$7 = $off + 1 | 0;
        var$8 = $this.$buf2.data;
        var$9 = $this.$pos0;
        $this.$pos0 = var$9 + 1 | 0;
        var$6[$off] = var$8[var$9];
        $i = $i + 1 | 0;
        $off = var$7;
    }
    if ($bytesToRead <= 0)
        $bytesToRead = (-1);
    return $bytesToRead;
}
function ji_ByteArrayInputStream_available($this) {
    return $this.$count3 - $this.$pos0 | 0;
}
function otci_IntegerUtil() {
    jl_Object.call(this);
}
function otci_IntegerUtil_toUnsignedLogRadixString($value, $radixLog2) {
    var $radix, $mask, $sz, $chars, $pos, $target, var$9, $target_0;
    if (!$value)
        return $rt_s(24);
    $radix = 1 << $radixLog2;
    $mask = $radix - 1 | 0;
    $sz = (((32 - jl_Integer_numberOfLeadingZeros($value) | 0) + $radixLog2 | 0) - 1 | 0) / $radixLog2 | 0;
    $chars = $rt_createCharArray($sz);
    $pos = $rt_imul($sz - 1 | 0, $radixLog2);
    $target = 0;
    while ($pos >= 0) {
        var$9 = $chars.data;
        $target_0 = $target + 1 | 0;
        var$9[$target] = jl_Character_forDigit($value >>> $pos & $mask, $radix);
        $pos = $pos - $radixLog2 | 0;
        $target = $target_0;
    }
    return jl_String__init_($chars);
}
function jur_PossessiveAltQuantifierSet() {
    jur_AltQuantifierSet.call(this);
}
function jur_PossessiveAltQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PossessiveAltQuantifierSet();
    jur_PossessiveAltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PossessiveAltQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_AltQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_PossessiveAltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$getRightBound()) {
        var$4 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$4 >= 1)
            $stringIndex = $stringIndex + var$4 | 0;
    }
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function iaam_Interpolation$ElasticIn() {
    iaam_Interpolation$Elastic.call(this);
}
function iaam_Interpolation$ElasticIn__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new iaam_Interpolation$ElasticIn();
    iaam_Interpolation$ElasticIn__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaam_Interpolation$ElasticIn__init_0($this, $value, $power, $bounces, $scale) {
    iaam_Interpolation$Elastic__init_0($this, $value, $power, $bounces, $scale);
}
function jlr_Method() {
    var a = this; jlr_AccessibleObject.call(a);
    a.$declaringClass0 = null;
    a.$name15 = null;
    a.$flags1 = 0;
    a.$accessLevel0 = 0;
    a.$returnType = null;
    a.$parameterTypes0 = null;
    a.$callable0 = null;
}
function jlr_Method__init_0(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new jlr_Method();
    jlr_Method__init_(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function jlr_Method__init_($this, $declaringClass, $name, $flags, $accessLevel, $returnType, $parameterTypes, $callable) {
    jlr_AccessibleObject__init_0($this);
    $this.$declaringClass0 = $declaringClass;
    $this.$name15 = $name;
    $this.$flags1 = $flags;
    $this.$accessLevel0 = $accessLevel;
    $this.$returnType = $returnType;
    $this.$parameterTypes0 = $parameterTypes;
    $this.$callable0 = $callable;
}
function jlr_Method_getName($this) {
    return $this.$name15;
}
function jlr_Method_getModifiers($this) {
    return otcir_Flags_getModifiers($this.$flags1, $this.$accessLevel0);
}
function jlr_Method_getReturnType($this) {
    return $this.$returnType;
}
function jlr_Method_getParameterTypes($this) {
    return $this.$parameterTypes0.$clone();
}
function jlr_Method_toString($this) {
    var $sb, var$2, var$3, $parameterTypes, var$5, var$6, $i;
    $sb = jl_StringBuilder__init_();
    $sb.$append(jlr_Modifier_toString($this.$getModifiers0()));
    if ($sb.$length() > 0)
        $sb.$append0(32);
    a: {
        var$2 = $sb.$append($this.$getReturnType().$getName()).$append0(32).$append($this.$declaringClass0.$getName()).$append0(46);
        var$3 = $this.$name15;
        var$2.$append(var$3).$append0(40);
        $parameterTypes = $this.$getParameterTypes();
        var$5 = $parameterTypes.data;
        var$6 = var$5.length;
        if (var$6 > 0) {
            $sb.$append(var$5[0].$getName());
            $i = 1;
            while (true) {
                if ($i >= var$6)
                    break a;
                $sb.$append0(44).$append(var$5[$i].$getName());
                $i = $i + 1 | 0;
            }
        }
    }
    $sb.$append0(41);
    return $sb.$toString();
}
function jlr_Method_invoke($this, $obj, $args) {
    var var$3, var$4, $i, $jsArgs, var$7, var$8, $result;
    if ($this.$callable0 === null)
        $rt_throw(jl_IllegalAccessException__init_());
    var$3 = $args.data;
    var$4 = var$3.length;
    if (var$4 != $this.$parameterTypes0.data.length)
        $rt_throw(jl_IllegalArgumentException__init_0());
    if ($this.$flags1 & 512)
        $this.$declaringClass0.$getPlatformClass().$clinit();
    else if (!$this.$declaringClass0.$isInstance($obj))
        $rt_throw(jl_IllegalArgumentException__init_0());
    $i = 0;
    while (true) {
        if ($i >= var$4) {
            $jsArgs = $args.data;
            var$7 = $this.$callable0;
            var$8 = $obj;
            $result = var$7.call(var$8, $jsArgs);
            return $result;
        }
        if (!$this.$parameterTypes0.data[$i].$isPrimitive() && var$3[$i] !== null) {
            var$7 = $this.$parameterTypes0.data[$i];
            var$8 = var$3[$i];
            if (!var$7.$isInstance(var$8))
                $rt_throw(jl_IllegalArgumentException__init_0());
        }
        if ($this.$parameterTypes0.data[$i].$isPrimitive() && var$3[$i] === null)
            break;
        $i = $i + 1 | 0;
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
}
function it_Phases$4$lambda$null$10$lambda$_7_0() {
    jl_Object.call(this);
}
function it_Phases$4$lambda$null$10$lambda$_7_0__init_() {
    var var_0 = new it_Phases$4$lambda$null$10$lambda$_7_0();
    it_Phases$4$lambda$null$10$lambda$_7_0__init_0(var_0);
    return var_0;
}
function it_Phases$4$lambda$null$10$lambda$_7_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$4$lambda$null$10$lambda$_7_0_get(var$0, var$1) {
    it_Phases$4_lambda$null$9(var$1);
}
function iaagg_SpriteBatch() {
    var a = this; jl_Object.call(a);
    a.$mesh = null;
    a.$vertices1 = null;
    a.$idx1 = 0;
    a.$lastTexture = null;
    a.$invTexWidth = 0.0;
    a.$invTexHeight = 0.0;
    a.$apply2 = 0;
    a.$transformMatrix = null;
    a.$projectionMatrix = null;
    a.$combinedMatrix = null;
    a.$blending1 = null;
    a.$shader2 = null;
    a.$customShader = null;
    a.$ownsShader = 0;
    a.$color15 = null;
    a.$colorPacked = 0.0;
    a.$mixColor = null;
    a.$mixColorPacked = 0.0;
    a.$renderCalls = 0;
    a.$totalRenderCalls = 0;
    a.$maxSpritesInBatch = 0;
}
function iaagg_SpriteBatch__init_() {
    var var_0 = new iaagg_SpriteBatch();
    iaagg_SpriteBatch__init_0(var_0);
    return var_0;
}
function iaagg_SpriteBatch__init_1(var_0) {
    var var_1 = new iaagg_SpriteBatch();
    iaagg_SpriteBatch__init_2(var_1, var_0);
    return var_1;
}
function iaagg_SpriteBatch__init_3(var_0, var_1) {
    var var_2 = new iaagg_SpriteBatch();
    iaagg_SpriteBatch__init_4(var_2, var_0, var_1);
    return var_2;
}
function iaagg_SpriteBatch__init_0($this) {
    iaagg_SpriteBatch__init_4($this, 4096, null);
}
function iaagg_SpriteBatch__init_2($this, $size) {
    iaagg_SpriteBatch__init_4($this, $size, null);
}
function iaagg_SpriteBatch__init_4($this, $size, $defaultShader) {
    var var$3, $vertexDataType, var$5, var$6, var$7, var$8, var$9, $indices, $j, $i, var$13, var$14;
    jl_Object__init_0($this);
    $this.$idx1 = 0;
    $this.$lastTexture = null;
    $this.$invTexWidth = 0.0;
    $this.$invTexHeight = 0.0;
    $this.$transformMatrix = iaam_Matrix3__init_();
    $this.$projectionMatrix = iaam_Matrix3__init_();
    $this.$combinedMatrix = iaam_Matrix3__init_();
    iaag_Blending_$callClinit();
    $this.$blending1 = iaag_Blending_normal;
    $this.$customShader = null;
    $this.$color15 = iaag_Color__init_(1.0, 1.0, 1.0, 1.0);
    $this.$colorPacked = iaag_Color_whiteFloatBits;
    $this.$mixColor = iaag_Color_clear;
    $this.$mixColorPacked = iaag_Color_clearFloatBits;
    $this.$renderCalls = 0;
    $this.$totalRenderCalls = 0;
    $this.$maxSpritesInBatch = 0;
    if ($size > 8191)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1182)).$append3($size).$toString()));
    var$3 = $this.$projectionMatrix;
    iaa_Core_$callClinit();
    var$3.$setOrtho(0.0, 0.0, iaa_Core_graphics.$getWidth0(), iaa_Core_graphics.$getHeight0());
    if ($size <= 0) {
        $this.$vertices1 = $rt_createFloatArray(0);
        $this.$shader2 = null;
    } else {
        if (iaa_Core_gl30 === null) {
            iaag_Mesh$VertexDataType_$callClinit();
            $vertexDataType = iaag_Mesh$VertexDataType_VertexArray;
        } else {
            iaag_Mesh$VertexDataType_$callClinit();
            $vertexDataType = iaag_Mesh$VertexDataType_VertexBufferObjectWithVAO;
        }
        var$5 = new iaag_Mesh;
        var$6 = $size * 4 | 0;
        var$7 = $size * 6 | 0;
        var$8 = $rt_createArray(iaag_VertexAttribute, 4);
        var$9 = var$8.data;
        var$9[0] = iaag_VertexAttribute__init_(1, 2, $rt_s(575));
        var$9[1] = iaag_VertexAttribute__init_(4, 4, $rt_s(1183));
        var$9[2] = iaag_VertexAttribute__init_(16, 2, $rt_s(576));
        var$9[3] = iaag_VertexAttribute__init_(4, 4, $rt_s(1184));
        iaag_Mesh__init_0(var$5, $vertexDataType, 0, var$6, var$7, var$8);
        $this.$mesh = var$5;
        $this.$vertices1 = $rt_createFloatArray($size * 24 | 0);
        $indices = $rt_createShortArray(var$7);
        $j = 0;
        $i = 0;
        while ($i < var$7) {
            var$8 = $indices.data;
            var$8[$i] = $j;
            var$8[$i + 1 | 0] = ($j + 1 | 0) << 16 >> 16;
            var$13 = $i + 2 | 0;
            var$14 = ($j + 2 | 0) << 16 >> 16;
            var$8[var$13] = var$14;
            var$8[$i + 3 | 0] = var$14;
            var$8[$i + 4 | 0] = ($j + 3 | 0) << 16 >> 16;
            var$8[$i + 5 | 0] = $j;
            $i = $i + 6 | 0;
            $j = ($j + 4 | 0) << 16 >> 16;
        }
        $this.$mesh.$setIndices($indices);
        if ($defaultShader !== null)
            $this.$shader2 = $defaultShader;
        else {
            $this.$shader2 = iaagg_BatchShader_create();
            $this.$ownsShader = 1;
        }
    }
}
function iaagg_SpriteBatch_setColor($this, $tint) {
    $this.$color15.$set($tint);
    $this.$colorPacked = $tint.$toFloatBits();
}
function iaagg_SpriteBatch_setColor0($this, $r, $g, $b, $a) {
    $this.$color15.$set3($r, $g, $b, $a);
    $this.$colorPacked = $this.$color15.$toFloatBits();
}
function iaagg_SpriteBatch_getColor($this) {
    return $this.$color15;
}
function iaagg_SpriteBatch_setPackedColor($this, $packedColor) {
    iaag_Color_abgr8888ToColor($this.$color15, $packedColor);
    $this.$colorPacked = $packedColor;
}
function iaagg_SpriteBatch_getPackedColor($this) {
    return $this.$colorPacked;
}
function iaagg_SpriteBatch_setMixColor($this, $r, $g, $b, $a) {
    $this.$mixColor.$set3($r, $g, $b, $a);
    $this.$mixColorPacked = $this.$mixColor.$toFloatBits();
}
function iaagg_SpriteBatch_setPackedMixColor($this, $packedColor) {
    iaag_Color_abgr8888ToColor($this.$mixColor, $packedColor);
    $this.$mixColorPacked = $packedColor;
}
function iaagg_SpriteBatch_getPackedMixColor($this) {
    return $this.$mixColorPacked;
}
function iaagg_SpriteBatch_draw($this, $texture, $spriteVertices, $offset, $count) {
    var $verticesLength, var$6, $copyCount, var$8;
    $verticesLength = $this.$vertices1.data.length;
    if ($texture !== $this.$lastTexture) {
        $this.$switchTexture($texture);
        var$6 = $verticesLength;
    } else {
        var$6 = $verticesLength - $this.$idx1 | 0;
        if (!var$6) {
            $this.$flush0();
            var$6 = $verticesLength;
        }
    }
    $copyCount = jl_Math_min1(var$6, $count);
    jl_System_arraycopy($spriteVertices, $offset, $this.$vertices1, $this.$idx1, $copyCount);
    $this.$idx1 = $this.$idx1 + $copyCount | 0;
    var$8 = $count - $copyCount | 0;
    while (var$8 > 0) {
        $offset = $offset + $copyCount | 0;
        $this.$flush0();
        $copyCount = jl_Math_min1($verticesLength, var$8);
        jl_System_arraycopy($spriteVertices, $offset, $this.$vertices1, 0, $copyCount);
        $this.$idx1 = $this.$idx1 + $copyCount | 0;
        var$8 = var$8 - $copyCount | 0;
    }
}
function iaagg_SpriteBatch_draw0($this, $region, $x, $y, $width, $height) {
    $this.$draw2($region, $x, $y, 0.0, 0.0, $width, $height, 0.0);
}
function iaagg_SpriteBatch_draw1($this, $region, $x, $y, $originX, $originY, $width, $height, $rotation) {
    var $texture, $fx2, $fy2, $u, $v, $u2, $v2, $color, $mixColor, $idx, $worldOriginX, $worldOriginY, $fx, $fy, $cos, $sin, var$25, $x1, var$27, $y1, var$29, $x2, $y2, $x3, $y3, $x4, $y4, var$36, var$37, var$38, var$39, var$40;
    $texture = $region.$texture0;
    if ($texture !== $this.$lastTexture)
        $this.$switchTexture($texture);
    else if ($this.$idx1 == $this.$vertices1.data.length)
        $this.$flush0();
    if (iaam_Mathf_zero($rotation)) {
        $fx2 = $x + $width;
        $fy2 = $y + $height;
        $u = $region.$u;
        $v = $region.$v2;
        $u2 = $region.$u2;
        $v2 = $region.$v;
        $color = $this.$colorPacked;
        $mixColor = $this.$mixColorPacked;
        $idx = $this.$idx1;
        $this.$vertices1.data[$idx] = $x;
        $this.$vertices1.data[$idx + 1 | 0] = $y;
        $this.$vertices1.data[$idx + 2 | 0] = $color;
        $this.$vertices1.data[$idx + 3 | 0] = $u;
        $this.$vertices1.data[$idx + 4 | 0] = $v;
        $this.$vertices1.data[$idx + 5 | 0] = $mixColor;
        $this.$vertices1.data[$idx + 6 | 0] = $x;
        $this.$vertices1.data[$idx + 7 | 0] = $fy2;
        $this.$vertices1.data[$idx + 8 | 0] = $color;
        $this.$vertices1.data[$idx + 9 | 0] = $u;
        $this.$vertices1.data[$idx + 10 | 0] = $v2;
        $this.$vertices1.data[$idx + 11 | 0] = $mixColor;
        $this.$vertices1.data[$idx + 12 | 0] = $fx2;
        $this.$vertices1.data[$idx + 13 | 0] = $fy2;
        $this.$vertices1.data[$idx + 14 | 0] = $color;
        $this.$vertices1.data[$idx + 15 | 0] = $u2;
        $this.$vertices1.data[$idx + 16 | 0] = $v2;
        $this.$vertices1.data[$idx + 17 | 0] = $mixColor;
        $this.$vertices1.data[$idx + 18 | 0] = $fx2;
        $this.$vertices1.data[$idx + 19 | 0] = $y;
        $this.$vertices1.data[$idx + 20 | 0] = $color;
        $this.$vertices1.data[$idx + 21 | 0] = $u2;
        $this.$vertices1.data[$idx + 22 | 0] = $v;
        $this.$vertices1.data[$idx + 23 | 0] = $mixColor;
        $this.$idx1 = $idx + 24 | 0;
    } else {
        $worldOriginX = $x + $originX;
        $worldOriginY = $y + $originY;
        $fx =  -$originX;
        $fy =  -$originY;
        $fx2 = $width - $originX;
        $fy2 = $height - $originY;
        $cos = iaam_Mathf_cosDeg($rotation);
        $sin = iaam_Mathf_sinDeg($rotation);
        var$25 = $cos * $fx;
        $x1 = var$25 - $sin * $fy;
        var$27 = $sin * $fx;
        $y1 = var$27 + $cos * $fy;
        var$29 = $sin * $fy2;
        $x2 = var$25 - var$29;
        var$25 = $cos * $fy2;
        $y2 = var$27 + var$25;
        $x3 = $cos * $fx2 - var$29;
        $y3 = $sin * $fx2 + var$25;
        $x4 = $x1 + $x3 - $x2;
        $y4 = $y3 - ($y2 - $y1);
        var$25 = $x1 + $worldOriginX;
        var$27 = $y1 + $worldOriginY;
        var$29 = $x2 + $worldOriginX;
        var$36 = $y2 + $worldOriginY;
        var$37 = $x3 + $worldOriginX;
        var$38 = $y3 + $worldOriginY;
        var$39 = $x4 + $worldOriginX;
        var$40 = $y4 + $worldOriginY;
        $u = $region.$u;
        $v = $region.$v2;
        $u2 = $region.$u2;
        $v2 = $region.$v;
        $color = $this.$colorPacked;
        $mixColor = $this.$mixColorPacked;
        $idx = $this.$idx1;
        $this.$vertices1.data[$idx] = var$25;
        $this.$vertices1.data[$idx + 1 | 0] = var$27;
        $this.$vertices1.data[$idx + 2 | 0] = $color;
        $this.$vertices1.data[$idx + 3 | 0] = $u;
        $this.$vertices1.data[$idx + 4 | 0] = $v;
        $this.$vertices1.data[$idx + 5 | 0] = $mixColor;
        $this.$vertices1.data[$idx + 6 | 0] = var$29;
        $this.$vertices1.data[$idx + 7 | 0] = var$36;
        $this.$vertices1.data[$idx + 8 | 0] = $color;
        $this.$vertices1.data[$idx + 9 | 0] = $u;
        $this.$vertices1.data[$idx + 10 | 0] = $v2;
        $this.$vertices1.data[$idx + 11 | 0] = $mixColor;
        $this.$vertices1.data[$idx + 12 | 0] = var$37;
        $this.$vertices1.data[$idx + 13 | 0] = var$38;
        $this.$vertices1.data[$idx + 14 | 0] = $color;
        $this.$vertices1.data[$idx + 15 | 0] = $u2;
        $this.$vertices1.data[$idx + 16 | 0] = $v2;
        $this.$vertices1.data[$idx + 17 | 0] = $mixColor;
        $this.$vertices1.data[$idx + 18 | 0] = var$39;
        $this.$vertices1.data[$idx + 19 | 0] = var$40;
        $this.$vertices1.data[$idx + 20 | 0] = $color;
        $this.$vertices1.data[$idx + 21 | 0] = $u2;
        $this.$vertices1.data[$idx + 22 | 0] = $v;
        $this.$vertices1.data[$idx + 23 | 0] = $mixColor;
        $this.$idx1 = $idx + 24 | 0;
    }
}
function iaagg_SpriteBatch_flush($this) {
    var $spritesInBatch, $count, var$3, $mesh;
    if (!$this.$idx1)
        return;
    $this.$renderCalls = 0;
    $this.$getShader().$begin();
    iaagg_SpriteBatch_setupMatrices($this);
    if ($this.$customShader !== null && $this.$apply2)
        $this.$customShader.$apply3();
    $this.$renderCalls = $this.$renderCalls + 1 | 0;
    $this.$totalRenderCalls = $this.$totalRenderCalls + 1 | 0;
    $spritesInBatch = $this.$idx1 / 24 | 0;
    if ($spritesInBatch > $this.$maxSpritesInBatch)
        $this.$maxSpritesInBatch = $spritesInBatch;
    $count = $spritesInBatch * 6 | 0;
    var$3 = $this.$blending1;
    iaag_Blending_$callClinit();
    if (var$3 === iaag_Blending_disabled) {
        iaa_Core_$callClinit();
        iaa_Core_gl.$glDisable(3042);
    } else {
        iaa_Core_$callClinit();
        iaa_Core_gl.$glEnable(3042);
        iaa_Core_gl.$glBlendFuncSeparate($this.$blending1.$src, $this.$blending1.$dst1, $this.$blending1.$src, $this.$blending1.$dst1);
    }
    $this.$lastTexture.$bind();
    $mesh = $this.$mesh;
    $mesh.$setVertices0($this.$vertices1, 0, $this.$idx1);
    $mesh.$getIndicesBuffer().$position(0);
    $mesh.$getIndicesBuffer().$limit0($count);
    $mesh.$render1($this.$getShader(), 4, 0, $count);
    $this.$idx1 = 0;
    $this.$getShader().$end();
}
function iaagg_SpriteBatch_setBlending($this, $blending) {
    $this.$flush0();
    $this.$blending1 = $blending;
}
function iaagg_SpriteBatch_getProjection($this) {
    return $this.$projectionMatrix;
}
function iaagg_SpriteBatch_getTransform($this) {
    return $this.$transformMatrix;
}
function iaagg_SpriteBatch_setProjection($this, $projection) {
    $this.$flush0();
    $this.$projectionMatrix.$set1($projection);
}
function iaagg_SpriteBatch_setTransform($this, $transform) {
    $this.$flush0();
    $this.$transformMatrix.$set1($transform);
}
function iaagg_SpriteBatch_setupMatrices($this) {
    $this.$combinedMatrix.$set1($this.$projectionMatrix).$mul3($this.$transformMatrix);
    $this.$getShader().$setUniformMatrix4($rt_s(1185), iaagg_BatchShader_copyTransform($this.$combinedMatrix));
    $this.$getShader().$setUniformi($rt_s(1186), 0);
}
function iaagg_SpriteBatch_switchTexture($this, $texture) {
    $this.$flush0();
    $this.$lastTexture = $texture;
    $this.$invTexWidth = 1.0 / $texture.$getWidth0();
    $this.$invTexHeight = 1.0 / $texture.$getHeight0();
}
function iaagg_SpriteBatch_setShader($this, $shader) {
    $this.$setShader($shader, 1);
}
function iaagg_SpriteBatch_setShader0($this, $shader, $apply) {
    $this.$flush0();
    $this.$customShader = $shader;
    $this.$apply2 = $apply;
}
function iaagg_SpriteBatch_getShader($this) {
    if ($this.$customShader !== null)
        return $this.$customShader;
    return $this.$shader2;
}
function ig_QueueBatch() {
    var a = this; iaagg_SpriteBatch.call(a);
    a.$requests = null;
    a.$flushing = 0;
}
function ig_QueueBatch__init_() {
    var var_0 = new ig_QueueBatch();
    ig_QueueBatch__init_0(var_0);
    return var_0;
}
function ig_QueueBatch__init_0($this) {
    iaagg_SpriteBatch__init_0($this);
    $this.$requests = iaac_Array__init_0();
}
function ig_QueueBatch_blend($this, $blending) {
    $this.$blending1 = $blending;
}
function ig_QueueBatch_draw($this, $texture, $spriteVertices, $offset, $count) {
    $rt_throw(jl_UnsupportedOperationException__init_());
}
function ig_QueueBatch_draw0($this, $region, $x, $y, $originX, $originY, $width, $height, $rotation) {
    var $req;
    $req = iaaup_Pools_obtain($rt_cls(ig_DrawRequest), ig_QueueBatch$draw$lambda$_3_0__init_());
    $req.$x7 = $x;
    $req.$y7 = $y;
    $req.$originX1 = $originX;
    $req.$originY1 = $originY;
    $req.$width10 = $width;
    $req.$height9 = $height;
    $req.$color8 = $this.$colorPacked;
    $req.$rotation3 = $rotation;
    $req.$region1 = $region;
    $req.$blendColor = $this.$mixColorPacked;
    $this.$requests.$add1($req);
}
function ig_QueueBatch_flush($this) {
    var var$1, $req;
    if (!$this.$flushing && !$this.$requests.$isEmpty()) {
        $this.$flushing = 1;
        $this.$requests.$sort3();
        var$1 = $this.$requests.$iterator();
        while (var$1.$hasNext()) {
            $req = var$1.$next0();
            $this.$colorPacked = $req.$color8;
            $this.$mixColorPacked = $req.$blendColor;
            iaagg_SpriteBatch_draw1($this, $req.$region1, $req.$x7, $req.$y7, $req.$originX1, $req.$originY1, $req.$width10, $req.$height9, $req.$rotation3);
        }
        iaaup_Pools_freeAll($this.$requests);
        $this.$requests.$clear();
        $this.$flushing = 0;
    }
    iaagg_SpriteBatch_flush($this);
}
function iaau_Interval() {
    jl_Object.call(this);
    this.$times = null;
}
function iaau_Interval__init_(var_0) {
    var var_1 = new iaau_Interval();
    iaau_Interval__init_1(var_1, var_0);
    return var_1;
}
function iaau_Interval__init_0() {
    var var_0 = new iaau_Interval();
    iaau_Interval__init_2(var_0);
    return var_0;
}
function iaau_Interval__init_1($this, $capacity) {
    jl_Object__init_0($this);
    $this.$times = $rt_createFloatArray($capacity);
}
function iaau_Interval__init_2($this) {
    iaau_Interval__init_1($this, 1);
}
function iaau_Interval_get($this, $time) {
    return $this.$get4(0, $time);
}
function iaau_Interval_get0($this, $id, $time) {
    var $got;
    if ($id < $this.$times.data.length) {
        $got = $this.$check1($id, $time);
        if ($got)
            $this.$times.data[$id] = iaau_Time_time();
        return $got;
    }
    $rt_throw(jl_RuntimeException__init_(jl_StringBuilder__init_().$append($rt_s(1187)).$append3($this.$times.data.length).$append($rt_s(1188)).$toString()));
}
function iaau_Interval_check($this, $id, $time) {
    return iaau_Time_time() - $this.$times.data[$id] < $time && iaau_Time_time() >= $this.$times.data[$id] ? 0 : 1;
}
function iaau_Interval_clear($this) {
    ju_Arrays_fill($this.$times, 0.0);
}
function iaau_Interval_getTimes($this) {
    return $this.$times;
}
function ju_Objects() {
    jl_Object.call(this);
}
function ju_Objects_equals($a, $b) {
    if ($a === $b)
        return 1;
    return $a !== null ? $a.$equals($b) : $b !== null ? 0 : 1;
}
function iaam_Quaternion() {
    var a = this; jl_Object.call(a);
    a.$x10 = 0.0;
    a.$y10 = 0.0;
    a.$z6 = 0.0;
    a.$w1 = 0.0;
}
var iaam_Quaternion_tmp1 = null;
var iaam_Quaternion_tmp2 = null;
function iaam_Quaternion_$callClinit() {
    iaam_Quaternion_$callClinit = $rt_eraseClinit(iaam_Quaternion);
    iaam_Quaternion__clinit_();
}
function iaam_Quaternion__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new iaam_Quaternion();
    iaam_Quaternion__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaam_Quaternion__init_1() {
    var var_0 = new iaam_Quaternion();
    iaam_Quaternion__init_2(var_0);
    return var_0;
}
function iaam_Quaternion__init_0($this, $x, $y, $z, $w) {
    iaam_Quaternion_$callClinit();
    jl_Object__init_0($this);
    $this.$set22($x, $y, $z, $w);
}
function iaam_Quaternion__init_2($this) {
    iaam_Quaternion_$callClinit();
    jl_Object__init_0($this);
    $this.$idt0();
}
function iaam_Quaternion_set($this, $x, $y, $z, $w) {
    $this.$x10 = $x;
    $this.$y10 = $y;
    $this.$z6 = $z;
    $this.$w1 = $w;
    return $this;
}
function iaam_Quaternion_idt($this) {
    return $this.$set22(0.0, 0.0, 0.0, 1.0);
}
function iaam_Quaternion__clinit_() {
    iaam_Quaternion_tmp1 = iaam_Quaternion__init_(0.0, 0.0, 0.0, 0.0);
    iaam_Quaternion_tmp2 = iaam_Quaternion__init_(0.0, 0.0, 0.0, 0.0);
}
function iaagg_GlyphLayout$setText$lambda$_6_1() {
    jl_Object.call(this);
}
function iaagg_GlyphLayout$setText$lambda$_6_1__init_() {
    var var_0 = new iaagg_GlyphLayout$setText$lambda$_6_1();
    iaagg_GlyphLayout$setText$lambda$_6_1__init_0(var_0);
    return var_0;
}
function iaagg_GlyphLayout$setText$lambda$_6_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaagg_GlyphLayout$setText$lambda$_6_1_get(var$0) {
    return iaagg_GlyphLayout$setText$lambda$_6_1_get0(var$0);
}
function iaagg_GlyphLayout$setText$lambda$_6_1_get0(var$0) {
    return iaag_Color__init_0();
}
function iaat_InternalToken() {
    var a = this; jl_Enum.call(a);
    a.$name16 = null;
    a.$category1 = null;
}
var iaat_InternalToken_WAIT = null;
var iaat_InternalToken_SPEED = null;
var iaat_InternalToken_SLOWER = null;
var iaat_InternalToken_SLOW = null;
var iaat_InternalToken_NORMAL = null;
var iaat_InternalToken_FAST = null;
var iaat_InternalToken_FASTER = null;
var iaat_InternalToken_COLOR = null;
var iaat_InternalToken_CLEARCOLOR = null;
var iaat_InternalToken_ENDCOLOR = null;
var iaat_InternalToken_VAR = null;
var iaat_InternalToken_EVENT = null;
var iaat_InternalToken_RESET = null;
var iaat_InternalToken_SKIP = null;
var iaat_InternalToken_$VALUES = null;
function iaat_InternalToken_$callClinit() {
    iaat_InternalToken_$callClinit = $rt_eraseClinit(iaat_InternalToken);
    iaat_InternalToken__clinit_();
}
function iaat_InternalToken__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new iaat_InternalToken();
    iaat_InternalToken__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaat_InternalToken_values() {
    iaat_InternalToken_$callClinit();
    return iaat_InternalToken_$VALUES.$clone();
}
function iaat_InternalToken__init_0($this, var$1, var$2, $name, $category) {
    iaat_InternalToken_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
    $this.$name16 = $name;
    $this.$category1 = $category;
}
function iaat_InternalToken_fromName($name) {
    var var$2, var$3, var$4, $token;
    iaat_InternalToken_$callClinit();
    a: {
        if ($name !== null) {
            var$2 = iaat_InternalToken_values().data;
            var$3 = var$2.length;
            var$4 = 0;
            while (true) {
                if (var$4 >= var$3)
                    break a;
                $token = var$2[var$4];
                if ($name.$equalsIgnoreCase($token.$name16))
                    break;
                var$4 = var$4 + 1 | 0;
            }
            return $token;
        }
    }
    return null;
}
function iaat_InternalToken__clinit_() {
    var var$1, var$2, var$3;
    var$1 = new iaat_InternalToken;
    iaat_TokenCategory_$callClinit();
    iaat_InternalToken__init_0(var$1, $rt_s(541), 0, $rt_s(541), iaat_TokenCategory_WAIT);
    iaat_InternalToken_WAIT = var$1;
    iaat_InternalToken_SPEED = iaat_InternalToken__init_($rt_s(542), 1, $rt_s(542), iaat_TokenCategory_SPEED);
    iaat_InternalToken_SLOWER = iaat_InternalToken__init_($rt_s(1189), 2, $rt_s(1189), iaat_TokenCategory_SPEED);
    iaat_InternalToken_SLOW = iaat_InternalToken__init_($rt_s(1190), 3, $rt_s(1190), iaat_TokenCategory_SPEED);
    iaat_InternalToken_NORMAL = iaat_InternalToken__init_($rt_s(1191), 4, $rt_s(1191), iaat_TokenCategory_SPEED);
    iaat_InternalToken_FAST = iaat_InternalToken__init_($rt_s(1192), 5, $rt_s(1192), iaat_TokenCategory_SPEED);
    iaat_InternalToken_FASTER = iaat_InternalToken__init_($rt_s(1193), 6, $rt_s(1193), iaat_TokenCategory_SPEED);
    iaat_InternalToken_COLOR = iaat_InternalToken__init_($rt_s(543), 7, $rt_s(543), iaat_TokenCategory_COLOR);
    iaat_InternalToken_CLEARCOLOR = iaat_InternalToken__init_($rt_s(1194), 8, $rt_s(1194), iaat_TokenCategory_COLOR);
    iaat_InternalToken_ENDCOLOR = iaat_InternalToken__init_($rt_s(1195), 9, $rt_s(1195), iaat_TokenCategory_COLOR);
    iaat_InternalToken_VAR = iaat_InternalToken__init_($rt_s(1196), 10, $rt_s(1196), iaat_TokenCategory_VARIABLE);
    iaat_InternalToken_EVENT = iaat_InternalToken__init_($rt_s(545), 11, $rt_s(545), iaat_TokenCategory_EVENT);
    iaat_InternalToken_RESET = iaat_InternalToken__init_($rt_s(546), 12, $rt_s(546), iaat_TokenCategory_RESET);
    iaat_InternalToken_SKIP = iaat_InternalToken__init_($rt_s(547), 13, $rt_s(547), iaat_TokenCategory_SKIP);
    var$2 = $rt_createArray(iaat_InternalToken, 14);
    var$3 = var$2.data;
    var$3[0] = iaat_InternalToken_WAIT;
    var$3[1] = iaat_InternalToken_SPEED;
    var$3[2] = iaat_InternalToken_SLOWER;
    var$3[3] = iaat_InternalToken_SLOW;
    var$3[4] = iaat_InternalToken_NORMAL;
    var$3[5] = iaat_InternalToken_FAST;
    var$3[6] = iaat_InternalToken_FASTER;
    var$3[7] = iaat_InternalToken_COLOR;
    var$3[8] = iaat_InternalToken_CLEARCOLOR;
    var$3[9] = iaat_InternalToken_ENDCOLOR;
    var$3[10] = iaat_InternalToken_VAR;
    var$3[11] = iaat_InternalToken_EVENT;
    var$3[12] = iaat_InternalToken_RESET;
    var$3[13] = iaat_InternalToken_SKIP;
    iaat_InternalToken_$VALUES = var$2;
}
function jur_SequenceSet() {
    var a = this; jur_LeafSet.call(a);
    a.$string3 = null;
    a.$leftToRight = null;
    a.$rightToLeft = null;
}
function jur_SequenceSet__init_(var_0) {
    var var_1 = new jur_SequenceSet();
    jur_SequenceSet__init_0(var_1, var_0);
    return var_1;
}
function jur_SequenceSet__init_0($this, $substring) {
    var $j;
    jur_LeafSet__init_2($this);
    $this.$string3 = $substring.$toString();
    $this.$charCount = $substring.$length();
    $this.$leftToRight = jur_SequenceSet$IntHash__init_($this.$charCount);
    $this.$rightToLeft = jur_SequenceSet$IntHash__init_($this.$charCount);
    $j = 0;
    while ($j < ($this.$charCount - 1 | 0)) {
        $this.$leftToRight.$put14($this.$string3.$charAt($j), ($this.$charCount - $j | 0) - 1 | 0);
        $this.$rightToLeft.$put14($this.$string3.$charAt(($this.$charCount - $j | 0) - 1 | 0), ($this.$charCount - $j | 0) - 1 | 0);
        $j = $j + 1 | 0;
    }
}
function jur_SequenceSet_accepts($this, $strIndex, $testString) {
    return !$this.$startsWith1($testString, $strIndex) ? (-1) : $this.$charCount;
}
function jur_SequenceSet_find($this, $strIndex, $testString, $matchResult) {
    var $strLength, var$5;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex > $strLength)
            return (-1);
        var$5 = $this.$indexOf5($testString, $strIndex, $strLength);
        if (var$5 < 0)
            return (-1);
        if ($this.$next.$matches(var$5 + $this.$charCount | 0, $testString, $matchResult) >= 0)
            break;
        $strIndex = var$5 + 1 | 0;
    }
    return var$5;
}
function jur_SequenceSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var var$5;
    while (true) {
        if ($lastIndex < $strIndex)
            return (-1);
        var$5 = $this.$lastIndexOf3($testString, $strIndex, $lastIndex);
        if (var$5 < 0)
            return (-1);
        if ($this.$next.$matches(var$5 + $this.$charCount | 0, $testString, $matchResult) >= 0)
            break;
        $lastIndex = var$5 + (-1) | 0;
    }
    return var$5;
}
function jur_SequenceSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(1197)).$append($this.$string3).$toString();
}
function jur_SequenceSet_first($this, $set) {
    var var$2, var$3, var$4, var$5, var$6;
    if ($set instanceof jur_CharSet)
        return $set.$getChar() != $this.$string3.$charAt(0) ? 0 : 1;
    if ($set instanceof jur_RangeSet)
        return $set.$accepts(0, $this.$string3.$substring0(0, 1)) <= 0 ? 0 : 1;
    if (!($set instanceof jur_SupplRangeSet)) {
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        a: {
            if ($this.$string3.$length() > 1) {
                var$2 = $set;
                var$3 = var$2.$getCodePoint();
                var$4 = $this.$string3.$charAt(0);
                var$2 = $this.$string3;
                var$5 = var$2.$charAt(1);
                if (var$3 == jl_Character_toCodePoint(var$4, var$5)) {
                    var$4 = 1;
                    break a;
                }
            }
            var$4 = 0;
        }
        return var$4;
    }
    b: {
        c: {
            var$2 = $set;
            if (!var$2.$contains($this.$string3.$charAt(0))) {
                var$6 = $this.$string3;
                if (var$6.$length() <= 1)
                    break c;
                var$6 = $this.$string3;
                var$4 = jl_Character_toCodePoint(var$6.$charAt(0), $this.$string3.$charAt(1));
                if (!var$2.$contains(var$4))
                    break c;
            }
            var$4 = 1;
            break b;
        }
        var$4 = 0;
    }
    return var$4;
}
function jur_SequenceSet_indexOf($this, $str, $i, $to) {
    var $last, $ch;
    $last = $this.$string3.$charAt($this.$charCount - 1 | 0);
    while (true) {
        if ($i > ($to - $this.$charCount | 0))
            return (-1);
        $ch = $str.$charAt(($i + $this.$charCount | 0) - 1 | 0);
        if ($ch == $last && $this.$startsWith1($str, $i))
            break;
        $i = $i + $this.$leftToRight.$get29($ch) | 0;
    }
    return $i;
}
function jur_SequenceSet_lastIndexOf($this, $str, $to, $i) {
    var $first, $size, $delta, $ch;
    $first = $this.$string3.$charAt(0);
    $size = $str.$length();
    $delta = ($size - $i | 0) - $this.$charCount | 0;
    if ($delta <= 0)
        $i = $i + $delta | 0;
    while (true) {
        if ($i < $to)
            return (-1);
        $ch = $str.$charAt($i);
        if ($ch == $first && $this.$startsWith1($str, $i))
            break;
        $i = $i - $this.$rightToLeft.$get29($ch) | 0;
    }
    return $i;
}
function jur_SequenceSet_startsWith($this, $str, $from) {
    var $i;
    $i = 0;
    while ($i < $this.$charCount) {
        if ($str.$charAt($i + $from | 0) != $this.$string3.$charAt($i))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
function iaagg_GlyphLayout$setText$lambda$_6_0() {
    jl_Object.call(this);
}
function iaagg_GlyphLayout$setText$lambda$_6_0__init_() {
    var var_0 = new iaagg_GlyphLayout$setText$lambda$_6_0();
    iaagg_GlyphLayout$setText$lambda$_6_0__init_0(var_0);
    return var_0;
}
function iaagg_GlyphLayout$setText$lambda$_6_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaagg_GlyphLayout$setText$lambda$_6_0_get(var$0) {
    return iaagg_GlyphLayout$setText$lambda$_6_0_get0(var$0);
}
function iaagg_GlyphLayout$setText$lambda$_6_0_get0(var$0) {
    return iaagg_GlyphLayout$GlyphRun__init_();
}
function it_Phases$1$lambda$null$13$lambda$_11_0() {
    jl_Object.call(this);
}
function it_Phases$1$lambda$null$13$lambda$_11_0__init_() {
    var var_0 = new it_Phases$1$lambda$null$13$lambda$_11_0();
    it_Phases$1$lambda$null$13$lambda$_11_0__init_0(var_0);
    return var_0;
}
function it_Phases$1$lambda$null$13$lambda$_11_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$1$lambda$null$13$lambda$_11_0_get(var$0, var$1) {
    it_Phases$1_lambda$null$12(var$1);
}
function jur_AltGroupQuantifierSet() {
    jur_GroupQuantifierSet.call(this);
}
function jur_AltGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_AltGroupQuantifierSet();
    jur_AltGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AltGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_AltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_AltGroupQuantifierSet_setNext($this, $next) {
    jur_AbstractSet_setNext($this, $next);
    $this.$innerSet.$setNext($next);
}
function iaaus_XmlReader$Element() {
    var a = this; jl_Object.call(a);
    a.$name17 = null;
    a.$attributes4 = null;
    a.$children2 = null;
    a.$text3 = null;
    a.$parent2 = null;
}
function iaaus_XmlReader$Element__init_(var_0, var_1) {
    var var_2 = new iaaus_XmlReader$Element();
    iaaus_XmlReader$Element__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaaus_XmlReader$Element__init_0($this, $name, $parent) {
    jl_Object__init_0($this);
    $this.$name17 = $name;
    $this.$parent2 = $parent;
}
function iaaus_XmlReader$Element_getName($this) {
    return $this.$name17;
}
function iaaus_XmlReader$Element_getAttribute($this, $name) {
    var $value;
    if ($this.$attributes4 === null)
        $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(1198)).$append($this.$name17).$append($rt_s(1199)).$append($name).$toString()));
    $value = $this.$attributes4.$get9($name);
    if ($value !== null)
        return $value;
    $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(1198)).$append($this.$name17).$append($rt_s(1199)).$append($name).$toString()));
}
function iaaus_XmlReader$Element_getAttribute0($this, $name, $defaultValue) {
    var $value;
    if ($this.$attributes4 === null)
        return $defaultValue;
    $value = $this.$attributes4.$get9($name);
    if ($value !== null)
        return $value;
    return $defaultValue;
}
function iaaus_XmlReader$Element_setAttribute($this, $name, $value) {
    if ($this.$attributes4 === null)
        $this.$attributes4 = iaac_ObjectMap__init_1(8);
    $this.$attributes4.$put($name, $value);
}
function iaaus_XmlReader$Element_getChildCount($this) {
    if ($this.$children2 === null)
        return 0;
    return $this.$children2.$size;
}
function iaaus_XmlReader$Element_getChild($this, $index) {
    if ($this.$children2 !== null)
        return $this.$children2.$get($index);
    $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(1200)).$append($this.$name17).$toString()));
}
function iaaus_XmlReader$Element_addChild($this, $element) {
    if ($this.$children2 === null)
        $this.$children2 = iaac_Array__init_(8);
    $this.$children2.$add1($element);
}
function iaaus_XmlReader$Element_getText($this) {
    return $this.$text3;
}
function iaaus_XmlReader$Element_setText($this, $text) {
    $this.$text3 = $text;
}
function iaaus_XmlReader$Element_removeChild($this, $child) {
    if ($this.$children2 !== null)
        $this.$children2.$removeValue($child, 1);
}
function iaaus_XmlReader$Element_toString($this) {
    return $this.$toString5($rt_s(58));
}
function iaaus_XmlReader$Element_toString0($this, $indent) {
    var $buffer, var$3, $entry, $childIndent, $child;
    a: {
        $buffer = jl_StringBuilder__init_0(128);
        $buffer.$append($indent);
        $buffer.$append0(60);
        $buffer.$append($this.$name17);
        if ($this.$attributes4 !== null) {
            var$3 = $this.$attributes4.$entries().$iterator3();
            while (true) {
                if (!var$3.$hasNext())
                    break a;
                $entry = var$3.$next0();
                $buffer.$append0(32);
                $buffer.$append($entry.$key2);
                $buffer.$append($rt_s(1201));
                $buffer.$append($entry.$value5);
                $buffer.$append0(34);
            }
        }
    }
    if ($this.$children2 === null && !($this.$text3 !== null && $this.$text3.$length()))
        $buffer.$append($rt_s(1202));
    else {
        $buffer.$append($rt_s(1203));
        $childIndent = jl_StringBuilder__init_().$append($indent).$append0(9).$toString();
        if ($this.$text3 !== null && $this.$text3.$length() > 0) {
            $buffer.$append($childIndent);
            $buffer.$append($this.$text3);
            $buffer.$append0(10);
        }
        b: {
            if ($this.$children2 !== null) {
                var$3 = $this.$children2.$iterator();
                while (true) {
                    if (!var$3.$hasNext())
                        break b;
                    $child = var$3.$next0();
                    $buffer.$append($child.$toString5($childIndent));
                    $buffer.$append0(10);
                }
            }
        }
        $buffer.$append($indent);
        $buffer.$append($rt_s(1204));
        $buffer.$append($this.$name17);
        $buffer.$append0(62);
    }
    return $buffer.$toString();
}
function iaaus_XmlReader$Element_getChildByName($this, $name) {
    var $i, $element;
    if ($this.$children2 === null)
        return null;
    $i = 0;
    while (true) {
        if ($i >= $this.$children2.$size)
            return null;
        $element = $this.$children2.$get($i);
        if ($element.$name17.$equals($name))
            break;
        $i = $i + 1 | 0;
    }
    return $element;
}
function iaaus_XmlReader$Element_getChildrenByName($this, $name) {
    var $result, $i, $child;
    $result = iaac_Array__init_0();
    if ($this.$children2 === null)
        return $result;
    $i = 0;
    while ($i < $this.$children2.$size) {
        $child = $this.$children2.$get($i);
        if ($child.$name17.$equals($name))
            $result.$add1($child);
        $i = $i + 1 | 0;
    }
    return $result;
}
function iaaus_XmlReader$Element_getFloatAttribute($this, $name, $defaultValue) {
    var $value;
    $value = $this.$getAttribute($name, null);
    if ($value === null)
        return $defaultValue;
    return jl_Float_parseFloat($value);
}
function iaaus_XmlReader$Element_getIntAttribute($this, $name) {
    return jl_Integer_parseInt0($this.$getAttribute0($name));
}
function iaaus_XmlReader$Element_getIntAttribute0($this, $name, $defaultValue) {
    var $value;
    $value = $this.$getAttribute($name, null);
    if ($value === null)
        return $defaultValue;
    return jl_Integer_parseInt0($value);
}
function iaaus_XmlReader$Element_get($this, $name, $defaultValue) {
    var $value, $child;
    if ($this.$attributes4 !== null) {
        $value = $this.$attributes4.$get9($name);
        if ($value !== null)
            return $value;
    }
    $child = $this.$getChildByName($name);
    if ($child === null)
        return $defaultValue;
    $value = $child.$getText();
    if ($value !== null)
        return $value;
    return $defaultValue;
}
function iaasu_Image() {
    var a = this; iaas_Element.call(a);
    a.$imageX = 0.0;
    a.$imageY = 0.0;
    a.$imageWidth = 0.0;
    a.$imageHeight = 0.0;
    a.$scaling = null;
    a.$align2 = 0;
    a.$drawable0 = null;
}
function iaasu_Image__init_(var_0) {
    var var_1 = new iaasu_Image();
    iaasu_Image__init_0(var_1, var_0);
    return var_1;
}
function iaasu_Image__init_1(var_0, var_1, var_2) {
    var var_3 = new iaasu_Image();
    iaasu_Image__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaasu_Image__init_0($this, $drawable) {
    iaau_Scaling_$callClinit();
    iaasu_Image__init_2($this, $drawable, iaau_Scaling_stretch, 1);
}
function iaasu_Image__init_2($this, $drawable, $scaling, $align) {
    iaas_Element__init_0($this);
    $this.$setDrawable($drawable);
    $this.$scaling = $scaling;
    $this.$align2 = $align;
    $this.$setSize($this.$getPrefWidth(), $this.$getPrefHeight());
}
function iaasu_Image_layout($this) {
    var $regionWidth, $regionHeight, $width, $height, $size;
    if ($this.$drawable0 === null)
        return;
    $regionWidth = $this.$drawable0.$getMinWidth();
    $regionHeight = $this.$drawable0.$getMinHeight();
    $width = $this.$getWidth();
    $height = $this.$getHeight();
    $size = iaau_Scaling_apply($this.$scaling, $regionWidth, $regionHeight, $width, $height);
    $this.$imageWidth = $size.$x0;
    $this.$imageHeight = $size.$y0;
    if ($this.$align2 & 8)
        $this.$imageX = 0.0;
    else if ($this.$align2 & 16)
        $this.$imageX = $width - $this.$imageWidth | 0;
    else
        $this.$imageX = $width / 2.0 - $this.$imageWidth / 2.0 | 0;
    if ($this.$align2 & 2)
        $this.$imageY = $height - $this.$imageHeight | 0;
    else if ($this.$align2 & 4)
        $this.$imageY = 0.0;
    else
        $this.$imageY = $height / 2.0 - $this.$imageHeight / 2.0 | 0;
}
function iaasu_Image_draw($this) {
    var $x, $y, $scaleX, $scaleY, $rotation;
    a: {
        $this.$validate();
        $x = $this.$getX();
        $y = $this.$getY();
        $scaleX = $this.$getScaleX();
        $scaleY = $this.$getScaleY();
        iaagg_Draw_color($this.$getColor());
        iaagg_Draw_alpha($this.$parentAlpha * $this.$getColor().$a);
        if ($rt_isInstance($this.$drawable0, iaass_TransformDrawable)) {
            $rotation = $this.$getRotation();
            if ($scaleX !== 1.0)
                break a;
            if ($scaleY !== 1.0)
                break a;
            if ($rotation !== 0.0)
                break a;
        }
        if ($this.$drawable0 !== null)
            $this.$drawable0.$draw0($x + $this.$imageX, $y + $this.$imageY, $this.$imageWidth * $scaleX, $this.$imageHeight * $scaleY);
        return;
    }
    $this.$drawable0.$draw10($x + $this.$imageX, $y + $this.$imageY, $this.$getOriginX() - $this.$imageX, $this.$getOriginY() - $this.$imageY, $this.$imageWidth, $this.$imageHeight, $scaleX, $scaleY, $rotation);
}
function iaasu_Image_getRegion($this) {
    return $this.$drawable0.$getRegion();
}
function iaasu_Image_setDrawable($this, $drawable) {
    if ($this.$drawable0 === $drawable)
        return;
    if ($drawable === null)
        $this.$invalidateHierarchy();
    else if (!($this.$getPrefWidth() === $drawable.$getMinWidth() && $this.$getPrefHeight() === $drawable.$getMinHeight()))
        $this.$invalidateHierarchy();
    $this.$drawable0 = $drawable;
}
function iaasu_Image_getMinWidth($this) {
    return 0.0;
}
function iaasu_Image_getMinHeight($this) {
    return 0.0;
}
function iaasu_Image_getPrefWidth($this) {
    if ($this.$drawable0 === null)
        return 0.0;
    return $this.$drawable0.$getMinWidth();
}
function iaasu_Image_getPrefHeight($this) {
    if ($this.$drawable0 === null)
        return 0.0;
    return $this.$drawable0.$getMinHeight();
}
function iaagg_CacheBatch() {
    var a = this; iaagg_SpriteBatch.call(a);
    a.$cache1 = null;
    a.$tmpVertices = null;
}
function iaagg_CacheBatch__init_(var_0) {
    var var_1 = new iaagg_CacheBatch();
    iaagg_CacheBatch__init_0(var_1, var_0);
    return var_1;
}
function iaagg_CacheBatch__init_0($this, $cache) {
    iaagg_SpriteBatch__init_2($this, 0);
    $this.$tmpVertices = $rt_createFloatArray(20);
    $this.$cache1 = $cache;
}
function iaagg_CacheBatch_flush($this) {
    return;
}
function iaagg_CacheBatch_setColor($this, $tint) {
    $this.$cache1.$setColor($tint);
}
function iaagg_CacheBatch_setColor0($this, $r, $g, $b, $a) {
    $this.$cache1.$setColor0($r, $g, $b, $a);
}
function iaagg_CacheBatch_setPackedColor($this, $color) {
    $this.$cache1.$setPackedColor($color);
}
function iaagg_CacheBatch_getColor($this) {
    return $this.$cache1.$getColor();
}
function iaagg_CacheBatch_getPackedColor($this) {
    return $this.$cache1.$getColor().$toFloatBits();
}
function iaagg_CacheBatch_setProjection($this, $projection) {
    $this.$cache1.$setProjectionMatrix($projection);
}
function iaagg_CacheBatch_beginCache($this) {
    $this.$cache1.$beginCache();
}
function iaagg_CacheBatch_endCache($this) {
    return $this.$cache1.$endCache();
}
function iaagg_CacheBatch_draw($this, $texture, $spriteVertices, $offset, $count) {
    var var$5, var$6, $vertices, $i, var$9, var$10, $index, $dest, var$13;
    var$5 = $count / 6 | 0;
    var$6 = var$5 * 5 | 0;
    $vertices = var$6 != $this.$tmpVertices.data.length ? $rt_createFloatArray(var$6) : $this.$tmpVertices;
    $i = 0;
    while ($i < var$5) {
        var$9 = $vertices.data;
        var$10 = $spriteVertices.data;
        $index = $i * 6 | 0;
        $dest = $i * 5 | 0;
        var$13 = $offset + $index | 0;
        var$9[$dest] = var$10[var$13];
        var$9[$dest + 1 | 0] = var$10[var$13 + 1 | 0];
        var$9[$dest + 2 | 0] = var$10[var$13 + 2 | 0];
        var$9[$dest + 3 | 0] = var$10[var$13 + 3 | 0];
        var$9[$dest + 4 | 0] = var$10[var$13 + 4 | 0];
        $i = $i + 1 | 0;
    }
    var$10 = $vertices.data;
    $this.$cache1.$add16($texture, $vertices, 0, var$10.length);
}
function iaagg_CacheBatch_draw0($this, $region, $x, $y, $originX, $originY, $width, $height, $rotation) {
    $this.$cache1.$add17($region, $x, $y, $originX, $originY, $width, $height, 1.0, 1.0, $rotation);
}
function iaagg_CacheBatch_setShader($this, $shader) {
    $this.$setShader($shader, 1);
}
function iaagg_CacheBatch_setShader0($this, $shader, $apply) {
    var $drawing;
    $drawing = $this.$cache1.$isDrawing();
    if ($drawing)
        $this.$cache1.$end();
    $this.$cache1.$setShader0($shader);
    if ($drawing)
        $this.$cache1.$begin();
    if ($apply && $shader !== null)
        $shader.$apply3();
}
function iaam_Angles() {
    jl_Object.call(this);
}
var iaam_Angles_random = null;
var iaam_Angles_rv = null;
function iaam_Angles_$callClinit() {
    iaam_Angles_$callClinit = $rt_eraseClinit(iaam_Angles);
    iaam_Angles__clinit_();
}
function iaam_Angles_forwardDistance($angle1, $angle2) {
    iaam_Angles_$callClinit();
    return $angle1 <= $angle2 ? $angle2 - $angle1 : $angle1 - $angle2;
}
function iaam_Angles_backwardDistance($angle1, $angle2) {
    iaam_Angles_$callClinit();
    return 360.0 - iaam_Angles_forwardDistance($angle1, $angle2);
}
function iaam_Angles_angleDist($a, $b) {
    var var$3, var$4;
    iaam_Angles_$callClinit();
    var$3 = $a % 360.0;
    var$4 = $b % 360.0;
    return jl_Math_min(iaam_Angles_forwardDistance(var$3, var$4), iaam_Angles_backwardDistance(var$3, var$4));
}
function iaam_Angles_angle($x, $y, $x2, $y2) {
    var $ang;
    iaam_Angles_$callClinit();
    $ang = iaam_Mathf_atan2($x2 - $x, $y2 - $y) * 57.2957763671875;
    if ($ang < 0.0)
        $ang = $ang + 360.0;
    return $ang;
}
function iaam_Angles_trnsx($angle, $len) {
    iaam_Angles_$callClinit();
    return $len * iaam_Mathf_cos(0.01745329238474369 * $angle);
}
function iaam_Angles_trnsy($angle, $len) {
    iaam_Angles_$callClinit();
    return $len * iaam_Mathf_sin0(0.01745329238474369 * $angle);
}
function iaam_Angles_mouseAngle($cx, $cy) {
    var $avector;
    iaam_Angles_$callClinit();
    iaa_Core_$callClinit();
    $avector = iaa_Core_camera.$project0($cx, $cy);
    return iaam_Angles_angle($avector.$x0, $avector.$y0, iaa_Core_input.$mouseX(), iaa_Core_input.$mouseY());
}
function iaam_Angles_loop($max, $i) {
    var $j;
    iaam_Angles_$callClinit();
    $j = 0;
    while ($j < $max) {
        $i.$get54($j);
        $j = $j + 1 | 0;
    }
}
function iaam_Angles_circle($points, $offset, $cons) {
    var $i;
    iaam_Angles_$callClinit();
    $i = 0;
    while ($i < $points) {
        $cons.$get55($offset + $i * 360.0 / $points);
        $i = $i + 1 | 0;
    }
}
function iaam_Angles_circle0($points, $cons) {
    var $i;
    iaam_Angles_$callClinit();
    $i = 0;
    while ($i < $points) {
        $cons.$get55($i * 360.0 / $points);
        $i = $i + 1 | 0;
    }
}
function iaam_Angles_circleVectors($points, $length, $offset, $pos) {
    var $i, $f;
    iaam_Angles_$callClinit();
    $i = 0;
    while ($i < $points) {
        $f = $i * 360.0 / $points + $offset;
        $pos.$get56(iaam_Angles_trnsx($f, $length), iaam_Angles_trnsy($f, $length));
        $i = $i + 1 | 0;
    }
}
function iaam_Angles_shotgun($points, $spacing, $offset, $cons) {
    var $i;
    iaam_Angles_$callClinit();
    $i = 0;
    while ($i < $points) {
        $cons.$get55($i * $spacing - ($points - 1 | 0) * $spacing / 2.0 + $offset);
        $i = $i + 1 | 0;
    }
}
function iaam_Angles_randLenVectors($seed, $amount, $length, $cons) {
    var $i, $scl, $vang;
    iaam_Angles_$callClinit();
    iaam_Angles_random.$setSeed($seed);
    $i = 0;
    while ($i < $amount) {
        $scl = $length * iaam_Angles_random.$nextFloat();
        $vang = iaam_Angles_random.$nextFloat() * 360.0;
        iaam_Angles_rv.$set2($scl, 0.0).$rotate1($vang);
        $cons.$get56(iaam_Angles_rv.$x0, iaam_Angles_rv.$y0);
        $i = $i + 1 | 0;
    }
}
function iaam_Angles_randLenVectors0($seed, $amount, $length, $angle, $range, $cons) {
    var $i, $scl, $vang;
    iaam_Angles_$callClinit();
    iaam_Angles_random.$setSeed($seed);
    $i = 0;
    while ($i < $amount) {
        $scl = $length * iaam_Angles_random.$nextFloat();
        $vang = $angle + iaam_Angles_random.$nextFloat() * $range * 2.0 - $range;
        iaam_Angles_rv.$set2($scl, 0.0).$rotate1($vang);
        $cons.$get56(iaam_Angles_rv.$x0, iaam_Angles_rv.$y0);
        $i = $i + 1 | 0;
    }
}
function iaam_Angles__clinit_() {
    iaam_Angles_random = iaam_RandomXS128__init_();
    iaam_Angles_rv = iaamg_Vector2__init_0();
}
function iaau_Timer() {
    jl_Object.call(this);
    this.$tasks0 = null;
}
var iaau_Timer_thread = null;
var iaau_Timer_instance = null;
function iaau_Timer_$callClinit() {
    iaau_Timer_$callClinit = $rt_eraseClinit(iaau_Timer);
    iaau_Timer__clinit_();
}
function iaau_Timer__init_() {
    var var_0 = new iaau_Timer();
    iaau_Timer__init_0(var_0);
    return var_0;
}
function iaau_Timer__init_0($this) {
    iaau_Timer_$callClinit();
    jl_Object__init_0($this);
    $this.$tasks0 = iaac_Array__init_3(0, 8);
}
function iaau_Timer__clinit_() {
    iaau_Timer_thread = otcju_TTimer__init_();
    iaau_Timer_instance = iaau_Timer__init_();
}
function jur_UCIRangeSet() {
    var a = this; jur_LeafSet.call(a);
    a.$chars1 = null;
    a.$alt3 = 0;
}
function jur_UCIRangeSet__init_(var_0) {
    var var_1 = new jur_UCIRangeSet();
    jur_UCIRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCIRangeSet__init_0($this, $cc) {
    jur_LeafSet__init_2($this);
    $this.$chars1 = $cc.$getInstance();
    $this.$alt3 = $cc.$alt0;
}
function jur_UCIRangeSet_accepts($this, $strIndex, $testString) {
    var var$3, var$4;
    var$3 = $this.$chars1;
    var$4 = jl_Character_toUpperCase0($testString.$charAt($strIndex));
    return !var$3.$contains(jl_Character_toLowerCase(var$4)) ? (-1) : 1;
}
function jur_UCIRangeSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(979)).$append(!$this.$alt3 ? $rt_s(32) : $rt_s(33)).$append($this.$chars1.$toString()).$toString();
}
function it_Phases$2$lambda$null$2$lambda$_22_0() {
    jl_Object.call(this);
    this.$_0101 = 0;
}
function it_Phases$2$lambda$null$2$lambda$_22_0__init_(var_0) {
    var var_1 = new it_Phases$2$lambda$null$2$lambda$_22_0();
    it_Phases$2$lambda$null$2$lambda$_22_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$2$lambda$null$2$lambda$_22_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0101 = var$1;
}
function it_Phases$2$lambda$null$2$lambda$_22_0_get(var$0, var$1) {
    it_Phases$2_lambda$null$1(var$0.$_0101, var$1);
}
function i_UI$setup$lambda$_7_3() {
    jl_Object.call(this);
}
function i_UI$setup$lambda$_7_3__init_() {
    var var_0 = new i_UI$setup$lambda$_7_3();
    i_UI$setup$lambda$_7_3__init_0(var_0);
    return var_0;
}
function i_UI$setup$lambda$_7_3__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function i_UI$setup$lambda$_7_3_get(var$0, var$1) {
    i_UI$setup$lambda$_7_3_get0(var$0, var$1);
}
function i_UI$setup$lambda$_7_3_get0(var$0, var$1) {
    i_UI_lambda$setup$11(var$1);
}
function ig_LayerBatch() {
    var a = this; iaagg_SpriteBatch.call(a);
    a.$requests0 = null;
    a.$sort4 = 0;
    a.$flushing0 = 0;
    a.$z5 = 0.0;
}
function ig_LayerBatch__init_() {
    var var_0 = new ig_LayerBatch();
    ig_LayerBatch__init_0(var_0);
    return var_0;
}
function ig_LayerBatch__init_0($this) {
    iaagg_SpriteBatch__init_0($this);
    $this.$requests0 = iaac_Array__init_0();
}
function ig_LayerBatch_sort($this, $sort) {
    if ($this.$sort4 != $sort)
        $this.$flush0();
    $this.$sort4 = $sort;
}
function ig_LayerBatch_draw($this, $texture, $spriteVertices, $offset, $count) {
    var $req;
    if (!$this.$sort4)
        iaagg_SpriteBatch_draw($this, $texture, $spriteVertices, $offset, $count);
    else {
        $req = iaaup_Pools_obtain($rt_cls(ig_DrawRequest), ig_LayerBatch$draw$lambda$_2_0__init_());
        $req.$z4 = $this.$z5;
        jl_System_arraycopy($spriteVertices, 0, $req.$vertices0, 0, $req.$vertices0.data.length);
        $req.$texture1 = $texture;
        $this.$requests0.$add1($req);
    }
}
function ig_LayerBatch_draw0($this, $region, $x, $y, $originX, $originY, $width, $height, $rotation) {
    var $req;
    if (!$this.$sort4)
        iaagg_SpriteBatch_draw1($this, $region, $x, $y, $originX, $originY, $width, $height, $rotation);
    else {
        $req = iaaup_Pools_obtain($rt_cls(ig_DrawRequest), ig_LayerBatch$draw$lambda$_3_0__init_());
        $req.$x7 = $x;
        $req.$y7 = $y;
        $req.$z4 = $this.$z5;
        $req.$originX1 = $originX;
        $req.$originY1 = $originY;
        $req.$width10 = $width;
        $req.$height9 = $height;
        $req.$color8 = $this.$colorPacked;
        $req.$rotation3 = $rotation;
        $req.$region1 = $region;
        $req.$blendColor = $this.$mixColorPacked;
        $this.$requests0.$add1($req);
    }
}
function ig_LayerBatch_flush($this) {
    var var$1, $req;
    if (!$this.$flushing0 && !$this.$requests0.$isEmpty()) {
        $this.$flushing0 = 1;
        $this.$requests0.$sort3();
        var$1 = $this.$requests0.$iterator();
        while (var$1.$hasNext()) {
            $req = var$1.$next0();
            $this.$colorPacked = $req.$color8;
            $this.$mixColorPacked = $req.$blendColor;
            if ($req.$texture1 !== null)
                iaagg_SpriteBatch_draw($this, $req.$texture1, $req.$vertices0, 0, $req.$vertices0.data.length);
            else
                iaagg_SpriteBatch_draw1($this, $req.$region1, $req.$x7, $req.$y7, $req.$originX1, $req.$originY1, $req.$width10, $req.$height9, $req.$rotation3);
        }
        iaaup_Pools_freeAll($this.$requests0);
        $this.$requests0.$clear();
        $this.$flushing0 = 0;
    }
    iaagg_SpriteBatch_flush($this);
}
function i_UI$setup$lambda$_7_2() {
    jl_Object.call(this);
}
function i_UI$setup$lambda$_7_2__init_() {
    var var_0 = new i_UI$setup$lambda$_7_2();
    i_UI$setup$lambda$_7_2__init_0(var_0);
    return var_0;
}
function i_UI$setup$lambda$_7_2__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function i_UI$setup$lambda$_7_2_get(var$0, var$1) {
    i_UI$setup$lambda$_7_2_get0(var$0, var$1);
}
function i_UI$setup$lambda$_7_2_get0(var$0, var$1) {
    i_UI_lambda$setup$9(var$1);
}
function otcju_TTimer() {
    otcjl_TObject.call(this);
    this.$tasks1 = null;
}
function otcju_TTimer__init_() {
    var var_0 = new otcju_TTimer();
    otcju_TTimer__init_0(var_0);
    return var_0;
}
function otcju_TTimer__init_0($this) {
    otcjl_TObject__init_0($this);
    $this.$tasks1 = otcju_THashSet__init_();
}
function iaase_Touchable() {
    jl_Enum.call(this);
}
var iaase_Touchable_enabled = null;
var iaase_Touchable_disabled = null;
var iaase_Touchable_childrenOnly = null;
var iaase_Touchable_$VALUES = null;
function iaase_Touchable_$callClinit() {
    iaase_Touchable_$callClinit = $rt_eraseClinit(iaase_Touchable);
    iaase_Touchable__clinit_();
}
function iaase_Touchable__init_(var_0, var_1) {
    var var_2 = new iaase_Touchable();
    iaase_Touchable__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaase_Touchable_values() {
    iaase_Touchable_$callClinit();
    return iaase_Touchable_$VALUES.$clone();
}
function iaase_Touchable__init_0($this, var$1, var$2) {
    iaase_Touchable_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaase_Touchable__clinit_() {
    var var$1, var$2;
    iaase_Touchable_enabled = iaase_Touchable__init_($rt_s(1205), 0);
    iaase_Touchable_disabled = iaase_Touchable__init_($rt_s(622), 1);
    iaase_Touchable_childrenOnly = iaase_Touchable__init_($rt_s(1206), 2);
    var$1 = $rt_createArray(iaase_Touchable, 3);
    var$2 = var$1.data;
    var$2[0] = iaase_Touchable_enabled;
    var$2[1] = iaase_Touchable_disabled;
    var$2[2] = iaase_Touchable_childrenOnly;
    iaase_Touchable_$VALUES = var$1;
}
function otp_Platform() {
    jl_Object.call(this);
}
function otp_Platform_clone(var$1) {
    var copy = new var$1.constructor();
    for (var field in var$1) {
        if (!var$1.hasOwnProperty(field)) {
            continue;
        }
        copy[field] = var$1[field];
    }
    return copy;
}
function otp_Platform_isInstance($obj, $cls) {
    return $obj !== null && !(typeof $obj.constructor.$meta === 'undefined' ? 1 : 0) && otp_Platform_isAssignable($obj.constructor, $cls) ? 1 : 0;
}
function otp_Platform_isAssignable($from, $to) {
    var $supertypes, $i;
    if ($from === $to)
        return 1;
    $supertypes = $from.$meta.supertypes;
    $i = 0;
    while ($i < $supertypes.length) {
        if (otp_Platform_isAssignable($supertypes[$i], $to))
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
}
function otp_Platform_getEnumConstants(var$1) {
    var c = '$$enumConstants$$';
    it_Direction[c] = it_Direction_values;
    iaag_Mesh$VertexDataType[c] = iaag_Mesh$VertexDataType_values;
    iaase_InputEvent$Type[c] = iaase_InputEvent$Type_values;
    iaau_Scaling[c] = iaau_Scaling_values;
    iaa_Application$ApplicationType[c] = iaa_Application$ApplicationType_values;
    iaagg_HdpiMode[c] = iaagg_HdpiMode_values;
    iaat_TokenCategory[c] = iaat_TokenCategory_values;
    iaag_Blending[c] = iaag_Blending_values;
    iaai_KeyCode[c] = iaai_KeyCode_values;
    iaag_Texture$TextureWrap[c] = iaag_Texture$TextureWrap_values;
    iaabte_PixmapEmulator$DrawType[c] = iaabte_PixmapEmulator$DrawType_values;
    iaat_InternalToken[c] = iaat_InternalToken_values;
    iaase_Touchable[c] = iaase_Touchable_values;
    iaagg_CapStyle[c] = iaagg_CapStyle_values;
    iaag_TextureData$TextureDataType[c] = iaag_TextureData$TextureDataType_values;
    i_Binding[c] = i_Binding_values;
    iaag_Pixmap$Blending[c] = iaag_Pixmap$Blending_values;
    iaase_FocusListener$FocusEvent$Type[c] = iaase_FocusListener$FocusEvent$Type_values;
    iaai_KeyCode$KeyType[c] = iaai_KeyCode$KeyType_values;
    iaaus_JsonWriter$OutputType[c] = iaaus_JsonWriter$OutputType_values;
    iaai_InputDevice$DeviceType[c] = iaai_InputDevice$DeviceType_values;
    iaa_Files$FileType[c] = iaa_Files$FileType_values;
    iaag_Texture$TextureFilter[c] = iaag_Texture$TextureFilter_values;
    iaagg_GLVersion$Type[c] = iaagg_GLVersion$Type_values;
    iaag_Pixmap$Format[c] = iaag_Pixmap$Format_values;
    iaau_Log$LogLevel[c] = iaau_Log$LogLevel_values;
    otp_Platform_getEnumConstants = function(cls) {
        if (!cls.hasOwnProperty(c)) {
            return null;
        }
        if (typeof cls[c] === "function") {
            cls[c] = cls[c]();
        }
        return cls[c];
    };
    return otp_Platform_getEnumConstants(var$1);
}
function otp_Platform_launchThread($runnable) {
    $runnable.$run();
}
function otp_Platform_postpone($runnable) {
    otp_Platform_schedule($runnable, 0);
}
function otp_Platform_schedule(var$1, var$2) {
    return setTimeout(function() {
        otp_Platform_launchThread(var$1);
    }, var$2);
}
function otp_Platform_createQueue() {
    return otp_Platform_createQueueJs$js_body$_30();
}
function otp_Platform_stringFromCharCode($charCode) {
    return otj_JSObject_cast$static(String.fromCharCode($charCode));
}
function otp_Platform_isPrimitive($cls) {
    return $cls.$meta.primitive ? 1 : 0;
}
function otp_Platform_isEnum($cls) {
    return $cls.$meta.enum ? 1 : 0;
}
function otp_Platform_getArrayItem($cls) {
    return $cls.$meta.item;
}
function otp_Platform_getName($cls) {
    return $rt_str($cls.$meta.name);
}
function otp_Platform_createQueueJs$js_body$_30() {
    return [];
}
function i_UI$setup$lambda$_7_1() {
    jl_Object.call(this);
}
function i_UI$setup$lambda$_7_1__init_() {
    var var_0 = new i_UI$setup$lambda$_7_1();
    i_UI$setup$lambda$_7_1__init_0(var_0);
    return var_0;
}
function i_UI$setup$lambda$_7_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function i_UI$setup$lambda$_7_1_get(var$0, var$1) {
    i_UI$setup$lambda$_7_1_get0(var$0, var$1);
}
function i_UI$setup$lambda$_7_1_get0(var$0, var$1) {
    i_UI_lambda$setup$7(var$1);
}
function i_UI$setup$lambda$_7_0() {
    jl_Object.call(this);
    this.$_0102 = null;
}
function i_UI$setup$lambda$_7_0__init_(var_0) {
    var var_1 = new i_UI$setup$lambda$_7_0();
    i_UI$setup$lambda$_7_0__init_0(var_1, var_0);
    return var_1;
}
function i_UI$setup$lambda$_7_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0102 = var$1;
}
function i_UI$setup$lambda$_7_0_get(var$0, var$1) {
    i_UI$setup$lambda$_7_0_get0(var$0, var$1);
}
function i_UI$setup$lambda$_7_0_get0(var$0, var$1) {
    i_UI_lambda$setup$5(var$0.$_0102, var$1);
}
function jnc_CodingErrorAction() {
    jl_Object.call(this);
    this.$name18 = null;
}
var jnc_CodingErrorAction_IGNORE = null;
var jnc_CodingErrorAction_REPLACE = null;
var jnc_CodingErrorAction_REPORT = null;
function jnc_CodingErrorAction_$callClinit() {
    jnc_CodingErrorAction_$callClinit = $rt_eraseClinit(jnc_CodingErrorAction);
    jnc_CodingErrorAction__clinit_();
}
function jnc_CodingErrorAction__init_(var_0) {
    var var_1 = new jnc_CodingErrorAction();
    jnc_CodingErrorAction__init_0(var_1, var_0);
    return var_1;
}
function jnc_CodingErrorAction__init_0($this, $name) {
    jnc_CodingErrorAction_$callClinit();
    jl_Object__init_0($this);
    $this.$name18 = $name;
}
function jnc_CodingErrorAction__clinit_() {
    jnc_CodingErrorAction_IGNORE = jnc_CodingErrorAction__init_($rt_s(1207));
    jnc_CodingErrorAction_REPLACE = jnc_CodingErrorAction__init_($rt_s(1208));
    jnc_CodingErrorAction_REPORT = jnc_CodingErrorAction__init_($rt_s(1209));
}
function jl_Boolean() {
    jl_Object.call(this);
    this.$value6 = 0;
}
var jl_Boolean_TRUE = null;
var jl_Boolean_FALSE = null;
var jl_Boolean_TYPE = null;
function jl_Boolean_$callClinit() {
    jl_Boolean_$callClinit = $rt_eraseClinit(jl_Boolean);
    jl_Boolean__clinit_();
}
function jl_Boolean__init_(var_0) {
    var var_1 = new jl_Boolean();
    jl_Boolean__init_0(var_1, var_0);
    return var_1;
}
function jl_Boolean__init_0($this, $value) {
    jl_Boolean_$callClinit();
    jl_Object__init_0($this);
    $this.$value6 = $value;
}
function jl_Boolean_parseBoolean($s) {
    jl_Boolean_$callClinit();
    return $s !== null && $s.$toLowerCase1().$equals($rt_s(1210)) ? 1 : 0;
}
function jl_Boolean_booleanValue($this) {
    return $this.$value6;
}
function jl_Boolean_valueOf($value) {
    jl_Boolean_$callClinit();
    return !$value ? jl_Boolean_FALSE : jl_Boolean_TRUE;
}
function jl_Boolean_valueOf0($value) {
    jl_Boolean_$callClinit();
    return jl_Boolean_valueOf(jl_Boolean_parseBoolean($value));
}
function jl_Boolean__clinit_() {
    jl_Boolean_TRUE = jl_Boolean__init_(1);
    jl_Boolean_FALSE = jl_Boolean__init_(0);
    jl_Boolean_TYPE = $rt_cls($rt_booleancls());
}
function ju_NoSuchElementException() {
    jl_RuntimeException.call(this);
}
function ju_NoSuchElementException__init_0() {
    var var_0 = new ju_NoSuchElementException();
    ju_NoSuchElementException__init_1(var_0);
    return var_0;
}
function ju_NoSuchElementException__init_(var_0) {
    var var_1 = new ju_NoSuchElementException();
    ju_NoSuchElementException__init_2(var_1, var_0);
    return var_1;
}
function ju_NoSuchElementException__init_1($this) {
    jl_RuntimeException__init_1($this);
}
function ju_NoSuchElementException__init_2($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
function iaaui_ReusableByteInStream() {
    ji_ByteArrayInputStream.call(this);
}
function iaaui_ReusableByteInStream__init_() {
    var var_0 = new iaaui_ReusableByteInStream();
    iaaui_ReusableByteInStream__init_0(var_0);
    return var_0;
}
function iaaui_ReusableByteInStream__init_0($this) {
    ji_ByteArrayInputStream__init_2($this, $rt_createByteArray(0));
}
function jur_BackReferenceSet() {
    jur_CIBackReferenceSet.call(this);
}
function jur_BackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_BackReferenceSet();
    jur_BackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_BackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    jur_CIBackReferenceSet__init_0($this, $groupIndex, $consCounter);
}
function jur_BackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $group, $shift;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $shift = !$testString.$toString().$startsWith0($group, $stringIndex) ? (-1) : $group.$length();
        if ($shift < 0)
            return (-1);
        $matchResult.$setConsumed($this.$consCounter0, $shift);
        return $this.$next.$matches($stringIndex + $shift | 0, $testString, $matchResult);
    }
    return (-1);
}
function jur_BackReferenceSet_find($this, $strIndex, $testString, $matchResult) {
    var $group, $strLength, $testStr, var$7;
    $group = $this.$getString($matchResult);
    $strLength = $matchResult.$getLeftBound();
    if ($group !== null && ($strIndex + $group.$length() | 0) <= $strLength) {
        $testStr = $testString.$toString();
        while (true) {
            if ($strIndex > $strLength)
                return (-1);
            var$7 = $testStr.$indexOf0($group, $strIndex);
            if (var$7 < 0)
                return (-1);
            if ($this.$next.$matches(var$7 + $group.$length() | 0, $testString, $matchResult) >= 0)
                break;
            $strIndex = var$7 + 1 | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_BackReferenceSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $group, $testStr, var$7;
    $group = $this.$getString($matchResult);
    if ($group === null)
        return (-1);
    $testStr = $testString.$toString();
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf1($group, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if ($this.$next.$matches(var$7 + $group.$length() | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_BackReferenceSet_first($this, $set) {
    return 1;
}
function jur_BackReferenceSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(1211)).$append3($this.$groupIndex0).$toString();
}
function jur_DotQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$lt0 = null;
}
function jur_DotQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_DotQuantifierSet();
    jur_DotQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_DotQuantifierSet__init_0($this, $innerSet, $next, $type, $lt) {
    jur_QuantifierSet__init_0($this, $innerSet, $next, $type);
    $this.$lt0 = $lt;
}
function jur_DotQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $startSearch;
    $strLength = $matchResult.$getRightBound();
    $startSearch = jur_DotQuantifierSet_findLineTerminator($this, $stringIndex, $strLength, $testString);
    if ($startSearch >= 0)
        $strLength = $startSearch;
    if ($strLength > $stringIndex)
        return $this.$next.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_DotQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $res, $nextSearch, var$7, $leftBound;
    $strLength = $matchResult.$getRightBound();
    $res = $this.$next.$find0($stringIndex, $testString, $matchResult);
    if ($res < 0)
        return (-1);
    $nextSearch = jur_DotQuantifierSet_findLineTerminator($this, $res, $strLength, $testString);
    if ($nextSearch >= 0)
        $strLength = $nextSearch;
    var$7 = $this.$next.$findBack($res, $strLength, $testString, $matchResult);
    if ($res < var$7)
        $res = var$7;
    $leftBound = $res > 0 ? jur_DotQuantifierSet_findBackLineTerminator($this, $stringIndex, $res - 1 | 0, $testString) : $res ? (-1) : 0;
    if ($leftBound >= $stringIndex)
        $stringIndex = $leftBound >= $res ? $leftBound : $leftBound + 1 | 0;
    return $stringIndex;
}
function jur_DotQuantifierSet_findLineTerminator($this, $i, $to, $testString) {
    while (true) {
        if ($i >= $to)
            return (-1);
        if ($this.$lt0.$isLineTerminator($testString.$charAt($i)))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
}
function jur_DotQuantifierSet_findBackLineTerminator($this, $from, $i, $testString) {
    while (true) {
        if ($i < $from)
            return (-1);
        if ($this.$lt0.$isLineTerminator($testString.$charAt($i)))
            break;
        $i = $i + (-1) | 0;
    }
    return $i;
}
function jur_DotQuantifierSet_getName($this) {
    return $rt_s(1212);
}
function jn_DoubleBuffer() {
    jn_Buffer.call(this);
}
function iaau_ScreenRecorder$_clinit_$lambda$_3_0() {
    var a = this; jl_Object.call(a);
    a.$_0103 = null;
    a.$_144 = null;
    a.$_212 = null;
}
function iaau_ScreenRecorder$_clinit_$lambda$_3_0__init_(var_0, var_1, var_2) {
    var var_3 = new iaau_ScreenRecorder$_clinit_$lambda$_3_0();
    iaau_ScreenRecorder$_clinit_$lambda$_3_0__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaau_ScreenRecorder$_clinit_$lambda$_3_0__init_0(var$0, var$1, var$2, var$3) {
    jl_Object__init_0(var$0);
    var$0.$_0103 = var$1;
    var$0.$_144 = var$2;
    var$0.$_212 = var$3;
}
function iaau_ScreenRecorder$_clinit_$lambda$_3_0_run(var$0) {
    iaau_ScreenRecorder_lambda$static$0(var$0.$_0103, var$0.$_144, var$0.$_212);
}
function otcit_FloatAnalyzer() {
    jl_Object.call(this);
}
var otcit_FloatAnalyzer_mantissa10Table = null;
var otcit_FloatAnalyzer_exp10Table = null;
function otcit_FloatAnalyzer_$callClinit() {
    otcit_FloatAnalyzer_$callClinit = $rt_eraseClinit(otcit_FloatAnalyzer);
    otcit_FloatAnalyzer__clinit_();
}
function otcit_FloatAnalyzer_analyze($d, $result) {
    var $bits, $mantissa, $exponent, $errorShift, var$7, $decExponent, $binExponentCorrection, $mantissaShift, var$11, $decMantissa, var$13, $error, $upError, $downError, $lowerPos, $upperPos;
    otcit_FloatAnalyzer_$callClinit();
    $bits = $rt_floatToIntBits($d);
    $result.$sign = !($bits & (-2147483648)) ? 0 : 1;
    $mantissa = $bits & 8388607;
    $exponent = $bits >> 23 & 255;
    if (!$mantissa && !$exponent) {
        $result.$mantissa = 0;
        $result.$exponent = 0;
        return;
    }
    $errorShift = 0;
    if ($exponent)
        var$7 = $mantissa | 8388608;
    else {
        var$7 = $mantissa << 1;
        while (Long_eq(Long_and(Long_fromInt(var$7), Long_fromInt(8388608)), Long_ZERO)) {
            var$7 = var$7 << 1;
            $exponent = $exponent + (-1) | 0;
            $errorShift = $errorShift + 1 | 0;
        }
    }
    $decExponent = ju_Arrays_binarySearch(otcit_FloatAnalyzer_exp10Table, $exponent);
    if ($decExponent < 0)
        $decExponent =  -$decExponent - 2 | 0;
    $binExponentCorrection = $exponent - otcit_FloatAnalyzer_exp10Table.data[$decExponent] | 0;
    $mantissaShift = 9 + $binExponentCorrection | 0;
    var$11 = Long_fromInt(var$7);
    $decMantissa = Long_shru(Long_mul(var$11, Long_fromInt(otcit_FloatAnalyzer_mantissa10Table.data[$decExponent])), 32 - $mantissaShift | 0).lo;
    if ($decMantissa >= 1000000000) {
        $decExponent = $decExponent + 1 | 0;
        var$13 = $exponent - otcit_FloatAnalyzer_exp10Table.data[$decExponent] | 0;
        $mantissaShift = 9 + var$13 | 0;
        $decMantissa = Long_shru(Long_mul(var$11, Long_fromInt(otcit_FloatAnalyzer_mantissa10Table.data[$decExponent])), 32 - $mantissaShift | 0).lo;
    }
    var$13 = (31 - $mantissaShift | 0) - $errorShift | 0;
    $error = var$13 >= 0 ? otcit_FloatAnalyzer_mantissa10Table.data[$decExponent] >>> var$13 : otcit_FloatAnalyzer_mantissa10Table.data[$decExponent] <<  -var$13;
    $upError = ($error + 1 | 0) >> 1;
    $downError = $error >> 1;
    if (var$7 == 4194304)
        $downError = $downError >> 2;
    $lowerPos = otcit_FloatAnalyzer_findLowerDistanceToZero($decMantissa, $downError);
    $upperPos = otcit_FloatAnalyzer_findUpperDistanceToZero($decMantissa, $upError);
    var$7 = $rt_compare($lowerPos, $upperPos);
    var$7 = var$7 > 0 ? $rt_imul($decMantissa / $lowerPos | 0, $lowerPos) : var$7 < 0 ? $rt_imul($decMantissa / $upperPos | 0, $upperPos) + $upperPos | 0 : $rt_imul(($decMantissa + ($upperPos / 2 | 0) | 0) / $upperPos | 0, $upperPos);
    if (var$7 >= 1000000000) {
        $decExponent = $decExponent + 1 | 0;
        var$7 = var$7 / 10 | 0;
    } else if (var$7 < 100000000) {
        $decExponent = $decExponent + (-1) | 0;
        var$7 = var$7 * 10 | 0;
    }
    $result.$mantissa = var$7;
    $result.$exponent = $decExponent - 50 | 0;
}
function otcit_FloatAnalyzer_findLowerDistanceToZero($mantissa, $error) {
    var $pos, $mantissaRight;
    otcit_FloatAnalyzer_$callClinit();
    $pos = 10;
    while ($pos <= $error) {
        $pos = $pos * 10 | 0;
    }
    $mantissaRight = $mantissa % $pos | 0;
    if ($mantissaRight >= ($error / 2 | 0))
        $pos = $pos / 10 | 0;
    return $pos;
}
function otcit_FloatAnalyzer_findUpperDistanceToZero($mantissa, $error) {
    var $pos, $mantissaRight;
    otcit_FloatAnalyzer_$callClinit();
    $pos = 10;
    while ($pos <= $error) {
        $pos = $pos * 10 | 0;
    }
    $mantissaRight = $mantissa % $pos | 0;
    if (($pos - $mantissaRight | 0) > ($error / 2 | 0))
        $pos = $pos / 10 | 0;
    return $pos;
}
function otcit_FloatAnalyzer__clinit_() {
    var $decMantissaOne, $exponent, $i, var$4, var$5, var$6, $remainder, $maxMantissa, $shift, var$10, $shiftedOffPart;
    otcit_FloatAnalyzer_mantissa10Table = $rt_createIntArray(100);
    otcit_FloatAnalyzer_exp10Table = $rt_createIntArray(100);
    $decMantissaOne = 2000000000;
    $exponent = 127;
    $i = 0;
    var$4 = $decMantissaOne;
    while ($i < 50) {
        var$5 = otcit_FloatAnalyzer_mantissa10Table.data;
        var$6 = $i + 50 | 0;
        var$5[var$6] = $rt_udiv(var$4, 20);
        otcit_FloatAnalyzer_exp10Table.data[var$6] = $exponent;
        var$6 = $rt_udiv(var$4, 10);
        $remainder = $rt_umod(var$6, 10);
        while (var$6 <= $decMantissaOne && !(var$6 & (-2147483648))) {
            var$6 = var$6 << 1;
            $exponent = $exponent + 1 | 0;
            $remainder = $remainder << 1;
        }
        var$4 = var$6 + ($remainder / 10 | 0) | 0;
        $i = $i + 1 | 0;
    }
    $maxMantissa = 214748364;
    var$4 = 127;
    $i = 0;
    while ($i < 50) {
        $shift = 0;
        var$10 = $decMantissaOne;
        while (var$10 > $maxMantissa) {
            var$10 = var$10 >> 1;
            $shift = $shift + 1 | 0;
            var$4 = var$4 + (-1) | 0;
        }
        var$10 = var$10 * 10 | 0;
        if ($shift <= 0)
            $decMantissaOne = var$10;
        else {
            $shiftedOffPart = Long_fromInt($decMantissaOne & ((1 << $shift) - 1 | 0));
            $decMantissaOne = Long_add(Long_fromInt(var$10), Long_shr(Long_mul($shiftedOffPart, Long_fromInt(10)), $shift)).lo;
        }
        var$5 = otcit_FloatAnalyzer_mantissa10Table.data;
        var$10 = (50 - $i | 0) - 1 | 0;
        var$5[var$10] = $rt_udiv($decMantissaOne, 20);
        otcit_FloatAnalyzer_exp10Table.data[var$10] = var$4;
        $i = $i + 1 | 0;
    }
}
function it_Phases$3$lambda$null$3$lambda$_29_0() {
    var a = this; jl_Object.call(a);
    a.$_0104 = 0;
    a.$_145 = 0;
    a.$_213 = 0.0;
    a.$_34 = 0;
}
function it_Phases$3$lambda$null$3$lambda$_29_0__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new it_Phases$3$lambda$null$3$lambda$_29_0();
    it_Phases$3$lambda$null$3$lambda$_29_0__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function it_Phases$3$lambda$null$3$lambda$_29_0__init_0(var$0, var$1, var$2, var$3, var$4) {
    jl_Object__init_0(var$0);
    var$0.$_0104 = var$1;
    var$0.$_145 = var$2;
    var$0.$_213 = var$3;
    var$0.$_34 = var$4;
}
function it_Phases$3$lambda$null$3$lambda$_29_0_get(var$0, var$1) {
    it_Phases$3_lambda$null$2(var$0.$_0104, var$0.$_145, var$0.$_213, var$0.$_34, var$1);
}
function iaagg_GLOnlyTextureData() {
    var a = this; jl_Object.call(a);
    a.$width13 = 0;
    a.$height12 = 0;
    a.$isPrepared0 = 0;
    a.$mipLevel = 0;
    a.$internalFormat1 = 0;
    a.$format2 = 0;
    a.$type10 = 0;
}
function iaagg_GLOnlyTextureData__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new iaagg_GLOnlyTextureData();
    iaagg_GLOnlyTextureData__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function iaagg_GLOnlyTextureData__init_0($this, $width, $height, $mipMapLevel, $internalFormat, $format, $type) {
    jl_Object__init_0($this);
    $this.$width13 = 0;
    $this.$height12 = 0;
    $this.$isPrepared0 = 0;
    $this.$mipLevel = 0;
    $this.$width13 = $width;
    $this.$height12 = $height;
    $this.$mipLevel = $mipMapLevel;
    $this.$internalFormat1 = $internalFormat;
    $this.$format2 = $format;
    $this.$type10 = $type;
}
function iaagg_GLOnlyTextureData_getType($this) {
    iaag_TextureData$TextureDataType_$callClinit();
    return iaag_TextureData$TextureDataType_Custom;
}
function iaagg_GLOnlyTextureData_isPrepared($this) {
    return $this.$isPrepared0;
}
function iaagg_GLOnlyTextureData_prepare($this) {
    if (!$this.$isPrepared0) {
        $this.$isPrepared0 = 1;
        return;
    }
    $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1213)));
}
function iaagg_GLOnlyTextureData_consumeCustomData($this, $target) {
    iaa_Core_$callClinit();
    iaa_Core_gl.$glTexImage2D($target, $this.$mipLevel, $this.$internalFormat1, $this.$width13, $this.$height12, 0, $this.$format2, $this.$type10, null);
}
function iaagg_GLOnlyTextureData_consumePixmap($this) {
    $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1214)));
}
function iaagg_GLOnlyTextureData_disposePixmap($this) {
    $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1214)));
}
function iaagg_GLOnlyTextureData_getWidth($this) {
    return $this.$width13;
}
function iaagg_GLOnlyTextureData_getHeight($this) {
    return $this.$height12;
}
function iaagg_GLOnlyTextureData_getFormat($this) {
    iaag_Pixmap$Format_$callClinit();
    return iaag_Pixmap$Format_RGBA8888;
}
function iaagg_GLOnlyTextureData_useMipMaps($this) {
    return 0;
}
function iaagg_GLOnlyTextureData_isManaged($this) {
    return 0;
}
function iaas_Scene$addTouchFocus$lambda$_28_0() {
    jl_Object.call(this);
}
function iaas_Scene$addTouchFocus$lambda$_28_0__init_() {
    var var_0 = new iaas_Scene$addTouchFocus$lambda$_28_0();
    iaas_Scene$addTouchFocus$lambda$_28_0__init_0(var_0);
    return var_0;
}
function iaas_Scene$addTouchFocus$lambda$_28_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaas_Scene$addTouchFocus$lambda$_28_0_get(var$0) {
    return iaas_Scene$addTouchFocus$lambda$_28_0_get0(var$0);
}
function iaas_Scene$addTouchFocus$lambda$_28_0_get0(var$0) {
    return iaas_Scene_lambda$addTouchFocus$1();
}
function ju_HashMap$ValueIterator() {
    ju_HashMap$AbstractMapIterator.call(this);
}
function ju_HashMap$ValueIterator__init_(var_0) {
    var var_1 = new ju_HashMap$ValueIterator();
    ju_HashMap$ValueIterator__init_0(var_1, var_0);
    return var_1;
}
function ju_HashMap$ValueIterator__init_0($this, $map) {
    ju_HashMap$AbstractMapIterator__init_0($this, $map);
}
function ju_HashMap$ValueIterator_next($this) {
    ju_HashMap$AbstractMapIterator_makeNext($this);
    return $this.$currentEntry.$value2;
}
function it_Phases$4$lambda$null$7$lambda$_10_0() {
    jl_Object.call(this);
}
function it_Phases$4$lambda$null$7$lambda$_10_0__init_() {
    var var_0 = new it_Phases$4$lambda$null$7$lambda$_10_0();
    it_Phases$4$lambda$null$7$lambda$_10_0__init_0(var_0);
    return var_0;
}
function it_Phases$4$lambda$null$7$lambda$_10_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$4$lambda$null$7$lambda$_10_0_get(var$0, var$1) {
    it_Phases$4_lambda$null$6(var$1);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$015 = null;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1();
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_0($this, $this$0) {
    $this.$this$015 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains($this, $ch) {
    return jl_Character_isJavaIdentifierStart($ch);
}
function it_Phases$2$lambda$null$20$lambda$_4_0() {
    jl_Object.call(this);
    this.$_0105 = 0;
}
function it_Phases$2$lambda$null$20$lambda$_4_0__init_(var_0) {
    var var_1 = new it_Phases$2$lambda$null$20$lambda$_4_0();
    it_Phases$2$lambda$null$20$lambda$_4_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$2$lambda$null$20$lambda$_4_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0105 = var$1;
}
function it_Phases$2$lambda$null$20$lambda$_4_0_move(var$0, var$1) {
    return it_Phases$2_lambda$null$19(var$0.$_0105, var$1);
}
function ju_Arrays() {
    jl_Object.call(this);
}
function ju_Arrays_copyOf0($array, $length) {
    var var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createCharArray($length);
    $sz = jl_Math_min1($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_copyOf($array, $length) {
    var var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createByteArray($length);
    $sz = jl_Math_min1($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_copyOf2($array, $length) {
    var var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createIntArray($length);
    $sz = jl_Math_min1($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_copyOf1($original, $newLength) {
    var var$3, $result, $sz, $i;
    var$3 = $original.data;
    $result = jlr_Array_newInstance(jl_Object_getClass($original).$getComponentType(), $newLength);
    $sz = jl_Math_min1($newLength, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_fill1($a, $fromIndex, $toIndex, $val) {
    var var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
}
function ju_Arrays_fill0($a, $val) {
    ju_Arrays_fill1($a, 0, $a.data.length, $val);
}
function ju_Arrays_fill2($a, $fromIndex, $toIndex, $val) {
    var var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
}
function ju_Arrays_fill($a, $val) {
    ju_Arrays_fill2($a, 0, $a.data.length, $val);
}
function ju_Arrays_binarySearch($a, $key) {
    return ju_Arrays_binarySearch0($a, 0, $a.data.length, $key);
}
function ju_Arrays_binarySearch0($a, $fromIndex, $toIndex, $key) {
    var $u, var$6, $i, $e;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $u = $toIndex - 1 | 0;
    while (true) {
        var$6 = $a.data;
        $i = ($fromIndex + $u | 0) / 2 | 0;
        $e = var$6[$i];
        if ($e == $key)
            break;
        if ($key >= $e) {
            $fromIndex = $i + 1 | 0;
            if ($fromIndex > $u)
                return  -$i - 2 | 0;
        } else {
            $u = $i - 1 | 0;
            if ($u < $fromIndex)
                return  -$i - 1 | 0;
        }
    }
    return $i;
}
function ju_Arrays_equals($a, $a2) {
    var var$3, var$4, var$5, $i;
    if ($a === $a2)
        return 1;
    if ($a !== null && $a2 !== null) {
        var$3 = $a2.data;
        var$4 = $a.data;
        var$5 = var$4.length;
        if (var$5 == var$3.length) {
            $i = 0;
            while ($i < var$5) {
                if (!ju_Objects_equals(var$4[$i], var$3[$i]))
                    return 0;
                $i = $i + 1 | 0;
            }
            return 1;
        }
    }
    return 0;
}
function jl_ConsoleOutputStreamStdout() {
    ji_OutputStream.call(this);
}
function jl_ConsoleOutputStreamStdout__init_() {
    var var_0 = new jl_ConsoleOutputStreamStdout();
    jl_ConsoleOutputStreamStdout__init_0(var_0);
    return var_0;
}
function jl_ConsoleOutputStreamStdout__init_0($this) {
    ji_OutputStream__init_0($this);
}
function jl_ConsoleOutputStreamStdout_write($this, $b) {
    $rt_putStdout($b);
}
function it_Phases$3$lambda$null$16$lambda$_16_0() {
    jl_Object.call(this);
}
function it_Phases$3$lambda$null$16$lambda$_16_0__init_() {
    var var_0 = new it_Phases$3$lambda$null$16$lambda$_16_0();
    it_Phases$3$lambda$null$16$lambda$_16_0__init_0(var_0);
    return var_0;
}
function it_Phases$3$lambda$null$16$lambda$_16_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$3$lambda$null$16$lambda$_16_0_move(var$0, var$1) {
    return it_Phases$3_lambda$null$15(var$1);
}
function jur_CharClass$3() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt = 0;
    a.$val$cc = null;
    a.$this$016 = null;
}
function jur_CharClass$3__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$3();
    jur_CharClass$3__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$3__init_0($this, $this$0, var$2, var$3) {
    $this.$this$016 = $this$0;
    $this.$val$curAlt = var$2;
    $this.$val$cc = var$3;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$3_contains($this, $ch) {
    return !($this.$val$curAlt ^ $this.$this$016.$bits.$get30($ch)) && !($this.$val$curAlt ^ $this.$this$016.$inverted ^ $this.$val$cc.$contains($ch)) ? 0 : 1;
}
function iaagg_CapStyle() {
    jl_Enum.call(this);
}
var iaagg_CapStyle_none = null;
var iaagg_CapStyle_round = null;
var iaagg_CapStyle_square = null;
var iaagg_CapStyle_$VALUES = null;
function iaagg_CapStyle_$callClinit() {
    iaagg_CapStyle_$callClinit = $rt_eraseClinit(iaagg_CapStyle);
    iaagg_CapStyle__clinit_();
}
function iaagg_CapStyle__init_(var_0, var_1) {
    var var_2 = new iaagg_CapStyle();
    iaagg_CapStyle__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaagg_CapStyle_values() {
    iaagg_CapStyle_$callClinit();
    return iaagg_CapStyle_$VALUES.$clone();
}
function iaagg_CapStyle__init_0($this, var$1, var$2) {
    iaagg_CapStyle_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaagg_CapStyle__clinit_() {
    var var$1, var$2;
    iaagg_CapStyle_none = iaagg_CapStyle__init_($rt_s(480), 0);
    iaagg_CapStyle_round = iaagg_CapStyle__init_($rt_s(1215), 1);
    iaagg_CapStyle_square = iaagg_CapStyle__init_($rt_s(1216), 2);
    var$1 = $rt_createArray(iaagg_CapStyle, 3);
    var$2 = var$1.data;
    var$2[0] = iaagg_CapStyle_none;
    var$2[1] = iaagg_CapStyle_round;
    var$2[2] = iaagg_CapStyle_square;
    iaagg_CapStyle_$VALUES = var$1;
}
function jur_CharClass$4() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt0 = 0;
    a.$val$nb = null;
    a.$val$cc0 = null;
    a.$this$017 = null;
}
function jur_CharClass$4__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$4();
    jur_CharClass$4__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$4__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$017 = $this$0;
    $this.$val$curAlt0 = var$2;
    $this.$val$nb = var$3;
    $this.$val$cc0 = var$4;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$4_contains($this, $ch) {
    return $this.$val$curAlt0 ^ (!$this.$val$nb.$contains($ch) && !$this.$val$cc0.$contains($ch) ? 0 : 1) ? 0 : 1;
}
function jur_CharClass$1() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$cc1 = null;
    a.$this$018 = null;
}
function jur_CharClass$1__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$1();
    jur_CharClass$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$1__init_0($this, $this$0, var$2) {
    $this.$this$018 = $this$0;
    $this.$val$cc1 = var$2;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$1_contains($this, $ch) {
    return $this.$val$cc1.$contains($ch);
}
function jur_CharClass$2() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt1 = 0;
    a.$val$cc2 = null;
    a.$this$019 = null;
}
function jur_CharClass$2__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$2();
    jur_CharClass$2__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$2__init_0($this, $this$0, var$2, var$3) {
    $this.$this$019 = $this$0;
    $this.$val$curAlt1 = var$2;
    $this.$val$cc2 = var$3;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$2_contains($this, $ch) {
    return !($this.$val$curAlt1 ^ $this.$this$019.$bits.$get30($ch)) && !($this.$val$curAlt1 ^ $this.$this$019.$inverted ^ $this.$val$cc2.$contains($ch)) ? 1 : 0;
}
function jur_CharClass$7() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz = null;
    a.$this$020 = null;
}
function jur_CharClass$7__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$7();
    jur_CharClass$7__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$7__init_0($this, $this$0, var$2) {
    $this.$this$020 = $this$0;
    $this.$val$clazz = var$2;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$7_contains($this, $ch) {
    return $this.$val$clazz.$contains($ch);
}
function jur_CharClass$8() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz0 = null;
    a.$val$curAlt2 = 0;
    a.$this$021 = null;
}
function jur_CharClass$8__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$8();
    jur_CharClass$8__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$8__init_0($this, $this$0, var$2, var$3) {
    $this.$this$021 = $this$0;
    $this.$val$clazz0 = var$2;
    $this.$val$curAlt2 = var$3;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$8_contains($this, $ch) {
    return !$this.$val$clazz0.$contains($ch) && !($this.$val$curAlt2 ^ $this.$this$021.$bits.$get30($ch)) ? 1 : 0;
}
function jur_CharClass$5() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt3 = 0;
    a.$val$nb0 = null;
    a.$val$cc3 = null;
    a.$this$022 = null;
}
function jur_CharClass$5__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$5();
    jur_CharClass$5__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$5__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$022 = $this$0;
    $this.$val$curAlt3 = var$2;
    $this.$val$nb0 = var$3;
    $this.$val$cc3 = var$4;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$5_contains($this, $ch) {
    return $this.$val$curAlt3 ^ (!$this.$val$nb0.$contains($ch) && !$this.$val$cc3.$contains($ch) ? 0 : 1);
}
function it_Phases$3$lambda$null$18$lambda$_14_0() {
    var a = this; jl_Object.call(a);
    a.$_0106 = 0.0;
    a.$_146 = 0;
}
function it_Phases$3$lambda$null$18$lambda$_14_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$3$lambda$null$18$lambda$_14_0();
    it_Phases$3$lambda$null$18$lambda$_14_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$3$lambda$null$18$lambda$_14_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_0106 = var$1;
    var$0.$_146 = var$2;
}
function it_Phases$3$lambda$null$18$lambda$_14_0_get(var$0, var$1) {
    it_Phases$3_lambda$null$17(var$0.$_0106, var$0.$_146, var$1);
}
function jur_CharClass$6() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz1 = null;
    a.$this$023 = null;
}
function jur_CharClass$6__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$6();
    jur_CharClass$6__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$6__init_0($this, $this$0, var$2) {
    $this.$this$023 = $this$0;
    $this.$val$clazz1 = var$2;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$6_contains($this, $ch) {
    return $this.$val$clazz1.$contains($ch) ? 0 : 1;
}
function it_Phases$3$_init_$lambda$_0_0() {
    jl_Object.call(this);
}
function it_Phases$3$_init_$lambda$_0_0__init_() {
    var var_0 = new it_Phases$3$_init_$lambda$_0_0();
    it_Phases$3$_init_$lambda$_0_0__init_0(var_0);
    return var_0;
}
function it_Phases$3$_init_$lambda$_0_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$3$_init_$lambda$_0_0_run(var$0) {
    it_Phases$3_lambda$$7();
}
function jur_DotSet() {
    jur_JointSet.call(this);
    this.$lt1 = null;
}
function jur_DotSet__init_(var_0) {
    var var_1 = new jur_DotSet();
    jur_DotSet__init_0(var_1, var_0);
    return var_1;
}
function jur_DotSet__init_0($this, $lt) {
    jur_JointSet__init_0($this);
    $this.$lt1 = $lt;
}
function jur_DotSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, $high, var$7, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        var$7 = $stringIndex + 2 | 0;
        if (var$7 <= $strLength) {
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low))
                return $this.$lt1.$isLineTerminator(jl_Character_toCodePoint($high, $low)) ? (-1) : $this.$next.$matches(var$7, $testString, $matchResult);
        }
    }
    return $this.$lt1.$isLineTerminator($high) ? (-1) : $this.$next.$matches(var$5, $testString, $matchResult);
}
function jur_DotSet_getName($this) {
    return $rt_s(554);
}
function jur_DotSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_DotSet_getType($this) {
    return (-2147483602);
}
function jur_DotSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_CharClass$9() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz2 = null;
    a.$val$curAlt4 = 0;
    a.$this$024 = null;
}
function jur_CharClass$9__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$9();
    jur_CharClass$9__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$9__init_0($this, $this$0, var$2, var$3) {
    $this.$this$024 = $this$0;
    $this.$val$clazz2 = var$2;
    $this.$val$curAlt4 = var$3;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$9_contains($this, $ch) {
    return !$this.$val$clazz2.$contains($ch) && !($this.$val$curAlt4 ^ $this.$this$024.$bits.$get30($ch)) ? 0 : 1;
}
function it_Phases$3$_init_$lambda$_0_1() {
    jl_Object.call(this);
}
function it_Phases$3$_init_$lambda$_0_1__init_() {
    var var_0 = new it_Phases$3$_init_$lambda$_0_1();
    it_Phases$3$_init_$lambda$_0_1__init_0(var_0);
    return var_0;
}
function it_Phases$3$_init_$lambda$_0_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$3$_init_$lambda$_0_1_run(var$0) {
    it_Phases$3_lambda$$14();
}
function it_Phases$3$_init_$lambda$_0_2() {
    jl_Object.call(this);
}
function it_Phases$3$_init_$lambda$_0_2__init_() {
    var var_0 = new it_Phases$3$_init_$lambda$_0_2();
    it_Phases$3$_init_$lambda$_0_2__init_0(var_0);
    return var_0;
}
function it_Phases$3$_init_$lambda$_0_2__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$3$_init_$lambda$_0_2_run(var$0) {
    it_Phases$3_lambda$$19();
}
function jl_Character() {
    jl_Object.call(this);
    this.$value7 = 0;
}
var jl_Character_TYPE = null;
var jl_Character_digitMapping = null;
var jl_Character_classMapping = null;
var jl_Character_characterCache = null;
var jl_Character_$$metadata$$0 = null;
var jl_Character_$$metadata$$1 = null;
function jl_Character_$callClinit() {
    jl_Character_$callClinit = $rt_eraseClinit(jl_Character);
    jl_Character__clinit_();
}
function jl_Character__init_(var_0) {
    var var_1 = new jl_Character();
    jl_Character__init_0(var_1, var_0);
    return var_1;
}
function jl_Character__init_0($this, $value) {
    jl_Character_$callClinit();
    jl_Object__init_0($this);
    $this.$value7 = $value;
}
function jl_Character_valueOf($value) {
    var $result;
    jl_Character_$callClinit();
    if ($value >= jl_Character_characterCache.data.length)
        return jl_Character__init_($value);
    $result = jl_Character_characterCache.data[$value];
    if ($result === null) {
        $result = jl_Character__init_($value);
        jl_Character_characterCache.data[$value] = $result;
    }
    return $result;
}
function jl_Character_equals($this, $other) {
    if ($this === $other)
        return 1;
    return $other instanceof jl_Character && $other.$value7 == $this.$value7 ? 1 : 0;
}
function jl_Character_hashCode($this) {
    return $this.$value7;
}
function jl_Character_toString($c) {
    var var$2, var$3;
    jl_Character_$callClinit();
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1);
    var$3.data[0] = $c;
    jl_String__init_2(var$2, var$3);
    return var$2;
}
function jl_Character_isBmpCodePoint($codePoint) {
    jl_Character_$callClinit();
    return $codePoint > 0 && $codePoint <= 65535 ? 1 : 0;
}
function jl_Character_isSupplementaryCodePoint($codePoint) {
    jl_Character_$callClinit();
    return $codePoint >= 65536 && $codePoint <= 1114111 ? 1 : 0;
}
function jl_Character_isHighSurrogate($ch) {
    jl_Character_$callClinit();
    return ($ch & 64512) != 55296 ? 0 : 1;
}
function jl_Character_isLowSurrogate($ch) {
    jl_Character_$callClinit();
    return ($ch & 64512) != 56320 ? 0 : 1;
}
function jl_Character_isSurrogate($ch) {
    jl_Character_$callClinit();
    return !jl_Character_isHighSurrogate($ch) && !jl_Character_isLowSurrogate($ch) ? 0 : 1;
}
function jl_Character_isSurrogatePair($high, $low) {
    jl_Character_$callClinit();
    return jl_Character_isHighSurrogate($high) && jl_Character_isLowSurrogate($low) ? 1 : 0;
}
function jl_Character_toCodePoint($high, $low) {
    jl_Character_$callClinit();
    return (($high & 1023) << 10 | $low & 1023) + 65536 | 0;
}
function jl_Character_codePointAt($a, $index) {
    jl_Character_$callClinit();
    return jl_Character_codePointAt0($a, $index, $a.data.length);
}
function jl_Character_codePointAt0($a, $index, $limit) {
    var var$4, var$5;
    jl_Character_$callClinit();
    if ($index < ($limit - 1 | 0)) {
        var$4 = $a.data;
        if (jl_Character_isHighSurrogate(var$4[$index])) {
            var$5 = $index + 1 | 0;
            if (jl_Character_isLowSurrogate(var$4[var$5]))
                return jl_Character_toCodePoint(var$4[$index], var$4[var$5]);
        }
    }
    return $a.data[$index];
}
function jl_Character_highSurrogate($codePoint) {
    var var$2;
    jl_Character_$callClinit();
    var$2 = $codePoint - 65536 | 0;
    return (55296 | var$2 >> 10 & 1023) & 65535;
}
function jl_Character_lowSurrogate($codePoint) {
    jl_Character_$callClinit();
    return (56320 | $codePoint & 1023) & 65535;
}
function jl_Character_toLowerCase($ch) {
    jl_Character_$callClinit();
    return jl_Character_toLowerCase0($ch) & 65535;
}
function jl_Character_toLowerCase0($ch) {
    jl_Character_$callClinit();
    return otp_Platform_stringFromCharCode($ch).toLowerCase().charCodeAt(0);
}
function jl_Character_toUpperCase0($ch) {
    jl_Character_$callClinit();
    return jl_Character_toUpperCase($ch) & 65535;
}
function jl_Character_toUpperCase($codePoint) {
    jl_Character_$callClinit();
    return otp_Platform_stringFromCharCode($codePoint).toUpperCase().charCodeAt(0);
}
function jl_Character_digit($ch, $radix) {
    jl_Character_$callClinit();
    return jl_Character_digit0($ch, $radix);
}
function jl_Character_digit0($codePoint, $radix) {
    var $d;
    jl_Character_$callClinit();
    if ($radix >= 2 && $radix <= 36) {
        $d = jl_Character_getNumericValue0($codePoint);
        if ($d >= $radix)
            $d = (-1);
        return $d;
    }
    return (-1);
}
function jl_Character_getNumericValue($ch) {
    jl_Character_$callClinit();
    return jl_Character_getNumericValue0($ch);
}
function jl_Character_getNumericValue0($codePoint) {
    var $digitMapping, var$3, $l, $u, $idx, var$7, $val, var$9;
    jl_Character_$callClinit();
    $digitMapping = jl_Character_getDigitMapping();
    var$3 = $digitMapping.data;
    $l = 0;
    $u = (var$3.length / 2 | 0) - 1 | 0;
    while ($u >= $l) {
        $idx = ($l + $u | 0) / 2 | 0;
        var$7 = $idx * 2 | 0;
        $val = var$3[var$7];
        var$9 = $rt_compare($codePoint, $val);
        if (var$9 > 0)
            $l = $idx + 1 | 0;
        else {
            if (var$9 >= 0)
                return var$3[var$7 + 1 | 0];
            $u = $idx - 1 | 0;
        }
    }
    return (-1);
}
function jl_Character_forDigit($digit, $radix) {
    jl_Character_$callClinit();
    if ($radix >= 2 && $radix <= 36 && $digit < $radix)
        return $digit < 10 ? (48 + $digit | 0) & 65535 : ((97 + $digit | 0) - 10 | 0) & 65535;
    return 0;
}
function jl_Character_isDigit($codePoint) {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 9 ? 0 : 1;
}
function jl_Character_getDigitMapping() {
    jl_Character_$callClinit();
    if (jl_Character_digitMapping === null)
        jl_Character_digitMapping = otciu_UnicodeHelper_decodeIntByte((jl_Character_obtainDigitMapping().value !== null ? $rt_str(jl_Character_obtainDigitMapping().value) : null));
    return jl_Character_digitMapping;
}
function jl_Character_obtainDigitMapping() {
    jl_Character_$callClinit();
    if (jl_Character_$$metadata$$0 === null)
        jl_Character_$$metadata$$0 = jl_Character_obtainDigitMapping$$create();
    return jl_Character_$$metadata$$0;
}
function jl_Character_getClasses() {
    jl_Character_$callClinit();
    if (jl_Character_classMapping === null)
        jl_Character_classMapping = otciu_UnicodeHelper_extractRle((jl_Character_obtainClasses().value !== null ? $rt_str(jl_Character_obtainClasses().value) : null));
    return jl_Character_classMapping;
}
function jl_Character_obtainClasses() {
    jl_Character_$callClinit();
    if (jl_Character_$$metadata$$1 === null)
        jl_Character_$$metadata$$1 = jl_Character_obtainClasses$$create();
    return jl_Character_$$metadata$$1;
}
function jl_Character_toChars($codePoint) {
    var var$2, var$3;
    jl_Character_$callClinit();
    if ($codePoint < 65536) {
        var$2 = $rt_createCharArray(1);
        var$2.data[0] = $codePoint & 65535;
        return var$2;
    }
    var$2 = $rt_createCharArray(2);
    var$3 = var$2.data;
    var$3[0] = jl_Character_highSurrogate($codePoint);
    var$3[1] = jl_Character_lowSurrogate($codePoint);
    return var$2;
}
function jl_Character_isISOControl($codePoint) {
    var var$2;
    jl_Character_$callClinit();
    a: {
        b: {
            if (!($codePoint >= 0 && $codePoint <= 31)) {
                if ($codePoint < 127)
                    break b;
                if ($codePoint > 159)
                    break b;
            }
            var$2 = 1;
            break a;
        }
        var$2 = 0;
    }
    return var$2;
}
function jl_Character_getType0($c) {
    jl_Character_$callClinit();
    return jl_Character_getType($c);
}
function jl_Character_getType($codePoint) {
    var $classes, var$3, $l, $u, $i, $range;
    jl_Character_$callClinit();
    if (jl_Character_isBmpCodePoint($codePoint) && jl_Character_isSurrogate($codePoint & 65535))
        return 19;
    $classes = jl_Character_getClasses();
    var$3 = $classes.data;
    $l = 0;
    $u = var$3.length - 1 | 0;
    while ($l <= $u) {
        $i = ($l + $u | 0) / 2 | 0;
        $range = var$3[$i];
        if ($codePoint >= $range.$end3)
            $l = $i + 1 | 0;
        else {
            if ($codePoint >= $range.$start4)
                return $range.$data2.data[$codePoint - $range.$start4 | 0];
            $u = $i - 1 | 0;
        }
    }
    return 0;
}
function jl_Character_isLowerCase($codePoint) {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 2 ? 0 : 1;
}
function jl_Character_isUpperCase($codePoint) {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 1 ? 0 : 1;
}
function jl_Character_isTitleCase($codePoint) {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 3 ? 0 : 1;
}
function jl_Character_isDefined($codePoint) {
    jl_Character_$callClinit();
    return !jl_Character_getType($codePoint) ? 0 : 1;
}
function jl_Character_isLetter($codePoint) {
    jl_Character_$callClinit();
    switch (jl_Character_getType($codePoint)) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            break;
        default:
            return 0;
    }
    return 1;
}
function jl_Character_isLetterOrDigit($ch) {
    jl_Character_$callClinit();
    return jl_Character_isLetterOrDigit0($ch);
}
function jl_Character_isLetterOrDigit0($codePoint) {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 9:
                break;
            case 6:
            case 7:
            case 8:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return 0;
}
function jl_Character_isJavaIdentifierStart($codePoint) {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 10:
            case 23:
            case 26:
                break;
            case 6:
            case 7:
            case 8:
            case 9:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 24:
            case 25:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
}
function jl_Character_isJavaIdentifierPart($codePoint) {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 8:
            case 9:
            case 10:
            case 23:
            case 26:
                break;
            case 7:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 24:
            case 25:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
}
function jl_Character_isUnicodeIdentifierStart($codePoint) {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 10:
                break;
            case 6:
            case 7:
            case 8:
            case 9:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
}
function jl_Character_isUnicodeIdentifierPart($codePoint) {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 8:
            case 9:
            case 10:
            case 23:
                break;
            case 7:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
}
function jl_Character_isIdentifierIgnorable($codePoint) {
    jl_Character_$callClinit();
    a: {
        if (!($codePoint >= 0 && $codePoint <= 8) && !($codePoint >= 14 && $codePoint <= 27)) {
            if ($codePoint < 127)
                break a;
            if ($codePoint > 159)
                break a;
        }
        return 1;
    }
    return jl_Character_getType($codePoint) != 16 ? 0 : 1;
}
function jl_Character_isSpaceChar($codePoint) {
    jl_Character_$callClinit();
    switch (jl_Character_getType($codePoint)) {
        case 12:
        case 13:
        case 14:
            break;
        default:
            return 0;
    }
    return 1;
}
function jl_Character_isWhitespace($ch) {
    jl_Character_$callClinit();
    return jl_Character_isWhitespace0($ch);
}
function jl_Character_isWhitespace0($codePoint) {
    jl_Character_$callClinit();
    switch ($codePoint) {
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 28:
        case 29:
        case 30:
        case 31:
            break;
        case 160:
        case 8199:
        case 8239:
            return 0;
        default:
            return jl_Character_isSpaceChar($codePoint);
    }
    return 1;
}
function jl_Character__clinit_() {
    jl_Character_TYPE = $rt_cls($rt_charcls());
    jl_Character_characterCache = $rt_createArray(jl_Character, 128);
}
function jl_Character_obtainDigitMapping$$create() {
    return {"value" : "oD#*% .%%2%)6%-:%1>%5B%9F%=J%AN%Eo%Is%Mw%Q{%U!\'Y&\'^*\'b.\'f2\'j6\'n:\'r>\'vB\'zF\'!#J\'&#N\'*#R\'.#V\'2#Z\'6#_\':#c\'>#g\'B#k\'F#o\'J#s\'N#w\'R#6)I:)M>)QB)UF)YJ)^N)bR)fV)jZ)n_)rc)vg)zk)!#o)&#s)*#w).#{)2#!+6#&+:#*+>#.+B#2+F#6+J#:+N#>+R#{R# !T#%&T#)*T#-.T#12T#56T#9:T#=>T#ABT#E6a# :a#%>a#)Ba#-Fa#1Ja#5Na#9Ra#=Va#AZa#E:s# >s#%Bs#)Fs#-Js#1Ns#5Rs#9Vs#=Zs#A_s#EZ:% _:%%c:%)g:%-k:%1o:%5s:%9w:%={:%A!<%E2F% 6F%%:F%)>F%-BF%1FF%5JF%9NF%=RF%AVF%EgP% kP%%oP%)sP%-wP%1{P%5!R%9&R%=*R%A.R%E>]% B]%%F]%)J]%-N]%1R]%5V]%9Z]%=_]%Ac]%Esg% wg%%{g%)!i%-&"
    + "i%1*i%5.i%92i%=6i%A:i%EJs% Ns%%Rs%)Vs%-Zs%1_s%5cs%9gs%=ks%Aos%E!!\' &!\'%*!\').!\'-2!\'16!\'5:!\'9>!\'=B!\'AF!\'EV,\' Z,\'%_,\')c,\'-g,\'1k,\'5o,\'9s,\'=w,\'A{,\'E.8\' 28\'%68\'):8\'->8\'1B8\'5F8\'9J8\'=N8\'AR8\'EcB\' gB\'%kB\')oB\'-sB\'1wB\'5{B\'9!D\'=&D\'A*D\'E>L\' BL\'%FL\')JL\'-NL\'1RL\'5VL\'9ZL\'=_L\'AcL\'EsV\' wV\'%{V\')!X\'-&X\'1*X\'5.X\'92X\'=6X\'A:X\'EB_\' F_\'%J_\')N_\'-R_\'1V_\'5Z_\'9__\'=c_\'Ag_\'Esw\' ww\'%{w\')!y\'-&y\'1*y\'5.y\'92y\'=6y\'A:y\'EB!) F!)%J!))N!)-R!)1V!)5Z!)9_!)=c!)Ag!)Egi+ ki+%oi+)si+-wi+1{i+5!k+9&k+=*k+A.k+Eom+ sm+%wm+){m+-!o+1&o+5*o+9.o+=2o+A6o+E>,- B,-%F"
    + ",-)J,--N,-1R,-5V,-9Z,-=_,-Ac,-E>8- B8-%F8-)J8--N8-1R8-5V8-9Z8-=_8-Ac8-E{F- !H-%&H-)*H--.H-12H-56H-9:H-=>H-ABH-E_H- cH-%gH-)kH--oH-1sH-5wH-9{H-=!J-A&J-E!Z- &Z-%*Z-).Z--2Z-16Z-5:Z-9>Z-=BZ-AFZ-E2c- 6c-%:c-)>c--Bc-1Fc-5Jc-9Nc-=Rc-AVc-EJo- No-%Ro-)Vo--Zo-1_o-5co-9go-=ko-Aoo-E.q- 2q-%6q-):q-->q-1Bq-5Fq-9Jq-=Nq-ARq-E&4r *4r%.4r)24r-64r1:4r5>4r9B4r=F4rAJ4rE{or !qr%&qr)*qr-.qr12qr56qr9:qr=>qrABqrE&ur *ur%.ur)2ur-6ur1:ur5>ur9Bur=FurAJurE**t .*t%2*t)6*t-:*t1>*t5B*t9F*t=J*tAN*tEN,t R,t%V,t)Z,t-_,t1c,t5g,t9k,t=o,tAs,tE_"
    + "4t c4t%g4t)k4t-o4t1s4t5w4t9{4t=!6tA&6tEgXt kXt%oXt)sXt-wXt1{Xt5!Zt9&Zt=*ZtA.ZtE{c@# !e@#%&e@#)*e@#-.e@#12e@#56e@#9:e@#=>e@#ABe@#Ece@#Ige@#Mke@#Qoe@#Use@#Ywe@#^{e@#b!g@#f&g@#j*g@#n.g@#r2g@#v6g@#z:g@#!#>g@#&#Bg@#*#Fg@#.#Jg@#2#Ng@#6#Rg@#:#Vg@#>#Zg@#B#_g@#F#cg@#J#gg@#N#kg@#R#*i@#I.i@#M2i@#Q6i@#U:i@#Y>i@#^Bi@#bFi@#fJi@#jNi@#nRi@#rVi@#vZi@#z_i@#!#ci@#&#gi@#*#ki@#.#oi@#2#si@#6#wi@#:#{i@#>#!k@#B#&k@#F#*k@#J#.k@#N#2k@#R#s&D# w&D#%{&D#)!(D#-&(D#1*(D#5.(D#92(D#=6(D#A:(D#E2.H# 6.H#%:.H#)>.H#-B.H#1F.H#5J.H#9N.H#=R.H#AV."
    + "H#EwuH# {uH#%!wH#)&wH#-*wH#1.wH#52wH#96wH#=:wH#A>wH#Ew$J# {$J#%!&J#)&&J#-*&J#1.&J#52&J#96&J#=:&J#A>&J#E{*J# !,J#%&,J#)*,J#-.,J#12,J#56,J#9:,J#=>,J#AB,J#E_8J# c8J#%g8J#)k8J#-o8J#1s8J#5w8J#9{8J#=!:J#A&:J#E2RJ# 6RJ#%:RJ#)>RJ#-BRJ#1FRJ#5JRJ#9NRJ#=RRJ#AVRJ#ENqJ# RqJ#%VqJ#)ZqJ#-_qJ#1cqJ#5gqJ#9kqJ#=oqJ#AsqJ#E&}J# *}J#%.}J#)2}J#-6}J#1:}J#5>}J#9B}J#=F}J#AJ}J#Eg@L# k@L#%o@L#)s@L#-w@L#1{@L#5!BL#9&BL#=*BL#A.BL#EZJL# _JL#%cJL#)gJL#-kJL#1oJL#5sJL#9wJL#={JL#A!LL#ENTL# RTL#%VTL#)ZTL#-_TL#1cTL#5gTL#9kTL#=oTL#AsTL#E:{L# >{L#"
    + "%B{L#)F{L#-J{L#1N{L#5R{L#9V{L#=Z{L#A_{L#ERkN# VkN#%ZkN#)_kN#-ckN#1gkN#5kkN#9okN#=skN#AwkN#E_$P# c$P#%g$P#)k$P#-o$P#1s$P#5w$P#9{$P#=!&P#A&&P#E.,P# 2,P#%6,P#):,P#->,P#1B,P#5F,P#9J,P#=N,P#AR,P#EFau# Jau#%Nau#)Rau#-Vau#1Zau#5_au#9cau#=gau#Akau#Eouu# suu#%wuu#){uu#-!wu#1&wu#5*wu#9.wu#=2wu#A6wu#EF0N% J0N%%N0N%)R0N%-V0N%1Z0N%5_0N%9c0N%=g0N%Ak0N%Eo0N% s0N%%w0N%){0N%-!2N%1&2N%5*2N%9.2N%=22N%A62N%E:2N% >2N%%B2N%)F2N%-J2N%1N2N%5R2N%9V2N%=Z2N%A_2N%Ec2N% g2N%%k2N%)o2N%-s2N%1w2N%5{2N%9!4N%=&4N%A*4N%E.4N% 24N%%64N%):4N%->"
    + "4N%1B4N%5F4N%9J4N%=N4N%AR4N%ERJR% VJR%%ZJR%)_JR%-cJR%1gJR%5kJR%9oJR%=sJR%AwJR%E>qR% BqR%%FqR%)JqR%-NqR%1RqR%5VqR%9ZqR%=_qR%AcqR%E:FV% >FV%%BFV%)FFV%-JFV%1NFV%5RFV%9VFV%=ZFV%A_FV%E"};
}
function jl_Character_obtainClasses$$create() {
    return {"value" : "PA-Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:PB-9[%=9<=&>:1=<=:L#<#Y#<,&?L$9B8:B(C9:C)!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!C$B##!#B##B$C#B%#B##B$C$B##B##!#!#B##!C#!#B##B$#!#B#C#&!C$F%!$#!$#!$#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!C#!$#!#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C(B##B#C#!#B%#!#!#!#!Cg&C<E3]%E-]/E&](%<%]2b\'Q! !#!#%<!#A#%C$9!A%]#!9B$ ! B##B2 B*CD!C#B$C$!#!#!#!#!#!#!#!#!#!#!#!C&!#:!#B#C#BTCQ!#!#!#!#"
    + "!#!#!#!#!#!#!#!#!#!#!#!#!#=G&H#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!# BGA#%Y\'CJ95A#^#; GN5\'9G#9G#9\'A)F<A%F%Y#A,Q\'Z$Y#;Y#^#G,91 Y#FA%F+G6J+Y%F#\'b&D! 9&G(1=G\'E#G#=G%F#J+F$^#&Y/ 1&\'F?G<A#b&:! G,&A/J+FBG*E#=Y$%A#\'[#F7G%%G*%G$%G&A#Y0 F:G$A#9 F,AVF6 F)A6G01GA)FW\')\'&I$G)I%\'I#&G(F+G#Y#J+9%F0\'I# F)A#F#A#F7 F( &A$F%A#\'&I$G%A#I#A#I#\'&A))A%F# F$G#A#J+F#[#L\'=;&9\'A#G#) F\'A%F#A#F7 F( F# F# F#A#\' "

    + "I#F) FEA%G/)G&9G#F&G, GE ^)\'^\' ^#Y&^%Y#AFFLI#G%)G\')G#I#G#&J+Y\'F\'I#G#F%G$&I$F#I(F$G%F.\'I#G#I\'\'&)J+I$\'^#BG !A&!A#CL9%C$b&*&  F%A#F( & F%A#FJ F%A#FB F%A#F( & F%A#F0 FZ F%A#FeA#G$Y*L5A$F1^+A\'b!7! A#C\'A#5b&M* =9F2-F;67A$FmY$K$F)A(F. F%G$A,F3G$Y#A*F3G#A-F. F$ G#A-FUG#)G(I)\'I#G,Y$%Y$;&\'A#J+A\'L+A\'Y\'5Y%G$1 J+A\'FD%FVA(F&G#FC\'&A&FhA+F@ G$I%G#I$A%I#\'I\'G$A%=A$Y#J+F?A#F&A,FMA%F;A\'J+,A$^CF8G#I#\'A#Y#FV)\')G( \')\'I#G)I\'G+A#\'J+A\'J+A\'Y(%Y\'A#G/(AcG%)FP\')G&)\'I&\'I#F(A%J+Y(^+G*^*A$G#)F?)G%I#G#)G$F#J+FM\')G#I$\')G$I#A)Y%FEI)G)I#G#A$Y&"
    + "J+A$F$J+F?E\'Y#C*A(BLA#B$Y)A)G$9G.)G(F%\'F\'\'F#)G#&A&CMEaC.%CCEFG[ G&!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*B)C\'A#B\'A#C)B)C)B)C\'A#B\'A#C) ! ! ! !C)B)C/A#C)D)C)D)C)D)C& C#B%$<#]$C$ C#B%$]$C%A#C#B% ]$C)B&]$A#C$ C#B%$]# M,Q&U\'Y#>?6_#?6>Y)./Q&-Y*>?Y%X#Y$:67Y,:98Y+-Q& Q+,%A#L\'Z$67%L+Z$67 E.A$[AA1G.H%\'H$G-A0^#"
    + "!^%!^##B$C#B$#=!^#:B&^\'!=!=!=B%=#B%#F%#^#C#B#Z&!C%=:^##=L1KD!#K%,^#A%Z&^&Z#^%:^#:^#:^(:^@Z#^#:=:^@b:-% ^)6767^5Z#^(67b=2! :^?Z:^IZ\'^gA:^,A6L^^pL7b=X# :^*:^WZ)b=P! :b=Y$ 67676767676767L?^MZ&67Z@6767676767Z1b= % b:$# 6767676767676767676767Za6767ZA67b:#% ^QZ6^#Z\'^HA#^AA#b=I! BP CP !#B$C#!#!#!#B%#!C#!C\'E#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#^\'!#!#G$!#A&Y%,Y#CG #A&#A#FYA(%9A/\'F8A*F( F( F( F( F( F( F( F( GAY#>?>?Y$>?9>?Y*5Y#59>?Y#>?67676767Y&%Y+U#Y%"
    + "596Y.AQ^; b=:! A-b=7$ A;^-A%-Y$=%&+6767676767^#6767676756W#=K*G%I#5E&^#K$%&9^# b&7! A#G#]#E#&5b&;! 9E$&A&FL b&?!  ^#L%^+F<A&^EA-F1^@ L+^?L)=L0^AL+^HL0b= & &b UG!&A+^b&b   %b O(!&A1F6%b&X2 A$^XA*FIE\'Y#b&-% %Y$F1J+F#A5!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#&\'H$9G+9%!#!#!#!#!#!#!#!#!#!#!#!#!#!#E#G#FhK+G#Y\'A)]8E*]#!#!#!#!#!#!#!C$!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#%C)!#!#B##!#!#!#!#%]#!#!#&!#!C$!#!#!#!#!#!#!#!#!#!#B&#B&#!#!#!#!#!#A#!#B$AQ&E##F(\'F$\'F%\'F8I#G#)^%A%L\'^#;=A\'FUY%A)I#F"
    + "SI1G#A)Y#J+A\'G3F\'Y$&9F#\'J+F=G)Y#F8G,I#A,9F>A$G$)FP\'I#G%I#G#I$Y. %J+A%Y#F&\'%F*J+F& FJG\'I#G#I#G#A*F$\'F)\')A#J+A#Y%F1%F\'^$&)\')FS\'&G$F#G#F&G#&\'&A9F#%Y#F,)G#I#Y#&E#)\'A+F\'A#F\'A#F\'A*F( F( CL<E%C)A)b#1! FDI#\'I#\'I#9)\'A#J+A\'&b CO#&A-F8A%FRA%4b `. T#b `! T#b `0 43b `D!3b&O& A#b&K! AGC(A-C&A&&\'F+:F. F& & F# F# b&M! ]1A2b&L& 76A1FbA#FWAIF-;=A#G1Y(679A\'G19U#X#6767676767676767Y#67Y%X$Y$ Y%5676767Y$:5Z$ 9;Y#A%F& b&(# A#1 Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:67967Y#F+%FNE#F@A$F\'A#F\'A#F\'A#F$A$[#:<=[# =Z%^#A+Q$^#A#F- F; F4 F# F0"
    + "A#F/ACb&]! A&Y$A%LNA$^*KVL%^2L#^$ ^-A%=AP^N\'b ## F>A$FRA0\'L<A%FAL%A*F5+F)+A&FGG&A&F? 9FEA%F)9K&AKBICIFpA#J+A\'BEA%CEA%FIA)FUA,9b 1# b&X% A*F7A+F)b 9# F\'A#& FM F#A$&A#F8 9L)F8^#L(F@A)L*AQF4 F#A&L&F7L\'A$9F;A&9AbFYA%L#F#L1A#LO&G$ G#A&G%F% F$ F>A#G$A%\'L*A(Y*A(F>L#9F>L$AAF)=F=G#A%L&Y(A*FWA$Y(F7A#L)F4A&L)F3A(Y%A-L(b 1! FkAXBTA.CTA(L\'FEG%A)J+b G% L@b !# F>L+&A)F7G,L%Y&b \'# F8A*)\')FVG0Y(A%L5J+A0G$)FNI$G%I#G#Y#1Y%A,1A#F:A(J+A\'G$FEG&)G) J+Y%&I#A*FD\'Y#&A*G#)FQI$G*I#F%Y%G%9A#J+&9&Y$ L5A,F3 F:I$G$I#\')G#Y\'\'AcF( & F% F0 F+"
    + "9A\'FP\'I$G)A&J+A\'G#I# F)A#F#A#F7 F( F# F& G#&I#\'I%A#I#A#I$A#&A\')A&F&I#A#G(A$G&b ,# FVI$G)I#G$)\'F%Y&J+ 9 9\'&AAFQI$G\')\'I%G#)G#F#9&A)J+b G# FPI$G%A#I%G#)G#Y8F%G#ACFQI$G)I#\')G#Y$&A,J+A\'Y.A4FL\')\'I#G\')\'&A(J+AWF<A#G$I#G%)G&A%J+L#Y$=b  $ FMI$G*)G#9b E! BACAJ+L*A-&b A# F)A#FHI$G%A#G#I%\'&9&)A<&G+FIG\')&G%Y)\'A)&G\'I#G$FOG.)G#Y$&Y&A>FZb (% F* FF)G( G\')\'&Y&A+J+L4A$Y#F?A#G7 )G()G#)G#AkF( F# FGG\'A$\' G# G(&\'A)J+A\'F\' F# FAI& G# I#\')\'&A(J+b W% F4G#I#Y#b ($ L6^)[%^2A.9b&;/ b G! b+P!  Y&A,b&%$ b ^K b&P1  Q*b (a b&(* b Z\'#b&Z) A(F"
    + "@ J+A%Y#b A! F?A#G&9A+FQG(Y&^%E%9=A+J+ L( F6A&F4b Q+ BACAL8Y%b F! FmA%\'&IXA(G%E.AbE#9%A=&b W@!&A)b&T, b .5#b&@% ARF$A2F%A)b&-\' b %E b&L! A&F.A$F*A(F+A#=G#9Q%b =.!b=W$ A+^HA#^^I#G$^$I\'Q)G)^#G(^?G%^]A8^dG$=b ;# L5A-b=8! A*L:b (# B;C;B;C( C3B;C;! B#A#!A#B#A#B% B)C% # C( C,B;C;B# B%A#B) B( C;B# B% B& !A$B( C;B;C;B;C;B;C;B;C;B;C;B;C=A#B::C::C\'B::C::C\'B::C::C\'B::C::C\'B::C::C\'!#A#JSb= ) GX^%GS^)\'^/\'^#Y&A0G& G0b 16 G( G2A#G( G# G&b 6$ FNA$G(E(A#J+A%&=b Q& FMG%J+A&;b  5 b&&$ A#L*G(AJBCCCG(%A%J+A%Y#b 2- L]=L$;L%AnLN="
    + "L0b #$ F% F< F# &A#& F+ F% & &A\'&A%& & & F$ F# &A#& & & & & F# &A#F% F( F% F% & F+ F2A&F$ F& F2AUZ#b /% ^MA%b=E! A-^0A#^0 ^0 ^FA+L.A$b=>! A$^_AZ^>A.^MA%^*A(^#A/^\'b ;# b=]$ ]&b=7, A+^.A$^,A&b=U! A-b=:! A(^-A5^-A%^YA)^+A\'^IA)^?b 3! ^- b=F!  ^%A$^JA#^\'A$^>A#b=(# A-^/A#^%A%^$A&^$A.^\'b K6 &b   %b   %b 6<#&AJ&b T !&A,&b =$ &A#&b  ;!&A/&b PU!&b @Q b&?) b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   "
    + "%b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b D8 1A?b1A! b  # b\'Q$ b   %b   %b   %b 1Y$3b   %b   %b   %b ^a$3A#3b   %b   %b   %b ^a$3"};
}
function it_Phases$4$lambda$$12$lambda$_5_0() {
    jl_Object.call(this);
}
function it_Phases$4$lambda$$12$lambda$_5_0__init_() {
    var var_0 = new it_Phases$4$lambda$$12$lambda$_5_0();
    it_Phases$4$lambda$$12$lambda$_5_0__init_0(var_0);
    return var_0;
}
function it_Phases$4$lambda$$12$lambda$_5_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$4$lambda$$12$lambda$_5_0_run(var$0) {
    it_Phases$4_lambda$null$11();
}
function jur_CICharSet() {
    var a = this; jur_LeafSet.call(a);
    a.$ch2 = 0;
    a.$supplement = 0;
}
function jur_CICharSet__init_(var_0) {
    var var_1 = new jur_CICharSet();
    jur_CICharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_CICharSet__init_0($this, $ch) {
    jur_LeafSet__init_2($this);
    $this.$ch2 = $ch;
    $this.$supplement = jur_Pattern_getSupplement($ch);
}
function jur_CICharSet_accepts($this, $strIndex, $testString) {
    return $this.$ch2 != $testString.$charAt($strIndex) && $this.$supplement != $testString.$charAt($strIndex) ? (-1) : 1;
}
function jur_CICharSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(1217)).$append0($this.$ch2).$toString();
}
function jur_SupplCharSet() {
    var a = this; jur_LeafSet.call(a);
    a.$high = 0;
    a.$low0 = 0;
    a.$ch3 = 0;
}
function jur_SupplCharSet__init_(var_0) {
    var var_1 = new jur_SupplCharSet();
    jur_SupplCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_SupplCharSet__init_0($this, $ch) {
    var $chUTF16, var$3;
    jur_LeafSet__init_2($this);
    $this.$charCount = 2;
    $this.$ch3 = $ch;
    $chUTF16 = jl_Character_toChars($ch);
    var$3 = $chUTF16.data;
    $this.$high = var$3[0];
    $this.$low0 = var$3[1];
}
function jur_SupplCharSet_accepts($this, $strIndex, $testString) {
    var var$3, $high, $low;
    var$3 = $strIndex + 1 | 0;
    $high = $testString.$charAt($strIndex);
    $low = $testString.$charAt(var$3);
    return $this.$high == $high && $this.$low0 == $low ? 2 : (-1);
}
function jur_SupplCharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$6, $ch;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while ($strIndex < $strLength) {
        var$6 = $testStr.$indexOf1($this.$high, $strIndex);
        if (var$6 < 0)
            return (-1);
        $strIndex = var$6 + 1 | 0;
        if ($strIndex >= $strLength)
            continue;
        $ch = $testStr.$charAt($strIndex);
        if ($this.$low0 == $ch && $this.$next.$matches($strIndex + 1 | 0, $testString, $matchResult) >= 0)
            return $strIndex + (-1) | 0;
        $strIndex = $strIndex + 1 | 0;
    }
    return (-1);
}
function jur_SupplCharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $testStr, var$6, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$6 = $testStr.$lastIndexOf0($this.$low0, $lastIndex);
            var$7 = var$6 + (-1) | 0;
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if ($this.$high == $testStr.$charAt(var$7) && $this.$next.$matches(var$7 + 2 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_SupplCharSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(58)).$append0($this.$high).$append0($this.$low0).$toString();
}
function jur_SupplCharSet_getCodePoint($this) {
    return $this.$ch3;
}
function jur_SupplCharSet_first($this, $set) {
    if ($set instanceof jur_SupplCharSet)
        return $set.$getCodePoint() != $this.$ch3 ? 0 : 1;
    if ($set instanceof jur_SupplRangeSet)
        return $set.$contains($this.$ch3);
    if ($set instanceof jur_CharSet)
        return 0;
    if (!($set instanceof jur_RangeSet))
        return 1;
    return 0;
}
function it_Phases$2$lambda$null$8$lambda$_16_0() {
    jl_Object.call(this);
    this.$_0107 = 0.0;
}
function it_Phases$2$lambda$null$8$lambda$_16_0__init_(var_0) {
    var var_1 = new it_Phases$2$lambda$null$8$lambda$_16_0();
    it_Phases$2$lambda$null$8$lambda$_16_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$2$lambda$null$8$lambda$_16_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0107 = var$1;
}
function it_Phases$2$lambda$null$8$lambda$_16_0_get(var$0, var$1) {
    it_Phases$2_lambda$null$7(var$0.$_0107, var$1);
}
function i_UI$lambda$setup$5$lambda$_14_0() {
    jl_Object.call(this);
    this.$_0108 = null;
}
function i_UI$lambda$setup$5$lambda$_14_0__init_(var_0) {
    var var_1 = new i_UI$lambda$setup$5$lambda$_14_0();
    i_UI$lambda$setup$5$lambda$_14_0__init_0(var_1, var_0);
    return var_1;
}
function i_UI$lambda$setup$5$lambda$_14_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0108 = var$1;
}
function i_UI$lambda$setup$5$lambda$_14_0_get(var$0, var$1) {
    i_UI$lambda$setup$5$lambda$_14_0_get0(var$0, var$1);
}
function i_UI$lambda$setup$5$lambda$_14_0_get0(var$0, var$1) {
    i_UI_lambda$null$4(var$0.$_0108, var$1);
}
function it_Phases$3$_init_$lambda$_0_3() {
    jl_Object.call(this);
}
function it_Phases$3$_init_$lambda$_0_3__init_() {
    var var_0 = new it_Phases$3$_init_$lambda$_0_3();
    it_Phases$3$_init_$lambda$_0_3__init_0(var_0);
    return var_0;
}
function it_Phases$3$_init_$lambda$_0_3__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$3$_init_$lambda$_0_3_run(var$0) {
    it_Phases$3_lambda$$23();
}
function iaau_StaticReset() {
    jl_Object.call(this);
    this.$files = null;
}
function iaau_StaticReset__init_() {
    var var_0 = new iaau_StaticReset();
    iaau_StaticReset__init_0(var_0);
    return var_0;
}
function iaau_StaticReset__init_0($this) {
    jl_Object__init_0($this);
}
function iaau_StaticReset_check($this) {
    var var$1;
    if ($this.$files !== null) {
        var$1 = $this.$files;
        iaa_Core_$callClinit();
        if (var$1 === iaa_Core_files)
            return 0;
    }
    iaa_Core_$callClinit();
    $this.$files = iaa_Core_files;
    return 1;
}
function iaamg_Vector3() {
    var a = this; jl_Object.call(a);
    a.$x6 = 0.0;
    a.$y6 = 0.0;
    a.$z3 = 0.0;
}
var iaamg_Vector3_X = null;
var iaamg_Vector3_Y = null;
var iaamg_Vector3_Z = null;
var iaamg_Vector3_Zero = null;
var iaamg_Vector3_tmpMat = null;
function iaamg_Vector3_$callClinit() {
    iaamg_Vector3_$callClinit = $rt_eraseClinit(iaamg_Vector3);
    iaamg_Vector3__clinit_();
}
function iaamg_Vector3__init_0() {
    var var_0 = new iaamg_Vector3();
    iaamg_Vector3__init_1(var_0);
    return var_0;
}
function iaamg_Vector3__init_(var_0, var_1, var_2) {
    var var_3 = new iaamg_Vector3();
    iaamg_Vector3__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaamg_Vector3__init_1($this) {
    iaamg_Vector3_$callClinit();
    jl_Object__init_0($this);
}
function iaamg_Vector3__init_2($this, $x, $y, $z) {
    iaamg_Vector3_$callClinit();
    jl_Object__init_0($this);
    $this.$set23($x, $y, $z);
}
function iaamg_Vector3_set($this, $x, $y, $z) {
    $this.$x6 = $x;
    $this.$y6 = $y;
    $this.$z3 = $z;
    return $this;
}
function iaamg_Vector3_set0($this, $vector) {
    return $this.$set23($vector.$x6, $vector.$y6, $vector.$z3);
}
function iaamg_Vector3_scl($this, $scalar) {
    return $this.$set23($this.$x6 * $scalar, $this.$y6 * $scalar, $this.$z3 * $scalar);
}
function iaamg_Vector3_len2($this) {
    return $this.$x6 * $this.$x6 + $this.$y6 * $this.$y6 + $this.$z3 * $this.$z3;
}
function iaamg_Vector3_nor($this) {
    var $len2;
    $len2 = $this.$len2();
    if ($len2 !== 0.0 && $len2 !== 1.0)
        return $this.$scl1(1.0 / jl_Math_sqrt($len2));
    return $this;
}
function iaamg_Vector3_toString($this) {
    return jl_StringBuilder__init_().$append($rt_s(1173)).$append13($this.$x6).$append($rt_s(430)).$append13($this.$y6).$append($rt_s(430)).$append13($this.$z3).$append($rt_s(364)).$toString();
}
function iaamg_Vector3_equals($this, $obj) {
    var $other;
    if ($this === $obj)
        return 1;
    if ($obj === null)
        return 0;
    if (jl_Object_getClass($this) !== jl_Object_getClass($obj))
        return 0;
    $other = $obj;
    if ($rt_floatToIntBits($this.$x6) != $rt_floatToIntBits($other.$x6))
        return 0;
    if ($rt_floatToIntBits($this.$y6) != $rt_floatToIntBits($other.$y6))
        return 0;
    return $rt_floatToIntBits($this.$z3) != $rt_floatToIntBits($other.$z3) ? 0 : 1;
}
function iaamg_Vector3__clinit_() {
    iaamg_Vector3_X = iaamg_Vector3__init_(1.0, 0.0, 0.0);
    iaamg_Vector3_Y = iaamg_Vector3__init_(0.0, 1.0, 0.0);
    iaamg_Vector3_Z = iaamg_Vector3__init_(0.0, 0.0, 1.0);
    iaamg_Vector3_Zero = iaamg_Vector3__init_(0.0, 0.0, 0.0);
    iaamg_Vector3_tmpMat = iaam_Matrix3__init_();
}
function iaas_Scene$keyDown$lambda$_25_0() {
    jl_Object.call(this);
}
function iaas_Scene$keyDown$lambda$_25_0__init_() {
    var var_0 = new iaas_Scene$keyDown$lambda$_25_0();
    iaas_Scene$keyDown$lambda$_25_0__init_0(var_0);
    return var_0;
}
function iaas_Scene$keyDown$lambda$_25_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaas_Scene$keyDown$lambda$_25_0_get(var$0) {
    return iaas_Scene$keyDown$lambda$_25_0_get0(var$0);
}
function iaas_Scene$keyDown$lambda$_25_0_get0(var$0) {
    return iaase_InputEvent__init_();
}
function iaagg_ScissorStack() {
    jl_Object.call(this);
}
var iaagg_ScissorStack_viewport = null;
var iaagg_ScissorStack_tmp = null;
var iaagg_ScissorStack_scissors = null;
function iaagg_ScissorStack_$callClinit() {
    iaagg_ScissorStack_$callClinit = $rt_eraseClinit(iaagg_ScissorStack);
    iaagg_ScissorStack__clinit_();
}
function iaagg_ScissorStack_pushScissors($scissor) {
    var $parent, $minX, $maxX, var$5, $minY, $maxY, var$8;
    iaagg_ScissorStack_$callClinit();
    a: {
        iaagg_ScissorStack_fix($scissor);
        if (!iaagg_ScissorStack_scissors.$size) {
            if ($scissor.$width0 >= 1.0 && $scissor.$height0 >= 1.0) {
                iaagg_Draw_flush();
                iaa_Core_$callClinit();
                iaa_Core_gl.$glEnable(3089);
                break a;
            }
            return 0;
        }
        $parent = iaagg_ScissorStack_scissors.$get(iaagg_ScissorStack_scissors.$size - 1 | 0);
        $minX = jl_Math_max($parent.$x1, $scissor.$x1);
        $maxX = jl_Math_min($parent.$x1 + $parent.$width0, $scissor.$x1 + $scissor.$width0);
        var$5 = $maxX - $minX;
        if (var$5 < 1.0)
            return 0;
        $minY = jl_Math_max($parent.$y1, $scissor.$y1);
        $maxY = jl_Math_min($parent.$y1 + $parent.$height0, $scissor.$y1 + $scissor.$height0);
        var$8 = $maxY - $minY;
        if (var$8 < 1.0)
            return 0;
        iaagg_Draw_flush();
        $scissor.$x1 = $minX;
        $scissor.$y1 = $minY;
        $scissor.$width0 = var$5;
        $scissor.$height0 = jl_Math_max(1.0, var$8);
    }
    iaagg_ScissorStack_scissors.$add1($scissor);
    iaagg_HdpiUtils_glScissor($scissor.$x1 | 0, $scissor.$y1 | 0, $scissor.$width0 | 0, $scissor.$height0 | 0);
    return 1;
}
function iaagg_ScissorStack_popScissors() {
    var $old, $scissor;
    iaagg_ScissorStack_$callClinit();
    iaagg_Draw_flush();
    $old = iaagg_ScissorStack_scissors.$pop();
    if (!iaagg_ScissorStack_scissors.$size) {
        iaa_Core_$callClinit();
        iaa_Core_gl.$glDisable(3089);
    } else {
        $scissor = iaagg_ScissorStack_scissors.$peek();
        iaagg_HdpiUtils_glScissor($scissor.$x1 | 0, $scissor.$y1 | 0, $scissor.$width0 | 0, $scissor.$height0 | 0);
    }
    return $old;
}
function iaagg_ScissorStack_fix($rect) {
    iaagg_ScissorStack_$callClinit();
    $rect.$x1 = jl_Math_round0($rect.$x1);
    $rect.$y1 = jl_Math_round0($rect.$y1);
    $rect.$width0 = jl_Math_round0($rect.$width0);
    $rect.$height0 = jl_Math_round0($rect.$height0);
    if ($rect.$width0 < 0.0) {
        $rect.$width0 =  -$rect.$width0;
        $rect.$x1 = $rect.$x1 - $rect.$width0;
    }
    if ($rect.$height0 < 0.0) {
        $rect.$height0 =  -$rect.$height0;
        $rect.$y1 = $rect.$y1 - $rect.$height0;
    }
}
function iaagg_ScissorStack_calculateScissors($camera, $viewportX, $viewportY, $viewportWidth, $viewportHeight, $batchTransform, $area, $scissor) {
    iaagg_ScissorStack_$callClinit();
    iaagg_ScissorStack_tmp.$set2($area.$x1, $area.$y1);
    iaagg_ScissorStack_tmp.$mul0($batchTransform);
    $camera.$project(iaagg_ScissorStack_tmp, $viewportX, $viewportY, $viewportWidth, $viewportHeight);
    $scissor.$x1 = iaagg_ScissorStack_tmp.$x0;
    $scissor.$y1 = iaagg_ScissorStack_tmp.$y0;
    iaagg_ScissorStack_tmp.$set2($area.$x1 + $area.$width0, $area.$y1 + $area.$height0);
    iaagg_ScissorStack_tmp.$mul0($batchTransform);
    $camera.$project(iaagg_ScissorStack_tmp, $viewportX, $viewportY, $viewportWidth, $viewportHeight);
    $scissor.$width0 = iaagg_ScissorStack_tmp.$x0 - $scissor.$x1;
    $scissor.$height0 = iaagg_ScissorStack_tmp.$y0 - $scissor.$y1;
}
function iaagg_ScissorStack__clinit_() {
    iaagg_ScissorStack_viewport = iaamg_Rectangle__init_0();
    iaagg_ScissorStack_tmp = iaamg_Vector2__init_0();
    iaagg_ScissorStack_scissors = iaac_Array__init_0();
}
function iaamg_Vector2() {
    var a = this; jl_Object.call(a);
    a.$x0 = 0.0;
    a.$y0 = 0.0;
}
var iaamg_Vector2_X = null;
var iaamg_Vector2_Y = null;
var iaamg_Vector2_ZERO = null;
function iaamg_Vector2_$callClinit() {
    iaamg_Vector2_$callClinit = $rt_eraseClinit(iaamg_Vector2);
    iaamg_Vector2__clinit_();
}
function iaamg_Vector2__init_0() {
    var var_0 = new iaamg_Vector2();
    iaamg_Vector2__init_1(var_0);
    return var_0;
}
function iaamg_Vector2__init_(var_0, var_1) {
    var var_2 = new iaamg_Vector2();
    iaamg_Vector2__init_2(var_2, var_0, var_1);
    return var_2;
}
function iaamg_Vector2__init_1($this) {
    iaamg_Vector2_$callClinit();
    jl_Object__init_0($this);
}
function iaamg_Vector2__init_2($this, $x, $y) {
    iaamg_Vector2_$callClinit();
    jl_Object__init_0($this);
    $this.$x0 = $x;
    $this.$y0 = $y;
}
function iaamg_Vector2_trns($this, $angle, $amount) {
    return $this.$set2($amount, 0.0).$rotate1($angle);
}
function iaamg_Vector2_snap($this) {
    return $this.$set2($this.$x0 | 0, $this.$y0 | 0);
}
function iaamg_Vector2_len($this) {
    return jl_Math_sqrt($this.$x0 * $this.$x0 + $this.$y0 * $this.$y0);
}
function iaamg_Vector2_len2($this) {
    return $this.$x0 * $this.$x0 + $this.$y0 * $this.$y0;
}
function iaamg_Vector2_set($this, $v) {
    $this.$x0 = $v.$x0;
    $this.$y0 = $v.$y0;
    return $this;
}
function iaamg_Vector2_set0($this, $v) {
    $this.$x0 = $v.$getX();
    $this.$y0 = $v.$getY();
    return $this;
}
function iaamg_Vector2_set1($this, $x, $y) {
    $this.$x0 = $x;
    $this.$y0 = $y;
    return $this;
}
function iaamg_Vector2_sub($this, $x, $y) {
    $this.$x0 = $this.$x0 - $x;
    $this.$y0 = $this.$y0 - $y;
    return $this;
}
function iaamg_Vector2_nor($this) {
    var $len;
    $len = $this.$len1();
    if ($len !== 0.0) {
        $this.$x0 = $this.$x0 / $len;
        $this.$y0 = $this.$y0 / $len;
    }
    return $this;
}
function iaamg_Vector2_add($this, $v) {
    $this.$x0 = $this.$x0 + $v.$x0;
    $this.$y0 = $this.$y0 + $v.$y0;
    return $this;
}
function iaamg_Vector2_add0($this, $x, $y) {
    $this.$x0 = $this.$x0 + $x;
    $this.$y0 = $this.$y0 + $y;
    return $this;
}
function iaamg_Vector2_scl($this, $scalar) {
    $this.$x0 = $this.$x0 * $scalar;
    $this.$y0 = $this.$y0 * $scalar;
    return $this;
}
function iaamg_Vector2_dst2($this, $x, $y) {
    var $x_d, $y_d;
    $x_d = $x - $this.$x0;
    $y_d = $y - $this.$y0;
    return $x_d * $x_d + $y_d * $y_d;
}
function iaamg_Vector2_limit($this, $limit) {
    return $this.$limit20($limit * $limit);
}
function iaamg_Vector2_limit2($this, $limit2) {
    var $len2;
    $len2 = $this.$len2();
    if ($len2 <= $limit2)
        return $this;
    return $this.$scl0(jl_Math_sqrt($limit2 / $len2));
}
function iaamg_Vector2_setLength($this, $len) {
    return $this.$setLength2($len * $len);
}
function iaamg_Vector2_setLength2($this, $len2) {
    var $oldLen2;
    $oldLen2 = $this.$len2();
    if ($oldLen2 !== 0.0 && $oldLen2 !== $len2)
        $this = $this.$scl0(jl_Math_sqrt($len2 / $oldLen2));
    return $this;
}
function iaamg_Vector2_clamp($this, $minx, $maxx, $miny, $maxy) {
    $this.$x0 = iaam_Mathf_clamp($this.$x0, $minx, $maxx);
    $this.$y0 = iaam_Mathf_clamp($this.$y0, $miny, $maxy);
    return $this;
}
function iaamg_Vector2_mul($this, $mat) {
    var $x, $y;
    $x = $this.$x0 * $mat.$val.data[0] + $this.$y0 * $mat.$val.data[3] + $mat.$val.data[6];
    $y = $this.$x0 * $mat.$val.data[1] + $this.$y0 * $mat.$val.data[4] + $mat.$val.data[7];
    $this.$x0 = $x;
    $this.$y0 = $y;
    return $this;
}
function iaamg_Vector2_angle($this) {
    var $angle;
    $angle = iaam_Mathf_atan2($this.$x0, $this.$y0) * 57.2957763671875;
    if ($angle < 0.0)
        $angle = $angle + 360.0;
    return $angle;
}
function iaamg_Vector2_setAngle($this, $degrees) {
    return $this.$setAngleRad($degrees * 0.01745329238474369);
}
function iaamg_Vector2_setAngleRad($this, $radians) {
    $this.$set2($this.$len1(), 0.0);
    $this.$rotateRad($radians);
    return $this;
}
function iaamg_Vector2_rotate($this, $degrees) {
    return $this.$rotateRad($degrees * 0.01745329238474369);
}
function iaamg_Vector2_rotateRad($this, $radians) {
    var $cos, $sin, $newX, $newY;
    $cos = iaam_Mathf_cos($radians);
    $sin = iaam_Mathf_sin0($radians);
    $newX = $this.$x0 * $cos - $this.$y0 * $sin;
    $newY = $this.$x0 * $sin + $this.$y0 * $cos;
    $this.$x0 = $newX;
    $this.$y0 = $newY;
    return $this;
}
function iaamg_Vector2_lerpDelta($this, $tx, $ty, $alpha) {
    var var$4, $invAlpha;
    var$4 = iaam_Mathf_clamp0($alpha * iaau_Time_delta());
    $invAlpha = 1.0 - var$4;
    $this.$x0 = $this.$x0 * $invAlpha + $tx * var$4;
    $this.$y0 = $this.$y0 * $invAlpha + $ty * var$4;
    return $this;
}
function iaamg_Vector2_isZero($this) {
    return $this.$x0 === 0.0 && $this.$y0 === 0.0 ? 1 : 0;
}
function iaamg_Vector2_setZero($this) {
    $this.$x0 = 0.0;
    $this.$y0 = 0.0;
    return $this;
}
function iaamg_Vector2__clinit_() {
    iaamg_Vector2_X = iaamg_Vector2__init_(1.0, 0.0);
    iaamg_Vector2_Y = iaamg_Vector2__init_(0.0, 1.0);
    iaamg_Vector2_ZERO = iaamg_Vector2__init_(0.0, 0.0);
}
function ig_Anim() {
    jl_Object.call(this);
    this.$frames1 = null;
}
function ig_Anim__init_0(var_0) {
    var var_1 = new ig_Anim();
    ig_Anim__init_(var_1, var_0);
    return var_1;
}
function ig_Anim__init_($this, $names) {
    var var$2, var$3, $i, var$5;
    var$2 = $names.data;
    jl_Object__init_0($this);
    var$3 = var$2.length;
    $this.$frames1 = $rt_createArray(iaagg_TextureRegion, var$3);
    $i = 0;
    while ($i < var$3) {
        var$5 = $this.$frames1.data;
        iaa_Core_$callClinit();
        var$5[$i] = iaa_Core_atlas.$find(var$2[$i]);
        $i = $i + 1 | 0;
    }
}
function ig_Anim_frame($this, $fract) {
    return $this.$frames1.data[iaam_Mathf_clamp1($fract * $this.$frames1.data.length | 0, 0, $this.$frames1.data.length - 1 | 0)];
}
function iaac_IntSet$IntSetIterator() {
    var a = this; jl_Object.call(a);
    a.$set24 = null;
    a.$hasNext2 = 0;
    a.$nextIndex2 = 0;
    a.$currentIndex1 = 0;
    a.$valid2 = 0;
}
function iaac_IntSet$IntSetIterator__init_(var_0) {
    var var_1 = new iaac_IntSet$IntSetIterator();
    iaac_IntSet$IntSetIterator__init_0(var_1, var_0);
    return var_1;
}
function iaac_IntSet$IntSetIterator__init_0($this, $set) {
    jl_Object__init_0($this);
    $this.$valid2 = 1;
    $this.$set24 = $set;
    $this.$reset();
}
function iaac_IntSet$IntSetIterator_reset($this) {
    $this.$currentIndex1 = (-2);
    $this.$nextIndex2 = (-1);
    if (!$this.$set24.$hasZeroValue0)
        $this.$findNextIndex();
    else
        $this.$hasNext2 = 1;
}
function iaac_IntSet$IntSetIterator_findNextIndex($this) {
    var $keyTable, $n, var$3;
    $this.$hasNext2 = 0;
    $keyTable = $this.$set24.$keyTable3;
    $n = $this.$set24.$capacity5 + $this.$set24.$stashSize3 | 0;
    a: {
        while (true) {
            var$3 = $this.$nextIndex2 + 1 | 0;
            $this.$nextIndex2 = var$3;
            if (var$3 >= $n)
                break a;
            if (!$keyTable.data[$this.$nextIndex2])
                continue;
            else
                break;
        }
        $this.$hasNext2 = 1;
    }
}
function iaac_IntSet$IntSetIterator_next($this) {
    var $key;
    if (!$this.$hasNext2)
        $rt_throw(ju_NoSuchElementException__init_0());
    if (!$this.$valid2)
        $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1178)));
    $key = $this.$nextIndex2 == (-1) ? 0 : $this.$set24.$keyTable3.data[$this.$nextIndex2];
    $this.$currentIndex1 = $this.$nextIndex2;
    $this.$findNextIndex();
    return $key;
}
function it_Bullet() {
    var a = this; ie_SolidEntity.call(a);
    a.$type8 = null;
    a.$shooter = null;
    a.$timer0 = null;
    a.$lifetime1 = 0.0;
    a.$time3 = 0.0;
    a.$hit1 = 0;
    a.$mover = null;
    a.$velocity = null;
}
function it_Bullet__init_() {
    var var_0 = new it_Bullet();
    it_Bullet__init_0(var_0);
    return var_0;
}
function it_Bullet_shoot($type, $shooter, $x, $y, $rotation) {
    var $bullet;
    $bullet = it_Bullet__init_();
    $bullet.$x2 = $x;
    $bullet.$y2 = $y;
    $bullet.$type8 = $type;
    $bullet.$lifetime1 = $type.$lifetime0;
    $bullet.$velocity.$set2($type.$speed, 0.0).$rotate1($rotation);
    $bullet.$shooter = $shooter;
    $bullet.$add15();
    $type.$init($bullet);
    return $bullet;
}
function it_Bullet__init_0($this) {
    ie_SolidEntity__init_0($this);
    $this.$timer0 = iaau_Interval__init_(4);
    $this.$mover = it_Bullet$_init_$lambda$_1_0__init_();
    $this.$velocity = iaamg_Vector2__init_0();
}
function it_Bullet_angle($this) {
    return $this.$velocity.$angle2();
}
function it_Bullet_collision($this, $other, $x, $y) {
    $this.$type8.$hit3($this);
}
function it_Bullet_collides($this, $other) {
    return 1;
}
function it_Bullet_update($this) {
    var $v, var$2, var$3;
    $this.$time3 = iaam_Mathf_clamp($this.$time3 + iaau_Time_delta(), 0.0, $this.$type8.$lifetime0);
    if ($this.$time3 >= $this.$lifetime1) {
        $this.$type8.$despawn($this);
        $this.$remove0();
    }
    $v = $this.$mover.$move2($this.$time3);
    $v.$rotate1($this.$velocity.$angle2()).$scl0(iaau_Time_delta());
    $this.$velocity.$add8($v).$limit4($this.$type8.$speed);
    $this.$x2 = $this.$x2 + $this.$velocity.$x0 * iaau_Time_delta();
    $this.$y2 = $this.$y2 + $this.$velocity.$y0 * iaau_Time_delta();
    $this.$type8.$update5($this);
    iaau_Tmp_$callClinit();
    $this.$hitboxTile(iaau_Tmp_r3);
    var$2 = iaau_Tmp_r3;
    var$3 = $this.$type8;
    jl_Object_getClass(var$3);
    if (ie_EntityCollisions_overlapsTile0(var$2, it_Bullet$update$lambda$_5_0__init_(var$3)))
        $this.$type8.$hit3($this);
}
function it_Bullet_draw($this) {
    ig_Drawf_z($this.$y2 - 8.0);
    $this.$type8.$draw11($this);
    $this.$type8.$drawLight($this);
}
function it_Bullet_hitbox($this, $rectangle) {
    $rectangle.$setSize1($this.$type8.$size3).$setCenter($this.$x2, $this.$y2);
}
function it_Bullet_hitboxTile($this, $rectangle) {
    $rectangle.$setSize1(4.0).$setCenter($this.$x2, $this.$y2 - 4.0);
}
function it_Bullet_targetGroup($this) {
    return i_Inferno_bulletGroup;
}
function it_Bullet_fin($this) {
    return $this.$time3 / $this.$lifetime1;
}
function it_Bullet_lambda$new$0($time) {
    iaau_Tmp_$callClinit();
    return iaau_Tmp_v1.$setZero();
}
function it_Laser() {
    var a = this; it_Bullet.call(a);
    a.$angle = 0.0;
    a.$damaged = 0;
}
function it_Laser__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new it_Laser();
    it_Laser__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function it_Laser__init_0($this, $type, $x, $y, $angle) {
    it_Bullet__init_0($this);
    $this.$x2 = $x;
    $this.$y2 = $y;
    $this.$angle = $angle;
    $this.$shooter = i_Inferno_boss;
    $this.$type8 = $type;
    $this.$lifetime1 = $type.$lifetime0;
    $type.$init($this);
}
function it_Laser_collides($this, $other) {
    return 0;
}
function it_Laser_update($this) {
    var var$1, $i, var$3, var$4;
    $this.$time3 = iaam_Mathf_clamp($this.$time3 + iaau_Time_delta(), 0.0, $this.$type8.$lifetime0);
    if ($this.$time3 >= $this.$lifetime1) {
        $this.$type8.$despawn($this);
        $this.$remove0();
    }
    a: {
        if (!$this.$damaged) {
            var$1 = i_Inferno_player;
            iaau_Tmp_$callClinit();
            var$1.$hitbox(iaau_Tmp_r1);
            iaau_Tmp_v2.$trns($this.$angle, 1300.0);
            if (iaamg_Intersector_intersectSegmentRectangle($this.$x2, $this.$y2, $this.$x2 + iaau_Tmp_v2.$x0, $this.$y2 + iaau_Tmp_v2.$y0, iaau_Tmp_r1)) {
                i_Inferno_player.$damage1($this.$type8.$damage0);
                i_Inferno_renderer.$shake(5.0, 5.0);
                $this.$damaged = 1;
                i_Inferno_control.$slowmo(1.0);
                iaau_Tmp_v2.$limit4(60.0);
                i_Inferno_player.$move0(iaau_Tmp_v2.$x0, iaau_Tmp_v2.$y0);
                $i = 0;
                while (true) {
                    if ($i >= 8)
                        break a;
                    it_Fx_$callClinit();
                    var$1 = it_Fx_spark;
                    var$3 = i_Inferno_player.$x2 + iaam_Mathf_range(8.0);
                    var$4 = i_Inferno_player.$y2 + 6.0 + iaam_Mathf_range(8.0);
                    ig_Pal_$callClinit();
                    var$1.$at0(var$3, var$4, ig_Pal_fireball);
                    $i = $i + 1 | 0;
                }
            }
        }
    }
}
function it_Laser_draw($this) {
    ig_Drawf_z((-999.0));
    $this.$type8.$draw12($this);
}
function it_Laser_targetGroup($this) {
    return i_Inferno_bulletGroup;
}
function it_Phases$2$lambda$$18$lambda$_6_0() {
    jl_Object.call(this);
}
function it_Phases$2$lambda$$18$lambda$_6_0__init_() {
    var var_0 = new it_Phases$2$lambda$$18$lambda$_6_0();
    it_Phases$2$lambda$$18$lambda$_6_0__init_0(var_0);
    return var_0;
}
function it_Phases$2$lambda$$18$lambda$_6_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$2$lambda$$18$lambda$_6_0_run(var$0) {
    it_Phases$2_lambda$null$17();
}
function jur_AbstractCharClass$LazyJavaMirrored$1() {
    jur_AbstractCharClass.call(this);
    this.$this$025 = null;
}
function jur_AbstractCharClass$LazyJavaMirrored$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaMirrored$1();
    jur_AbstractCharClass$LazyJavaMirrored$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaMirrored$1__init_0($this, $this$0) {
    $this.$this$025 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaMirrored$1_contains($this, $ch) {
    return 0;
}
function otr_RuntimeObject() {
    oti_Structure.call(this);
}
function iaac_ObjectMap$Entries() {
    iaac_ObjectMap$MapIterator.call(this);
    this.$entry1 = null;
}
function iaac_ObjectMap$Entries__init_(var_0) {
    var var_1 = new iaac_ObjectMap$Entries();
    iaac_ObjectMap$Entries__init_0(var_1, var_0);
    return var_1;
}
function iaac_ObjectMap$Entries__init_0($this, $map) {
    iaac_ObjectMap$MapIterator__init_0($this, $map);
    $this.$entry1 = iaac_ObjectMap$Entry__init_();
}
function iaac_ObjectMap$Entries_next($this) {
    var $keyTable, var$2;
    if (!$this.$hasNext1)
        $rt_throw(ju_NoSuchElementException__init_0());
    if (!$this.$valid0)
        $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1178)));
    $keyTable = $this.$map1.$keyTable0;
    var$2 = $keyTable.data;
    $this.$entry1.$key2 = var$2[$this.$nextIndex0];
    $this.$entry1.$value5 = $this.$map1.$valueTable.data[$this.$nextIndex0];
    $this.$currentIndex0 = $this.$nextIndex0;
    $this.$findNextIndex();
    return $this.$entry1;
}
function iaac_ObjectMap$Entries_hasNext($this) {
    if ($this.$valid0)
        return $this.$hasNext1;
    $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1178)));
}
function iaac_ObjectMap$Entries_iterator($this) {
    return $this;
}
function iaac_ObjectMap$Entries_reset($this) {
    iaac_ObjectMap$MapIterator_reset($this);
}
function iaac_ObjectMap$Entries_next0($this) {
    return $this.$next4();
}
function iaau_Scaling$1() {
    jl_Object.call(this);
}
var iaau_Scaling$1_$SwitchMap$io$anuke$arc$util$Scaling = null;
function iaau_Scaling$1_$callClinit() {
    iaau_Scaling$1_$callClinit = $rt_eraseClinit(iaau_Scaling$1);
    iaau_Scaling$1__clinit_();
}
function iaau_Scaling$1__clinit_() {
    var $$je;
    iaau_Scaling$1_$SwitchMap$io$anuke$arc$util$Scaling = $rt_createIntArray(iaau_Scaling_values().data.length);
    a: {
        try {
            iaau_Scaling$1_$SwitchMap$io$anuke$arc$util$Scaling.data[jl_Enum_ordinal(iaau_Scaling_fit)] = 1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    b: {
        try {
            iaau_Scaling$1_$SwitchMap$io$anuke$arc$util$Scaling.data[jl_Enum_ordinal(iaau_Scaling_fill)] = 2;
            break b;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    c: {
        try {
            iaau_Scaling$1_$SwitchMap$io$anuke$arc$util$Scaling.data[jl_Enum_ordinal(iaau_Scaling_fillX)] = 3;
            break c;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    d: {
        try {
            iaau_Scaling$1_$SwitchMap$io$anuke$arc$util$Scaling.data[jl_Enum_ordinal(iaau_Scaling_fillY)] = 4;
            break d;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    e: {
        try {
            iaau_Scaling$1_$SwitchMap$io$anuke$arc$util$Scaling.data[jl_Enum_ordinal(iaau_Scaling_stretch)] = 5;
            break e;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    f: {
        try {
            iaau_Scaling$1_$SwitchMap$io$anuke$arc$util$Scaling.data[jl_Enum_ordinal(iaau_Scaling_stretchX)] = 6;
            break f;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    g: {
        try {
            iaau_Scaling$1_$SwitchMap$io$anuke$arc$util$Scaling.data[jl_Enum_ordinal(iaau_Scaling_stretchY)] = 7;
            break g;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    h: {
        try {
            iaau_Scaling$1_$SwitchMap$io$anuke$arc$util$Scaling.data[jl_Enum_ordinal(iaau_Scaling_none)] = 8;
            break h;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
}
function iaaf_Func2() {
}
function jn_ShortBufferOverByteBufferLittleEndian() {
    jn_ShortBufferOverByteBuffer.call(this);
}
function jn_ShortBufferOverByteBufferLittleEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_ShortBufferOverByteBufferLittleEndian();
    jn_ShortBufferOverByteBufferLittleEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_ShortBufferOverByteBufferLittleEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_ShortBufferOverByteBuffer__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_ShortBufferOverByteBufferLittleEndian_duplicate($this, $start, $capacity, $position, $limit, $readOnly) {
    return jn_ShortBufferOverByteBufferLittleEndian__init_($this.$start5 + ($start * 2 | 0) | 0, $capacity, $this.$byteByffer1, $position, $limit, $readOnly);
}
function jn_ShortBufferOverByteBufferLittleEndian_getElement($this, $index) {
    var var$2, var$3, var$4, $value;
    var$2 = $this.$byteByffer1.$array.data;
    var$3 = $this.$start5;
    var$4 = $index * 2 | 0;
    $value = var$2[var$3 + var$4 | 0] & 255 | ($this.$byteByffer1.$array.data[($this.$start5 + var$4 | 0) + 1 | 0] & 255) << 8;
    return $value << 16 >> 16;
}
function jn_ShortBufferOverByteBufferLittleEndian_putElement($this, $index, $value) {
    var var$3, var$4, var$5;
    var$3 = $this.$byteByffer1.$array.data;
    var$4 = $this.$start5;
    var$5 = $index * 2 | 0;
    var$3[var$4 + var$5 | 0] = $value << 24 >> 24;
    $this.$byteByffer1.$array.data[($this.$start5 + var$5 | 0) + 1 | 0] = $value >> 8 << 24 >> 24;
}
function jur_UEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter2 = 0;
}
function jur_UEOLSet__init_(var_0) {
    var var_1 = new jur_UEOLSet();
    jur_UEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UEOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_0($this);
    $this.$consCounter2 = $counter;
}
function jur_UEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound;
    $rightBound = !$matchResult.$hasAnchoringBounds() ? $testString.$length() : $matchResult.$getRightBound();
    if ($strIndex >= $rightBound) {
        $matchResult.$setConsumed($this.$consCounter2, 0);
        return $this.$next.$matches($strIndex, $testString, $matchResult);
    }
    if (($rightBound - $strIndex | 0) == 1 && $testString.$charAt($strIndex) == 10) {
        $matchResult.$setConsumed($this.$consCounter2, 1);
        return $this.$next.$matches($strIndex + 1 | 0, $testString, $matchResult);
    }
    return (-1);
}
function jur_UEOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter2) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter2, (-1));
    return $res;
}
function jur_UEOLSet_getName($this) {
    return $rt_s(1064);
}
function otcju_THashMap() {
    var a = this; otcju_TAbstractMap.call(a);
    a.$elementCount1 = 0;
    a.$elementData1 = null;
    a.$loadFactor4 = 0.0;
    a.$threshold5 = 0;
}
function otcju_THashMap__init_() {
    var var_0 = new otcju_THashMap();
    otcju_THashMap__init_0(var_0);
    return var_0;
}
function otcju_THashMap__init_1(var_0) {
    var var_1 = new otcju_THashMap();
    otcju_THashMap__init_2(var_1, var_0);
    return var_1;
}
function otcju_THashMap__init_3(var_0, var_1) {
    var var_2 = new otcju_THashMap();
    otcju_THashMap__init_4(var_2, var_0, var_1);
    return var_2;
}
function otcju_THashMap_newElementArray($this, $s) {
    return $rt_createArray(otcju_THashMap$HashEntry, $s);
}
function otcju_THashMap__init_0($this) {
    otcju_THashMap__init_2($this, 16);
}
function otcju_THashMap__init_2($this, $capacity) {
    otcju_THashMap__init_4($this, $capacity, 0.75);
}
function otcju_THashMap_calculateCapacity($x) {
    var var$2, var$3;
    if ($x >= 1073741824)
        return 1073741824;
    if (!$x)
        return 16;
    var$2 = $x - 1 | 0;
    var$3 = var$2 | var$2 >> 1;
    var$3 = var$3 | var$3 >> 2;
    var$3 = var$3 | var$3 >> 4;
    var$3 = var$3 | var$3 >> 8;
    var$3 = var$3 | var$3 >> 16;
    return var$3 + 1 | 0;
}
function otcju_THashMap__init_4($this, $capacity, $loadFactor) {
    var var$3;
    otcju_TAbstractMap__init_0($this);
    if ($capacity >= 0 && $loadFactor > 0.0) {
        var$3 = otcju_THashMap_calculateCapacity($capacity);
        $this.$elementCount1 = 0;
        $this.$elementData1 = $this.$newElementArray1(var$3);
        $this.$loadFactor4 = $loadFactor;
        otcju_THashMap_computeThreshold($this);
        return;
    }
    $rt_throw(otcjl_TIllegalArgumentException__init_());
}
function otcju_THashMap_computeThreshold($this) {
    $this.$threshold5 = $this.$elementData1.data.length * $this.$loadFactor4 | 0;
}
function jur_UCICharSet() {
    jur_LeafSet.call(this);
    this.$ch4 = 0;
}
function jur_UCICharSet__init_(var_0) {
    var var_1 = new jur_UCICharSet();
    jur_UCICharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCICharSet__init_0($this, $ch) {
    jur_LeafSet__init_2($this);
    $this.$ch4 = jl_Character_toLowerCase(jl_Character_toUpperCase0($ch));
}
function jur_UCICharSet_accepts($this, $strIndex, $testString) {
    return $this.$ch4 != jl_Character_toLowerCase(jl_Character_toUpperCase0($testString.$charAt($strIndex))) ? (-1) : 1;
}
function jur_UCICharSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(976)).$append0($this.$ch4).$toString();
}
function ig_LayerBatch$draw$lambda$_2_0() {
    jl_Object.call(this);
}
function ig_LayerBatch$draw$lambda$_2_0__init_() {
    var var_0 = new ig_LayerBatch$draw$lambda$_2_0();
    ig_LayerBatch$draw$lambda$_2_0__init_0(var_0);
    return var_0;
}
function ig_LayerBatch$draw$lambda$_2_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function ig_LayerBatch$draw$lambda$_2_0_get(var$0) {
    return ig_LayerBatch$draw$lambda$_2_0_get0(var$0);
}
function ig_LayerBatch$draw$lambda$_2_0_get0(var$0) {
    return ig_DrawRequest__init_();
}
function it_Phases$2$lambda$$10$lambda$_14_0() {
    jl_Object.call(this);
}
function it_Phases$2$lambda$$10$lambda$_14_0__init_() {
    var var_0 = new it_Phases$2$lambda$$10$lambda$_14_0();
    it_Phases$2$lambda$$10$lambda$_14_0__init_0(var_0);
    return var_0;
}
function it_Phases$2$lambda$$10$lambda$_14_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$2$lambda$$10$lambda$_14_0_run(var$0) {
    it_Phases$2_lambda$null$9();
}
function jur_CompositeGroupQuantifierSet() {
    var a = this; jur_GroupQuantifierSet.call(a);
    a.$quantifier0 = null;
    a.$setCounter = 0;
}
function jur_CompositeGroupQuantifierSet__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new jur_CompositeGroupQuantifierSet();
    jur_CompositeGroupQuantifierSet__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function jur_CompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
    $this.$quantifier0 = $quant;
    $this.$setCounter = $setCounter;
}
function jur_CompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $enterCounter, var$5, var$6, $nextIndex;
    $enterCounter = $matchResult.$getEnterCounter($this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier0.$max3())
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    var$5 = $this.$setCounter;
    var$6 = $enterCounter + 1 | 0;
    $matchResult.$setEnterCounter(var$5, var$6);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0) {
        $matchResult.$setEnterCounter($this.$setCounter, 0);
        return $nextIndex;
    }
    var$5 = $this.$setCounter;
    var$6 = var$6 + (-1) | 0;
    $matchResult.$setEnterCounter(var$5, var$6);
    if (var$6 >= $this.$quantifier0.$min3())
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    $matchResult.$setEnterCounter($this.$setCounter, 0);
    return (-1);
}
function jur_CompositeGroupQuantifierSet_getName($this) {
    return $this.$quantifier0.$toString();
}
function jur_RelCompositeGroupQuantifierSet() {
    jur_CompositeGroupQuantifierSet.call(this);
}
function jur_RelCompositeGroupQuantifierSet__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new jur_RelCompositeGroupQuantifierSet();
    jur_RelCompositeGroupQuantifierSet__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function jur_RelCompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter) {
    jur_CompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter);
}
function jur_RelCompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $enterCounter, $nextIndex;
    $enterCounter = $matchResult.$getEnterCounter($this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier0.$max3()) {
        $matchResult.$setEnterCounter($this.$setCounter, 0);
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    }
    if ($enterCounter < $this.$quantifier0.$min3()) {
        $matchResult.$setEnterCounter($this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    } else {
        $nextIndex = $this.$next.$matches($stringIndex, $testString, $matchResult);
        if ($nextIndex >= 0) {
            $matchResult.$setEnterCounter($this.$setCounter, 0);
            return $nextIndex;
        }
        $matchResult.$setEnterCounter($this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    }
    return $nextIndex;
}
function ju_ArrayList() {
    var a = this; ju_AbstractList.call(a);
    a.$array5 = null;
    a.$size12 = 0;
}
function ju_ArrayList__init_() {
    var var_0 = new ju_ArrayList();
    ju_ArrayList__init_0(var_0);
    return var_0;
}
function ju_ArrayList__init_1(var_0) {
    var var_1 = new ju_ArrayList();
    ju_ArrayList__init_2(var_1, var_0);
    return var_1;
}
function ju_ArrayList__init_0($this) {
    ju_ArrayList__init_2($this, 10);
}
function ju_ArrayList__init_2($this, $initialCapacity) {
    ju_AbstractList__init_0($this);
    $this.$array5 = $rt_createArray(jl_Object, $initialCapacity);
}
function ju_ArrayList_ensureCapacity($this, $minCapacity) {
    var $newLength, var$3;
    if ($this.$array5.data.length < $minCapacity) {
        if ($this.$array5.data.length >= 1073741823)
            $newLength = 2147483647;
        else {
            var$3 = $this.$array5.data.length * 2 | 0;
            $newLength = jl_Math_max1($minCapacity, jl_Math_max1(var$3, 5));
        }
        $this.$array5 = ju_Arrays_copyOf1($this.$array5, $newLength);
    }
}
function ju_ArrayList_get($this, $index) {
    ju_ArrayList_checkIndex($this, $index);
    return $this.$array5.data[$index];
}
function ju_ArrayList_size($this) {
    return $this.$size12;
}
function ju_ArrayList_add($this, $element) {
    var var$2, var$3;
    $this.$ensureCapacity($this.$size12 + 1 | 0);
    var$2 = $this.$array5.data;
    var$3 = $this.$size12;
    $this.$size12 = var$3 + 1 | 0;
    var$2[var$3] = $element;
    $this.$modCount2 = $this.$modCount2 + 1 | 0;
    return 1;
}
function ju_ArrayList_add0($this, $index, $element) {
    var $i;
    ju_ArrayList_checkIndexForAdd($this, $index);
    $this.$ensureCapacity($this.$size12 + 1 | 0);
    $i = $this.$size12;
    while ($i > $index) {
        $this.$array5.data[$i] = $this.$array5.data[$i - 1 | 0];
        $i = $i + (-1) | 0;
    }
    $this.$array5.data[$index] = $element;
    $this.$size12 = $this.$size12 + 1 | 0;
    $this.$modCount2 = $this.$modCount2 + 1 | 0;
}
function ju_ArrayList_remove($this, $i) {
    var $old, var$3, var$4, $i_0;
    ju_ArrayList_checkIndex($this, $i);
    $old = $this.$array5.data[$i];
    $this.$size12 = $this.$size12 - 1 | 0;
    while ($i < $this.$size12) {
        var$3 = $this.$array5.data;
        var$4 = $this.$array5.data;
        $i_0 = $i + 1 | 0;
        var$3[$i] = var$4[$i_0];
        $i = $i_0;
    }
    $this.$array5.data[$this.$size12] = null;
    $this.$modCount2 = $this.$modCount2 + 1 | 0;
    return $old;
}
function ju_ArrayList_checkIndex($this, $index) {
    if ($index >= 0 && $index < $this.$size12)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function ju_ArrayList_checkIndexForAdd($this, $index) {
    if ($index >= 0 && $index <= $this.$size12)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function jl_IllegalMonitorStateException() {
    jl_RuntimeException.call(this);
}
function jl_IllegalMonitorStateException__init_() {
    var var_0 = new jl_IllegalMonitorStateException();
    jl_IllegalMonitorStateException__init_0(var_0);
    return var_0;
}
function jl_IllegalMonitorStateException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function iaauv_Viewport() {
    var a = this; jl_Object.call(a);
    a.$tmp2 = null;
    a.$camera = null;
    a.$worldWidth = 0.0;
    a.$worldHeight = 0.0;
    a.$screenX = 0;
    a.$screenY = 0;
    a.$screenWidth = 0;
    a.$screenHeight = 0;
}
function iaauv_Viewport__init_() {
    var var_0 = new iaauv_Viewport();
    iaauv_Viewport__init_0(var_0);
    return var_0;
}
function iaauv_Viewport__init_0($this) {
    jl_Object__init_0($this);
    $this.$tmp2 = iaamg_Vector2__init_0();
}
function iaauv_Viewport_apply($this, $centerCamera) {
    iaagg_HdpiUtils_glViewport($this.$screenX, $this.$screenY, $this.$screenWidth, $this.$screenHeight);
    $this.$camera.$width3 = $this.$worldWidth;
    $this.$camera.$height3 = $this.$worldHeight;
    if ($centerCamera)
        $this.$camera.$position6.$set2($this.$worldWidth / 2.0, $this.$worldHeight / 2.0);
    $this.$camera.$update1();
}
function iaauv_Viewport_unproject($this, $screenCoords) {
    $this.$tmp2.$set2($screenCoords.$x0, $screenCoords.$y0);
    $this.$camera.$unproject0($this.$tmp2, $this.$screenX, $this.$screenY, $this.$screenWidth, $this.$screenHeight);
    $screenCoords.$set2($this.$tmp2.$x0, $this.$tmp2.$y0);
    return $screenCoords;
}
function iaauv_Viewport_getCamera($this) {
    return $this.$camera;
}
function iaauv_Viewport_setCamera($this, $camera) {
    $this.$camera = $camera;
}
function iaauv_Viewport_getWorldWidth($this) {
    return $this.$worldWidth;
}
function iaauv_Viewport_getWorldHeight($this) {
    return $this.$worldHeight;
}
function iaauv_Viewport_setWorldSize($this, $worldWidth, $worldHeight) {
    $this.$worldWidth = $worldWidth;
    $this.$worldHeight = $worldHeight;
}
function iaauv_Viewport_getScreenX($this) {
    return $this.$screenX;
}
function iaauv_Viewport_getScreenY($this) {
    return $this.$screenY;
}
function iaauv_Viewport_getScreenWidth($this) {
    return $this.$screenWidth;
}
function iaauv_Viewport_getScreenHeight($this) {
    return $this.$screenHeight;
}
function iaauv_Viewport_setScreenBounds($this, $screenX, $screenY, $screenWidth, $screenHeight) {
    $this.$screenX = $screenX;
    $this.$screenY = $screenY;
    $this.$screenWidth = $screenWidth;
    $this.$screenHeight = $screenHeight;
}
function iaauv_ScreenViewport() {
    iaauv_Viewport.call(this);
    this.$unitsPerPixel = 0.0;
}
function iaauv_ScreenViewport__init_() {
    var var_0 = new iaauv_ScreenViewport();
    iaauv_ScreenViewport__init_0(var_0);
    return var_0;
}
function iaauv_ScreenViewport__init_1(var_0) {
    var var_1 = new iaauv_ScreenViewport();
    iaauv_ScreenViewport__init_2(var_1, var_0);
    return var_1;
}
function iaauv_ScreenViewport__init_0($this) {
    iaauv_ScreenViewport__init_2($this, iaag_Camera__init_());
}
function iaauv_ScreenViewport__init_2($this, $camera) {
    iaauv_Viewport__init_0($this);
    $this.$unitsPerPixel = 1.0;
    $this.$setCamera($camera);
}
function iaauv_ScreenViewport_update($this, $screenWidth, $screenHeight, $centerCamera) {
    $this.$setScreenBounds(0, 0, $screenWidth, $screenHeight);
    $this.$setWorldSize($screenWidth * $this.$unitsPerPixel, $screenHeight * $this.$unitsPerPixel);
    $this.$apply5($centerCamera);
}
function jur_RelAltGroupQuantifierSet() {
    jur_AltGroupQuantifierSet.call(this);
}
function jur_RelAltGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_RelAltGroupQuantifierSet();
    jur_RelAltGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_RelAltGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_AltGroupQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_RelAltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    return $nextIndex;
}
function iaam_MapProperties() {
    jl_Object.call(this);
    this.$properties4 = null;
}
function iaam_MapProperties__init_() {
    var var_0 = new iaam_MapProperties();
    iaam_MapProperties__init_0(var_0);
    return var_0;
}
function iaam_MapProperties__init_0($this) {
    jl_Object__init_0($this);
    $this.$properties4 = iaac_ObjectMap__init_();
}
function iaam_MapProperties_containsKey($this, $key) {
    return $this.$properties4.$containsKey($key);
}
function iaam_MapProperties_get($this, $key) {
    return $this.$properties4.$get9($key);
}
function iaam_MapProperties_put($this, $key, $value) {
    $this.$properties4.$put($key, $value);
}
function it_Phases$1$lambda$null$4$lambda$_20_0() {
    jl_Object.call(this);
    this.$_0109 = 0.0;
}
function it_Phases$1$lambda$null$4$lambda$_20_0__init_(var_0) {
    var var_1 = new it_Phases$1$lambda$null$4$lambda$_20_0();
    it_Phases$1$lambda$null$4$lambda$_20_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$1$lambda$null$4$lambda$_20_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0109 = var$1;
}
function it_Phases$1$lambda$null$4$lambda$_20_0_get(var$0, var$1) {
    it_Phases$1_lambda$null$3(var$0.$_0109, var$1);
}
function otcir_Flags() {
    jl_Object.call(this);
}
function otcir_Flags_getModifiers($flags, $access) {
    var $modifiers, var$4, var$5;
    a: {
        $modifiers = 0;
        switch ($access) {
            case 1:
                $modifiers = 2;
                break a;
            case 2:
                $modifiers = 4;
                break a;
            case 3:
                $modifiers = 1;
                break a;
            default:
        }
    }
    var$4 = $flags >>> 6;
    var$5 = $modifiers | var$4 & 8;
    var$5 = var$5 | $flags << 2 & 16;
    var$4 = var$5 | var$4 & 32;
    var$4 = var$4 | $flags >>> 8 & 64;
    var$4 = var$4 | $flags >>> 5 & 128;
    var$4 = var$4 | $flags & 256;
    var$4 = var$4 | $flags << 8 & 512;
    var$4 = var$4 | $flags << 10 & 1024;
    var$4 = var$4 | $flags << 1 & 2048;
    return var$4;
}
function i_Renderer$drawShadows$lambda$_8_1() {
    jl_Object.call(this);
}
function i_Renderer$drawShadows$lambda$_8_1__init_() {
    var var_0 = new i_Renderer$drawShadows$lambda$_8_1();
    i_Renderer$drawShadows$lambda$_8_1__init_0(var_0);
    return var_0;
}
function i_Renderer$drawShadows$lambda$_8_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function i_Renderer$drawShadows$lambda$_8_1_get(var$0, var$1) {
    i_Renderer$drawShadows$lambda$_8_1_get0(var$0, var$1);
}
function i_Renderer$drawShadows$lambda$_8_1_get0(var$0, var$1) {
    var$1.$drawShadow0();
}
function jnc_Charset$Charsets() {
    jl_Object.call(this);
}
var jnc_Charset$Charsets_value = null;
function jnc_Charset$Charsets_$callClinit() {
    jnc_Charset$Charsets_$callClinit = $rt_eraseClinit(jnc_Charset$Charsets);
    jnc_Charset$Charsets__clinit_();
}
function jnc_Charset$Charsets_access$000() {
    jnc_Charset$Charsets_$callClinit();
    return jnc_Charset$Charsets_value;
}
function jnc_Charset$Charsets__clinit_() {
    jnc_Charset$Charsets_value = ju_HashMap__init_();
    jnc_Charset$Charsets_value.$put($rt_s(27), jnci_UTF8Charset__init_());
}
function i_Renderer$drawShadows$lambda$_8_0() {
    jl_Object.call(this);
}
function i_Renderer$drawShadows$lambda$_8_0__init_() {
    var var_0 = new i_Renderer$drawShadows$lambda$_8_0();
    i_Renderer$drawShadows$lambda$_8_0__init_0(var_0);
    return var_0;
}
function i_Renderer$drawShadows$lambda$_8_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function i_Renderer$drawShadows$lambda$_8_0_get(var$0, var$1, var$2) {
    i_Renderer_lambda$drawShadows$0(var$1, var$2);
}
function iaate_ShakeEffect() {
    var a = this; iaat_Effect.call(a);
    a.$lastOffsets = null;
    a.$distance2 = 0.0;
    a.$intensity3 = 0.0;
}
function iaate_ShakeEffect__init_(var_0) {
    var var_1 = new iaate_ShakeEffect();
    iaate_ShakeEffect__init_0(var_1, var_0);
    return var_1;
}
function iaate_ShakeEffect__init_0($this, $label) {
    iaat_Effect__init_0($this, $label);
    $this.$lastOffsets = iaac_FloatArray__init_();
    $this.$distance2 = 1.0;
    $this.$intensity3 = 1.0;
}
function iaate_ShakeEffect_onApply($this, $glyph, $localIndex, $delta) {
    var var$4, var$5, $lastX, var$7, $lastY, $x, $y, $normalIntensity, var$12, var$13, $fadeout;
    if ($localIndex >= ($this.$lastOffsets.$size2 / 2 | 0))
        $this.$lastOffsets.$setSize4($this.$lastOffsets.$size2 + 16 | 0);
    var$4 = $this.$lastOffsets;
    var$5 = $localIndex * 2 | 0;
    $lastX = var$4.$get21(var$5);
    var$4 = $this.$lastOffsets;
    var$7 = var$5 + 1 | 0;
    $lastY = var$4.$get21(var$7);
    $x = $this.$getLineHeight() * $this.$distance2 * iaam_Mathf_random2((-1), 1) * 0.11999999731779099;
    $y = $this.$getLineHeight() * $this.$distance2 * iaam_Mathf_random2((-1), 1) * 0.11999999731779099;
    $normalIntensity = iaam_Mathf_clamp($this.$intensity3 * 0.5, 0.0, 1.0);
    iaam_Interpolation_$callClinit();
    var$12 = iaam_Interpolation_linear.$apply0($lastX, $x, $normalIntensity);
    var$13 = iaam_Interpolation_linear.$apply0($lastY, $y, $normalIntensity);
    $fadeout = $this.$calculateFadeout();
    var$12 = var$12 * $fadeout;
    var$13 = var$13 * $fadeout;
    var$12 = jl_Math_round0(var$12);
    var$13 = jl_Math_round0(var$13);
    $this.$lastOffsets.$set10(var$5, var$12);
    $this.$lastOffsets.$set10(var$7, var$13);
    $glyph.$xoffset = $glyph.$xoffset + var$12 | 0;
    $glyph.$yoffset = $glyph.$yoffset + var$13 | 0;
}
function iaas_Scene$touchDragged$lambda$_21_0() {
    jl_Object.call(this);
}
function iaas_Scene$touchDragged$lambda$_21_0__init_() {
    var var_0 = new iaas_Scene$touchDragged$lambda$_21_0();
    iaas_Scene$touchDragged$lambda$_21_0__init_0(var_0);
    return var_0;
}
function iaas_Scene$touchDragged$lambda$_21_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaas_Scene$touchDragged$lambda$_21_0_get(var$0) {
    return iaas_Scene$touchDragged$lambda$_21_0_get0(var$0);
}
function iaas_Scene$touchDragged$lambda$_21_0_get0(var$0) {
    return iaase_InputEvent__init_();
}
function iaa_KeyBinds$Axis() {
    var a = this; jl_Object.call(a);
    a.$min2 = null;
    a.$max2 = null;
    a.$key = null;
}
function iaa_KeyBinds$Axis__init_(var_0) {
    var var_1 = new iaa_KeyBinds$Axis();
    iaa_KeyBinds$Axis__init_1(var_1, var_0);
    return var_1;
}
function iaa_KeyBinds$Axis__init_0(var_0, var_1) {
    var var_2 = new iaa_KeyBinds$Axis();
    iaa_KeyBinds$Axis__init_2(var_2, var_0, var_1);
    return var_2;
}
function iaa_KeyBinds$Axis__init_1($this, $key) {
    var var$2;
    jl_Object__init_0($this);
    $this.$key = $key;
    var$2 = null;
    $this.$max2 = var$2;
    $this.$min2 = var$2;
}
function iaa_KeyBinds$Axis__init_2($this, $min, $max) {
    jl_Object__init_0($this);
    $this.$min2 = $min;
    $this.$max2 = $max;
    $this.$key = null;
}
function jur_FSet$PossessiveFSet() {
    jur_AbstractSet.call(this);
}
function jur_FSet$PossessiveFSet__init_() {
    var var_0 = new jur_FSet$PossessiveFSet();
    jur_FSet$PossessiveFSet__init_0(var_0);
    return var_0;
}
function jur_FSet$PossessiveFSet__init_0($this) {
    jur_AbstractSet__init_0($this);
}
function jur_FSet$PossessiveFSet_matches($this, $stringIndex, $testString, $matchResult) {
    return $stringIndex;
}
function jur_FSet$PossessiveFSet_getName($this) {
    return $rt_s(1218);
}
function jur_FSet$PossessiveFSet_hasConsumed($this, $mr) {
    return 0;
}
function iaate_BlinkEffect() {
    var a = this; iaat_Effect.call(a);
    a.$color16 = null;
    a.$color20 = null;
    a.$frequency0 = 0.0;
    a.$threshold6 = 0.0;
}
function iaate_BlinkEffect__init_(var_0) {
    var var_1 = new iaate_BlinkEffect();
    iaate_BlinkEffect__init_0(var_1, var_0);
    return var_1;
}
function iaate_BlinkEffect__init_0($this, $label) {
    var var$2;
    iaat_Effect__init_0($this, $label);
    $this.$color16 = null;
    $this.$color20 = null;
    $this.$frequency0 = 1.0;
    $this.$threshold6 = 0.5;
    if ($this.$color16 === null) {
        var$2 = new iaag_Color;
        iaag_Color_$callClinit();
        iaag_Color__init_8(var$2, iaag_Color_white);
        $this.$color16 = var$2;
    }
    if ($this.$color20 === null) {
        var$2 = new iaag_Color;
        iaag_Color_$callClinit();
        iaag_Color__init_8(var$2, iaag_Color_white);
        $this.$color20 = var$2;
    }
    $this.$threshold6 = iaam_Mathf_clamp($this.$threshold6, 0.0, 1.0);
}
function iaate_BlinkEffect_onApply($this, $glyph, $localIndex, $delta) {
    var $frequencyMod, $progress, var$6;
    $frequencyMod = 1.0 / $this.$frequency0 * 1.0;
    $progress = $this.$calculateProgress1($frequencyMod);
    if ($glyph.$color11 === null) {
        var$6 = new iaag_Color;
        iaag_Color_$callClinit();
        iaag_Color__init_8(var$6, iaag_Color_white);
        $glyph.$color11 = var$6;
    }
    $glyph.$color11.$set($progress > $this.$threshold6 ? $this.$color20 : $this.$color16);
}
function i_UI$lambda$setup$9$lambda$_10_0() {
    jl_Object.call(this);
}
function i_UI$lambda$setup$9$lambda$_10_0__init_() {
    var var_0 = new i_UI$lambda$setup$9$lambda$_10_0();
    i_UI$lambda$setup$9$lambda$_10_0__init_0(var_0);
    return var_0;
}
function i_UI$lambda$setup$9$lambda$_10_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function i_UI$lambda$setup$9$lambda$_10_0_get(var$0, var$1) {
    i_UI$lambda$setup$9$lambda$_10_0_get0(var$0, var$1);
}
function i_UI$lambda$setup$9$lambda$_10_0_get0(var$0, var$1) {
    i_UI_lambda$null$8(var$1);
}
function jur_PosCompositeGroupQuantifierSet() {
    jur_CompositeGroupQuantifierSet.call(this);
}
function jur_PosCompositeGroupQuantifierSet__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new jur_PosCompositeGroupQuantifierSet();
    jur_PosCompositeGroupQuantifierSet__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function jur_PosCompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter) {
    jur_CompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
}
function jur_PosCompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $counter, $max, $nextIndex;
    $counter = 0;
    $max = $this.$quantifier0.$max3();
    a: {
        while (true) {
            $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
            if ($nextIndex <= $stringIndex)
                break a;
            if ($counter >= $max)
                break;
            $counter = $counter + 1 | 0;
            $stringIndex = $nextIndex;
        }
    }
    if ($nextIndex < 0 && $counter < $this.$quantifier0.$min3())
        return (-1);
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function iu_Styles() {
    jl_Object.call(this);
}
var iu_Styles_font = null;
var iu_Styles_dim = null;
function iu_Styles_$callClinit() {
    iu_Styles_$callClinit = $rt_eraseClinit(iu_Styles);
    iu_Styles__clinit_();
}
function iu_Styles_load() {
    iu_Styles_$callClinit();
    iaa_Core_$callClinit();
    iaa_Core_scene.$addStyle($rt_cls(iaasu_Label$LabelStyle), iu_Styles$1__init_());
}
function iu_Styles__clinit_() {
    var var$1;
    var$1 = new iaagg_BitmapFont;
    iaa_Core_$callClinit();
    iaagg_BitmapFont__init_(var$1, iaa_Core_files.$internal($rt_s(1219)));
    iu_Styles_font = var$1;
    iu_Styles_dim = iaa_Core_atlas.$drawable($rt_s(1106)).$tint0(0.0, 0.0, 0.0, 0.44999998807907104);
}
function iaabt_TeaKeymap() {
    jl_Object.call(this);
}
function iaabt_TeaKeymap_getButton($button) {
    switch ($button) {
        case 1:
            break;
        case 2:
            iaai_KeyCode_$callClinit();
            return iaai_KeyCode_MOUSE_RIGHT;
        default:
            iaai_KeyCode_$callClinit();
            return iaai_KeyCode_MOUSE_LEFT;
    }
    iaai_KeyCode_$callClinit();
    return iaai_KeyCode_MOUSE_MIDDLE;
}
function iaabt_TeaKeymap_getCode($keyCode) {
    a: {
        switch ($keyCode) {
            case 8:
                break;
            case 9:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_TAB;
            case 10:
            case 11:
            case 12:
            case 14:
            case 15:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 28:
            case 29:
            case 30:
            case 31:
            case 41:
            case 42:
            case 43:
            case 44:
            case 47:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 93:
            case 94:
            case 95:
            case 108:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
            case 180:
            case 181:
            case 182:
            case 183:
            case 184:
            case 185:
            case 193:
            case 194:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
            case 207:
            case 208:
            case 209:
            case 210:
            case 211:
            case 212:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
                break a;
            case 13:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_ENTER;
            case 16:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_SHIFT_LEFT;
            case 17:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_CONTROL_LEFT;
            case 18:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_ALT_LEFT;
            case 19:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_UNKNOWN;
            case 20:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_UNKNOWN;
            case 27:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_ESCAPE;
            case 32:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_SPACE;
            case 33:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_PAGE_UP;
            case 34:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_PAGE_DOWN;
            case 35:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_END;
            case 36:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_HOME;
            case 37:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_LEFT;
            case 38:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_UP;
            case 39:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_RIGHT;
            case 40:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_DOWN;
            case 45:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_INSERT;
            case 46:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_DEL;
            case 48:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUM_0;
            case 49:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUM_1;
            case 50:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUM_2;
            case 51:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUM_3;
            case 52:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUM_4;
            case 53:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUM_5;
            case 54:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUM_6;
            case 55:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUM_7;
            case 56:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUM_8;
            case 57:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUM_9;
            case 65:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_A;
            case 66:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_B;
            case 67:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_C;
            case 68:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_D;
            case 69:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_E;
            case 70:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_F;
            case 71:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_G;
            case 72:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_H;
            case 73:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_I;
            case 74:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_J;
            case 75:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_K;
            case 76:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_L;
            case 77:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_M;
            case 78:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_N;
            case 79:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_O;
            case 80:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_P;
            case 81:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_Q;
            case 82:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_R;
            case 83:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_S;
            case 84:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_T;
            case 85:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_U;
            case 86:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_V;
            case 87:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_W;
            case 88:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_X;
            case 89:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_Y;
            case 90:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_Z;
            case 91:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_UNKNOWN;
            case 92:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_UNKNOWN;
            case 96:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUMPAD_0;
            case 97:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUMPAD_1;
            case 98:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUMPAD_2;
            case 99:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUMPAD_3;
            case 100:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUMPAD_4;
            case 101:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUMPAD_5;
            case 102:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUMPAD_6;
            case 103:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUMPAD_7;
            case 104:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUMPAD_8;
            case 105:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUMPAD_9;
            case 106:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_UNKNOWN;
            case 107:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_PLUS;
            case 109:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_MINUS;
            case 110:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_PERIOD;
            case 111:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_UNKNOWN;
            case 112:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_F1;
            case 113:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_F2;
            case 114:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_F3;
            case 115:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_F4;
            case 116:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_F5;
            case 117:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_F6;
            case 118:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_F7;
            case 119:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_F8;
            case 120:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_F9;
            case 121:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_F10;
            case 122:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_F11;
            case 123:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_F12;
            case 144:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_NUM;
            case 145:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_UNKNOWN;
            case 186:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_SEMICOLON;
            case 187:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_EQUALS;
            case 188:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_COMMA;
            case 189:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_MINUS;
            case 190:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_PERIOD;
            case 191:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_SLASH;
            case 192:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_BACKTICK;
            case 219:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_LEFT_BRACKET;
            case 220:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_BACKSLASH;
            case 221:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_RIGHT_BRACKET;
            case 222:
                iaai_KeyCode_$callClinit();
                return iaai_KeyCode_APOSTROPHE;
            default:
                break a;
        }
        iaai_KeyCode_$callClinit();
        return iaai_KeyCode_BACKSPACE;
    }
    iaai_KeyCode_$callClinit();
    return iaai_KeyCode_UNKNOWN;
}
function it_Fx$lambda$static$13$lambda$_18_0() {
    jl_Object.call(this);
    this.$_0110 = null;
}
function it_Fx$lambda$static$13$lambda$_18_0__init_(var_0) {
    var var_1 = new it_Fx$lambda$static$13$lambda$_18_0();
    it_Fx$lambda$static$13$lambda$_18_0__init_0(var_1, var_0);
    return var_1;
}
function it_Fx$lambda$static$13$lambda$_18_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0110 = var$1;
}
function it_Fx$lambda$static$13$lambda$_18_0_get(var$0, var$1, var$2) {
    it_Fx_lambda$null$12(var$0.$_0110, var$1, var$2);
}
function jur_AbstractCharClass$LazyJavaDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$026 = null;
}
function jur_AbstractCharClass$LazyJavaDigit$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaDigit$1();
    jur_AbstractCharClass$LazyJavaDigit$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaDigit$1__init_0($this, $this$0) {
    $this.$this$026 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaDigit$1_contains($this, $ch) {
    return jl_Character_isDigit($ch);
}
function iaam_Interpolation$BounceIn() {
    iaam_Interpolation$BounceOut.call(this);
}
function iaam_Interpolation$BounceIn__init_(var_0) {
    var var_1 = new iaam_Interpolation$BounceIn();
    iaam_Interpolation$BounceIn__init_0(var_1, var_0);
    return var_1;
}
function iaam_Interpolation$BounceIn__init_0($this, $bounces) {
    iaam_Interpolation$BounceOut__init_0($this, $bounces);
}
function jl_NoSuchMethodException() {
    jl_ReflectiveOperationException.call(this);
}
function jl_NoSuchMethodException__init_() {
    var var_0 = new jl_NoSuchMethodException();
    jl_NoSuchMethodException__init_0(var_0);
    return var_0;
}
function jl_NoSuchMethodException__init_0($this) {
    jl_ReflectiveOperationException__init_0($this);
}
function it_Phases$lambda$null$4$lambda$_63_0() {
    jl_Object.call(this);
    this.$_0111 = 0.0;
}
function it_Phases$lambda$null$4$lambda$_63_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$null$4$lambda$_63_0();
    it_Phases$lambda$null$4$lambda$_63_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$null$4$lambda$_63_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0111 = var$1;
}
function it_Phases$lambda$null$4$lambda$_63_0_run(var$0) {
    it_Phases_lambda$null$1(var$0.$_0111);
}
function jn_IntBufferOverByteBufferBigEndian() {
    jn_IntBufferOverByteBuffer.call(this);
}
function jn_IntBufferOverByteBufferBigEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_IntBufferOverByteBufferBigEndian();
    jn_IntBufferOverByteBufferBigEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_IntBufferOverByteBufferBigEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_IntBufferOverByteBuffer__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_IntBufferOverByteBufferBigEndian_getElement($this, $index) {
    var var$2, var$3, var$4;
    var$2 = $this.$byteByffer.$array.data;
    var$3 = $this.$start0;
    var$4 = $index * 4 | 0;
    return (var$2[var$3 + var$4 | 0] & 255) << 24 | ($this.$byteByffer.$array.data[($this.$start0 + var$4 | 0) + 1 | 0] & 255) << 16 | ($this.$byteByffer.$array.data[($this.$start0 + var$4 | 0) + 2 | 0] & 255) << 8 | $this.$byteByffer.$array.data[($this.$start0 + var$4 | 0) + 3 | 0] & 255;
}
function jn_IntBufferOverByteBufferBigEndian_putElement($this, $index, $value) {
    var var$3, var$4, var$5;
    var$3 = $this.$byteByffer.$array.data;
    var$4 = $this.$start0;
    var$5 = $index * 4 | 0;
    var$3[var$4 + var$5 | 0] = $value >> 24 << 24 >> 24;
    $this.$byteByffer.$array.data[($this.$start0 + var$5 | 0) + 1 | 0] = $value >> 16 << 24 >> 24;
    $this.$byteByffer.$array.data[($this.$start0 + var$5 | 0) + 2 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer.$array.data[($this.$start0 + var$5 | 0) + 3 | 0] = $value << 24 >> 24;
}
function it_Phases$lambda$null$4$lambda$_63_1() {
    jl_Object.call(this);
    this.$_0112 = 0.0;
}
function it_Phases$lambda$null$4$lambda$_63_1__init_(var_0) {
    var var_1 = new it_Phases$lambda$null$4$lambda$_63_1();
    it_Phases$lambda$null$4$lambda$_63_1__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$null$4$lambda$_63_1__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0112 = var$1;
}
function it_Phases$lambda$null$4$lambda$_63_1_run(var$0) {
    it_Phases_lambda$null$3(var$0.$_0112);
}
function iaagg_FrameBuffer() {
    iaagg_GLFrameBuffer.call(this);
    this.$format3 = null;
}
function iaagg_FrameBuffer__init_(var_0, var_1) {
    var var_2 = new iaagg_FrameBuffer();
    iaagg_FrameBuffer__init_2(var_2, var_0, var_1);
    return var_2;
}
function iaagg_FrameBuffer__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new iaagg_FrameBuffer();
    iaagg_FrameBuffer__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaagg_FrameBuffer__init_3(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new iaagg_FrameBuffer();
    iaagg_FrameBuffer__init_4(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function iaagg_FrameBuffer__init_2($this, $width, $height) {
    iaag_Pixmap$Format_$callClinit();
    iaagg_FrameBuffer__init_4($this, iaag_Pixmap$Format_RGBA8888, $width, $height, 0, 0);
}
function iaagg_FrameBuffer__init_0($this, $format, $width, $height, $hasDepth) {
    iaagg_FrameBuffer__init_4($this, $format, $width, $height, $hasDepth, 0);
}
function iaagg_FrameBuffer__init_4($this, $format, $width, $height, $hasDepth, $hasStencil) {
    var var$6, var$7, $frameBufferBuilder;
    iaagg_GLFrameBuffer__init_0($this);
    var$6 = jl_Math_max1($width, 2);
    var$7 = jl_Math_max1($height, 2);
    $this.$format3 = $format;
    $frameBufferBuilder = iaagg_GLFrameBuffer$FrameBufferBuilder__init_(var$6, var$7);
    $frameBufferBuilder.$addBasicColorTextureAttachment($format);
    if ($hasDepth)
        $frameBufferBuilder.$addBasicDepthRenderBuffer();
    if ($hasStencil)
        $frameBufferBuilder.$addBasicStencilRenderBuffer();
    $this.$bufferBuilder = $frameBufferBuilder;
    $this.$build();
}
function iaagg_FrameBuffer_resize($this, $width, $height) {
    var var$3, var$4, $min, $mag, $frameBufferBuilder;
    var$3 = jl_Math_max1($width, 2);
    var$4 = jl_Math_max1($height, 2);
    $min = $this.$getTexture0().$getMinFilter();
    $mag = $this.$getTexture0().$getMagFilter();
    $this.$dispose();
    $frameBufferBuilder = iaagg_GLFrameBuffer$FrameBufferBuilder__init_(var$3, var$4);
    $frameBufferBuilder.$addBasicColorTextureAttachment($this.$format3);
    $this.$bufferBuilder = $frameBufferBuilder;
    $this.$textureAttachments.$clear();
    $this.$framebufferHandle = 0;
    $this.$depthbufferHandle = 0;
    $this.$stencilbufferHandle = 0;
    $this.$depthStencilPackedBufferHandle = 0;
    $this.$isMRT = 0;
    $this.$hasDepthStencilPackedBuffer = 0;
    $this.$build();
    $this.$getTexture0().$setFilter($min, $mag);
}
function iaagg_FrameBuffer_createTexture($this, $attachmentSpec) {
    var $data, $result;
    $data = iaagg_GLOnlyTextureData__init_($this.$bufferBuilder.$width1, $this.$bufferBuilder.$height1, 0, $attachmentSpec.$internalFormat, $attachmentSpec.$format, $attachmentSpec.$type1);
    $result = iaag_Texture__init_3($data);
    iaag_Texture$TextureFilter_$callClinit();
    $result.$setFilter(iaag_Texture$TextureFilter_Linear, iaag_Texture$TextureFilter_Linear);
    iaag_Texture$TextureWrap_$callClinit();
    $result.$setWrap0(iaag_Texture$TextureWrap_ClampToEdge, iaag_Texture$TextureWrap_ClampToEdge);
    return $result;
}
function iaagg_FrameBuffer_disposeColorTexture($this, $colorTexture) {
    $colorTexture.$dispose();
}
function iaagg_FrameBuffer_attachFrameBufferColorTexture($this, $texture) {
    iaa_Core_$callClinit();
    iaa_Core_gl20.$glFramebufferTexture2D(36160, 36064, 3553, $texture.$getTextureObjectHandle(), 0);
}
function iaagg_FrameBuffer_attachFrameBufferColorTexture0($this, var$1) {
    $this.$attachFrameBufferColorTexture0(var$1);
}
function iaagg_FrameBuffer_disposeColorTexture0($this, var$1) {
    $this.$disposeColorTexture0(var$1);
}
function iaagg_FrameBuffer_createTexture0($this, var$1) {
    return $this.$createTexture0(var$1);
}
function jl_NullPointerException() {
    jl_RuntimeException.call(this);
}
function jl_NullPointerException__init_0(var_0) {
    var var_1 = new jl_NullPointerException();
    jl_NullPointerException__init_1(var_1, var_0);
    return var_1;
}
function jl_NullPointerException__init_() {
    var var_0 = new jl_NullPointerException();
    jl_NullPointerException__init_2(var_0);
    return var_0;
}
function jl_NullPointerException__init_1($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
function jl_NullPointerException__init_2($this) {
    jl_RuntimeException__init_1($this);
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1() {
    jur_AbstractCharClass.call(this);
    this.$this$027 = null;
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaSpaceChar$1();
    jur_AbstractCharClass$LazyJavaSpaceChar$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1__init_0($this, $this$0) {
    $this.$this$027 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1_contains($this, $ch) {
    return jl_Character_isSpaceChar($ch);
}
function iaa_Files() {
}
function iaa_Files_internal($this, $path) {
    iaa_Files$FileType_$callClinit();
    return $this.$get59($path, iaa_Files$FileType_internal);
}
function iaa_Files_local($this, $path) {
    iaa_Files$FileType_$callClinit();
    return $this.$get59($path, iaa_Files$FileType_local);
}
function iaabt_TeaFiles() {
    jl_Object.call(this);
}
var iaabt_TeaFiles_localStorage = null;
function iaabt_TeaFiles_$callClinit() {
    iaabt_TeaFiles_$callClinit = $rt_eraseClinit(iaabt_TeaFiles);
    iaabt_TeaFiles__clinit_();
}
function iaabt_TeaFiles__init_() {
    var var_0 = new iaabt_TeaFiles();
    iaabt_TeaFiles__init_0(var_0);
    return var_0;
}
function iaabt_TeaFiles__init_0($this) {
    iaabt_TeaFiles_$callClinit();
    jl_Object__init_0($this);
}
function iaabt_TeaFiles_get($this, $path, $type) {
    iaa_Files$FileType_$callClinit();
    if ($type === iaa_Files$FileType_internal)
        return iaabt_TeaFi__init_($path, $type);
    $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(551)).$append1($type).$append($rt_s(1220)).$toString()));
}
function iaabt_TeaFiles__clinit_() {
    iaabt_TeaFiles_localStorage = otjb_Storage_getLocalStorage();
}
function iaac_ObjectIntMap$Values() {
    iaac_ObjectIntMap$MapIterator.call(this);
}
function jl_Math() {
    jl_Object.call(this);
}
function jl_Math_sin(var$1) {
    return Math.sin(var$1);
}
function jl_Math_cos(var$1) {
    return Math.cos(var$1);
}
function jl_Math_log(var$1) {
    return Math.log(var$1);
}
function jl_Math_sqrt(var$1) {
    return Math.sqrt(var$1);
}
function jl_Math_ceil(var$1) {
    return Math.ceil(var$1);
}
function jl_Math_pow(var$1, var$2) {
    return Math.pow(var$1, var$2);
}
function jl_Math_atan2(var$1, var$2) {
    return Math.atan2(var$1, var$2);
}
function jl_Math_round0($a) {
    return $a + jl_Math_signum($a) * 0.5 | 0;
}
function jl_Math_round($a) {
    return Long_fromNumber($a + jl_Math_signum0($a) * 0.5);
}
function jl_Math_random() {
    return jl_Math_randomImpl();
}
function jl_Math_randomImpl() {
    return Math.random();
}
function jl_Math_min1($a, $b) {
    if ($a < $b)
        $b = $a;
    return $b;
}
function jl_Math_max1($a, $b) {
    if ($a > $b)
        $b = $a;
    return $b;
}
function jl_Math_min0($a, $b) {
    if ($a < $b)
        $b = $a;
    return $b;
}
function jl_Math_max0($a, $b) {
    if ($a > $b)
        $b = $a;
    return $b;
}
function jl_Math_min($a, $b) {
    if ($a < $b)
        $b = $a;
    return $b;
}
function jl_Math_max($a, $b) {
    if ($a > $b)
        $b = $a;
    return $b;
}
function jl_Math_abs($n) {
    if ($n <= 0)
        $n =  -$n;
    return $n;
}
function jl_Math_abs0($n) {
    if ($n <= 0.0)
        $n =  -$n;
    return $n;
}
function jl_Math_abs1($n) {
    if ($n <= 0.0)
        $n =  -$n;
    return $n;
}
function jl_Math_signum0($d) {
    var var$2;
    var$2 = $rt_compare($d, 0.0);
    if (var$2 > 0)
        $d = 1.0;
    else if (var$2 < 0)
        $d = (-1.0);
    return $d;
}
function jl_Math_signum($d) {
    var var$2;
    var$2 = $rt_compare($d, 0.0);
    if (var$2 > 0)
        $d = 1.0;
    else if (var$2 < 0)
        $d = (-1.0);
    return $d;
}
function iaau_Tmp() {
    jl_Object.call(this);
}
var iaau_Tmp_v1 = null;
var iaau_Tmp_v2 = null;
var iaau_Tmp_v3 = null;
var iaau_Tmp_v4 = null;
var iaau_Tmp_v31 = null;
var iaau_Tmp_v32 = null;
var iaau_Tmp_v33 = null;
var iaau_Tmp_q1 = null;
var iaau_Tmp_q2 = null;
var iaau_Tmp_q3 = null;
var iaau_Tmp_r1 = null;
var iaau_Tmp_r2 = null;
var iaau_Tmp_r3 = null;
var iaau_Tmp_cr1 = null;
var iaau_Tmp_cr2 = null;
var iaau_Tmp_cr3 = null;
var iaau_Tmp_t1 = null;
var iaau_Tmp_c1 = null;
var iaau_Tmp_c2 = null;
var iaau_Tmp_c3 = null;
var iaau_Tmp_c4 = null;
var iaau_Tmp_g1 = null;
var iaau_Tmp_g2 = null;
var iaau_Tmp_g3 = null;
var iaau_Tmp_tr1 = null;
var iaau_Tmp_tr2 = null;
var iaau_Tmp_m1 = null;
var iaau_Tmp_m2 = null;
var iaau_Tmp_m3 = null;
function iaau_Tmp_$callClinit() {
    iaau_Tmp_$callClinit = $rt_eraseClinit(iaau_Tmp);
    iaau_Tmp__clinit_();
}
function iaau_Tmp__clinit_() {
    iaau_Tmp_v1 = iaamg_Vector2__init_0();
    iaau_Tmp_v2 = iaamg_Vector2__init_0();
    iaau_Tmp_v3 = iaamg_Vector2__init_0();
    iaau_Tmp_v4 = iaamg_Vector2__init_0();
    iaau_Tmp_v31 = iaamg_Vector3__init_0();
    iaau_Tmp_v32 = iaamg_Vector3__init_0();
    iaau_Tmp_v33 = iaamg_Vector3__init_0();
    iaau_Tmp_q1 = iaam_Quaternion__init_1();
    iaau_Tmp_q2 = iaam_Quaternion__init_1();
    iaau_Tmp_q3 = iaam_Quaternion__init_1();
    iaau_Tmp_r1 = iaamg_Rectangle__init_0();
    iaau_Tmp_r2 = iaamg_Rectangle__init_0();
    iaau_Tmp_r3 = iaamg_Rectangle__init_0();
    iaau_Tmp_cr1 = iaamg_Circle__init_();
    iaau_Tmp_cr2 = iaamg_Circle__init_();
    iaau_Tmp_cr3 = iaamg_Circle__init_();
    iaau_Tmp_t1 = iaamg_Vector2__init_0();
    iaau_Tmp_c1 = iaag_Color__init_0();
    iaau_Tmp_c2 = iaag_Color__init_0();
    iaau_Tmp_c3 = iaag_Color__init_0();
    iaau_Tmp_c4 = iaag_Color__init_0();
    iaau_Tmp_g1 = iaamg_Point2__init_0();
    iaau_Tmp_g2 = iaamg_Point2__init_0();
    iaau_Tmp_g3 = iaamg_Point2__init_0();
    iaau_Tmp_tr1 = iaagg_TextureRegion__init_1();
    iaau_Tmp_tr2 = iaagg_TextureRegion__init_1();
    iaau_Tmp_m1 = iaam_Matrix3__init_();
    iaau_Tmp_m2 = iaam_Matrix3__init_();
    iaau_Tmp_m3 = iaam_Matrix3__init_();
}
function it_Phases$lambda$null$6$lambda$_61_0() {
    jl_Object.call(this);
    this.$_0113 = null;
}
function it_Phases$lambda$null$6$lambda$_61_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$null$6$lambda$_61_0();
    it_Phases$lambda$null$6$lambda$_61_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$null$6$lambda$_61_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0113 = var$1;
}
function it_Phases$lambda$null$6$lambda$_61_0_get(var$0, var$1) {
    var$0.$_0113.$shoot(var$1);
}
function iaamg_Geometry$Raycaster() {
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_PatternSyntaxException() {
    var a = this; jl_IllegalArgumentException.call(a);
    a.$desc = null;
    a.$pattern0 = null;
    a.$index9 = 0;
}
function jur_PatternSyntaxException__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PatternSyntaxException();
    jur_PatternSyntaxException__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PatternSyntaxException__init_0($this, $description, $pattern, $index) {
    jl_IllegalArgumentException__init_2($this);
    $this.$index9 = (-1);
    $this.$desc = $description;
    $this.$pattern0 = $pattern;
    $this.$index9 = $index;
}
function it_Phases$1$lambda$null$9$lambda$_15_0() {
    jl_Object.call(this);
}
function it_Phases$1$lambda$null$9$lambda$_15_0__init_() {
    var var_0 = new it_Phases$1$lambda$null$9$lambda$_15_0();
    it_Phases$1$lambda$null$9$lambda$_15_0__init_0(var_0);
    return var_0;
}
function it_Phases$1$lambda$null$9$lambda$_15_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$1$lambda$null$9$lambda$_15_0_run(var$0) {
    it_Phases$1_lambda$null$8();
}
function iaa_KeyBinds$Section() {
    var a = this; jl_Object.call(a);
    a.$name10 = null;
    a.$binds = null;
    a.$device = null;
    a.$this$028 = null;
}
function iaa_KeyBinds$Section__init_(var_0, var_1) {
    var var_2 = new iaa_KeyBinds$Section();
    iaa_KeyBinds$Section__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaa_KeyBinds$Section__init_0($this, $this$0, $name) {
    $this.$this$028 = $this$0;
    jl_Object__init_0($this);
    $this.$binds = iaac_ObjectMap__init_();
    iaa_Core_$callClinit();
    $this.$device = iaa_Core_input.$getKeyboard();
    $this.$name10 = $name;
}
function jur_AbstractCharClass$LazyJavaDefined() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaDefined__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaDefined();
    jur_AbstractCharClass$LazyJavaDefined__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaDefined__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaDefined_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaDefined$1__init_($this);
    $chCl.$lowHighSurrogates.$set4(0, 2048);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function it_Bullets$9$lambda$null$4$lambda$_10_0() {
    var a = this; jl_Object.call(a);
    a.$_0114 = null;
    a.$_147 = 0.0;
}
function it_Bullets$9$lambda$null$4$lambda$_10_0__init_(var_0, var_1) {
    var var_2 = new it_Bullets$9$lambda$null$4$lambda$_10_0();
    it_Bullets$9$lambda$null$4$lambda$_10_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Bullets$9$lambda$null$4$lambda$_10_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_0114 = var$1;
    var$0.$_147 = var$2;
}
function it_Bullets$9$lambda$null$4$lambda$_10_0_get(var$0, var$1) {
    it_Bullets$9_lambda$null$3(var$0.$_0114, var$0.$_147, var$1);
}
function it_Phases$1$lambda$null$11$lambda$_13_0() {
    jl_Object.call(this);
    this.$_0115 = null;
}
function it_Phases$1$lambda$null$11$lambda$_13_0__init_(var_0) {
    var var_1 = new it_Phases$1$lambda$null$11$lambda$_13_0();
    it_Phases$1$lambda$null$11$lambda$_13_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$1$lambda$null$11$lambda$_13_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0115 = var$1;
}
function it_Phases$1$lambda$null$11$lambda$_13_0_get(var$0, var$1) {
    var$0.$_0115.$shootf(var$1);
}
function jur_Pattern() {
    var a = this; jl_Object.call(a);
    a.$lexemes = null;
    a.$flags2 = 0;
    a.$backRefs = null;
    a.$needsBackRefReplacement = 0;
    a.$globalGroupIndex = 0;
    a.$compCount = 0;
    a.$consCount = 0;
    a.$start8 = null;
}
function jur_Pattern__init_() {
    var var_0 = new jur_Pattern();
    jur_Pattern__init_0(var_0);
    return var_0;
}
function jur_Pattern_matcher($this, $input) {
    return jur_Matcher__init_($this, $input);
}
function jur_Pattern_split0($this, $inputSeq, $limit) {
    var $res, $mat, $index, $curPos, var$7, var$8;
    $res = ju_ArrayList__init_();
    $mat = jur_Pattern_matcher($this, $inputSeq);
    $index = 0;
    $curPos = 0;
    if (!$inputSeq.$length()) {
        var$7 = $rt_createArray(jl_String, 1);
        var$7.data[0] = $rt_s(58);
        return var$7;
    }
    while (jur_Matcher_find($mat)) {
        var$8 = $index + 1 | 0;
        if (var$8 >= $limit && $limit > 0)
            break;
        $res.$add7($inputSeq.$subSequence($curPos, jur_Matcher_start($mat)).$toString());
        $curPos = jur_Matcher_end($mat);
        $index = var$8;
    }
    a: {
        $res.$add7($inputSeq.$subSequence($curPos, $inputSeq.$length()).$toString());
        var$8 = $index + 1 | 0;
        if (!$limit)
            while (true) {
                var$8 = var$8 + (-1) | 0;
                if (var$8 < 0)
                    break;
                if ($res.$get(var$8).$toString().$length())
                    break a;
                $res.$remove(var$8);
            }
    }
    if (var$8 < 0)
        var$8 = 0;
    return $res.$toArray($rt_createArray(jl_String, var$8));
}
function jur_Pattern_split($this, $input) {
    return jur_Pattern_split0($this, $input, 0);
}
function jur_Pattern_pattern($this) {
    return $this.$lexemes.$toString();
}
function jur_Pattern_compile0($pattern, $flags) {
    if ($pattern === null)
        $rt_throw(jl_NullPointerException__init_0($rt_s(1221)));
    if ($flags && ($flags | 255) != 255)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(58)));
    jur_AbstractSet_$callClinit();
    jur_AbstractSet_counter = 1;
    return jur_Pattern_compileImpl(jur_Pattern__init_(), $pattern, $flags);
}
function jur_Pattern_compileImpl($this, $pattern, $flags) {
    $this.$lexemes = jur_Lexer__init_($pattern, $flags);
    $this.$flags2 = $flags;
    $this.$start8 = jur_Pattern_processExpression($this, (-1), $this.$flags2, null);
    if ($this.$lexemes.$isEmpty()) {
        jur_Pattern_finalizeCompile($this);
        return $this;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
}
function jur_Pattern_processAlternations($this, $last) {
    var $auxRange, var$3, $rangeSet;
    $auxRange = jur_CharClass__init_1(jur_Pattern_hasFlag($this, 2), jur_Pattern_hasFlag($this, 64));
    while (!$this.$lexemes.$isEmpty()) {
        var$3 = $this.$lexemes;
        if (!var$3.$isLetter0())
            break;
        var$3 = $this.$lexemes;
        if (var$3.$lookAhead0() && $this.$lexemes.$lookAhead0() != (-536870788)) {
            var$3 = $this.$lexemes;
            if (var$3.$lookAhead0() != (-536870871))
                break;
        }
        $auxRange.$add($this.$lexemes.$next5());
        if ($this.$lexemes.$peek1() != (-536870788))
            continue;
        $this.$lexemes.$next5();
    }
    $rangeSet = jur_Pattern_processRangeSet($this, $auxRange);
    $rangeSet.$setNext($last);
    return $rangeSet;
}
function jur_Pattern_processExpression($this, $ch, $newFlags, $last) {
    var $children, $saveFlags, $saveChangedFlags, $fSet, var$8, $child;
    $children = ju_ArrayList__init_();
    $saveFlags = $this.$flags2;
    $saveChangedFlags = 0;
    if ($newFlags != $this.$flags2)
        $this.$flags2 = $newFlags;
    a: {
        switch ($ch) {
            case -1073741784:
                $fSet = new jur_NonCapFSet;
                var$8 = $this.$consCount + 1 | 0;
                $this.$consCount = var$8;
                jur_NonCapFSet__init_0($fSet, var$8);
                break a;
            case -536870872:
            case -268435416:
                break;
            case -134217688:
            case -67108824:
                $fSet = new jur_BehindFSet;
                var$8 = $this.$consCount + 1 | 0;
                $this.$consCount = var$8;
                jur_BehindFSet__init_0($fSet, var$8);
                break a;
            case -33554392:
                $fSet = new jur_AtomicFSet;
                var$8 = $this.$consCount + 1 | 0;
                $this.$consCount = var$8;
                jur_AtomicFSet__init_0($fSet, var$8);
                break a;
            default:
                $this.$globalGroupIndex = $this.$globalGroupIndex + 1 | 0;
                if ($last !== null)
                    $fSet = jur_FSet__init_($this.$globalGroupIndex);
                else {
                    $fSet = jur_FinalSet__init_();
                    $saveChangedFlags = 1;
                }
                if ($this.$globalGroupIndex <= (-1))
                    break a;
                if ($this.$globalGroupIndex >= 10)
                    break a;
                $this.$backRefs.data[$this.$globalGroupIndex] = $fSet;
                break a;
        }
        $fSet = jur_AheadFSet__init_();
    }
    while (true) {
        if ($this.$lexemes.$isLetter0() && $this.$lexemes.$lookAhead0() == (-536870788))
            $child = jur_Pattern_processAlternations($this, $fSet);
        else if ($this.$lexemes.$peek1() == (-536870788)) {
            $child = jur_EmptySet__init_($fSet);
            $this.$lexemes.$next5();
        } else {
            $child = jur_Pattern_processSubExpression($this, $fSet);
            if ($this.$lexemes.$peek1() == (-536870788))
                $this.$lexemes.$next5();
        }
        if ($child !== null)
            $children.$add7($child);
        if ($this.$lexemes.$isEmpty())
            break;
        if ($this.$lexemes.$peek1() == (-536870871))
            break;
    }
    if ($this.$lexemes.$back() == (-536870788))
        $children.$add7(jur_EmptySet__init_($fSet));
    if ($this.$flags2 != $saveFlags && !$saveChangedFlags) {
        $this.$flags2 = $saveFlags;
        $this.$lexemes.$restoreFlags($this.$flags2);
    }
    switch ($ch) {
        case -1073741784:
            break;
        case -536870872:
            return jur_PositiveLookAhead__init_($children, $fSet);
        case -268435416:
            return jur_NegativeLookAhead__init_($children, $fSet);
        case -134217688:
            return jur_PositiveLookBehind__init_($children, $fSet);
        case -67108824:
            return jur_NegativeLookBehind__init_($children, $fSet);
        case -33554392:
            return jur_AtomicJointSet__init_($children, $fSet);
        default:
            switch ($children.$size0()) {
                case 0:
                    break;
                case 1:
                    return jur_SingleSet__init_($children.$get(0), $fSet);
                default:
                    return jur_JointSet__init_1($children, $fSet);
            }
            return jur_EmptySet__init_($fSet);
    }
    return jur_NonCapJointSet__init_($children, $fSet);
}
function jur_Pattern_processSequence($this) {
    var $substring, var$2, $ch;
    $substring = jl_StringBuffer__init_();
    while (!$this.$lexemes.$isEmpty()) {
        var$2 = $this.$lexemes;
        if (!var$2.$isLetter0())
            break;
        var$2 = $this.$lexemes;
        if (var$2.$isHighSurrogate1())
            break;
        var$2 = $this.$lexemes;
        if (var$2.$isLowSurrogate1())
            break;
        var$2 = $this.$lexemes;
        if (!(!var$2.$isNextSpecial() && !$this.$lexemes.$lookAhead0())) {
            var$2 = $this.$lexemes;
            if (!(!var$2.$isNextSpecial() && jur_Lexer_isLetter($this.$lexemes.$lookAhead0()))) {
                var$2 = $this.$lexemes;
                if (var$2.$lookAhead0() != (-536870871)) {
                    var$2 = $this.$lexemes;
                    if ((var$2.$lookAhead0() & (-2147418113)) != (-2147483608)) {
                        var$2 = $this.$lexemes;
                        if (var$2.$lookAhead0() != (-536870788)) {
                            var$2 = $this.$lexemes;
                            if (var$2.$lookAhead0() != (-536870876))
                                break;
                        }
                    }
                }
            }
        }
        $ch = $this.$lexemes.$next5();
        if (!jl_Character_isSupplementaryCodePoint($ch))
            $substring.$append16($ch & 65535);
        else
            $substring.$append17(jl_Character_toChars($ch));
    }
    if (!jur_Pattern_hasFlag($this, 2))
        return jur_SequenceSet__init_($substring);
    if (jur_Pattern_hasFlag($this, 64))
        return jur_UCISequenceSet__init_($substring);
    return jur_CISequenceSet__init_($substring);
}
function jur_Pattern_processDecomposedChar($this) {
    var $codePoints, $readCodePoints, $curSymb, $curSymbIndex, var$5, $codePointsHangul, var$7, var$8, var$9, var$10;
    $codePoints = $rt_createIntArray(4);
    $readCodePoints = 0;
    $curSymb = (-1);
    $curSymbIndex = (-1);
    if (!$this.$lexemes.$isEmpty() && $this.$lexemes.$isLetter0()) {
        var$5 = $codePoints.data;
        $curSymb = $this.$lexemes.$next5();
        var$5[$readCodePoints] = $curSymb;
        $curSymbIndex = $curSymb - 4352 | 0;
    }
    if ($curSymbIndex >= 0 && $curSymbIndex < 19) {
        $codePointsHangul = $rt_createCharArray(3);
        var$5 = $codePointsHangul.data;
        var$5[$readCodePoints] = $curSymb & 65535;
        var$7 = $this.$lexemes.$peek1();
        var$8 = var$7 - 4449 | 0;
        if (var$8 >= 0 && var$8 < 21) {
            var$5[1] = var$7 & 65535;
            $this.$lexemes.$next5();
            var$9 = $this.$lexemes.$peek1();
            var$7 = var$9 - 4519 | 0;
            if (var$7 >= 0 && var$7 < 28) {
                var$5[2] = var$9 & 65535;
                $this.$lexemes.$next5();
                return jur_HangulDecomposedCharSet__init_($codePointsHangul, 3);
            }
            return jur_HangulDecomposedCharSet__init_($codePointsHangul, 2);
        }
        if (!jur_Pattern_hasFlag($this, 2))
            return jur_CharSet__init_(var$5[0]);
        if (jur_Pattern_hasFlag($this, 64))
            return jur_UCICharSet__init_(var$5[0]);
        return jur_CICharSet__init_(var$5[0]);
    }
    var$10 = 1;
    while (var$10 < 4 && !$this.$lexemes.$isEmpty() && $this.$lexemes.$isLetter0()) {
        var$5 = $codePoints.data;
        var$9 = var$10 + 1 | 0;
        var$5[var$10] = $this.$lexemes.$next5();
        var$10 = var$9;
    }
    if (var$10 == 1) {
        var$5 = $codePoints.data;
        if (!jur_Lexer_hasSingleCodepointDecomposition(var$5[0]))
            return jur_Pattern_processCharSet($this, var$5[0]);
    }
    if (!jur_Pattern_hasFlag($this, 2))
        return jur_DecomposedCharSet__init_($codePoints, var$10);
    if (jur_Pattern_hasFlag($this, 64))
        return jur_UCIDecomposedCharSet__init_($codePoints, var$10);
    return jur_CIDecomposedCharSet__init_($codePoints, var$10);
}
function jur_Pattern_processSubExpression($this, $last) {
    var $cur, $term, var$4, $next;
    if ($this.$lexemes.$isLetter0() && !$this.$lexemes.$isNextSpecial() && jur_Lexer_isLetter($this.$lexemes.$lookAhead0())) {
        if (!jur_Pattern_hasFlag($this, 128)) {
            if (!$this.$lexemes.$isHighSurrogate1() && !$this.$lexemes.$isLowSurrogate1())
                $cur = jur_Pattern_processSequence($this);
            else {
                $term = jur_Pattern_processTerminal($this, $last);
                $cur = jur_Pattern_processQuantifier($this, $last, $term);
            }
        } else {
            $cur = jur_Pattern_processDecomposedChar($this);
            if (!$this.$lexemes.$isEmpty()) {
                var$4 = $this.$lexemes;
                if (!(var$4.$peek1() == (-536870871) && !($last instanceof jur_FinalSet))) {
                    var$4 = $this.$lexemes;
                    if (var$4.$peek1() != (-536870788) && !$this.$lexemes.$isLetter0())
                        $cur = jur_Pattern_processQuantifier($this, $last, $cur);
                }
            }
        }
    } else if ($this.$lexemes.$peek1() != (-536870871)) {
        $term = jur_Pattern_processTerminal($this, $last);
        $cur = jur_Pattern_processQuantifier($this, $last, $term);
    } else {
        if ($last instanceof jur_FinalSet)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
        $cur = jur_EmptySet__init_($last);
    }
    a: {
        if (!$this.$lexemes.$isEmpty()) {
            var$4 = $this.$lexemes;
            if (!(var$4.$peek1() == (-536870871) && !($last instanceof jur_FinalSet))) {
                var$4 = $this.$lexemes;
                if (var$4.$peek1() != (-536870788)) {
                    $next = jur_Pattern_processSubExpression($this, $last);
                    if ($cur instanceof jur_LeafQuantifierSet && !($cur instanceof jur_CompositeQuantifierSet) && !($cur instanceof jur_GroupQuantifierSet) && !($cur instanceof jur_AltQuantifierSet)) {
                        var$4 = $cur;
                        if (!$next.$first(var$4.$getInnerSet()))
                            $cur = jur_UnifiedQuantifierSet__init_(var$4);
                    }
                    if (($next.$getType() & 65535) != 43)
                        $cur.$setNext($next);
                    else
                        $cur.$setNext($next.$getInnerSet());
                    break a;
                }
            }
        }
        if ($cur === null)
            return null;
        $cur.$setNext($last);
    }
    if (($cur.$getType() & 65535) != 43)
        return $cur;
    return $cur.$getInnerSet();
}
function jur_Pattern_processQuantifier($this, $last, $term) {
    var $quant, var$4, var$5, var$6, $q, var$8, $leaf;
    $quant = $this.$lexemes.$peek1();
    if ($term !== null && !($term instanceof jur_LeafSet)) {
        switch ($quant) {
            case -2147483606:
                $this.$lexemes.$next5();
                return jur_PossessiveGroupQuantifierSet__init_($term, $last, $quant);
            case -2147483605:
                $this.$lexemes.$next5();
                return jur_PosPlusGroupQuantifierSet__init_($term, $last, (-2147483606));
            case -2147483585:
                $this.$lexemes.$next5();
                return jur_PosAltGroupQuantifierSet__init_($term, $last, (-536870849));
            case -2147483525:
                var$4 = new jur_PosCompositeGroupQuantifierSet;
                var$5 = $this.$lexemes.$nextSpecial();
                var$6 = $this.$compCount + 1 | 0;
                $this.$compCount = var$6;
                jur_PosCompositeGroupQuantifierSet__init_0(var$4, var$5, $term, $last, (-536870849), var$6);
                return var$4;
            case -1073741782:
            case -1073741781:
                $this.$lexemes.$next5();
                $q = jur_ReluctantGroupQuantifierSet__init_($term, $last, $quant);
                $term.$setNext($q);
                return $q;
            case -1073741761:
                $this.$lexemes.$next5();
                $q = jur_RelAltGroupQuantifierSet__init_($term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -1073741701:
                $q = new jur_RelCompositeGroupQuantifierSet;
                var$4 = $this.$lexemes;
                var$4 = var$4.$nextSpecial();
                var$8 = $this.$compCount + 1 | 0;
                $this.$compCount = var$8;
                jur_RelCompositeGroupQuantifierSet__init_0($q, var$4, $term, $last, (-536870849), var$8);
                $term.$setNext($q);
                return $q;
            case -536870870:
            case -536870869:
                $this.$lexemes.$next5();
                $q = $term.$getType() != (-2147483602) ? jur_GroupQuantifierSet__init_($term, $last, $quant) : jur_Pattern_hasFlag($this, 32) ? jur_DotAllQuantifierSet__init_($term, $last, $quant) : jur_DotQuantifierSet__init_($term, $last, $quant, jur_AbstractLineTerminator_getInstance($this.$flags2));
                $term.$setNext($q);
                return $q;
            case -536870849:
                $this.$lexemes.$next5();
                $q = jur_AltGroupQuantifierSet__init_($term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -536870789:
                $q = new jur_CompositeGroupQuantifierSet;
                var$4 = $this.$lexemes;
                var$4 = var$4.$nextSpecial();
                var$6 = $this.$compCount + 1 | 0;
                $this.$compCount = var$6;
                jur_CompositeGroupQuantifierSet__init_0($q, var$4, $term, $last, (-536870849), var$6);
                $term.$setNext($q);
                return $q;
            default:
        }
        return $term;
    }
    $leaf = null;
    if ($term !== null)
        $leaf = $term;
    switch ($quant) {
        case -2147483606:
        case -2147483605:
            $this.$lexemes.$next5();
            $q = jur_PossessiveQuantifierSet__init_($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -2147483585:
            $this.$lexemes.$next5();
            return jur_PossessiveAltQuantifierSet__init_($leaf, $last, (-2147483585));
        case -2147483525:
            return jur_PossessiveCompositeQuantifierSet__init_($this.$lexemes.$nextSpecial(), $leaf, $last, (-2147483525));
        case -1073741782:
        case -1073741781:
            $this.$lexemes.$next5();
            $q = jur_ReluctantQuantifierSet__init_($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -1073741761:
            $this.$lexemes.$next5();
            return jur_ReluctantAltQuantifierSet__init_($leaf, $last, (-1073741761));
        case -1073741701:
            return jur_ReluctantCompositeQuantifierSet__init_($this.$lexemes.$nextSpecial(), $leaf, $last, (-1073741701));
        case -536870870:
        case -536870869:
            $this.$lexemes.$next5();
            $q = jur_LeafQuantifierSet__init_($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -536870849:
            $this.$lexemes.$next5();
            return jur_AltQuantifierSet__init_($leaf, $last, (-536870849));
        case -536870789:
            return jur_CompositeQuantifierSet__init_($this.$lexemes.$nextSpecial(), $leaf, $last, (-536870789));
        default:
    }
    return $term;
}
function jur_Pattern_processTerminal($this, $last) {
    var $term, $ch, $newFlags, $number, var$6, $negative, $cc, var$9, var$10, var$11;
    $term = null;
    while (true) {
        a: {
            $ch = $this.$lexemes.$peek1();
            if (($ch & (-2147418113)) == (-2147483608)) {
                $this.$lexemes.$next5();
                $newFlags = ($ch & 16711680) >> 16;
                $ch = $ch & (-16711681);
                if ($ch == (-16777176))
                    $this.$flags2 = $newFlags;
                else {
                    if ($ch != (-1073741784))
                        $newFlags = $this.$flags2;
                    $term = jur_Pattern_processExpression($this, $ch, $newFlags, $last);
                    if ($this.$lexemes.$peek1() != (-536870871))
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                    $this.$lexemes.$next5();
                }
            } else {
                b: {
                    c: {
                        switch ($ch) {
                            case -2147483599:
                            case -2147483598:
                            case -2147483597:
                            case -2147483596:
                            case -2147483595:
                            case -2147483594:
                            case -2147483593:
                            case -2147483592:
                            case -2147483591:
                                $number = ($ch & 2147483647) - 48 | 0;
                                if ($this.$globalGroupIndex < $number)
                                    $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                                $this.$lexemes.$next5();
                                $this.$consCount = $this.$consCount + 1 | 0;
                                $term = !jur_Pattern_hasFlag($this, 2) ? jur_BackReferenceSet__init_($number, $this.$consCount) : jur_Pattern_hasFlag($this, 64) ? jur_UCIBackReferenceSet__init_($number, $this.$consCount) : jur_CIBackReferenceSet__init_($number, $this.$consCount);
                                $this.$backRefs.data[$number].$isBackReferenced = 1;
                                $this.$needsBackRefReplacement = 1;
                                break a;
                            case -2147483583:
                                break;
                            case -2147483582:
                                $this.$lexemes.$next5();
                                $term = jur_WordBoundary__init_(0);
                                break a;
                            case -2147483577:
                                $this.$lexemes.$next5();
                                $term = jur_PreviousMatch__init_();
                                break a;
                            case -2147483558:
                                $this.$lexemes.$next5();
                                $term = new jur_EOLSet;
                                var$6 = $this.$consCount + 1 | 0;
                                $this.$consCount = var$6;
                                jur_EOLSet__init_0($term, var$6);
                                break a;
                            case -2147483550:
                                $this.$lexemes.$next5();
                                $term = jur_WordBoundary__init_(1);
                                break a;
                            case -2147483526:
                                $this.$lexemes.$next5();
                                $term = jur_EOISet__init_();
                                break a;
                            case -536870876:
                                break c;
                            case -536870866:
                                $this.$lexemes.$next5();
                                if (jur_Pattern_hasFlag($this, 32)) {
                                    $term = jur_DotAllSet__init_();
                                    break a;
                                }
                                $term = jur_DotSet__init_(jur_AbstractLineTerminator_getInstance($this.$flags2));
                                break a;
                            case -536870821:
                                $this.$lexemes.$next5();
                                $negative = 0;
                                if ($this.$lexemes.$peek1() == (-536870818)) {
                                    $negative = 1;
                                    $this.$lexemes.$next5();
                                }
                                $term = jur_Pattern_processRange($this, $negative, $last);
                                if ($this.$lexemes.$peek1() != (-536870819))
                                    $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                                $this.$lexemes.$setMode(1);
                                $this.$lexemes.$next5();
                                break a;
                            case -536870818:
                                $this.$lexemes.$next5();
                                $this.$consCount = $this.$consCount + 1 | 0;
                                if (!jur_Pattern_hasFlag($this, 8)) {
                                    $term = jur_SOLSet__init_();
                                    break a;
                                }
                                $term = jur_MultiLineSOLSet__init_(jur_AbstractLineTerminator_getInstance($this.$flags2));
                                break a;
                            case 0:
                                $cc = $this.$lexemes.$peekSpecial();
                                if ($cc !== null)
                                    $term = jur_Pattern_processRangeSet($this, $cc);
                                else {
                                    if ($this.$lexemes.$isEmpty()) {
                                        $term = jur_EmptySet__init_($last);
                                        break a;
                                    }
                                    $term = jur_CharSet__init_($ch & 65535);
                                }
                                $this.$lexemes.$next5();
                                break a;
                            default:
                                break b;
                        }
                        $this.$lexemes.$next5();
                        $term = jur_SOLSet__init_();
                        break a;
                    }
                    $this.$lexemes.$next5();
                    $this.$consCount = $this.$consCount + 1 | 0;
                    if (jur_Pattern_hasFlag($this, 8)) {
                        if (jur_Pattern_hasFlag($this, 1)) {
                            $term = jur_UMultiLineEOLSet__init_($this.$consCount);
                            break a;
                        }
                        $term = jur_MultiLineEOLSet__init_($this.$consCount);
                        break a;
                    }
                    if (jur_Pattern_hasFlag($this, 1)) {
                        $term = jur_UEOLSet__init_($this.$consCount);
                        break a;
                    }
                    $term = jur_EOLSet__init_($this.$consCount);
                    break a;
                }
                if ($ch >= 0 && !$this.$lexemes.$isSpecial()) {
                    $term = jur_Pattern_processCharSet($this, $ch);
                    $this.$lexemes.$next5();
                } else if ($ch == (-536870788))
                    $term = jur_EmptySet__init_($last);
                else {
                    if ($ch != (-536870871)) {
                        var$9 = new jur_PatternSyntaxException;
                        var$10 = $this.$lexemes;
                        if (!var$10.$isSpecial()) {
                            var$6 = $ch & 65535;
                            var$10 = jl_Character_toString(var$6);
                        } else
                            var$10 = $this.$lexemes.$peekSpecial().$toString();
                        var$11 = $this.$lexemes;
                        jur_PatternSyntaxException__init_0(var$9, var$10, var$11.$toString(), $this.$lexemes.$getIndex());
                        $rt_throw(var$9);
                    }
                    if ($last instanceof jur_FinalSet)
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                    $term = jur_EmptySet__init_($last);
                }
            }
        }
        if ($ch != (-16777176))
            break;
    }
    return $term;
}
function jur_Pattern_processRange($this, $negative, $last) {
    var $res, $rangeSet;
    $res = jur_Pattern_processRangeExpression($this, $negative);
    $rangeSet = jur_Pattern_processRangeSet($this, $res);
    $rangeSet.$setNext($last);
    return $rangeSet;
}
function jur_Pattern_processRangeExpression($this, $alt) {
    var $res, $buffer, $intersection, $notClosed, $firstInClass, var$7, $cur, $negative, $cs, $$je;
    $res = jur_CharClass__init_3($alt, jur_Pattern_hasFlag($this, 2), jur_Pattern_hasFlag($this, 64));
    $buffer = (-1);
    $intersection = 0;
    $notClosed = 0;
    $firstInClass = 1;
    a: {
        b: {
            c: while (true) {
                if ($this.$lexemes.$isEmpty())
                    break a;
                $notClosed = $this.$lexemes.$peek1() == (-536870819) && !$firstInClass ? 0 : 1;
                if (!$notClosed)
                    break a;
                d: {
                    switch ($this.$lexemes.$peek1()) {
                        case -536870874:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = $this.$lexemes.$next5();
                            if ($this.$lexemes.$peek1() != (-536870874)) {
                                $buffer = 38;
                                break d;
                            }
                            if ($this.$lexemes.$lookAhead0() == (-536870821)) {
                                $this.$lexemes.$next5();
                                $intersection = 1;
                                $buffer = (-1);
                                break d;
                            }
                            $this.$lexemes.$next5();
                            if ($firstInClass) {
                                $res = jur_Pattern_processRangeExpression($this, 0);
                                break d;
                            }
                            if ($this.$lexemes.$peek1() == (-536870819))
                                break d;
                            $res.$intersection(jur_Pattern_processRangeExpression($this, 0));
                            break d;
                        case -536870867:
                            if (!$firstInClass && $this.$lexemes.$lookAhead0() != (-536870819)) {
                                var$7 = $this.$lexemes;
                                if (var$7.$lookAhead0() != (-536870821) && $buffer >= 0) {
                                    $this.$lexemes.$next5();
                                    $cur = $this.$lexemes.$peek1();
                                    if ($this.$lexemes.$isSpecial())
                                        break c;
                                    if ($cur < 0) {
                                        var$7 = $this.$lexemes;
                                        if (var$7.$lookAhead0() != (-536870819)) {
                                            var$7 = $this.$lexemes;
                                            if (var$7.$lookAhead0() != (-536870821) && $buffer >= 0)
                                                break c;
                                        }
                                    }
                                    e: {
                                        try {
                                            if (jur_Lexer_isLetter($cur))
                                                break e;
                                            $cur = $cur & 65535;
                                            break e;
                                        } catch ($$e) {
                                            $$je = $rt_wrapException($$e);
                                            if ($$je instanceof jl_Exception) {
                                                break b;
                                            } else {
                                                throw $$e;
                                            }
                                        }
                                    }
                                    try {
                                        $res.$add0($buffer, $cur);
                                    } catch ($$e) {
                                        $$je = $rt_wrapException($$e);
                                        if ($$je instanceof jl_Exception) {
                                            break b;
                                        } else {
                                            throw $$e;
                                        }
                                    }
                                    $this.$lexemes.$next5();
                                    $buffer = (-1);
                                    break d;
                                }
                            }
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 45;
                            $this.$lexemes.$next5();
                            break d;
                        case -536870821:
                            if ($buffer >= 0) {
                                $res.$add($buffer);
                                $buffer = (-1);
                            }
                            $this.$lexemes.$next5();
                            $negative = 0;
                            if ($this.$lexemes.$peek1() == (-536870818)) {
                                $this.$lexemes.$next5();
                                $negative = 1;
                            }
                            if (!$intersection)
                                $res.$union(jur_Pattern_processRangeExpression($this, $negative));
                            else
                                $res.$intersection(jur_Pattern_processRangeExpression($this, $negative));
                            $intersection = 0;
                            $this.$lexemes.$next5();
                            break d;
                        case -536870819:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 93;
                            $this.$lexemes.$next5();
                            break d;
                        case -536870818:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 94;
                            $this.$lexemes.$next5();
                            break d;
                        case 0:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $cs = $this.$lexemes.$peekSpecial();
                            if ($cs === null)
                                $buffer = 0;
                            else {
                                $res.$add18($cs);
                                $buffer = (-1);
                            }
                            $this.$lexemes.$next5();
                            break d;
                        default:
                    }
                    if ($buffer >= 0)
                        $res.$add($buffer);
                    $buffer = $this.$lexemes.$next5();
                }
                $firstInClass = 0;
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), jur_Pattern_pattern($this), $this.$lexemes.$getIndex()));
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), jur_Pattern_pattern($this), $this.$lexemes.$getIndex()));
    }
    if (!$notClosed) {
        if ($buffer >= 0)
            $res.$add($buffer);
        return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(58), jur_Pattern_pattern($this), $this.$lexemes.$getIndex() - 1 | 0));
}
function jur_Pattern_processCharSet($this, $ch) {
    var $isSupplCodePoint;
    $isSupplCodePoint = jl_Character_isSupplementaryCodePoint($ch);
    if (jur_Pattern_hasFlag($this, 2)) {
        a: {
            if (!($ch >= 97 && $ch <= 122)) {
                if ($ch < 65)
                    break a;
                if ($ch > 90)
                    break a;
            }
            return jur_CICharSet__init_($ch & 65535);
        }
        if (jur_Pattern_hasFlag($this, 64) && $ch > 128) {
            if ($isSupplCodePoint)
                return jur_UCISupplCharSet__init_($ch);
            if (jur_Lexer_isLowSurrogate($ch))
                return jur_LowSurrogateCharSet__init_($ch & 65535);
            if (!jur_Lexer_isHighSurrogate($ch))
                return jur_UCICharSet__init_($ch & 65535);
            return jur_HighSurrogateCharSet__init_($ch & 65535);
        }
    }
    if ($isSupplCodePoint)
        return jur_SupplCharSet__init_($ch);
    if (jur_Lexer_isLowSurrogate($ch))
        return jur_LowSurrogateCharSet__init_($ch & 65535);
    if (!jur_Lexer_isHighSurrogate($ch))
        return jur_CharSet__init_($ch & 65535);
    return jur_HighSurrogateCharSet__init_($ch & 65535);
}
function jur_Pattern_processRangeSet($this, $charClass) {
    var $surrogates, $lowHighSurrRangeSet;
    if (!$charClass.$hasLowHighSurrogates()) {
        if (!$charClass.$mayContainSupplCodepoints2()) {
            if ($charClass.$hasUCI0())
                return jur_UCIRangeSet__init_($charClass);
            return jur_RangeSet__init_($charClass);
        }
        if ($charClass.$hasUCI0())
            return jur_UCISupplRangeSet__init_($charClass);
        return jur_SupplRangeSet__init_($charClass);
    }
    $surrogates = $charClass.$getSurrogates();
    $lowHighSurrRangeSet = jur_LowHighSurrogateRangeSet__init_($surrogates);
    if (!$charClass.$mayContainSupplCodepoints2()) {
        if ($charClass.$hasUCI0())
            return jur_CompositeRangeSet__init_(jur_UCIRangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
        return jur_CompositeRangeSet__init_(jur_RangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
    }
    if ($charClass.$hasUCI0())
        return jur_CompositeRangeSet__init_(jur_UCISupplRangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
    return jur_CompositeRangeSet__init_(jur_SupplRangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
}
function jur_Pattern_compile($pattern) {
    return jur_Pattern_compile0($pattern, 0);
}
function jur_Pattern_finalizeCompile($this) {
    if ($this.$needsBackRefReplacement)
        $this.$start8.$processSecondPass();
}
function jur_Pattern_quote($s) {
    var $sb, $apos, var$4, $apos_0;
    $sb = jl_StringBuilder__init_().$append($rt_s(1222));
    $apos = 0;
    while (true) {
        var$4 = $s.$indexOf0($rt_s(1223), $apos);
        if (var$4 < 0)
            break;
        $apos_0 = var$4 + 2 | 0;
        $sb.$append($s.$substring0($apos, $apos_0)).$append($rt_s(1224));
        $apos = $apos_0;
    }
    return $sb.$append($s.$substring($apos)).$append($rt_s(1223)).$toString();
}
function jur_Pattern_groupCount($this) {
    return $this.$globalGroupIndex;
}
function jur_Pattern_compCount($this) {
    return $this.$compCount + 1 | 0;
}
function jur_Pattern_consCount($this) {
    return $this.$consCount + 1 | 0;
}
function jur_Pattern_getSupplement($ch) {
    if ($ch >= 97 && $ch <= 122)
        $ch = ($ch - 32 | 0) & 65535;
    else if ($ch >= 65 && $ch <= 90)
        $ch = ($ch + 32 | 0) & 65535;
    return $ch;
}
function jur_Pattern_hasFlag($this, $flag) {
    return ($this.$flags2 & $flag) != $flag ? 0 : 1;
}
function jur_Pattern__init_0($this) {
    jl_Object__init_0($this);
    $this.$backRefs = $rt_createArray(jur_FSet, 10);
    $this.$globalGroupIndex = (-1);
    $this.$compCount = (-1);
    $this.$consCount = (-1);
}
function ji_UnsupportedEncodingException() {
    ji_IOException.call(this);
}
function ji_UnsupportedEncodingException__init_(var_0) {
    var var_1 = new ji_UnsupportedEncodingException();
    ji_UnsupportedEncodingException__init_0(var_1, var_0);
    return var_1;
}
function ji_UnsupportedEncodingException__init_0($this, $message) {
    ji_IOException__init_3($this, $message);
}
function it_Phases$lambda$null$9$lambda$_58_0() {
    var a = this; jl_Object.call(a);
    a.$_0116 = 0;
    a.$_148 = 0;
    a.$_214 = 0.0;
}
function it_Phases$lambda$null$9$lambda$_58_0__init_(var_0, var_1, var_2) {
    var var_3 = new it_Phases$lambda$null$9$lambda$_58_0();
    it_Phases$lambda$null$9$lambda$_58_0__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function it_Phases$lambda$null$9$lambda$_58_0__init_0(var$0, var$1, var$2, var$3) {
    jl_Object__init_0(var$0);
    var$0.$_0116 = var$1;
    var$0.$_148 = var$2;
    var$0.$_214 = var$3;
}
function it_Phases$lambda$null$9$lambda$_58_0_get(var$0, var$1) {
    it_Phases_lambda$null$8(var$0.$_0116, var$0.$_148, var$0.$_214, var$1);
}
function jur_PosAltGroupQuantifierSet() {
    jur_AltGroupQuantifierSet.call(this);
}
function jur_PosAltGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PosAltGroupQuantifierSet();
    jur_PosAltGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PosAltGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_AltGroupQuantifierSet__init_0($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
}
function jur_PosAltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex <= 0)
        $nextIndex = $stringIndex;
    return $this.$next.$matches($nextIndex, $testString, $matchResult);
}
function jur_PosAltGroupQuantifierSet_setNext($this, $next) {
    $this.$next = $next;
}
function iaau_OS() {
    jl_Object.call(this);
}
var iaau_OS_isWindows = 0;
var iaau_OS_isLinux = 0;
var iaau_OS_isMac = 0;
var iaau_OS_isIos = 0;
var iaau_OS_isAndroid = 0;
var iaau_OS_isARM = 0;
var iaau_OS_is64Bit = 0;
function iaau_OS_$callClinit() {
    iaau_OS_$callClinit = $rt_eraseClinit(iaau_OS);
    iaau_OS__clinit_();
}
function iaau_OS_getProperty($name) {
    iaau_OS_$callClinit();
    return jl_System_getProperty($name);
}
function iaau_OS_getPropertyNotNull($name) {
    var $s;
    iaau_OS_$callClinit();
    $s = iaau_OS_getProperty($name);
    if ($s === null)
        $s = $rt_s(58);
    return $s;
}
function iaau_OS__clinit_() {
    var $isMOEiOS, $vm;
    iaau_OS_isWindows = iaau_OS_getPropertyNotNull($rt_s(1225)).$contains0($rt_s(1226));
    iaau_OS_isLinux = iaau_OS_getPropertyNotNull($rt_s(1225)).$contains0($rt_s(1227));
    iaau_OS_isMac = iaau_OS_getPropertyNotNull($rt_s(1225)).$contains0($rt_s(1228));
    iaau_OS_isIos = 0;
    iaau_OS_isAndroid = 0;
    iaau_OS_isARM = !iaau_OS_getPropertyNotNull($rt_s(1229)).$startsWith($rt_s(1230)) && !iaau_OS_getPropertyNotNull($rt_s(1229)).$startsWith($rt_s(1231)) ? 0 : 1;
    iaau_OS_is64Bit = !iaau_OS_getPropertyNotNull($rt_s(1229)).$contains0($rt_s(1232)) && !iaau_OS_getPropertyNotNull($rt_s(1229)).$startsWith($rt_s(1233)) ? 0 : 1;
    $isMOEiOS = $rt_s(493).$equals(jl_System_getProperty($rt_s(1234)));
    $vm = jl_System_getProperty($rt_s(1235));
    if ($vm !== null && $vm.$contains0($rt_s(1236))) {
        iaau_OS_isAndroid = 1;
        iaau_OS_isWindows = 0;
        iaau_OS_isLinux = 0;
        iaau_OS_isMac = 0;
        iaau_OS_is64Bit = 0;
    }
    a: {
        if (!$isMOEiOS) {
            if (iaau_OS_isAndroid)
                break a;
            if (iaau_OS_isWindows)
                break a;
            if (iaau_OS_isLinux)
                break a;
            if (iaau_OS_isMac)
                break a;
        }
        iaau_OS_isIos = 1;
        iaau_OS_isAndroid = 0;
        iaau_OS_isWindows = 0;
        iaau_OS_isLinux = 0;
        iaau_OS_isMac = 0;
        iaau_OS_is64Bit = 0;
    }
}
function iaaf_Intf() {
}
function it_Phases$_clinit_$lambda$_75_9() {
    jl_Object.call(this);
}
function it_Phases$_clinit_$lambda$_75_9__init_() {
    var var_0 = new it_Phases$_clinit_$lambda$_75_9();
    it_Phases$_clinit_$lambda$_75_9__init_0(var_0);
    return var_0;
}
function it_Phases$_clinit_$lambda$_75_9__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$_clinit_$lambda$_75_9_run(var$0) {
    it_Phases_lambda$static$42();
}
function it_Phases$_clinit_$lambda$_75_8() {
    jl_Object.call(this);
}
function it_Phases$_clinit_$lambda$_75_8__init_() {
    var var_0 = new it_Phases$_clinit_$lambda$_75_8();
    it_Phases$_clinit_$lambda$_75_8__init_0(var_0);
    return var_0;
}
function it_Phases$_clinit_$lambda$_75_8__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$_clinit_$lambda$_75_8_run(var$0) {
    it_Phases_lambda$static$38();
}
function it_Phases$_clinit_$lambda$_75_7() {
    jl_Object.call(this);
}
function it_Phases$_clinit_$lambda$_75_7__init_() {
    var var_0 = new it_Phases$_clinit_$lambda$_75_7();
    it_Phases$_clinit_$lambda$_75_7__init_0(var_0);
    return var_0;
}
function it_Phases$_clinit_$lambda$_75_7__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$_clinit_$lambda$_75_7_run(var$0) {
    it_Phases_lambda$static$31();
}
function it_Phases$_clinit_$lambda$_75_6() {
    jl_Object.call(this);
}
function it_Phases$_clinit_$lambda$_75_6__init_() {
    var var_0 = new it_Phases$_clinit_$lambda$_75_6();
    it_Phases$_clinit_$lambda$_75_6__init_0(var_0);
    return var_0;
}
function it_Phases$_clinit_$lambda$_75_6__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$_clinit_$lambda$_75_6_run(var$0) {
    it_Phases_lambda$static$27();
}
function it_Phases$_clinit_$lambda$_75_5() {
    jl_Object.call(this);
}
function it_Phases$_clinit_$lambda$_75_5__init_() {
    var var_0 = new it_Phases$_clinit_$lambda$_75_5();
    it_Phases$_clinit_$lambda$_75_5__init_0(var_0);
    return var_0;
}
function it_Phases$_clinit_$lambda$_75_5__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$_clinit_$lambda$_75_5_run(var$0) {
    it_Phases_lambda$static$24();
}
function cjj_Inflate$Return() {
    var a = this; jl_Exception.call(a);
    a.$r = 0;
    a.$this$029 = null;
}
function cjj_Inflate$Return__init_(var_0, var_1) {
    var var_2 = new cjj_Inflate$Return();
    cjj_Inflate$Return__init_0(var_2, var_0, var_1);
    return var_2;
}
function cjj_Inflate$Return__init_0($this, var$1, $r) {
    $this.$this$029 = var$1;
    jl_Exception__init_0($this);
    $this.$r = $r;
}
function it_Phases$_clinit_$lambda$_75_4() {
    jl_Object.call(this);
}
function it_Phases$_clinit_$lambda$_75_4__init_() {
    var var_0 = new it_Phases$_clinit_$lambda$_75_4();
    it_Phases$_clinit_$lambda$_75_4__init_0(var_0);
    return var_0;
}
function it_Phases$_clinit_$lambda$_75_4__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$_clinit_$lambda$_75_4_run(var$0) {
    it_Phases_lambda$static$21();
}
function it_Phases$_clinit_$lambda$_75_3() {
    jl_Object.call(this);
}
function it_Phases$_clinit_$lambda$_75_3__init_() {
    var var_0 = new it_Phases$_clinit_$lambda$_75_3();
    it_Phases$_clinit_$lambda$_75_3__init_0(var_0);
    return var_0;
}
function it_Phases$_clinit_$lambda$_75_3__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$_clinit_$lambda$_75_3_run(var$0) {
    it_Phases_lambda$static$18();
}
function it_Phases$_clinit_$lambda$_75_2() {
    jl_Object.call(this);
}
function it_Phases$_clinit_$lambda$_75_2__init_() {
    var var_0 = new it_Phases$_clinit_$lambda$_75_2();
    it_Phases$_clinit_$lambda$_75_2__init_0(var_0);
    return var_0;
}
function it_Phases$_clinit_$lambda$_75_2__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$_clinit_$lambda$_75_2_run(var$0) {
    it_Phases_lambda$static$15();
}
function iaaf_Boolp() {
}
function it_Phases$_clinit_$lambda$_75_1() {
    jl_Object.call(this);
}
function it_Phases$_clinit_$lambda$_75_1__init_() {
    var var_0 = new it_Phases$_clinit_$lambda$_75_1();
    it_Phases$_clinit_$lambda$_75_1__init_0(var_0);
    return var_0;
}
function it_Phases$_clinit_$lambda$_75_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$_clinit_$lambda$_75_1_run(var$0) {
    it_Phases_lambda$static$11();
}
function it_Phases$_clinit_$lambda$_75_0() {
    jl_Object.call(this);
}
function it_Phases$_clinit_$lambda$_75_0__init_() {
    var var_0 = new it_Phases$_clinit_$lambda$_75_0();
    it_Phases$_clinit_$lambda$_75_0__init_0(var_0);
    return var_0;
}
function it_Phases$_clinit_$lambda$_75_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$_clinit_$lambda$_75_0_run(var$0) {
    it_Phases_lambda$static$5();
}
function iaag_TextureData$TextureDataType() {
    jl_Enum.call(this);
}
var iaag_TextureData$TextureDataType_Pixmap = null;
var iaag_TextureData$TextureDataType_Custom = null;
var iaag_TextureData$TextureDataType_$VALUES = null;
function iaag_TextureData$TextureDataType_$callClinit() {
    iaag_TextureData$TextureDataType_$callClinit = $rt_eraseClinit(iaag_TextureData$TextureDataType);
    iaag_TextureData$TextureDataType__clinit_();
}
function iaag_TextureData$TextureDataType__init_(var_0, var_1) {
    var var_2 = new iaag_TextureData$TextureDataType();
    iaag_TextureData$TextureDataType__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaag_TextureData$TextureDataType_values() {
    iaag_TextureData$TextureDataType_$callClinit();
    return iaag_TextureData$TextureDataType_$VALUES.$clone();
}
function iaag_TextureData$TextureDataType__init_0($this, var$1, var$2) {
    iaag_TextureData$TextureDataType_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaag_TextureData$TextureDataType__clinit_() {
    var var$1, var$2;
    iaag_TextureData$TextureDataType_Pixmap = iaag_TextureData$TextureDataType__init_($rt_s(1237), 0);
    iaag_TextureData$TextureDataType_Custom = iaag_TextureData$TextureDataType__init_($rt_s(1238), 1);
    var$1 = $rt_createArray(iaag_TextureData$TextureDataType, 2);
    var$2 = var$1.data;
    var$2[0] = iaag_TextureData$TextureDataType_Pixmap;
    var$2[1] = iaag_TextureData$TextureDataType_Custom;
    iaag_TextureData$TextureDataType_$VALUES = var$1;
}
function it_Phases$3$lambda$null$21$lambda$_11_0() {
    jl_Object.call(this);
    this.$_0117 = 0.0;
}
function it_Phases$3$lambda$null$21$lambda$_11_0__init_(var_0) {
    var var_1 = new it_Phases$3$lambda$null$21$lambda$_11_0();
    it_Phases$3$lambda$null$21$lambda$_11_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$3$lambda$null$21$lambda$_11_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0117 = var$1;
}
function it_Phases$3$lambda$null$21$lambda$_11_0_get(var$0, var$1) {
    it_Phases$3_lambda$null$20(var$0.$_0117, var$1);
}
function jur_UnicodeCategory() {
    jur_AbstractCharClass.call(this);
    this.$category3 = 0;
}
function jur_UnicodeCategory__init_(var_0) {
    var var_1 = new jur_UnicodeCategory();
    jur_UnicodeCategory__init_0(var_1, var_0);
    return var_1;
}
function jur_UnicodeCategory__init_0($this, $category) {
    jur_AbstractCharClass__init_0($this);
    $this.$category3 = $category;
}
function jur_UnicodeCategory_contains($this, $ch) {
    return $this.$alt0 ^ ($this.$category3 != jl_Character_getType0($ch & 65535) ? 0 : 1);
}
function jur_UnicodeCategoryScope() {
    jur_UnicodeCategory.call(this);
}
function jur_UnicodeCategoryScope__init_(var_0) {
    var var_1 = new jur_UnicodeCategoryScope();
    jur_UnicodeCategoryScope__init_0(var_1, var_0);
    return var_1;
}
function jur_UnicodeCategoryScope__init_0($this, $category) {
    jur_UnicodeCategory__init_0($this, $category);
}
function jur_UnicodeCategoryScope_contains($this, $ch) {
    return $this.$alt0 ^ (!($this.$category3 >> jl_Character_getType0($ch & 65535) & 1) ? 0 : 1);
}
function i_Binding() {
    jl_Enum.call(this);
    this.$code = null;
}
var i_Binding_move_x = null;
var i_Binding_move_y = null;
var i_Binding_shoot = null;
var i_Binding_alt = null;
var i_Binding_$VALUES = null;
function i_Binding_$callClinit() {
    i_Binding_$callClinit = $rt_eraseClinit(i_Binding);
    i_Binding__clinit_();
}
function i_Binding__init_(var_0, var_1, var_2) {
    var var_3 = new i_Binding();
    i_Binding__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function i_Binding_values() {
    i_Binding_$callClinit();
    return i_Binding_$VALUES.$clone();
}
function i_Binding__init_0($this, var$1, var$2, $code) {
    i_Binding_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
    $this.$code = $code;
}
function i_Binding_defaultValue($this, $type) {
    return $this.$code;
}
function i_Binding__clinit_() {
    var var$1, var$2, var$3, var$4;
    var$1 = new i_Binding;
    var$2 = new iaa_KeyBinds$Axis;
    iaai_KeyCode_$callClinit();
    iaa_KeyBinds$Axis__init_2(var$2, iaai_KeyCode_A, iaai_KeyCode_D);
    i_Binding__init_0(var$1, $rt_s(1239), 0, var$2);
    i_Binding_move_x = var$1;
    i_Binding_move_y = i_Binding__init_($rt_s(1240), 1, iaa_KeyBinds$Axis__init_0(iaai_KeyCode_S, iaai_KeyCode_W));
    i_Binding_shoot = i_Binding__init_($rt_s(1241), 2, iaai_KeyCode_MOUSE_LEFT);
    i_Binding_alt = i_Binding__init_($rt_s(1242), 3, iaai_KeyCode_MOUSE_RIGHT);
    var$3 = $rt_createArray(i_Binding, 4);
    var$4 = var$3.data;
    var$4[0] = i_Binding_move_x;
    var$4[1] = i_Binding_move_y;
    var$4[2] = i_Binding_shoot;
    var$4[3] = i_Binding_alt;
    i_Binding_$VALUES = var$3;
}
function iaam_TiledMap() {
    var a = this; jl_Object.call(a);
    a.$layers = null;
    a.$properties = null;
    a.$tilesets = null;
}
function iaam_TiledMap__init_() {
    var var_0 = new iaam_TiledMap();
    iaam_TiledMap__init_0(var_0);
    return var_0;
}
function iaam_TiledMap__init_0($this) {
    jl_Object__init_0($this);
    $this.$layers = iaac_Array__init_0();
    $this.$properties = iaam_MapProperties__init_();
    $this.$tilesets = iaam_TileSets__init_();
}
function iaam_TiledMap_getLayer($this, $name) {
    return $this.$layers.$find1(iaam_TiledMap$getLayer$lambda$_2_0__init_($name));
}
function iaam_TiledMap_lambda$getLayer$0($name, $l) {
    return $name.$equals($l.$name8);
}
function iaasul_Cell() {
    var a = this; jl_Object.call(a);
    a.$minWidth1 = 0.0;
    a.$minHeight1 = 0.0;
    a.$maxWidth0 = 0.0;
    a.$maxHeight0 = 0.0;
    a.$padTop0 = 0.0;
    a.$padLeft0 = 0.0;
    a.$padBottom0 = 0.0;
    a.$padRight0 = 0.0;
    a.$fillX = 0.0;
    a.$fillY = 0.0;
    a.$align1 = 0;
    a.$expandX = 0;
    a.$expandY = 0;
    a.$colspan = 0;
    a.$uniformX = 0;
    a.$uniformY = 0;
    a.$element = null;
    a.$elementX = 0.0;
    a.$elementY = 0.0;
    a.$elementWidth = 0.0;
    a.$elementHeight = 0.0;
    a.$endRow = 0;
    a.$column = 0;
    a.$row = 0;
    a.$cellAboveIndex = 0;
    a.$computedPadTop = 0.0;
    a.$computedPadLeft = 0.0;
    a.$computedPadBottom = 0.0;
    a.$computedPadRight = 0.0;
    a.$table4 = null;
}
var iaasul_Cell_defaults = null;
var iaasul_Cell_reset = null;
function iaasul_Cell_$callClinit() {
    iaasul_Cell_$callClinit = $rt_eraseClinit(iaasul_Cell);
    iaasul_Cell__clinit_();
}
function iaasul_Cell__init_() {
    var var_0 = new iaasul_Cell();
    iaasul_Cell__init_0(var_0);
    return var_0;
}
function iaasul_Cell__init_0($this) {
    iaasul_Cell_$callClinit();
    jl_Object__init_0($this);
    $this.$reset();
}
function iaasul_Cell_defaults0() {
    iaasul_Cell_$callClinit();
    if (iaasul_Cell_reset.$check()) {
        iaasul_Cell_defaults = iaasul_Cell__init_();
        iaasul_Cell_defaults.$minWidth1 = (-Infinity);
        iaasul_Cell_defaults.$minHeight1 = (-Infinity);
        iaasul_Cell_defaults.$maxWidth0 = (-Infinity);
        iaasul_Cell_defaults.$maxHeight0 = (-Infinity);
        iaasul_Cell_defaults.$padTop0 = 0.0;
        iaasul_Cell_defaults.$padLeft0 = 0.0;
        iaasul_Cell_defaults.$padBottom0 = 0.0;
        iaasul_Cell_defaults.$padRight0 = 0.0;
        iaasul_Cell_defaults.$fillX = 0.0;
        iaasul_Cell_defaults.$fillY = 0.0;
        iaasul_Cell_defaults.$align1 = 0;
        iaasul_Cell_defaults.$expandX = 0;
        iaasul_Cell_defaults.$expandY = 0;
        iaasul_Cell_defaults.$colspan = 1;
        iaasul_Cell_defaults.$uniformX = 0;
        iaasul_Cell_defaults.$uniformY = 0;
    }
    return iaasul_Cell_defaults;
}
function iaasul_Cell_setLayout($this, $table) {
    $this.$table4 = $table;
}
function iaasul_Cell_get($this) {
    return $this.$element;
}
function iaasul_Cell_prefWidth($this) {
    return $this.$element === null ? 0.0 : $this.$element.$getPrefWidth();
}
function iaasul_Cell_prefHeight($this) {
    return $this.$element === null ? 0.0 : $this.$element.$getPrefHeight();
}
function iaasul_Cell_maxWidth($this) {
    return $this.$maxWidth0 !== (-Infinity) ? $this.$maxWidth0 : $this.$element === null ? 0.0 : $this.$element.$getMaxWidth();
}
function iaasul_Cell_maxHeight($this) {
    return $this.$maxHeight0 !== (-Infinity) ? $this.$maxHeight0 : $this.$element === null ? 0.0 : $this.$element.$getMaxHeight();
}
function iaasul_Cell_minWidth($this) {
    return $this.$minWidth1 !== (-Infinity) ? $this.$minWidth1 : $this.$element === null ? 0.0 : $this.$element.$getMinWidth();
}
function iaasul_Cell_minHeight($this) {
    return $this.$minHeight1 !== (-Infinity) ? $this.$minHeight1 : $this.$element === null ? 0.0 : $this.$element.$getMinHeight();
}
function iaasul_Cell_size($this, $size) {
    var var$2;
    var$2 = $this.$scl($size);
    $this.$maxHeight0 = var$2;
    $this.$maxWidth0 = var$2;
    $this.$minHeight1 = var$2;
    $this.$minWidth1 = var$2;
    return $this;
}
function iaasul_Cell_size0($this, $width, $height) {
    var var$3;
    var$3 = $this.$scl($width);
    $this.$maxWidth0 = var$3;
    $this.$minWidth1 = var$3;
    var$3 = $this.$scl($height);
    $this.$maxHeight0 = var$3;
    $this.$minHeight1 = var$3;
    return $this;
}
function iaasul_Cell_wrap($this) {
    if ($this.$get60() instanceof iaasu_Label)
        $this.$get60().$setWrap(1);
    else if ($this.$get60() instanceof iaasu_TextButton)
        $this.$get60().$getLabel().$setWrap(1);
    return $this;
}
function iaasul_Cell_color($this, $color) {
    $this.$get60().$setColor($color);
    return $this;
}
function iaasul_Cell_width($this, $width) {
    var var$2;
    var$2 = $this.$scl($width);
    $this.$maxWidth0 = var$2;
    $this.$minWidth1 = var$2;
    return $this;
}
function iaasul_Cell_padBottom($this, $padBottom) {
    $this.$padBottom0 = $this.$scl($padBottom);
    return $this;
}
function iaasul_Cell_padRight($this, $padRight) {
    $this.$padRight0 = $this.$scl($padRight);
    return $this;
}
function iaasul_Cell_top($this) {
    $this.$align1 = ($this.$align1 | 2) & (-5);
    return $this;
}
function iaasul_Cell_left($this) {
    $this.$align1 = ($this.$align1 | 8) & (-17);
    return $this;
}
function iaasul_Cell_growX($this) {
    $this.$expandX = 1;
    $this.$fillX = 1.0;
    return $this;
}
function iaasul_Cell_setBounds($this, $x, $y, $width, $height) {
    $this.$elementX = $x;
    $this.$elementY = $y;
    $this.$elementWidth = $width;
    $this.$elementHeight = $height;
}
function iaasul_Cell_clear($this) {
    $this.$minWidth1 = (-Infinity);
    $this.$minHeight1 = (-Infinity);
    $this.$maxWidth0 = (-Infinity);
    $this.$maxHeight0 = (-Infinity);
    $this.$padTop0 = 0.0;
    $this.$padLeft0 = 0.0;
    $this.$padBottom0 = 0.0;
    $this.$padRight0 = 0.0;
    $this.$fillX = 0.0;
    $this.$fillY = 0.0;
    $this.$align1 = 0;
    $this.$expandX = 0;
    $this.$expandY = 0;
    $this.$colspan = 1;
    $this.$uniformX = 0;
    $this.$uniformY = 0;
}
function iaasul_Cell_scl($this, $value) {
    return iaasul_Scl_scl0($value);
}
function iaasul_Cell_reset0($this) {
    var $defaults;
    $this.$element = null;
    $this.$table4 = null;
    $this.$endRow = 0;
    $this.$cellAboveIndex = (-1);
    $defaults = iaasul_Cell_defaults0();
    if ($defaults !== null)
        $this.$set7($defaults);
}
function iaasul_Cell_set($this, $cell) {
    $this.$minWidth1 = $cell.$minWidth1;
    $this.$minHeight1 = $cell.$minHeight1;
    $this.$maxWidth0 = $cell.$maxWidth0;
    $this.$maxHeight0 = $cell.$maxHeight0;
    $this.$padTop0 = $cell.$padTop0;
    $this.$padLeft0 = $cell.$padLeft0;
    $this.$padBottom0 = $cell.$padBottom0;
    $this.$padRight0 = $cell.$padRight0;
    $this.$fillX = $cell.$fillX;
    $this.$fillY = $cell.$fillY;
    $this.$align1 = $cell.$align1;
    $this.$expandX = $cell.$expandX;
    $this.$expandY = $cell.$expandY;
    $this.$colspan = $cell.$colspan;
    $this.$uniformX = $cell.$uniformX;
    $this.$uniformY = $cell.$uniformY;
    return $this;
}
function iaasul_Cell_toString($this) {
    return $this.$element === null ? jl_Object_toString($this) : $this.$element.$toString();
}
function iaasul_Cell__clinit_() {
    iaasul_Cell_reset = iaau_StaticReset__init_();
}
function jnc_UnmappableCharacterException() {
    jnc_CharacterCodingException.call(this);
    this.$length4 = 0;
}
function jnc_UnmappableCharacterException__init_(var_0) {
    var var_1 = new jnc_UnmappableCharacterException();
    jnc_UnmappableCharacterException__init_0(var_1, var_0);
    return var_1;
}
function jnc_UnmappableCharacterException__init_0($this, $length) {
    jnc_CharacterCodingException__init_0($this);
    $this.$length4 = $length;
}
function jnc_UnmappableCharacterException_getMessage($this) {
    return jl_StringBuilder__init_().$append($rt_s(1243)).$append3($this.$length4).$toString();
}
function cjj_InfTree() {
    var a = this; jl_Object.call(a);
    a.$hn = null;
    a.$v1 = null;
    a.$c1 = null;
    a.$r3 = null;
    a.$u1 = null;
    a.$x11 = null;
}
var cjj_InfTree_fixed_tl = null;
var cjj_InfTree_fixed_td = null;
var cjj_InfTree_cplens = null;
var cjj_InfTree_cplext = null;
var cjj_InfTree_cpdist = null;
var cjj_InfTree_cpdext = null;
function cjj_InfTree_$callClinit() {
    cjj_InfTree_$callClinit = $rt_eraseClinit(cjj_InfTree);
    cjj_InfTree__clinit_();
}
function cjj_InfTree__init_() {
    var var_0 = new cjj_InfTree();
    cjj_InfTree__init_0(var_0);
    return var_0;
}
function cjj_InfTree__init_0($this) {
    cjj_InfTree_$callClinit();
    jl_Object__init_0($this);
    $this.$hn = null;
    $this.$v1 = null;
    $this.$c1 = null;
    $this.$r3 = null;
    $this.$u1 = null;
    $this.$x11 = null;
}
function cjj_InfTree_huft_build($this, $b, $bindex, $n, $s, $d, $e, $t, $m, $hp, $hn, $v) {
    var $p, $i, var$14, var$15, var$16, $l, $j, var$19, $y, var$21, var$22, $xp, var$24, var$25, var$26, var$27, var$28, $h, $w, $q, $z, $a, $a_0, var$35, var$36, var$37, $f, $mask;
    $p = 0;
    $i = $n;
    while (true) {
        var$14 = $b.data;
        var$15 = $this.$c1.data;
        var$16 = var$14[$bindex + $p | 0];
        var$15[var$16] = var$15[var$16] + 1 | 0;
        $p = $p + 1 | 0;
        $i = $i + (-1) | 0;
        if (!$i)
            break;
    }
    if ($this.$c1.data[0] == $n) {
        var$15 = $m.data;
        $t.data[0] = (-1);
        var$15[0] = 0;
        return 0;
    }
    var$15 = $m.data;
    $l = var$15[0];
    $j = 1;
    a: {
        while (true) {
            if ($j > 15)
                break a;
            if ($this.$c1.data[$j])
                break;
            $j = $j + 1 | 0;
        }
    }
    if ($l < $j)
        $l = $j;
    var$19 = 15;
    b: {
        while (true) {
            if (!var$19)
                break b;
            if ($this.$c1.data[var$19])
                break;
            var$19 = var$19 + (-1) | 0;
        }
    }
    if ($l > var$19)
        $l = var$19;
    var$15[0] = $l;
    $y = 1 << $j;
    var$16 = $j;
    while (true) {
        if (var$16 >= var$19) {
            var$21 = $y - $this.$c1.data[var$19] | 0;
            if (var$21 < 0)
                return (-3);
            var$15 = $this.$c1.data;
            var$15[var$19] = var$15[var$19] + var$21 | 0;
            var$15 = $this.$x11.data;
            var$22 = 0;
            var$15[1] = var$22;
            var$16 = 1;
            $xp = 2;
            var$24 = var$19;
            while (true) {
                var$24 = var$24 + (-1) | 0;
                if (!var$24)
                    break;
                var$25 = $this.$x11.data;
                var$22 = var$22 + $this.$c1.data[var$16] | 0;
                var$25[$xp] = var$22;
                $xp = $xp + 1 | 0;
                var$16 = var$16 + 1 | 0;
            }
            var$22 = 0;
            var$24 = 0;
            while (true) {
                var$16 = var$14[$bindex + var$24 | 0];
                if (var$16) {
                    var$25 = $v.data;
                    var$15 = $this.$x11.data;
                    var$26 = var$15[var$16];
                    var$15[var$16] = var$26 + 1 | 0;
                    var$25[var$26] = var$22;
                }
                var$24 = var$24 + 1 | 0;
                var$22 = var$22 + 1 | 0;
                if (var$22 >= $n)
                    break;
            }
            var$26 = $this.$x11.data[var$19];
            var$14 = $this.$x11.data;
            var$27 = 0;
            var$14[0] = var$27;
            var$28 = 0;
            $h = (-1);
            $w =  -$l;
            $this.$u1.data[0] = 0;
            $q = 0;
            $z = 0;
            c: while (true) {
                if ($j > var$19)
                    return var$21 && var$19 != 1 ? (-5) : 0;
                $a = $this.$c1.data[$j];
                while (true) {
                    $a_0 = $a + (-1) | 0;
                    if (!$a)
                        break;
                    while (true) {
                        var$35 = $w + $l | 0;
                        if ($j <= var$35)
                            break;
                        $h = $h + 1 | 0;
                        var$16 = var$19 - var$35 | 0;
                        if (var$16 > $l)
                            var$16 = $l;
                        d: {
                            var$24 = $j - var$35 | 0;
                            var$22 = 1 << var$24;
                            var$36 = $a_0 + 1 | 0;
                            if (var$22 > var$36) {
                                var$22 = var$22 - var$36 | 0;
                                if (var$24 < var$16) {
                                    var$36 = $j;
                                    while (true) {
                                        var$24 = var$24 + 1 | 0;
                                        if (var$24 >= var$16)
                                            break;
                                        var$22 = var$22 << 1;
                                        var$14 = $this.$c1.data;
                                        var$36 = var$36 + 1 | 0;
                                        if (var$22 <= var$14[var$36])
                                            break d;
                                        var$22 = var$22 - $this.$c1.data[var$36] | 0;
                                    }
                                }
                            }
                        }
                        var$14 = $hn.data;
                        $z = 1 << var$24;
                        if ((var$14[0] + $z | 0) > 1440)
                            break c;
                        var$15 = $this.$u1.data;
                        $q = var$14[0];
                        var$15[$h] = $q;
                        var$14[0] = var$14[0] + $z | 0;
                        if (!$h) {
                            $t.data[0] = $q;
                            $w = var$35;
                            continue;
                        }
                        $this.$x11.data[$h] = var$27;
                        $this.$r3.data[0] = var$24 << 24 >> 24;
                        $this.$r3.data[1] = $l << 24 >> 24;
                        var$16 = var$27 >>> (var$35 - $l | 0);
                        var$15 = $this.$r3.data;
                        var$14 = $this.$u1.data;
                        var$24 = $h - 1 | 0;
                        var$15[2] = ($q - var$14[var$24] | 0) - var$16 | 0;
                        jl_System_arraycopy($this.$r3, 0, $hp, ($this.$u1.data[var$24] + var$16 | 0) * 3 | 0, 3);
                        $w = var$35;
                    }
                    var$14 = $this.$r3.data;
                    var$36 = $j - $w | 0;
                    var$14[1] = var$36 << 24 >> 24;
                    if (var$28 >= var$26)
                        $this.$r3.data[0] = 192;
                    else {
                        var$37 = $v.data;
                        if (var$37[var$28] >= $s) {
                            var$25 = $d.data;
                            var$15 = $e.data;
                            $this.$r3.data[0] = ((var$15[var$37[var$28] - $s | 0] + 16 | 0) + 64 | 0) << 24 >> 24;
                            var$14 = $this.$r3.data;
                            var$22 = var$28 + 1 | 0;
                            var$14[2] = var$25[var$37[var$28] - $s | 0];
                            var$28 = var$22;
                        } else {
                            var$14 = $this.$r3;
                            var$14.data[0] = (var$37[var$28] >= 256 ? 96 : 0) << 24 >> 24;
                            var$14 = $this.$r3.data;
                            var$22 = var$28 + 1 | 0;
                            var$14[2] = var$37[var$28];
                            var$28 = var$22;
                        }
                    }
                    $f = 1 << var$36;
                    var$16 = var$27 >>> $w;
                    while (var$16 < $z) {
                        jl_System_arraycopy($this.$r3, 0, $hp, ($q + var$16 | 0) * 3 | 0, 3);
                        var$16 = var$16 + $f | 0;
                    }
                    var$16 = 1 << ($j - 1 | 0);
                    while (var$27 & var$16) {
                        var$27 = var$27 ^ var$16;
                        var$16 = var$16 >>> 1;
                    }
                    var$27 = var$27 ^ var$16;
                    $mask = (1 << $w) - 1 | 0;
                    while ((var$27 & $mask) != $this.$x11.data[$h]) {
                        $h = $h + (-1) | 0;
                        $w = $w - $l | 0;
                        $mask = (1 << $w) - 1 | 0;
                    }
                    $a = $a_0;
                }
                $j = $j + 1 | 0;
            }
            return (-3);
        }
        var$22 = $y - $this.$c1.data[var$16] | 0;
        if (var$22 < 0)
            break;
        var$16 = var$16 + 1 | 0;
        $y = var$22 << 1;
    }
    return (-3);
}
function cjj_InfTree_inflate_trees_bits($this, $c, $bb, $tb, $hp, $z) {
    var $result;
    cjj_InfTree_initWorkArea($this, 19);
    $this.$hn.data[0] = 0;
    $result = cjj_InfTree_huft_build($this, $c, 0, 19, 19, null, null, $tb, $bb, $hp, $this.$hn, $this.$v1);
    if ($result == (-3))
        $z.$msg = $rt_s(1244);
    else if (!($result != (-5) && $bb.data[0])) {
        $z.$msg = $rt_s(1245);
        $result = (-3);
    }
    return $result;
}
function cjj_InfTree_inflate_trees_dynamic($this, $nl, $nd, $c, $bl, $bd, $tl, $td, $hp, $z) {
    var $result, var$11;
    cjj_InfTree_initWorkArea($this, 288);
    $this.$hn.data[0] = 0;
    $result = cjj_InfTree_huft_build($this, $c, 0, $nl, 257, cjj_InfTree_cplens, cjj_InfTree_cplext, $tl, $bl, $hp, $this.$hn, $this.$v1);
    if (!$result && $bl.data[0]) {
        cjj_InfTree_initWorkArea($this, 288);
        var$11 = cjj_InfTree_huft_build($this, $c, $nl, $nd, 0, cjj_InfTree_cpdist, cjj_InfTree_cpdext, $td, $bd, $hp, $this.$hn, $this.$v1);
        if (!var$11 && !(!$bd.data[0] && $nl > 257))
            return 0;
        if (var$11 == (-3))
            $z.$msg = $rt_s(1246);
        else if (var$11 == (-5)) {
            $z.$msg = $rt_s(1247);
            var$11 = (-3);
        } else if (var$11 != (-4)) {
            $z.$msg = $rt_s(1248);
            var$11 = (-3);
        }
        return var$11;
    }
    if ($result == (-3))
        $z.$msg = $rt_s(1249);
    else if ($result != (-4)) {
        $z.$msg = $rt_s(1250);
        $result = (-3);
    }
    return $result;
}
function cjj_InfTree_inflate_trees_fixed($bl, $bd, $tl, $td, $z) {
    var var$6, var$7, var$8;
    cjj_InfTree_$callClinit();
    var$6 = $td.data;
    var$7 = $tl.data;
    var$8 = $bd.data;
    $bl.data[0] = 9;
    var$8[0] = 5;
    var$7[0] = cjj_InfTree_fixed_tl;
    var$6[0] = cjj_InfTree_fixed_td;
    return 0;
}
function cjj_InfTree_initWorkArea($this, $vsize) {
    var $i;
    if ($this.$hn === null) {
        $this.$hn = $rt_createIntArray(1);
        $this.$v1 = $rt_createIntArray($vsize);
        $this.$c1 = $rt_createIntArray(16);
        $this.$r3 = $rt_createIntArray(3);
        $this.$u1 = $rt_createIntArray(15);
        $this.$x11 = $rt_createIntArray(16);
    }
    if ($this.$v1.data.length < $vsize)
        $this.$v1 = $rt_createIntArray($vsize);
    $i = 0;
    while ($i < $vsize) {
        $this.$v1.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < 16) {
        $this.$c1.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < 3) {
        $this.$r3.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    jl_System_arraycopy($this.$c1, 0, $this.$u1, 0, 15);
    jl_System_arraycopy($this.$c1, 0, $this.$x11, 0, 16);
}
function cjj_InfTree__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(1536);
    var$2 = var$1.data;
    var$2[0] = 96;
    var$2[1] = 7;
    var$2[2] = 256;
    var$2[3] = 0;
    var$2[4] = 8;
    var$2[5] = 80;
    var$2[6] = 0;
    var$2[7] = 8;
    var$2[8] = 16;
    var$2[9] = 84;
    var$2[10] = 8;
    var$2[11] = 115;
    var$2[12] = 82;
    var$2[13] = 7;
    var$2[14] = 31;
    var$2[15] = 0;
    var$2[16] = 8;
    var$2[17] = 112;
    var$2[18] = 0;
    var$2[19] = 8;
    var$2[20] = 48;
    var$2[21] = 0;
    var$2[22] = 9;
    var$2[23] = 192;
    var$2[24] = 80;
    var$2[25] = 7;
    var$2[26] = 10;
    var$2[27] = 0;
    var$2[28] = 8;
    var$2[29] = 96;
    var$2[30] = 0;
    var$2[31] = 8;
    var$2[32] = 32;
    var$2[33] = 0;
    var$2[34] = 9;
    var$2[35] = 160;
    var$2[36] = 0;
    var$2[37] = 8;
    var$2[38] = 0;
    var$2[39] = 0;
    var$2[40] = 8;
    var$2[41] = 128;
    var$2[42] = 0;
    var$2[43] = 8;
    var$2[44] = 64;
    var$2[45] = 0;
    var$2[46] = 9;
    var$2[47] = 224;
    var$2[48] = 80;
    var$2[49] = 7;
    var$2[50] = 6;
    var$2[51] = 0;
    var$2[52] = 8;
    var$2[53] = 88;
    var$2[54] = 0;
    var$2[55] = 8;
    var$2[56] = 24;
    var$2[57] = 0;
    var$2[58] = 9;
    var$2[59] = 144;
    var$2[60] = 83;
    var$2[61] = 7;
    var$2[62] = 59;
    var$2[63] = 0;
    var$2[64] = 8;
    var$2[65] = 120;
    var$2[66] = 0;
    var$2[67] = 8;
    var$2[68] = 56;
    var$2[69] = 0;
    var$2[70] = 9;
    var$2[71] = 208;
    var$2[72] = 81;
    var$2[73] = 7;
    var$2[74] = 17;
    var$2[75] = 0;
    var$2[76] = 8;
    var$2[77] = 104;
    var$2[78] = 0;
    var$2[79] = 8;
    var$2[80] = 40;
    var$2[81] = 0;
    var$2[82] = 9;
    var$2[83] = 176;
    var$2[84] = 0;
    var$2[85] = 8;
    var$2[86] = 8;
    var$2[87] = 0;
    var$2[88] = 8;
    var$2[89] = 136;
    var$2[90] = 0;
    var$2[91] = 8;
    var$2[92] = 72;
    var$2[93] = 0;
    var$2[94] = 9;
    var$2[95] = 240;
    var$2[96] = 80;
    var$2[97] = 7;
    var$2[98] = 4;
    var$2[99] = 0;
    var$2[100] = 8;
    var$2[101] = 84;
    var$2[102] = 0;
    var$2[103] = 8;
    var$2[104] = 20;
    var$2[105] = 85;
    var$2[106] = 8;
    var$2[107] = 227;
    var$2[108] = 83;
    var$2[109] = 7;
    var$2[110] = 43;
    var$2[111] = 0;
    var$2[112] = 8;
    var$2[113] = 116;
    var$2[114] = 0;
    var$2[115] = 8;
    var$2[116] = 52;
    var$2[117] = 0;
    var$2[118] = 9;
    var$2[119] = 200;
    var$2[120] = 81;
    var$2[121] = 7;
    var$2[122] = 13;
    var$2[123] = 0;
    var$2[124] = 8;
    var$2[125] = 100;
    var$2[126] = 0;
    var$2[127] = 8;
    var$2[128] = 36;
    var$2[129] = 0;
    var$2[130] = 9;
    var$2[131] = 168;
    var$2[132] = 0;
    var$2[133] = 8;
    var$2[134] = 4;
    var$2[135] = 0;
    var$2[136] = 8;
    var$2[137] = 132;
    var$2[138] = 0;
    var$2[139] = 8;
    var$2[140] = 68;
    var$2[141] = 0;
    var$2[142] = 9;
    var$2[143] = 232;
    var$2[144] = 80;
    var$2[145] = 7;
    var$2[146] = 8;
    var$2[147] = 0;
    var$2[148] = 8;
    var$2[149] = 92;
    var$2[150] = 0;
    var$2[151] = 8;
    var$2[152] = 28;
    var$2[153] = 0;
    var$2[154] = 9;
    var$2[155] = 152;
    var$2[156] = 84;
    var$2[157] = 7;
    var$2[158] = 83;
    var$2[159] = 0;
    var$2[160] = 8;
    var$2[161] = 124;
    var$2[162] = 0;
    var$2[163] = 8;
    var$2[164] = 60;
    var$2[165] = 0;
    var$2[166] = 9;
    var$2[167] = 216;
    var$2[168] = 82;
    var$2[169] = 7;
    var$2[170] = 23;
    var$2[171] = 0;
    var$2[172] = 8;
    var$2[173] = 108;
    var$2[174] = 0;
    var$2[175] = 8;
    var$2[176] = 44;
    var$2[177] = 0;
    var$2[178] = 9;
    var$2[179] = 184;
    var$2[180] = 0;
    var$2[181] = 8;
    var$2[182] = 12;
    var$2[183] = 0;
    var$2[184] = 8;
    var$2[185] = 140;
    var$2[186] = 0;
    var$2[187] = 8;
    var$2[188] = 76;
    var$2[189] = 0;
    var$2[190] = 9;
    var$2[191] = 248;
    var$2[192] = 80;
    var$2[193] = 7;
    var$2[194] = 3;
    var$2[195] = 0;
    var$2[196] = 8;
    var$2[197] = 82;
    var$2[198] = 0;
    var$2[199] = 8;
    var$2[200] = 18;
    var$2[201] = 85;
    var$2[202] = 8;
    var$2[203] = 163;
    var$2[204] = 83;
    var$2[205] = 7;
    var$2[206] = 35;
    var$2[207] = 0;
    var$2[208] = 8;
    var$2[209] = 114;
    var$2[210] = 0;
    var$2[211] = 8;
    var$2[212] = 50;
    var$2[213] = 0;
    var$2[214] = 9;
    var$2[215] = 196;
    var$2[216] = 81;
    var$2[217] = 7;
    var$2[218] = 11;
    var$2[219] = 0;
    var$2[220] = 8;
    var$2[221] = 98;
    var$2[222] = 0;
    var$2[223] = 8;
    var$2[224] = 34;
    var$2[225] = 0;
    var$2[226] = 9;
    var$2[227] = 164;
    var$2[228] = 0;
    var$2[229] = 8;
    var$2[230] = 2;
    var$2[231] = 0;
    var$2[232] = 8;
    var$2[233] = 130;
    var$2[234] = 0;
    var$2[235] = 8;
    var$2[236] = 66;
    var$2[237] = 0;
    var$2[238] = 9;
    var$2[239] = 228;
    var$2[240] = 80;
    var$2[241] = 7;
    var$2[242] = 7;
    var$2[243] = 0;
    var$2[244] = 8;
    var$2[245] = 90;
    var$2[246] = 0;
    var$2[247] = 8;
    var$2[248] = 26;
    var$2[249] = 0;
    var$2[250] = 9;
    var$2[251] = 148;
    var$2[252] = 84;
    var$2[253] = 7;
    var$2[254] = 67;
    var$2[255] = 0;
    var$2[256] = 8;
    var$2[257] = 122;
    var$2[258] = 0;
    var$2[259] = 8;
    var$2[260] = 58;
    var$2[261] = 0;
    var$2[262] = 9;
    var$2[263] = 212;
    var$2[264] = 82;
    var$2[265] = 7;
    var$2[266] = 19;
    var$2[267] = 0;
    var$2[268] = 8;
    var$2[269] = 106;
    var$2[270] = 0;
    var$2[271] = 8;
    var$2[272] = 42;
    var$2[273] = 0;
    var$2[274] = 9;
    var$2[275] = 180;
    var$2[276] = 0;
    var$2[277] = 8;
    var$2[278] = 10;
    var$2[279] = 0;
    var$2[280] = 8;
    var$2[281] = 138;
    var$2[282] = 0;
    var$2[283] = 8;
    var$2[284] = 74;
    var$2[285] = 0;
    var$2[286] = 9;
    var$2[287] = 244;
    var$2[288] = 80;
    var$2[289] = 7;
    var$2[290] = 5;
    var$2[291] = 0;
    var$2[292] = 8;
    var$2[293] = 86;
    var$2[294] = 0;
    var$2[295] = 8;
    var$2[296] = 22;
    var$2[297] = 192;
    var$2[298] = 8;
    var$2[299] = 0;
    var$2[300] = 83;
    var$2[301] = 7;
    var$2[302] = 51;
    var$2[303] = 0;
    var$2[304] = 8;
    var$2[305] = 118;
    var$2[306] = 0;
    var$2[307] = 8;
    var$2[308] = 54;
    var$2[309] = 0;
    var$2[310] = 9;
    var$2[311] = 204;
    var$2[312] = 81;
    var$2[313] = 7;
    var$2[314] = 15;
    var$2[315] = 0;
    var$2[316] = 8;
    var$2[317] = 102;
    var$2[318] = 0;
    var$2[319] = 8;
    var$2[320] = 38;
    var$2[321] = 0;
    var$2[322] = 9;
    var$2[323] = 172;
    var$2[324] = 0;
    var$2[325] = 8;
    var$2[326] = 6;
    var$2[327] = 0;
    var$2[328] = 8;
    var$2[329] = 134;
    var$2[330] = 0;
    var$2[331] = 8;
    var$2[332] = 70;
    var$2[333] = 0;
    var$2[334] = 9;
    var$2[335] = 236;
    var$2[336] = 80;
    var$2[337] = 7;
    var$2[338] = 9;
    var$2[339] = 0;
    var$2[340] = 8;
    var$2[341] = 94;
    var$2[342] = 0;
    var$2[343] = 8;
    var$2[344] = 30;
    var$2[345] = 0;
    var$2[346] = 9;
    var$2[347] = 156;
    var$2[348] = 84;
    var$2[349] = 7;
    var$2[350] = 99;
    var$2[351] = 0;
    var$2[352] = 8;
    var$2[353] = 126;
    var$2[354] = 0;
    var$2[355] = 8;
    var$2[356] = 62;
    var$2[357] = 0;
    var$2[358] = 9;
    var$2[359] = 220;
    var$2[360] = 82;
    var$2[361] = 7;
    var$2[362] = 27;
    var$2[363] = 0;
    var$2[364] = 8;
    var$2[365] = 110;
    var$2[366] = 0;
    var$2[367] = 8;
    var$2[368] = 46;
    var$2[369] = 0;
    var$2[370] = 9;
    var$2[371] = 188;
    var$2[372] = 0;
    var$2[373] = 8;
    var$2[374] = 14;
    var$2[375] = 0;
    var$2[376] = 8;
    var$2[377] = 142;
    var$2[378] = 0;
    var$2[379] = 8;
    var$2[380] = 78;
    var$2[381] = 0;
    var$2[382] = 9;
    var$2[383] = 252;
    var$2[384] = 96;
    var$2[385] = 7;
    var$2[386] = 256;
    var$2[387] = 0;
    var$2[388] = 8;
    var$2[389] = 81;
    var$2[390] = 0;
    var$2[391] = 8;
    var$2[392] = 17;
    var$2[393] = 85;
    var$2[394] = 8;
    var$2[395] = 131;
    var$2[396] = 82;
    var$2[397] = 7;
    var$2[398] = 31;
    var$2[399] = 0;
    var$2[400] = 8;
    var$2[401] = 113;
    var$2[402] = 0;
    var$2[403] = 8;
    var$2[404] = 49;
    var$2[405] = 0;
    var$2[406] = 9;
    var$2[407] = 194;
    var$2[408] = 80;
    var$2[409] = 7;
    var$2[410] = 10;
    var$2[411] = 0;
    var$2[412] = 8;
    var$2[413] = 97;
    var$2[414] = 0;
    var$2[415] = 8;
    var$2[416] = 33;
    var$2[417] = 0;
    var$2[418] = 9;
    var$2[419] = 162;
    var$2[420] = 0;
    var$2[421] = 8;
    var$2[422] = 1;
    var$2[423] = 0;
    var$2[424] = 8;
    var$2[425] = 129;
    var$2[426] = 0;
    var$2[427] = 8;
    var$2[428] = 65;
    var$2[429] = 0;
    var$2[430] = 9;
    var$2[431] = 226;
    var$2[432] = 80;
    var$2[433] = 7;
    var$2[434] = 6;
    var$2[435] = 0;
    var$2[436] = 8;
    var$2[437] = 89;
    var$2[438] = 0;
    var$2[439] = 8;
    var$2[440] = 25;
    var$2[441] = 0;
    var$2[442] = 9;
    var$2[443] = 146;
    var$2[444] = 83;
    var$2[445] = 7;
    var$2[446] = 59;
    var$2[447] = 0;
    var$2[448] = 8;
    var$2[449] = 121;
    var$2[450] = 0;
    var$2[451] = 8;
    var$2[452] = 57;
    var$2[453] = 0;
    var$2[454] = 9;
    var$2[455] = 210;
    var$2[456] = 81;
    var$2[457] = 7;
    var$2[458] = 17;
    var$2[459] = 0;
    var$2[460] = 8;
    var$2[461] = 105;
    var$2[462] = 0;
    var$2[463] = 8;
    var$2[464] = 41;
    var$2[465] = 0;
    var$2[466] = 9;
    var$2[467] = 178;
    var$2[468] = 0;
    var$2[469] = 8;
    var$2[470] = 9;
    var$2[471] = 0;
    var$2[472] = 8;
    var$2[473] = 137;
    var$2[474] = 0;
    var$2[475] = 8;
    var$2[476] = 73;
    var$2[477] = 0;
    var$2[478] = 9;
    var$2[479] = 242;
    var$2[480] = 80;
    var$2[481] = 7;
    var$2[482] = 4;
    var$2[483] = 0;
    var$2[484] = 8;
    var$2[485] = 85;
    var$2[486] = 0;
    var$2[487] = 8;
    var$2[488] = 21;
    var$2[489] = 80;
    var$2[490] = 8;
    var$2[491] = 258;
    var$2[492] = 83;
    var$2[493] = 7;
    var$2[494] = 43;
    var$2[495] = 0;
    var$2[496] = 8;
    var$2[497] = 117;
    var$2[498] = 0;
    var$2[499] = 8;
    var$2[500] = 53;
    var$2[501] = 0;
    var$2[502] = 9;
    var$2[503] = 202;
    var$2[504] = 81;
    var$2[505] = 7;
    var$2[506] = 13;
    var$2[507] = 0;
    var$2[508] = 8;
    var$2[509] = 101;
    var$2[510] = 0;
    var$2[511] = 8;
    var$2[512] = 37;
    var$2[513] = 0;
    var$2[514] = 9;
    var$2[515] = 170;
    var$2[516] = 0;
    var$2[517] = 8;
    var$2[518] = 5;
    var$2[519] = 0;
    var$2[520] = 8;
    var$2[521] = 133;
    var$2[522] = 0;
    var$2[523] = 8;
    var$2[524] = 69;
    var$2[525] = 0;
    var$2[526] = 9;
    var$2[527] = 234;
    var$2[528] = 80;
    var$2[529] = 7;
    var$2[530] = 8;
    var$2[531] = 0;
    var$2[532] = 8;
    var$2[533] = 93;
    var$2[534] = 0;
    var$2[535] = 8;
    var$2[536] = 29;
    var$2[537] = 0;
    var$2[538] = 9;
    var$2[539] = 154;
    var$2[540] = 84;
    var$2[541] = 7;
    var$2[542] = 83;
    var$2[543] = 0;
    var$2[544] = 8;
    var$2[545] = 125;
    var$2[546] = 0;
    var$2[547] = 8;
    var$2[548] = 61;
    var$2[549] = 0;
    var$2[550] = 9;
    var$2[551] = 218;
    var$2[552] = 82;
    var$2[553] = 7;
    var$2[554] = 23;
    var$2[555] = 0;
    var$2[556] = 8;
    var$2[557] = 109;
    var$2[558] = 0;
    var$2[559] = 8;
    var$2[560] = 45;
    var$2[561] = 0;
    var$2[562] = 9;
    var$2[563] = 186;
    var$2[564] = 0;
    var$2[565] = 8;
    var$2[566] = 13;
    var$2[567] = 0;
    var$2[568] = 8;
    var$2[569] = 141;
    var$2[570] = 0;
    var$2[571] = 8;
    var$2[572] = 77;
    var$2[573] = 0;
    var$2[574] = 9;
    var$2[575] = 250;
    var$2[576] = 80;
    var$2[577] = 7;
    var$2[578] = 3;
    var$2[579] = 0;
    var$2[580] = 8;
    var$2[581] = 83;
    var$2[582] = 0;
    var$2[583] = 8;
    var$2[584] = 19;
    var$2[585] = 85;
    var$2[586] = 8;
    var$2[587] = 195;
    var$2[588] = 83;
    var$2[589] = 7;
    var$2[590] = 35;
    var$2[591] = 0;
    var$2[592] = 8;
    var$2[593] = 115;
    var$2[594] = 0;
    var$2[595] = 8;
    var$2[596] = 51;
    var$2[597] = 0;
    var$2[598] = 9;
    var$2[599] = 198;
    var$2[600] = 81;
    var$2[601] = 7;
    var$2[602] = 11;
    var$2[603] = 0;
    var$2[604] = 8;
    var$2[605] = 99;
    var$2[606] = 0;
    var$2[607] = 8;
    var$2[608] = 35;
    var$2[609] = 0;
    var$2[610] = 9;
    var$2[611] = 166;
    var$2[612] = 0;
    var$2[613] = 8;
    var$2[614] = 3;
    var$2[615] = 0;
    var$2[616] = 8;
    var$2[617] = 131;
    var$2[618] = 0;
    var$2[619] = 8;
    var$2[620] = 67;
    var$2[621] = 0;
    var$2[622] = 9;
    var$2[623] = 230;
    var$2[624] = 80;
    var$2[625] = 7;
    var$2[626] = 7;
    var$2[627] = 0;
    var$2[628] = 8;
    var$2[629] = 91;
    var$2[630] = 0;
    var$2[631] = 8;
    var$2[632] = 27;
    var$2[633] = 0;
    var$2[634] = 9;
    var$2[635] = 150;
    var$2[636] = 84;
    var$2[637] = 7;
    var$2[638] = 67;
    var$2[639] = 0;
    var$2[640] = 8;
    var$2[641] = 123;
    var$2[642] = 0;
    var$2[643] = 8;
    var$2[644] = 59;
    var$2[645] = 0;
    var$2[646] = 9;
    var$2[647] = 214;
    var$2[648] = 82;
    var$2[649] = 7;
    var$2[650] = 19;
    var$2[651] = 0;
    var$2[652] = 8;
    var$2[653] = 107;
    var$2[654] = 0;
    var$2[655] = 8;
    var$2[656] = 43;
    var$2[657] = 0;
    var$2[658] = 9;
    var$2[659] = 182;
    var$2[660] = 0;
    var$2[661] = 8;
    var$2[662] = 11;
    var$2[663] = 0;
    var$2[664] = 8;
    var$2[665] = 139;
    var$2[666] = 0;
    var$2[667] = 8;
    var$2[668] = 75;
    var$2[669] = 0;
    var$2[670] = 9;
    var$2[671] = 246;
    var$2[672] = 80;
    var$2[673] = 7;
    var$2[674] = 5;
    var$2[675] = 0;
    var$2[676] = 8;
    var$2[677] = 87;
    var$2[678] = 0;
    var$2[679] = 8;
    var$2[680] = 23;
    var$2[681] = 192;
    var$2[682] = 8;
    var$2[683] = 0;
    var$2[684] = 83;
    var$2[685] = 7;
    var$2[686] = 51;
    var$2[687] = 0;
    var$2[688] = 8;
    var$2[689] = 119;
    var$2[690] = 0;
    var$2[691] = 8;
    var$2[692] = 55;
    var$2[693] = 0;
    var$2[694] = 9;
    var$2[695] = 206;
    var$2[696] = 81;
    var$2[697] = 7;
    var$2[698] = 15;
    var$2[699] = 0;
    var$2[700] = 8;
    var$2[701] = 103;
    var$2[702] = 0;
    var$2[703] = 8;
    var$2[704] = 39;
    var$2[705] = 0;
    var$2[706] = 9;
    var$2[707] = 174;
    var$2[708] = 0;
    var$2[709] = 8;
    var$2[710] = 7;
    var$2[711] = 0;
    var$2[712] = 8;
    var$2[713] = 135;
    var$2[714] = 0;
    var$2[715] = 8;
    var$2[716] = 71;
    var$2[717] = 0;
    var$2[718] = 9;
    var$2[719] = 238;
    var$2[720] = 80;
    var$2[721] = 7;
    var$2[722] = 9;
    var$2[723] = 0;
    var$2[724] = 8;
    var$2[725] = 95;
    var$2[726] = 0;
    var$2[727] = 8;
    var$2[728] = 31;
    var$2[729] = 0;
    var$2[730] = 9;
    var$2[731] = 158;
    var$2[732] = 84;
    var$2[733] = 7;
    var$2[734] = 99;
    var$2[735] = 0;
    var$2[736] = 8;
    var$2[737] = 127;
    var$2[738] = 0;
    var$2[739] = 8;
    var$2[740] = 63;
    var$2[741] = 0;
    var$2[742] = 9;
    var$2[743] = 222;
    var$2[744] = 82;
    var$2[745] = 7;
    var$2[746] = 27;
    var$2[747] = 0;
    var$2[748] = 8;
    var$2[749] = 111;
    var$2[750] = 0;
    var$2[751] = 8;
    var$2[752] = 47;
    var$2[753] = 0;
    var$2[754] = 9;
    var$2[755] = 190;
    var$2[756] = 0;
    var$2[757] = 8;
    var$2[758] = 15;
    var$2[759] = 0;
    var$2[760] = 8;
    var$2[761] = 143;
    var$2[762] = 0;
    var$2[763] = 8;
    var$2[764] = 79;
    var$2[765] = 0;
    var$2[766] = 9;
    var$2[767] = 254;
    var$2[768] = 96;
    var$2[769] = 7;
    var$2[770] = 256;
    var$2[771] = 0;
    var$2[772] = 8;
    var$2[773] = 80;
    var$2[774] = 0;
    var$2[775] = 8;
    var$2[776] = 16;
    var$2[777] = 84;
    var$2[778] = 8;
    var$2[779] = 115;
    var$2[780] = 82;
    var$2[781] = 7;
    var$2[782] = 31;
    var$2[783] = 0;
    var$2[784] = 8;
    var$2[785] = 112;
    var$2[786] = 0;
    var$2[787] = 8;
    var$2[788] = 48;
    var$2[789] = 0;
    var$2[790] = 9;
    var$2[791] = 193;
    var$2[792] = 80;
    var$2[793] = 7;
    var$2[794] = 10;
    var$2[795] = 0;
    var$2[796] = 8;
    var$2[797] = 96;
    var$2[798] = 0;
    var$2[799] = 8;
    var$2[800] = 32;
    var$2[801] = 0;
    var$2[802] = 9;
    var$2[803] = 161;
    var$2[804] = 0;
    var$2[805] = 8;
    var$2[806] = 0;
    var$2[807] = 0;
    var$2[808] = 8;
    var$2[809] = 128;
    var$2[810] = 0;
    var$2[811] = 8;
    var$2[812] = 64;
    var$2[813] = 0;
    var$2[814] = 9;
    var$2[815] = 225;
    var$2[816] = 80;
    var$2[817] = 7;
    var$2[818] = 6;
    var$2[819] = 0;
    var$2[820] = 8;
    var$2[821] = 88;
    var$2[822] = 0;
    var$2[823] = 8;
    var$2[824] = 24;
    var$2[825] = 0;
    var$2[826] = 9;
    var$2[827] = 145;
    var$2[828] = 83;
    var$2[829] = 7;
    var$2[830] = 59;
    var$2[831] = 0;
    var$2[832] = 8;
    var$2[833] = 120;
    var$2[834] = 0;
    var$2[835] = 8;
    var$2[836] = 56;
    var$2[837] = 0;
    var$2[838] = 9;
    var$2[839] = 209;
    var$2[840] = 81;
    var$2[841] = 7;
    var$2[842] = 17;
    var$2[843] = 0;
    var$2[844] = 8;
    var$2[845] = 104;
    var$2[846] = 0;
    var$2[847] = 8;
    var$2[848] = 40;
    var$2[849] = 0;
    var$2[850] = 9;
    var$2[851] = 177;
    var$2[852] = 0;
    var$2[853] = 8;
    var$2[854] = 8;
    var$2[855] = 0;
    var$2[856] = 8;
    var$2[857] = 136;
    var$2[858] = 0;
    var$2[859] = 8;
    var$2[860] = 72;
    var$2[861] = 0;
    var$2[862] = 9;
    var$2[863] = 241;
    var$2[864] = 80;
    var$2[865] = 7;
    var$2[866] = 4;
    var$2[867] = 0;
    var$2[868] = 8;
    var$2[869] = 84;
    var$2[870] = 0;
    var$2[871] = 8;
    var$2[872] = 20;
    var$2[873] = 85;
    var$2[874] = 8;
    var$2[875] = 227;
    var$2[876] = 83;
    var$2[877] = 7;
    var$2[878] = 43;
    var$2[879] = 0;
    var$2[880] = 8;
    var$2[881] = 116;
    var$2[882] = 0;
    var$2[883] = 8;
    var$2[884] = 52;
    var$2[885] = 0;
    var$2[886] = 9;
    var$2[887] = 201;
    var$2[888] = 81;
    var$2[889] = 7;
    var$2[890] = 13;
    var$2[891] = 0;
    var$2[892] = 8;
    var$2[893] = 100;
    var$2[894] = 0;
    var$2[895] = 8;
    var$2[896] = 36;
    var$2[897] = 0;
    var$2[898] = 9;
    var$2[899] = 169;
    var$2[900] = 0;
    var$2[901] = 8;
    var$2[902] = 4;
    var$2[903] = 0;
    var$2[904] = 8;
    var$2[905] = 132;
    var$2[906] = 0;
    var$2[907] = 8;
    var$2[908] = 68;
    var$2[909] = 0;
    var$2[910] = 9;
    var$2[911] = 233;
    var$2[912] = 80;
    var$2[913] = 7;
    var$2[914] = 8;
    var$2[915] = 0;
    var$2[916] = 8;
    var$2[917] = 92;
    var$2[918] = 0;
    var$2[919] = 8;
    var$2[920] = 28;
    var$2[921] = 0;
    var$2[922] = 9;
    var$2[923] = 153;
    var$2[924] = 84;
    var$2[925] = 7;
    var$2[926] = 83;
    var$2[927] = 0;
    var$2[928] = 8;
    var$2[929] = 124;
    var$2[930] = 0;
    var$2[931] = 8;
    var$2[932] = 60;
    var$2[933] = 0;
    var$2[934] = 9;
    var$2[935] = 217;
    var$2[936] = 82;
    var$2[937] = 7;
    var$2[938] = 23;
    var$2[939] = 0;
    var$2[940] = 8;
    var$2[941] = 108;
    var$2[942] = 0;
    var$2[943] = 8;
    var$2[944] = 44;
    var$2[945] = 0;
    var$2[946] = 9;
    var$2[947] = 185;
    var$2[948] = 0;
    var$2[949] = 8;
    var$2[950] = 12;
    var$2[951] = 0;
    var$2[952] = 8;
    var$2[953] = 140;
    var$2[954] = 0;
    var$2[955] = 8;
    var$2[956] = 76;
    var$2[957] = 0;
    var$2[958] = 9;
    var$2[959] = 249;
    var$2[960] = 80;
    var$2[961] = 7;
    var$2[962] = 3;
    var$2[963] = 0;
    var$2[964] = 8;
    var$2[965] = 82;
    var$2[966] = 0;
    var$2[967] = 8;
    var$2[968] = 18;
    var$2[969] = 85;
    var$2[970] = 8;
    var$2[971] = 163;
    var$2[972] = 83;
    var$2[973] = 7;
    var$2[974] = 35;
    var$2[975] = 0;
    var$2[976] = 8;
    var$2[977] = 114;
    var$2[978] = 0;
    var$2[979] = 8;
    var$2[980] = 50;
    var$2[981] = 0;
    var$2[982] = 9;
    var$2[983] = 197;
    var$2[984] = 81;
    var$2[985] = 7;
    var$2[986] = 11;
    var$2[987] = 0;
    var$2[988] = 8;
    var$2[989] = 98;
    var$2[990] = 0;
    var$2[991] = 8;
    var$2[992] = 34;
    var$2[993] = 0;
    var$2[994] = 9;
    var$2[995] = 165;
    var$2[996] = 0;
    var$2[997] = 8;
    var$2[998] = 2;
    var$2[999] = 0;
    var$2[1000] = 8;
    var$2[1001] = 130;
    var$2[1002] = 0;
    var$2[1003] = 8;
    var$2[1004] = 66;
    var$2[1005] = 0;
    var$2[1006] = 9;
    var$2[1007] = 229;
    var$2[1008] = 80;
    var$2[1009] = 7;
    var$2[1010] = 7;
    var$2[1011] = 0;
    var$2[1012] = 8;
    var$2[1013] = 90;
    var$2[1014] = 0;
    var$2[1015] = 8;
    var$2[1016] = 26;
    var$2[1017] = 0;
    var$2[1018] = 9;
    var$2[1019] = 149;
    var$2[1020] = 84;
    var$2[1021] = 7;
    var$2[1022] = 67;
    var$2[1023] = 0;
    var$2[1024] = 8;
    var$2[1025] = 122;
    var$2[1026] = 0;
    var$2[1027] = 8;
    var$2[1028] = 58;
    var$2[1029] = 0;
    var$2[1030] = 9;
    var$2[1031] = 213;
    var$2[1032] = 82;
    var$2[1033] = 7;
    var$2[1034] = 19;
    var$2[1035] = 0;
    var$2[1036] = 8;
    var$2[1037] = 106;
    var$2[1038] = 0;
    var$2[1039] = 8;
    var$2[1040] = 42;
    var$2[1041] = 0;
    var$2[1042] = 9;
    var$2[1043] = 181;
    var$2[1044] = 0;
    var$2[1045] = 8;
    var$2[1046] = 10;
    var$2[1047] = 0;
    var$2[1048] = 8;
    var$2[1049] = 138;
    var$2[1050] = 0;
    var$2[1051] = 8;
    var$2[1052] = 74;
    var$2[1053] = 0;
    var$2[1054] = 9;
    var$2[1055] = 245;
    var$2[1056] = 80;
    var$2[1057] = 7;
    var$2[1058] = 5;
    var$2[1059] = 0;
    var$2[1060] = 8;
    var$2[1061] = 86;
    var$2[1062] = 0;
    var$2[1063] = 8;
    var$2[1064] = 22;
    var$2[1065] = 192;
    var$2[1066] = 8;
    var$2[1067] = 0;
    var$2[1068] = 83;
    var$2[1069] = 7;
    var$2[1070] = 51;
    var$2[1071] = 0;
    var$2[1072] = 8;
    var$2[1073] = 118;
    var$2[1074] = 0;
    var$2[1075] = 8;
    var$2[1076] = 54;
    var$2[1077] = 0;
    var$2[1078] = 9;
    var$2[1079] = 205;
    var$2[1080] = 81;
    var$2[1081] = 7;
    var$2[1082] = 15;
    var$2[1083] = 0;
    var$2[1084] = 8;
    var$2[1085] = 102;
    var$2[1086] = 0;
    var$2[1087] = 8;
    var$2[1088] = 38;
    var$2[1089] = 0;
    var$2[1090] = 9;
    var$2[1091] = 173;
    var$2[1092] = 0;
    var$2[1093] = 8;
    var$2[1094] = 6;
    var$2[1095] = 0;
    var$2[1096] = 8;
    var$2[1097] = 134;
    var$2[1098] = 0;
    var$2[1099] = 8;
    var$2[1100] = 70;
    var$2[1101] = 0;
    var$2[1102] = 9;
    var$2[1103] = 237;
    var$2[1104] = 80;
    var$2[1105] = 7;
    var$2[1106] = 9;
    var$2[1107] = 0;
    var$2[1108] = 8;
    var$2[1109] = 94;
    var$2[1110] = 0;
    var$2[1111] = 8;
    var$2[1112] = 30;
    var$2[1113] = 0;
    var$2[1114] = 9;
    var$2[1115] = 157;
    var$2[1116] = 84;
    var$2[1117] = 7;
    var$2[1118] = 99;
    var$2[1119] = 0;
    var$2[1120] = 8;
    var$2[1121] = 126;
    var$2[1122] = 0;
    var$2[1123] = 8;
    var$2[1124] = 62;
    var$2[1125] = 0;
    var$2[1126] = 9;
    var$2[1127] = 221;
    var$2[1128] = 82;
    var$2[1129] = 7;
    var$2[1130] = 27;
    var$2[1131] = 0;
    var$2[1132] = 8;
    var$2[1133] = 110;
    var$2[1134] = 0;
    var$2[1135] = 8;
    var$2[1136] = 46;
    var$2[1137] = 0;
    var$2[1138] = 9;
    var$2[1139] = 189;
    var$2[1140] = 0;
    var$2[1141] = 8;
    var$2[1142] = 14;
    var$2[1143] = 0;
    var$2[1144] = 8;
    var$2[1145] = 142;
    var$2[1146] = 0;
    var$2[1147] = 8;
    var$2[1148] = 78;
    var$2[1149] = 0;
    var$2[1150] = 9;
    var$2[1151] = 253;
    var$2[1152] = 96;
    var$2[1153] = 7;
    var$2[1154] = 256;
    var$2[1155] = 0;
    var$2[1156] = 8;
    var$2[1157] = 81;
    var$2[1158] = 0;
    var$2[1159] = 8;
    var$2[1160] = 17;
    var$2[1161] = 85;
    var$2[1162] = 8;
    var$2[1163] = 131;
    var$2[1164] = 82;
    var$2[1165] = 7;
    var$2[1166] = 31;
    var$2[1167] = 0;
    var$2[1168] = 8;
    var$2[1169] = 113;
    var$2[1170] = 0;
    var$2[1171] = 8;
    var$2[1172] = 49;
    var$2[1173] = 0;
    var$2[1174] = 9;
    var$2[1175] = 195;
    var$2[1176] = 80;
    var$2[1177] = 7;
    var$2[1178] = 10;
    var$2[1179] = 0;
    var$2[1180] = 8;
    var$2[1181] = 97;
    var$2[1182] = 0;
    var$2[1183] = 8;
    var$2[1184] = 33;
    var$2[1185] = 0;
    var$2[1186] = 9;
    var$2[1187] = 163;
    var$2[1188] = 0;
    var$2[1189] = 8;
    var$2[1190] = 1;
    var$2[1191] = 0;
    var$2[1192] = 8;
    var$2[1193] = 129;
    var$2[1194] = 0;
    var$2[1195] = 8;
    var$2[1196] = 65;
    var$2[1197] = 0;
    var$2[1198] = 9;
    var$2[1199] = 227;
    var$2[1200] = 80;
    var$2[1201] = 7;
    var$2[1202] = 6;
    var$2[1203] = 0;
    var$2[1204] = 8;
    var$2[1205] = 89;
    var$2[1206] = 0;
    var$2[1207] = 8;
    var$2[1208] = 25;
    var$2[1209] = 0;
    var$2[1210] = 9;
    var$2[1211] = 147;
    var$2[1212] = 83;
    var$2[1213] = 7;
    var$2[1214] = 59;
    var$2[1215] = 0;
    var$2[1216] = 8;
    var$2[1217] = 121;
    var$2[1218] = 0;
    var$2[1219] = 8;
    var$2[1220] = 57;
    var$2[1221] = 0;
    var$2[1222] = 9;
    var$2[1223] = 211;
    var$2[1224] = 81;
    var$2[1225] = 7;
    var$2[1226] = 17;
    var$2[1227] = 0;
    var$2[1228] = 8;
    var$2[1229] = 105;
    var$2[1230] = 0;
    var$2[1231] = 8;
    var$2[1232] = 41;
    var$2[1233] = 0;
    var$2[1234] = 9;
    var$2[1235] = 179;
    var$2[1236] = 0;
    var$2[1237] = 8;
    var$2[1238] = 9;
    var$2[1239] = 0;
    var$2[1240] = 8;
    var$2[1241] = 137;
    var$2[1242] = 0;
    var$2[1243] = 8;
    var$2[1244] = 73;
    var$2[1245] = 0;
    var$2[1246] = 9;
    var$2[1247] = 243;
    var$2[1248] = 80;
    var$2[1249] = 7;
    var$2[1250] = 4;
    var$2[1251] = 0;
    var$2[1252] = 8;
    var$2[1253] = 85;
    var$2[1254] = 0;
    var$2[1255] = 8;
    var$2[1256] = 21;
    var$2[1257] = 80;
    var$2[1258] = 8;
    var$2[1259] = 258;
    var$2[1260] = 83;
    var$2[1261] = 7;
    var$2[1262] = 43;
    var$2[1263] = 0;
    var$2[1264] = 8;
    var$2[1265] = 117;
    var$2[1266] = 0;
    var$2[1267] = 8;
    var$2[1268] = 53;
    var$2[1269] = 0;
    var$2[1270] = 9;
    var$2[1271] = 203;
    var$2[1272] = 81;
    var$2[1273] = 7;
    var$2[1274] = 13;
    var$2[1275] = 0;
    var$2[1276] = 8;
    var$2[1277] = 101;
    var$2[1278] = 0;
    var$2[1279] = 8;
    var$2[1280] = 37;
    var$2[1281] = 0;
    var$2[1282] = 9;
    var$2[1283] = 171;
    var$2[1284] = 0;
    var$2[1285] = 8;
    var$2[1286] = 5;
    var$2[1287] = 0;
    var$2[1288] = 8;
    var$2[1289] = 133;
    var$2[1290] = 0;
    var$2[1291] = 8;
    var$2[1292] = 69;
    var$2[1293] = 0;
    var$2[1294] = 9;
    var$2[1295] = 235;
    var$2[1296] = 80;
    var$2[1297] = 7;
    var$2[1298] = 8;
    var$2[1299] = 0;
    var$2[1300] = 8;
    var$2[1301] = 93;
    var$2[1302] = 0;
    var$2[1303] = 8;
    var$2[1304] = 29;
    var$2[1305] = 0;
    var$2[1306] = 9;
    var$2[1307] = 155;
    var$2[1308] = 84;
    var$2[1309] = 7;
    var$2[1310] = 83;
    var$2[1311] = 0;
    var$2[1312] = 8;
    var$2[1313] = 125;
    var$2[1314] = 0;
    var$2[1315] = 8;
    var$2[1316] = 61;
    var$2[1317] = 0;
    var$2[1318] = 9;
    var$2[1319] = 219;
    var$2[1320] = 82;
    var$2[1321] = 7;
    var$2[1322] = 23;
    var$2[1323] = 0;
    var$2[1324] = 8;
    var$2[1325] = 109;
    var$2[1326] = 0;
    var$2[1327] = 8;
    var$2[1328] = 45;
    var$2[1329] = 0;
    var$2[1330] = 9;
    var$2[1331] = 187;
    var$2[1332] = 0;
    var$2[1333] = 8;
    var$2[1334] = 13;
    var$2[1335] = 0;
    var$2[1336] = 8;
    var$2[1337] = 141;
    var$2[1338] = 0;
    var$2[1339] = 8;
    var$2[1340] = 77;
    var$2[1341] = 0;
    var$2[1342] = 9;
    var$2[1343] = 251;
    var$2[1344] = 80;
    var$2[1345] = 7;
    var$2[1346] = 3;
    var$2[1347] = 0;
    var$2[1348] = 8;
    var$2[1349] = 83;
    var$2[1350] = 0;
    var$2[1351] = 8;
    var$2[1352] = 19;
    var$2[1353] = 85;
    var$2[1354] = 8;
    var$2[1355] = 195;
    var$2[1356] = 83;
    var$2[1357] = 7;
    var$2[1358] = 35;
    var$2[1359] = 0;
    var$2[1360] = 8;
    var$2[1361] = 115;
    var$2[1362] = 0;
    var$2[1363] = 8;
    var$2[1364] = 51;
    var$2[1365] = 0;
    var$2[1366] = 9;
    var$2[1367] = 199;
    var$2[1368] = 81;
    var$2[1369] = 7;
    var$2[1370] = 11;
    var$2[1371] = 0;
    var$2[1372] = 8;
    var$2[1373] = 99;
    var$2[1374] = 0;
    var$2[1375] = 8;
    var$2[1376] = 35;
    var$2[1377] = 0;
    var$2[1378] = 9;
    var$2[1379] = 167;
    var$2[1380] = 0;
    var$2[1381] = 8;
    var$2[1382] = 3;
    var$2[1383] = 0;
    var$2[1384] = 8;
    var$2[1385] = 131;
    var$2[1386] = 0;
    var$2[1387] = 8;
    var$2[1388] = 67;
    var$2[1389] = 0;
    var$2[1390] = 9;
    var$2[1391] = 231;
    var$2[1392] = 80;
    var$2[1393] = 7;
    var$2[1394] = 7;
    var$2[1395] = 0;
    var$2[1396] = 8;
    var$2[1397] = 91;
    var$2[1398] = 0;
    var$2[1399] = 8;
    var$2[1400] = 27;
    var$2[1401] = 0;
    var$2[1402] = 9;
    var$2[1403] = 151;
    var$2[1404] = 84;
    var$2[1405] = 7;
    var$2[1406] = 67;
    var$2[1407] = 0;
    var$2[1408] = 8;
    var$2[1409] = 123;
    var$2[1410] = 0;
    var$2[1411] = 8;
    var$2[1412] = 59;
    var$2[1413] = 0;
    var$2[1414] = 9;
    var$2[1415] = 215;
    var$2[1416] = 82;
    var$2[1417] = 7;
    var$2[1418] = 19;
    var$2[1419] = 0;
    var$2[1420] = 8;
    var$2[1421] = 107;
    var$2[1422] = 0;
    var$2[1423] = 8;
    var$2[1424] = 43;
    var$2[1425] = 0;
    var$2[1426] = 9;
    var$2[1427] = 183;
    var$2[1428] = 0;
    var$2[1429] = 8;
    var$2[1430] = 11;
    var$2[1431] = 0;
    var$2[1432] = 8;
    var$2[1433] = 139;
    var$2[1434] = 0;
    var$2[1435] = 8;
    var$2[1436] = 75;
    var$2[1437] = 0;
    var$2[1438] = 9;
    var$2[1439] = 247;
    var$2[1440] = 80;
    var$2[1441] = 7;
    var$2[1442] = 5;
    var$2[1443] = 0;
    var$2[1444] = 8;
    var$2[1445] = 87;
    var$2[1446] = 0;
    var$2[1447] = 8;
    var$2[1448] = 23;
    var$2[1449] = 192;
    var$2[1450] = 8;
    var$2[1451] = 0;
    var$2[1452] = 83;
    var$2[1453] = 7;
    var$2[1454] = 51;
    var$2[1455] = 0;
    var$2[1456] = 8;
    var$2[1457] = 119;
    var$2[1458] = 0;
    var$2[1459] = 8;
    var$2[1460] = 55;
    var$2[1461] = 0;
    var$2[1462] = 9;
    var$2[1463] = 207;
    var$2[1464] = 81;
    var$2[1465] = 7;
    var$2[1466] = 15;
    var$2[1467] = 0;
    var$2[1468] = 8;
    var$2[1469] = 103;
    var$2[1470] = 0;
    var$2[1471] = 8;
    var$2[1472] = 39;
    var$2[1473] = 0;
    var$2[1474] = 9;
    var$2[1475] = 175;
    var$2[1476] = 0;
    var$2[1477] = 8;
    var$2[1478] = 7;
    var$2[1479] = 0;
    var$2[1480] = 8;
    var$2[1481] = 135;
    var$2[1482] = 0;
    var$2[1483] = 8;
    var$2[1484] = 71;
    var$2[1485] = 0;
    var$2[1486] = 9;
    var$2[1487] = 239;
    var$2[1488] = 80;
    var$2[1489] = 7;
    var$2[1490] = 9;
    var$2[1491] = 0;
    var$2[1492] = 8;
    var$2[1493] = 95;
    var$2[1494] = 0;
    var$2[1495] = 8;
    var$2[1496] = 31;
    var$2[1497] = 0;
    var$2[1498] = 9;
    var$2[1499] = 159;
    var$2[1500] = 84;
    var$2[1501] = 7;
    var$2[1502] = 99;
    var$2[1503] = 0;
    var$2[1504] = 8;
    var$2[1505] = 127;
    var$2[1506] = 0;
    var$2[1507] = 8;
    var$2[1508] = 63;
    var$2[1509] = 0;
    var$2[1510] = 9;
    var$2[1511] = 223;
    var$2[1512] = 82;
    var$2[1513] = 7;
    var$2[1514] = 27;
    var$2[1515] = 0;
    var$2[1516] = 8;
    var$2[1517] = 111;
    var$2[1518] = 0;
    var$2[1519] = 8;
    var$2[1520] = 47;
    var$2[1521] = 0;
    var$2[1522] = 9;
    var$2[1523] = 191;
    var$2[1524] = 0;
    var$2[1525] = 8;
    var$2[1526] = 15;
    var$2[1527] = 0;
    var$2[1528] = 8;
    var$2[1529] = 143;
    var$2[1530] = 0;
    var$2[1531] = 8;
    var$2[1532] = 79;
    var$2[1533] = 0;
    var$2[1534] = 9;
    var$2[1535] = 255;
    cjj_InfTree_fixed_tl = var$1;
    var$1 = $rt_createIntArray(96);
    var$2 = var$1.data;
    var$2[0] = 80;
    var$2[1] = 5;
    var$2[2] = 1;
    var$2[3] = 87;
    var$2[4] = 5;
    var$2[5] = 257;
    var$2[6] = 83;
    var$2[7] = 5;
    var$2[8] = 17;
    var$2[9] = 91;
    var$2[10] = 5;
    var$2[11] = 4097;
    var$2[12] = 81;
    var$2[13] = 5;
    var$2[14] = 5;
    var$2[15] = 89;
    var$2[16] = 5;
    var$2[17] = 1025;
    var$2[18] = 85;
    var$2[19] = 5;
    var$2[20] = 65;
    var$2[21] = 93;
    var$2[22] = 5;
    var$2[23] = 16385;
    var$2[24] = 80;
    var$2[25] = 5;
    var$2[26] = 3;
    var$2[27] = 88;
    var$2[28] = 5;
    var$2[29] = 513;
    var$2[30] = 84;
    var$2[31] = 5;
    var$2[32] = 33;
    var$2[33] = 92;
    var$2[34] = 5;
    var$2[35] = 8193;
    var$2[36] = 82;
    var$2[37] = 5;
    var$2[38] = 9;
    var$2[39] = 90;
    var$2[40] = 5;
    var$2[41] = 2049;
    var$2[42] = 86;
    var$2[43] = 5;
    var$2[44] = 129;
    var$2[45] = 192;
    var$2[46] = 5;
    var$2[47] = 24577;
    var$2[48] = 80;
    var$2[49] = 5;
    var$2[50] = 2;
    var$2[51] = 87;
    var$2[52] = 5;
    var$2[53] = 385;
    var$2[54] = 83;
    var$2[55] = 5;
    var$2[56] = 25;
    var$2[57] = 91;
    var$2[58] = 5;
    var$2[59] = 6145;
    var$2[60] = 81;
    var$2[61] = 5;
    var$2[62] = 7;
    var$2[63] = 89;
    var$2[64] = 5;
    var$2[65] = 1537;
    var$2[66] = 85;
    var$2[67] = 5;
    var$2[68] = 97;
    var$2[69] = 93;
    var$2[70] = 5;
    var$2[71] = 24577;
    var$2[72] = 80;
    var$2[73] = 5;
    var$2[74] = 4;
    var$2[75] = 88;
    var$2[76] = 5;
    var$2[77] = 769;
    var$2[78] = 84;
    var$2[79] = 5;
    var$2[80] = 49;
    var$2[81] = 92;
    var$2[82] = 5;
    var$2[83] = 12289;
    var$2[84] = 82;
    var$2[85] = 5;
    var$2[86] = 13;
    var$2[87] = 90;
    var$2[88] = 5;
    var$2[89] = 3073;
    var$2[90] = 86;
    var$2[91] = 5;
    var$2[92] = 193;
    var$2[93] = 192;
    var$2[94] = 5;
    var$2[95] = 24577;
    cjj_InfTree_fixed_td = var$1;
    var$1 = $rt_createIntArray(31);
    var$2 = var$1.data;
    var$2[0] = 3;
    var$2[1] = 4;
    var$2[2] = 5;
    var$2[3] = 6;
    var$2[4] = 7;
    var$2[5] = 8;
    var$2[6] = 9;
    var$2[7] = 10;
    var$2[8] = 11;
    var$2[9] = 13;
    var$2[10] = 15;
    var$2[11] = 17;
    var$2[12] = 19;
    var$2[13] = 23;
    var$2[14] = 27;
    var$2[15] = 31;
    var$2[16] = 35;
    var$2[17] = 43;
    var$2[18] = 51;
    var$2[19] = 59;
    var$2[20] = 67;
    var$2[21] = 83;
    var$2[22] = 99;
    var$2[23] = 115;
    var$2[24] = 131;
    var$2[25] = 163;
    var$2[26] = 195;
    var$2[27] = 227;
    var$2[28] = 258;
    var$2[29] = 0;
    var$2[30] = 0;
    cjj_InfTree_cplens = var$1;
    var$1 = $rt_createIntArray(31);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 0;
    var$2[2] = 0;
    var$2[3] = 0;
    var$2[4] = 0;
    var$2[5] = 0;
    var$2[6] = 0;
    var$2[7] = 0;
    var$2[8] = 1;
    var$2[9] = 1;
    var$2[10] = 1;
    var$2[11] = 1;
    var$2[12] = 2;
    var$2[13] = 2;
    var$2[14] = 2;
    var$2[15] = 2;
    var$2[16] = 3;
    var$2[17] = 3;
    var$2[18] = 3;
    var$2[19] = 3;
    var$2[20] = 4;
    var$2[21] = 4;
    var$2[22] = 4;
    var$2[23] = 4;
    var$2[24] = 5;
    var$2[25] = 5;
    var$2[26] = 5;
    var$2[27] = 5;
    var$2[28] = 0;
    var$2[29] = 112;
    var$2[30] = 112;
    cjj_InfTree_cplext = var$1;
    var$1 = $rt_createIntArray(30);
    var$2 = var$1.data;
    var$2[0] = 1;
    var$2[1] = 2;
    var$2[2] = 3;
    var$2[3] = 4;
    var$2[4] = 5;
    var$2[5] = 7;
    var$2[6] = 9;
    var$2[7] = 13;
    var$2[8] = 17;
    var$2[9] = 25;
    var$2[10] = 33;
    var$2[11] = 49;
    var$2[12] = 65;
    var$2[13] = 97;
    var$2[14] = 129;
    var$2[15] = 193;
    var$2[16] = 257;
    var$2[17] = 385;
    var$2[18] = 513;
    var$2[19] = 769;
    var$2[20] = 1025;
    var$2[21] = 1537;
    var$2[22] = 2049;
    var$2[23] = 3073;
    var$2[24] = 4097;
    var$2[25] = 6145;
    var$2[26] = 8193;
    var$2[27] = 12289;
    var$2[28] = 16385;
    var$2[29] = 24577;
    cjj_InfTree_cpdist = var$1;
    var$1 = $rt_createIntArray(30);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 0;
    var$2[2] = 0;
    var$2[3] = 0;
    var$2[4] = 1;
    var$2[5] = 1;
    var$2[6] = 2;
    var$2[7] = 2;
    var$2[8] = 3;
    var$2[9] = 3;
    var$2[10] = 4;
    var$2[11] = 4;
    var$2[12] = 5;
    var$2[13] = 5;
    var$2[14] = 6;
    var$2[15] = 6;
    var$2[16] = 7;
    var$2[17] = 7;
    var$2[18] = 8;
    var$2[19] = 8;
    var$2[20] = 9;
    var$2[21] = 9;
    var$2[22] = 10;
    var$2[23] = 10;
    var$2[24] = 11;
    var$2[25] = 11;
    var$2[26] = 12;
    var$2[27] = 12;
    var$2[28] = 13;
    var$2[29] = 13;
    cjj_InfTree_cpdext = var$1;
}
function i_UI$lambda$setup$7$lambda$_12_0() {
    jl_Object.call(this);
}
function i_UI$lambda$setup$7$lambda$_12_0__init_() {
    var var_0 = new i_UI$lambda$setup$7$lambda$_12_0();
    i_UI$lambda$setup$7$lambda$_12_0__init_0(var_0);
    return var_0;
}
function i_UI$lambda$setup$7$lambda$_12_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function i_UI$lambda$setup$7$lambda$_12_0_get(var$0, var$1) {
    i_UI$lambda$setup$7$lambda$_12_0_get0(var$0, var$1);
}
function i_UI$lambda$setup$7$lambda$_12_0_get0(var$0, var$1) {
    i_UI_lambda$null$6(var$1);
}
function otcit_FloatAnalyzer$Result() {
    var a = this; jl_Object.call(a);
    a.$mantissa = 0;
    a.$exponent = 0;
    a.$sign = 0;
}
function otcit_FloatAnalyzer$Result__init_() {
    var var_0 = new otcit_FloatAnalyzer$Result();
    otcit_FloatAnalyzer$Result__init_0(var_0);
    return var_0;
}
function otcit_FloatAnalyzer$Result__init_0($this) {
    jl_Object__init_0($this);
}
function jur_UCIDecomposedCharSet() {
    jur_DecomposedCharSet.call(this);
}
function jur_UCIDecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_UCIDecomposedCharSet();
    jur_UCIDecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_UCIDecomposedCharSet__init_0($this, $decomp, $decomposedCharLength) {
    jur_DecomposedCharSet__init_0($this, $decomp, $decomposedCharLength);
}
function iaamg_Intersector() {
    jl_Object.call(this);
}
var iaamg_Intersector_v0 = null;
var iaamg_Intersector_v1 = null;
var iaamg_Intersector_v2 = null;
var iaamg_Intersector_floatArray = null;
var iaamg_Intersector_floatArray2 = null;
var iaamg_Intersector_ip = null;
var iaamg_Intersector_ep1 = null;
var iaamg_Intersector_ep2 = null;
var iaamg_Intersector_s = null;
var iaamg_Intersector_e = null;
var iaamg_Intersector_p = null;
var iaamg_Intersector_i = null;
var iaamg_Intersector_dir = null;
var iaamg_Intersector_start = null;
var iaamg_Intersector_best = null;
var iaamg_Intersector_tmp = null;
var iaamg_Intersector_tmp1 = null;
var iaamg_Intersector_tmp2 = null;
var iaamg_Intersector_tmp3 = null;
var iaamg_Intersector_v2tmp = null;
var iaamg_Intersector_intersection = null;
function iaamg_Intersector_$callClinit() {
    iaamg_Intersector_$callClinit = $rt_eraseClinit(iaamg_Intersector);
    iaamg_Intersector__clinit_();
}
function iaamg_Intersector_intersectSegmentRectangle($startX, $startY, $endX, $endY, $rectangle) {
    var $rectangleEndX, $rectangleEndY;
    iaamg_Intersector_$callClinit();
    $rectangleEndX = $rectangle.$x1 + $rectangle.$width0;
    $rectangleEndY = $rectangle.$y1 + $rectangle.$height0;
    if (iaamg_Intersector_intersectSegments($startX, $startY, $endX, $endY, $rectangle.$x1, $rectangle.$y1, $rectangle.$x1, $rectangleEndY, null))
        return 1;
    if (iaamg_Intersector_intersectSegments($startX, $startY, $endX, $endY, $rectangle.$x1, $rectangle.$y1, $rectangleEndX, $rectangle.$y1, null))
        return 1;
    if (iaamg_Intersector_intersectSegments($startX, $startY, $endX, $endY, $rectangleEndX, $rectangle.$y1, $rectangleEndX, $rectangleEndY, null))
        return 1;
    if (!iaamg_Intersector_intersectSegments($startX, $startY, $endX, $endY, $rectangle.$x1, $rectangleEndY, $rectangleEndX, $rectangleEndY, null))
        return $rectangle.$contains2($startX, $startY);
    return 1;
}
function iaamg_Intersector_intersectSegments($x1, $y1, $x2, $y2, $x3, $y3, $x4, $y4, $intersection) {
    var var$10, var$11, var$12, var$13, var$14, $d, $yd, $xd, $ua, $ub;
    iaamg_Intersector_$callClinit();
    var$10 = $y4 - $y3;
    var$11 = $x2 - $x1;
    var$12 = var$10 * var$11;
    var$13 = $x4 - $x3;
    var$14 = $y2 - $y1;
    $d = var$12 - var$13 * var$14;
    if ($d === 0.0)
        return 0;
    $yd = $y1 - $y3;
    $xd = $x1 - $x3;
    $ua = (var$13 * $yd - var$10 * $xd) / $d;
    if ($ua >= 0.0 && $ua <= 1.0) {
        $ub = (var$11 * $yd - var$14 * $xd) / $d;
        if ($ub >= 0.0 && $ub <= 1.0) {
            if ($intersection !== null)
                $intersection.$set2($x1 + var$11 * $ua, $y1 + var$14 * $ua);
            return 1;
        }
        return 0;
    }
    return 0;
}
function iaamg_Intersector_overlaps($c, $r) {
    var $closestX, $closestY, var$5, var$6;
    iaamg_Intersector_$callClinit();
    $closestX = $c.$x12;
    $closestY = $c.$y11;
    if ($c.$x12 < $r.$x1)
        $closestX = $r.$x1;
    else if ($c.$x12 > $r.$x1 + $r.$width0)
        $closestX = $r.$x1 + $r.$width0;
    if ($c.$y11 < $r.$y1)
        $closestY = $r.$y1;
    else if ($c.$y11 > $r.$y1 + $r.$height0)
        $closestY = $r.$y1 + $r.$height0;
    var$5 = $closestX - $c.$x12;
    var$5 = var$5 * var$5;
    var$6 = $closestY - $c.$y11;
    var$6 = var$6 * var$6;
    return var$5 + var$6 >= $c.$radius * $c.$radius ? 0 : 1;
}
function iaamg_Intersector__clinit_() {
    iaamg_Intersector_v0 = iaamg_Vector3__init_0();
    iaamg_Intersector_v1 = iaamg_Vector3__init_0();
    iaamg_Intersector_v2 = iaamg_Vector3__init_0();
    iaamg_Intersector_floatArray = iaac_FloatArray__init_();
    iaamg_Intersector_floatArray2 = iaac_FloatArray__init_();
    iaamg_Intersector_ip = iaamg_Vector2__init_0();
    iaamg_Intersector_ep1 = iaamg_Vector2__init_0();
    iaamg_Intersector_ep2 = iaamg_Vector2__init_0();
    iaamg_Intersector_s = iaamg_Vector2__init_0();
    iaamg_Intersector_e = iaamg_Vector2__init_0();
    iaamg_Intersector_p = iaamg_Plane__init_(iaamg_Vector3__init_0(), 0.0);
    iaamg_Intersector_i = iaamg_Vector3__init_0();
    iaamg_Intersector_dir = iaamg_Vector3__init_0();
    iaamg_Intersector_start = iaamg_Vector3__init_0();
    iaamg_Intersector_best = iaamg_Vector3__init_0();
    iaamg_Intersector_tmp = iaamg_Vector3__init_0();
    iaamg_Intersector_tmp1 = iaamg_Vector3__init_0();
    iaamg_Intersector_tmp2 = iaamg_Vector3__init_0();
    iaamg_Intersector_tmp3 = iaamg_Vector3__init_0();
    iaamg_Intersector_v2tmp = iaamg_Vector2__init_0();
    iaamg_Intersector_intersection = iaamg_Vector3__init_0();
}
function iaagg_TextureAtlas$_clinit_$lambda$_33_0() {
    jl_Object.call(this);
}
function iaagg_TextureAtlas$_clinit_$lambda$_33_0__init_() {
    var var_0 = new iaagg_TextureAtlas$_clinit_$lambda$_33_0();
    iaagg_TextureAtlas$_clinit_$lambda$_33_0__init_0(var_0);
    return var_0;
}
function iaagg_TextureAtlas$_clinit_$lambda$_33_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaagg_TextureAtlas$_clinit_$lambda$_33_0_compare(var$0, var$1, var$2) {
    return iaagg_TextureAtlas$_clinit_$lambda$_33_0_compare0(var$0, var$1, var$2);
}
function iaagg_TextureAtlas$_clinit_$lambda$_33_0_compare0(var$0, var$1, var$2) {
    return iaagg_TextureAtlas_lambda$static$0(var$1, var$2);
}
function otjj_JSON() {
    jl_Object.call(this);
}
function it_Phases$3$lambda$null$12$lambda$_20_1() {
    jl_Object.call(this);
    this.$_0118 = 0.0;
}
function it_Phases$3$lambda$null$12$lambda$_20_1__init_(var_0) {
    var var_1 = new it_Phases$3$lambda$null$12$lambda$_20_1();
    it_Phases$3$lambda$null$12$lambda$_20_1__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$3$lambda$null$12$lambda$_20_1__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0118 = var$1;
}
function it_Phases$3$lambda$null$12$lambda$_20_1_run(var$0) {
    it_Phases$3_lambda$null$11(var$0.$_0118);
}
function it_Phases$3$lambda$null$12$lambda$_20_0() {
    jl_Object.call(this);
    this.$_0119 = 0.0;
}
function it_Phases$3$lambda$null$12$lambda$_20_0__init_(var_0) {
    var var_1 = new it_Phases$3$lambda$null$12$lambda$_20_0();
    it_Phases$3$lambda$null$12$lambda$_20_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$3$lambda$null$12$lambda$_20_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0119 = var$1;
}
function it_Phases$3$lambda$null$12$lambda$_20_0_run(var$0) {
    it_Phases$3_lambda$null$9(var$0.$_0119);
}
function jur_AbstractCharClass$LazyJavaWhitespace$1() {
    jur_AbstractCharClass.call(this);
    this.$this$030 = null;
}
function jur_AbstractCharClass$LazyJavaWhitespace$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaWhitespace$1();
    jur_AbstractCharClass$LazyJavaWhitespace$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaWhitespace$1__init_0($this, $this$0) {
    $this.$this$030 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaWhitespace$1_contains($this, $ch) {
    return jl_Character_isWhitespace0($ch);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function it_Phases$lambda$static$11$lambda$_56_0() {
    var a = this; jl_Object.call(a);
    a.$_0120 = 0;
    a.$_149 = 0.0;
}
function it_Phases$lambda$static$11$lambda$_56_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$lambda$static$11$lambda$_56_0();
    it_Phases$lambda$static$11$lambda$_56_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$lambda$static$11$lambda$_56_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_0120 = var$1;
    var$0.$_149 = var$2;
}
function it_Phases$lambda$static$11$lambda$_56_0_get(var$0, var$1) {
    it_Phases_lambda$null$10(var$0.$_0120, var$0.$_149, var$1);
}
function it_Phases$lambda$static$27$lambda$_40_0() {
    jl_Object.call(this);
    this.$_0121 = 0.0;
}
function it_Phases$lambda$static$27$lambda$_40_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$static$27$lambda$_40_0();
    it_Phases$lambda$static$27$lambda$_40_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$static$27$lambda$_40_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0121 = var$1;
}
function it_Phases$lambda$static$27$lambda$_40_0_get(var$0, var$1) {
    it_Phases_lambda$null$26(var$0.$_0121, var$1);
}
function otjt_Uint8Array() {
    otjt_ArrayBufferView.call(this);
}
function jl_Long() {
    jl_Number.call(this);
    this.$value8 = Long_ZERO;
}
var jl_Long_TYPE = null;
function jl_Long_$callClinit() {
    jl_Long_$callClinit = $rt_eraseClinit(jl_Long);
    jl_Long__clinit_();
}
function jl_Long__init_(var_0) {
    var var_1 = new jl_Long();
    jl_Long__init_0(var_1, var_0);
    return var_1;
}
function jl_Long__init_0($this, $value) {
    jl_Long_$callClinit();
    jl_Number__init_0($this);
    $this.$value8 = $value;
}
function jl_Long_valueOf($value) {
    jl_Long_$callClinit();
    return jl_Long__init_($value);
}
function jl_Long_parseLong0($s, $radix) {
    var $negative, $index, $value, var$6, $digit;
    jl_Long_$callClinit();
    if ($radix >= 2 && $radix <= 36) {
        if ($s !== null && !$s.$isEmpty()) {
            a: {
                $negative = 0;
                $index = 0;
                switch ($s.$charAt(0)) {
                    case 43:
                        $index = 1;
                        break a;
                    case 45:
                        $negative = 1;
                        $index = 1;
                        break a;
                    default:
                }
            }
            $value = Long_ZERO;
            while ($index < $s.$length()) {
                var$6 = $index + 1 | 0;
                $digit = jl_Character_getNumericValue($s.$charAt($index));
                if ($digit < 0)
                    $rt_throw(jl_NumberFormatException__init_0(jl_StringBuilder__init_().$append($rt_s(14)).$append($s).$toString()));
                if ($digit >= $radix)
                    $rt_throw(jl_NumberFormatException__init_0(jl_StringBuilder__init_().$append($rt_s(15)).$append3($radix).$append($rt_s(16)).$append($s).$toString()));
                $value = Long_add(Long_mul(Long_fromInt($radix), $value), Long_fromInt($digit));
                if (Long_lt($value, Long_ZERO)) {
                    if (var$6 == $s.$length() && Long_eq($value, new Long(0, 2147483648)) && $negative)
                        return new Long(0, 2147483648);
                    $rt_throw(jl_NumberFormatException__init_0(jl_StringBuilder__init_().$append($rt_s(17)).$append($s).$toString()));
                }
                $index = var$6;
            }
            if ($negative)
                $value = Long_neg($value);
            return $value;
        }
        $rt_throw(jl_NumberFormatException__init_0($rt_s(18)));
    }
    $rt_throw(jl_NumberFormatException__init_0(jl_StringBuilder__init_().$append($rt_s(19)).$append3($radix).$toString()));
}
function jl_Long_parseLong($s) {
    jl_Long_$callClinit();
    return jl_Long_parseLong0($s, 10);
}
function jl_Long__clinit_() {
    jl_Long_TYPE = $rt_cls($rt_longcls());
}
function jur_SequenceSet$IntHash() {
    var a = this; jl_Object.call(a);
    a.$table5 = null;
    a.$values9 = null;
    a.$mask3 = 0;
    a.$size13 = 0;
}
function jur_SequenceSet$IntHash__init_(var_0) {
    var var_1 = new jur_SequenceSet$IntHash();
    jur_SequenceSet$IntHash__init_0(var_1, var_0);
    return var_1;
}
function jur_SequenceSet$IntHash__init_0($this, $size) {
    jl_Object__init_0($this);
    while ($size >= $this.$mask3) {
        $this.$mask3 = $this.$mask3 << 1 | 1;
    }
    $this.$mask3 = $this.$mask3 << 1 | 1;
    $this.$table5 = $rt_createIntArray($this.$mask3 + 1 | 0);
    $this.$values9 = $rt_createIntArray($this.$mask3 + 1 | 0);
    $this.$size13 = $size;
}
function jur_SequenceSet$IntHash_put($this, $key, $value) {
    var $i, $hashCode, var$5;
    $i = 0;
    $hashCode = $key & $this.$mask3;
    while ($this.$table5.data[$hashCode] && $this.$table5.data[$hashCode] != $key) {
        var$5 = $i + 1 | 0;
        $i = var$5 & $this.$mask3;
        var$5 = $hashCode + $i | 0;
        $hashCode = var$5 & $this.$mask3;
    }
    $this.$table5.data[$hashCode] = $key;
    $this.$values9.data[$hashCode] = $value;
}
function jur_SequenceSet$IntHash_get($this, $key) {
    var $hashCode, $i, $storedKey, var$5;
    $hashCode = $key & $this.$mask3;
    $i = 0;
    while (true) {
        $storedKey = $this.$table5.data[$hashCode];
        if (!$storedKey)
            break;
        if ($storedKey == $key)
            return $this.$values9.data[$hashCode];
        var$5 = $i + 1 | 0;
        $i = var$5 & $this.$mask3;
        var$5 = $hashCode + $i | 0;
        $hashCode = var$5 & $this.$mask3;
    }
    return $this.$size13;
}
function ig_Effects() {
    jl_Object.call(this);
}
var ig_Effects_container = null;
var ig_Effects_shakeFalloff = 0.0;
function ig_Effects_$callClinit() {
    ig_Effects_$callClinit = $rt_eraseClinit(ig_Effects);
    ig_Effects__clinit_();
}
function ig_Effects_renderEffect($id, $render, $color, $life, $rotation, $x, $y, $data) {
    ig_Effects_$callClinit();
    ig_Drawf_z($y - 10.0);
    ig_Effects_container.$set25($id, $color, $life, $render.$lifetime, $rotation, $x, $y, $data);
    $render.$draw4.$get5(ig_Effects_container);
    iaagg_Draw_reset();
}
function ig_Effects_effect1($effect, $x, $y, $rotation) {
    ig_Effects_$callClinit();
    iaag_Color_$callClinit();
    ig_Effects_effect3($effect, iaag_Color_white, $x, $y, $rotation, null);
}
function ig_Effects_effect($effect, $x, $y) {
    ig_Effects_$callClinit();
    ig_Effects_effect1($effect, $x, $y, 0.0);
}
function ig_Effects_effect0($effect, $color, $x, $y, $rotation) {
    ig_Effects_$callClinit();
    ig_Effects_effect3($effect, $color, $x, $y, $rotation, null);
}
function ig_Effects_effect3($effect, $color, $x, $y, $rotation, $data) {
    var $entity;
    ig_Effects_$callClinit();
    $entity = iaaup_Pools_obtain($rt_cls(it_EffectEntity), ig_Effects$effect$lambda$_7_0__init_());
    $entity.$effect5 = $effect;
    $entity.$color17.$set($color);
    $entity.$set5($x, $y);
    $entity.$rotation4 = $rotation;
    $entity.$data4 = $data;
    $entity.$add15();
}
function ig_Effects_effect2($effect, $x, $y, $rotation, $data) {
    ig_Effects_$callClinit();
    iaag_Color_$callClinit();
    ig_Effects_effect3($effect, iaag_Color_white, $x, $y, $rotation, $data);
}
function ig_Effects__clinit_() {
    ig_Effects_container = ig_Effects$EffectContainer__init_();
    ig_Effects_shakeFalloff = 1000.0;
}
function jur_AbstractCharClass$LazyJavaLowerCase() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaLowerCase__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLowerCase();
    jur_AbstractCharClass$LazyJavaLowerCase__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLowerCase__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaLowerCase_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLowerCase$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function it_Phases$5$lambda$null$14$lambda$_8_0() {
    var a = this; jl_Object.call(a);
    a.$_0122 = 0;
    a.$_150 = 0.0;
}
function it_Phases$5$lambda$null$14$lambda$_8_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$5$lambda$null$14$lambda$_8_0();
    it_Phases$5$lambda$null$14$lambda$_8_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$5$lambda$null$14$lambda$_8_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_0122 = var$1;
    var$0.$_150 = var$2;
}
function it_Phases$5$lambda$null$14$lambda$_8_0_run(var$0) {
    it_Phases$5_lambda$null$13(var$0.$_0122, var$0.$_150);
}
function iaagg_IndexArray() {
    var a = this; jl_Object.call(a);
    a.$buffer8 = null;
    a.$bufferHandle4 = 0;
    a.$isDirect2 = 0;
    a.$isDirty4 = 0;
    a.$isBound4 = 0;
    a.$usage5 = 0;
}
function iaagg_IndexArray__init_(var_0) {
    var var_1 = new iaagg_IndexArray();
    iaagg_IndexArray__init_0(var_1, var_0);
    return var_1;
}
function iaagg_IndexArray__init_0($this, $maxIndices) {
    jl_Object__init_0($this);
    $this.$isDirty4 = 1;
    $this.$isBound4 = 0;
    $this.$isDirect2 = 1;
    $this.$buffer8 = iaau_BufferUtils_newShortBuffer($maxIndices);
    $this.$buffer8.$flip();
    iaa_Core_$callClinit();
    $this.$bufferHandle4 = iaa_Core_gl20.$glGenBuffer();
    $this.$usage5 = 35044;
}
function iaagg_IndexArray_getNumIndices($this) {
    return jn_Buffer_limit($this.$buffer8);
}
function iaagg_IndexArray_getNumMaxIndices($this) {
    return jn_Buffer_capacity($this.$buffer8);
}
function iaagg_IndexArray_setIndices($this, $indices, $offset, $count) {
    $this.$isDirty4 = 1;
    $this.$buffer8.$clear2();
    $this.$buffer8.$put9($indices, $offset, $count);
    $this.$buffer8.$flip();
    if ($this.$isBound4) {
        iaa_Core_$callClinit();
        iaa_Core_gl20.$glBufferData(34963, jn_Buffer_limit($this.$buffer8), $this.$buffer8, $this.$usage5);
        $this.$isDirty4 = 0;
    }
}
function iaagg_IndexArray_getBuffer($this) {
    $this.$isDirty4 = 1;
    return $this.$buffer8;
}
function iaagg_IndexArray_bind($this) {
    if (!$this.$bufferHandle4)
        $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1023)));
    iaa_Core_$callClinit();
    iaa_Core_gl20.$glBindBuffer(34963, $this.$bufferHandle4);
    if ($this.$isDirty4) {
        iaa_Core_gl20.$glBufferData(34963, jn_Buffer_limit($this.$buffer8), $this.$buffer8, $this.$usage5);
        $this.$isDirty4 = 0;
    }
    $this.$isBound4 = 1;
}
function iaagg_IndexArray_unbind($this) {
    iaa_Core_$callClinit();
    iaa_Core_gl20.$glBindBuffer(34963, 0);
    $this.$isBound4 = 0;
}
function iaagg_IndexArray_dispose($this) {
    var $gl;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    $gl.$glBindBuffer(34963, 0);
    $gl.$glDeleteBuffer($this.$bufferHandle4);
    $this.$bufferHandle4 = 0;
}
function iaag_GL20() {
}
function iaabt_TeaGL20() {
    var a = this; jl_Object.call(a);
    a.$programs = null;
    a.$nextProgramId = 0;
    a.$shaders = null;
    a.$nextShaderId = 0;
    a.$buffers = null;
    a.$nextBufferId = 0;
    a.$frameBuffers = null;
    a.$nextFrameBufferId = 0;
    a.$renderBuffers = null;
    a.$nextRenderBufferId = 0;
    a.$textures0 = null;
    a.$nextTextureId = 0;
    a.$uniforms0 = null;
    a.$nextUniformId = 0;
    a.$currProgram = 0;
    a.$floatBuffer = null;
    a.$intBuffer = null;
    a.$shortBuffer = null;
    a.$gl = null;
}
var iaabt_TeaGL20_window = null;
function iaabt_TeaGL20_$callClinit() {
    iaabt_TeaGL20_$callClinit = $rt_eraseClinit(iaabt_TeaGL20);
    iaabt_TeaGL20__clinit_();
}
function iaabt_TeaGL20__init_(var_0) {
    var var_1 = new iaabt_TeaGL20();
    iaabt_TeaGL20__init_0(var_1, var_0);
    return var_1;
}
function iaabt_TeaGL20__init_0($this, $gl) {
    iaabt_TeaGL20_$callClinit();
    jl_Object__init_0($this);
    $this.$programs = iaac_IntMap__init_();
    $this.$nextProgramId = 1;
    $this.$shaders = iaac_IntMap__init_();
    $this.$nextShaderId = 1;
    $this.$buffers = iaac_IntMap__init_();
    $this.$nextBufferId = 1;
    $this.$frameBuffers = iaac_IntMap__init_();
    $this.$nextFrameBufferId = 1;
    $this.$renderBuffers = iaac_IntMap__init_();
    $this.$nextRenderBufferId = 1;
    $this.$textures0 = iaac_IntMap__init_();
    $this.$nextTextureId = 1;
    $this.$uniforms0 = iaac_IntMap__init_();
    $this.$nextUniformId = 1;
    $this.$currProgram = 0;
    $this.$floatBuffer = new Float32Array(40000);
    $this.$intBuffer = new Int32Array(12000);
    $this.$shortBuffer = new Int16Array(12000);
    $this.$gl = iaabt_TeaGL20_wrapContext$js_body$_1($gl);
    $this.$gl.pixelStorei(37441, 0);
}
function iaabt_TeaGL20_copy($this, $buffer) {
    var var$2, $result, $tmp, $i, var$6, var$7;
    var$2 = $buffer.$duplicate1();
    $result = new Float32Array(jn_Buffer_remaining(var$2));
    if (jn_FloatBuffer_hasArray(var$2))
        $tmp = jn_FloatBuffer_array(var$2);
    else {
        $tmp = $rt_createFloatArray(jn_Buffer_remaining(var$2));
        var$2.$get61($tmp);
    }
    $i = 0;
    while (true) {
        var$6 = $tmp.data;
        if ($i >= var$6.length)
            break;
        var$7 = var$6[$i];
        $result[$i] = var$7;
        $i = $i + 1 | 0;
    }
    return $result;
}
function iaabt_TeaGL20_copy0($this, $buffer) {
    var var$2, $result, $tmp, $i, var$6, var$7;
    var$2 = $buffer.$duplicate2();
    $result = new Float64Array(jn_Buffer_remaining(var$2));
    if (jn_DoubleBuffer_hasArray(var$2))
        $tmp = jn_DoubleBuffer_array(var$2);
    else {
        $tmp = $rt_createDoubleArray(jn_Buffer_remaining(var$2));
        var$2.$get62($tmp);
    }
    $i = 0;
    while (true) {
        var$6 = $tmp.data;
        if ($i >= var$6.length)
            break;
        var$7 = var$6[$i];
        $result[$i] = var$7;
        $i = $i + 1 | 0;
    }
    return $result;
}
function iaabt_TeaGL20_copy1($this, $buffer) {
    var var$2, $result, $tmp, $i, var$6, var$7;
    var$2 = $buffer.$duplicate3();
    $result = new Int16Array(jn_Buffer_remaining(var$2));
    if (jn_ShortBuffer_hasArray(var$2))
        $tmp = jn_ShortBuffer_array(var$2);
    else {
        $tmp = $rt_createShortArray(jn_Buffer_remaining(var$2));
        var$2.$get63($tmp);
    }
    $i = 0;
    while (true) {
        var$6 = $tmp.data;
        if ($i >= var$6.length)
            break;
        var$7 = var$6[$i];
        $result[$i] = var$7;
        $i = $i + 1 | 0;
    }
    return $result;
}
function iaabt_TeaGL20_copy2($this, $buffer) {
    var var$2, $result, $tmp, $i, var$6, var$7;
    var$2 = $buffer.$duplicate4();
    $result = new Int32Array(jn_Buffer_remaining(var$2));
    if (jn_IntBuffer_hasArray(var$2))
        $tmp = jn_IntBuffer_array(var$2);
    else {
        $tmp = $rt_createIntArray(jn_Buffer_remaining(var$2));
        var$2.$get64($tmp);
    }
    $i = 0;
    while (true) {
        var$6 = $tmp.data;
        if ($i >= var$6.length)
            break;
        var$7 = var$6[$i];
        $result[$i] = var$7;
        $i = $i + 1 | 0;
    }
    return $result;
}
function iaabt_TeaGL20_copy3($this, $buffer) {
    var var$2, $result, $tmp, $i, var$6, var$7;
    var$2 = $buffer.$duplicate5();
    $result = new Int8Array(jn_Buffer_remaining(var$2));
    if (var$2.$hasArray())
        $tmp = jn_ByteBuffer_array(var$2);
    else {
        $tmp = $rt_createByteArray(jn_Buffer_remaining(var$2));
        var$2.$get65($tmp);
    }
    $i = 0;
    while (true) {
        var$6 = $tmp.data;
        if ($i >= var$6.length)
            break;
        var$7 = var$6[$i];
        $result[$i] = var$7;
        $i = $i + 1 | 0;
    }
    return $result;
}
function iaabt_TeaGL20_copyU($this, $buffer) {
    var var$2, $result, $tmp, $i, var$6, var$7;
    var$2 = $buffer.$duplicate5();
    $result = new Uint8Array(jn_Buffer_remaining(var$2));
    if (var$2.$hasArray())
        $tmp = jn_ByteBuffer_array(var$2);
    else {
        $tmp = $rt_createByteArray(jn_Buffer_remaining(var$2));
        var$2.$get65($tmp);
    }
    $i = 0;
    while (true) {
        var$6 = $tmp.data;
        if ($i >= var$6.length)
            break;
        var$7 = var$6[$i] << 16 >> 16;
        $result[$i] = var$7;
        $i = $i + 1 | 0;
    }
    return $result;
}
function iaabt_TeaGL20_allocateUniformLocationId($this, $program, $location) {
    var $progUniforms, var$4;
    $progUniforms = $this.$uniforms0.$get($program);
    if ($progUniforms === null) {
        $progUniforms = iaac_IntMap__init_();
        $this.$uniforms0.$put11($program, $progUniforms);
    }
    var$4 = $this.$nextUniformId;
    $this.$nextUniformId = var$4 + 1 | 0;
    $progUniforms.$put11(var$4, $location);
    return var$4;
}
function iaabt_TeaGL20_getUniformLocation($this, $location) {
    return $this.$uniforms0.$get($this.$currProgram).$get($location);
}
function iaabt_TeaGL20_allocateShaderId($this, $shader) {
    var var$2;
    var$2 = $this.$nextShaderId;
    $this.$nextShaderId = var$2 + 1 | 0;
    $this.$shaders.$put11(var$2, $shader);
    return var$2;
}
function iaabt_TeaGL20_deallocateShaderId($this, $id) {
    $this.$shaders.$remove($id);
}
function iaabt_TeaGL20_allocateProgramId($this, $program) {
    var var$2;
    var$2 = $this.$nextProgramId;
    $this.$nextProgramId = var$2 + 1 | 0;
    $this.$programs.$put11(var$2, $program);
    return var$2;
}
function iaabt_TeaGL20_deallocateProgramId($this, $id) {
    $this.$uniforms0.$remove($id);
    $this.$programs.$remove($id);
}
function iaabt_TeaGL20_allocateBufferId($this, $buffer) {
    var var$2;
    var$2 = $this.$nextBufferId;
    $this.$nextBufferId = var$2 + 1 | 0;
    $this.$buffers.$put11(var$2, $buffer);
    return var$2;
}
function iaabt_TeaGL20_deallocateBufferId($this, $id) {
    $this.$buffers.$remove($id);
}
function iaabt_TeaGL20_allocateFrameBufferId($this, $frameBuffer) {
    var var$2;
    var$2 = $this.$nextBufferId;
    $this.$nextBufferId = var$2 + 1 | 0;
    $this.$frameBuffers.$put11(var$2, $frameBuffer);
    return var$2;
}
function iaabt_TeaGL20_deallocateFrameBufferId($this, $id) {
    $this.$frameBuffers.$remove($id);
}
function iaabt_TeaGL20_allocateRenderBufferId($this, $renderBuffer) {
    var var$2;
    var$2 = $this.$nextRenderBufferId;
    $this.$nextRenderBufferId = var$2 + 1 | 0;
    $this.$renderBuffers.$put11(var$2, $renderBuffer);
    return var$2;
}
function iaabt_TeaGL20_deallocateRenderBufferId($this, $id) {
    $this.$renderBuffers.$remove($id);
}
function iaabt_TeaGL20_allocateTextureId($this, $texture) {
    var var$2;
    var$2 = $this.$nextTextureId;
    $this.$nextTextureId = var$2 + 1 | 0;
    $this.$textures0.$put11(var$2, $texture);
    return var$2;
}
function iaabt_TeaGL20_deallocateTextureId($this, $id) {
    $this.$textures0.$remove($id);
}
function iaabt_TeaGL20_glActiveTexture($this, $texture) {
    $this.$gl.activeTexture($texture);
}
function iaabt_TeaGL20_glBindTexture($this, $target, $texture) {
    var var$3, var$4;
    var$3 = $this.$gl;
    var$4 = $this.$textures0.$get($texture);
    var$3.bindTexture($target, var$4);
}
function iaabt_TeaGL20_glBlendFunc($this, $sfactor, $dfactor) {
    $this.$gl.blendFunc($sfactor, $dfactor);
}
function iaabt_TeaGL20_glClear($this, $mask) {
    $this.$gl.clear($mask);
}
function iaabt_TeaGL20_glClearColor($this, $red, $green, $blue, $alpha) {
    $this.$gl.clearColor($red, $green, $blue, $alpha);
}
function iaabt_TeaGL20_glDeleteTexture($this, $id) {
    var $texture;
    $texture = $this.$textures0.$get($id);
    iaabt_TeaGL20_deallocateTextureId($this, $id);
    $this.$gl.deleteTexture($texture);
}
function iaabt_TeaGL20_glDepthMask($this, $flag) {
    $this.$gl.depthMask(!!$flag);
}
function iaabt_TeaGL20_glDisable($this, $cap) {
    $this.$gl.disable($cap);
}
function iaabt_TeaGL20_glDrawArrays($this, $mode, $first, $count) {
    $this.$gl.drawArrays($mode, $first, $count);
}
function iaabt_TeaGL20_glDrawElements($this, $mode, $count, $type, $indices) {
    var var$5, var$6;
    var$5 = $this.$gl;
    var$6 = jn_Buffer_position($indices);
    var$5.drawElements($mode, $count, $type, var$6);
}
function iaabt_TeaGL20_glEnable($this, $cap) {
    $this.$gl.enable($cap);
}
function iaabt_TeaGL20_glGenTexture($this) {
    var $texture;
    $texture = $this.$gl.createTexture();
    return iaabt_TeaGL20_allocateTextureId($this, $texture);
}
function iaabt_TeaGL20_glGetIntegerv($this, $pname, $params) {
    a: {
        if ($pname == 34016)
            break a;
        if ($pname == 3413)
            break a;
        if ($pname == 32970)
            break a;
        if ($pname == 32968)
            break a;
        if ($pname == 34877)
            break a;
        if ($pname == 32777)
            break a;
        if ($pname == 32971)
            break a;
        if ($pname == 32969)
            break a;
        if ($pname == 3412)
            break a;
        if ($pname == 2885)
            break a;
        if ($pname == 3414)
            break a;
        if ($pname == 2932)
            break a;
        if ($pname == 2886)
            break a;
        if ($pname == 33170)
            break a;
        if ($pname == 3411)
            break a;
        if ($pname == 35739)
            break a;
        if ($pname == 35738)
            break a;
        if ($pname == 35661)
            break a;
        if ($pname == 34076)
            break a;
        if ($pname == 36349)
            break a;
        if ($pname == 34024)
            break a;
        if ($pname == 34930)
            break a;
        if ($pname == 3379)
            break a;
        if ($pname == 36348)
            break a;
        if ($pname == 34921)
            break a;
        if ($pname == 35660)
            break a;
        if ($pname == 36347)
            break a;
        if ($pname == 34466)
            break a;
        if ($pname == 3333)
            break a;
        if ($pname == 3410)
            break a;
        if ($pname == 32936)
            break a;
        if ($pname == 32937)
            break a;
        if ($pname == 34817)
            break a;
        if ($pname == 34816)
            break a;
        if ($pname == 34818)
            break a;
        if ($pname == 34819)
            break a;
        if ($pname == 36003)
            break a;
        if ($pname == 36004)
            break a;
        if ($pname == 36005)
            break a;
        if ($pname == 3415)
            break a;
        if ($pname == 2961)
            break a;
        if ($pname == 2964)
            break a;
        if ($pname == 2962)
            break a;
        if ($pname == 2965)
            break a;
        if ($pname == 2966)
            break a;
        if ($pname == 2967)
            break a;
        if ($pname == 2963)
            break a;
        if ($pname == 2968)
            break a;
        if ($pname == 3408)
            break a;
        if ($pname == 3317)
            break a;
        $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1251)));
    }
    $params.$put6(0, $this.$gl.getParameter($pname));
}
function iaabt_TeaGL20_glGetString($this, $name) {
    return $rt_str($this.$gl.getParameter($name));
}
function iaabt_TeaGL20_glPixelStorei($this, $pname, $param) {
    $this.$gl.pixelStorei($pname, $param);
}
function iaabt_TeaGL20_glScissor($this, $x, $y, $width, $height) {
    $this.$gl.scissor($x, $y, $width, $height);
}
function iaabt_TeaGL20_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) {
    var var$10, var$11, var$12, var$13, var$14;
    if ($pixels === null) {
        var$10 = $this.$gl;
        var$11 = null;
        var$10.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, var$11);
    } else if ($pixels instanceof jn_ByteBuffer) {
        var$10 = $this.$gl;
        var$12 = $pixels;
        var$11 = $this.$copyU(var$12);
        var$10.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, var$11);
    } else if ($pixels instanceof jn_ShortBuffer) {
        var$10 = $this.$gl;
        var$12 = $pixels;
        var$11 = $this.$copy0(var$12);
        var$10.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, var$11);
    } else if ($pixels instanceof jn_IntBuffer) {
        var$13 = $this.$gl;
        var$12 = $pixels;
        var$14 = $this.$copy1(var$12);
        var$13.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, var$14);
    } else if ($pixels instanceof jn_FloatBuffer) {
        var$13 = $this.$gl;
        var$12 = $pixels;
        var$14 = $this.$copy2(var$12);
        var$13.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, var$14);
    } else {
        if (!($pixels instanceof jn_DoubleBuffer))
            $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1252)));
        var$12 = $this.$gl;
        var$13 = $pixels;
        var$13 = $this.$copy3(var$13);
        var$12.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, var$13);
    }
}
function iaabt_TeaGL20_glViewport($this, $x, $y, $width, $height) {
    $this.$gl.viewport($x, $y, $width, $height);
}
function iaabt_TeaGL20_glAttachShader($this, $program, $shader) {
    var $glProgram, $glShader;
    $glProgram = $this.$programs.$get($program);
    $glShader = $this.$shaders.$get($shader);
    $this.$gl.attachShader($glProgram, $glShader);
}
function iaabt_TeaGL20_glBindBuffer($this, $target, $buffer) {
    var var$3, var$4;
    var$3 = $this.$gl;
    var$4 = $this.$buffers.$get($buffer);
    var$3.bindBuffer($target, var$4);
}
function iaabt_TeaGL20_glBindFramebuffer($this, $target, $framebuffer) {
    var var$3, var$4;
    var$3 = $this.$gl;
    var$4 = $this.$frameBuffers.$get($framebuffer);
    var$3.bindFramebuffer($target, var$4);
}
function iaabt_TeaGL20_glBindRenderbuffer($this, $target, $renderbuffer) {
    var var$3, var$4;
    var$3 = $this.$gl;
    var$4 = $this.$renderBuffers.$get($renderbuffer);
    var$3.bindRenderbuffer($target, var$4);
}
function iaabt_TeaGL20_glBlendFuncSeparate($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) {
    $this.$gl.blendFuncSeparate($srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
}
function iaabt_TeaGL20_glBufferData($this, $target, $size, $data, $usage) {
    var var$5, var$6, var$7;
    if ($data instanceof jn_FloatBuffer) {
        var$5 = $this.$gl;
        var$6 = $this.$copy2($data);
        var$5.bufferData($target, var$6, $usage);
    } else if ($data instanceof jn_ShortBuffer) {
        var$5 = $this.$gl;
        var$6 = $this.$copy0($data);
        var$5.bufferData($target, var$6, $usage);
    } else if ($data instanceof jn_IntBuffer) {
        var$6 = $this.$gl;
        var$7 = $this.$copy1($data);
        var$6.bufferData($target, var$7, $usage);
    } else {
        if (!($data instanceof jn_ByteBuffer))
            $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1253)));
        var$5 = $this.$gl;
        var$6 = $this.$copy4($data);
        var$5.bufferData($target, var$6, $usage);
    }
}
function iaabt_TeaGL20_glBufferSubData($this, $target, $offset, $size, $data) {
    var var$5, var$6;
    if ($data instanceof jn_FloatBuffer) {
        var$5 = $this.$gl;
        var$6 = $this.$copy2($data);
        var$5.bufferSubData($target, $offset, var$6);
    } else if ($data instanceof jn_ShortBuffer) {
        var$5 = $this.$gl;
        var$6 = $this.$copy0($data);
        var$5.bufferSubData($target, $offset, var$6);
    } else if ($data instanceof jn_IntBuffer) {
        var$5 = $this.$gl;
        var$6 = $this.$copy1($data);
        var$5.bufferSubData($target, $offset, var$6);
    } else {
        if (!($data instanceof jn_ByteBuffer))
            $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1253)));
        var$5 = $this.$gl;
        var$6 = $this.$copy4($data);
        var$5.bufferSubData($target, $offset, var$6);
    }
}
function iaabt_TeaGL20_glCheckFramebufferStatus($this, $target) {
    return $this.$gl.checkFramebufferStatus($target);
}
function iaabt_TeaGL20_glCompileShader($this, $shader) {
    var $glShader;
    $glShader = $this.$shaders.$get($shader);
    $this.$gl.compileShader($glShader);
}
function iaabt_TeaGL20_glCreateProgram($this) {
    var $program;
    $program = $this.$gl.createProgram();
    return iaabt_TeaGL20_allocateProgramId($this, $program);
}
function iaabt_TeaGL20_glCreateShader($this, $type) {
    var $shader;
    $shader = $this.$gl.createShader($type);
    return iaabt_TeaGL20_allocateShaderId($this, $shader);
}
function iaabt_TeaGL20_glDeleteBuffer($this, $id) {
    var $buffer;
    $buffer = $this.$buffers.$get($id);
    iaabt_TeaGL20_deallocateBufferId($this, $id);
    $this.$gl.deleteBuffer($buffer);
}
function iaabt_TeaGL20_glDeleteFramebuffer($this, $id) {
    var $fb;
    $fb = $this.$frameBuffers.$get($id);
    iaabt_TeaGL20_deallocateFrameBufferId($this, $id);
    $this.$gl.deleteFramebuffer($fb);
}
function iaabt_TeaGL20_glDeleteProgram($this, $program) {
    var $prog;
    $prog = $this.$programs.$get($program);
    iaabt_TeaGL20_deallocateProgramId($this, $program);
    $this.$gl.deleteProgram($prog);
}
function iaabt_TeaGL20_glDeleteRenderbuffer($this, $id) {
    var $rb;
    $rb = $this.$renderBuffers.$get($id);
    iaabt_TeaGL20_deallocateRenderBufferId($this, $id);
    $this.$gl.deleteRenderbuffer($rb);
}
function iaabt_TeaGL20_glDeleteShader($this, $shader) {
    var $sh;
    $sh = $this.$shaders.$get($shader);
    iaabt_TeaGL20_deallocateShaderId($this, $shader);
    $this.$gl.deleteShader($sh);
}
function iaabt_TeaGL20_glDisableVertexAttribArray($this, $index) {
    $this.$gl.disableVertexAttribArray($index);
}
function iaabt_TeaGL20_glDrawElements0($this, $mode, $count, $type, $indices) {
    $this.$gl.drawElements($mode, $count, $type, $indices);
}
function iaabt_TeaGL20_glEnableVertexAttribArray($this, $index) {
    $this.$gl.enableVertexAttribArray($index);
}
function iaabt_TeaGL20_glFramebufferRenderbuffer($this, $target, $attachment, $renderbuffertarget, $renderbuffer) {
    var var$5, var$6;
    var$5 = $this.$gl;
    var$6 = $this.$renderBuffers.$get($renderbuffer);
    var$5.framebufferRenderbuffer($target, $attachment, $renderbuffertarget, var$6);
}
function iaabt_TeaGL20_glFramebufferTexture2D($this, $target, $attachment, $textarget, $texture, $level) {
    var var$6, var$7;
    var$6 = $this.$gl;
    var$7 = $this.$textures0.$get($texture);
    var$6.framebufferTexture2D($target, $attachment, $textarget, var$7, $level);
}
function iaabt_TeaGL20_glGenBuffer($this) {
    var $buffer;
    $buffer = $this.$gl.createBuffer();
    return iaabt_TeaGL20_allocateBufferId($this, $buffer);
}
function iaabt_TeaGL20_glGenerateMipmap($this, $target) {
    $this.$gl.generateMipmap($target);
}
function iaabt_TeaGL20_glGenFramebuffer($this) {
    var $fb;
    $fb = $this.$gl.createFramebuffer();
    return iaabt_TeaGL20_allocateFrameBufferId($this, $fb);
}
function iaabt_TeaGL20_glGenRenderbuffer($this) {
    var $rb;
    $rb = $this.$gl.createRenderbuffer();
    return iaabt_TeaGL20_allocateRenderBufferId($this, $rb);
}
function iaabt_TeaGL20_glGetActiveAttrib($this, $program, $index, $size, $type) {
    var var$5, var$6, $activeAttrib;
    var$5 = $this.$gl;
    var$6 = $this.$programs.$get($program);
    $activeAttrib = var$5.getActiveAttrib(var$6, $index);
    $size.$put10($activeAttrib.size);
    $type.$put10($activeAttrib.type);
    return $rt_str($activeAttrib.name);
}
function iaabt_TeaGL20_glGetActiveUniform($this, $program, $index, $size, $type) {
    var var$5, var$6, $activeUniform;
    var$5 = $this.$gl;
    var$6 = $this.$programs.$get($program);
    $activeUniform = var$5.getActiveUniform(var$6, $index);
    $size.$put10($activeUniform.size);
    $type.$put10($activeUniform.type);
    return $rt_str($activeUniform.name);
}
function iaabt_TeaGL20_glGetAttribLocation($this, $program, $name) {
    var $prog;
    $prog = $this.$programs.$get($program);
    return $this.$gl.getAttribLocation($prog, $rt_ustr($name));
}
function iaabt_TeaGL20_glGetProgramiv($this, $program, $pname, $params) {
    var var$4, var$5, var$6, var$7, $result;
    if ($pname != 35712 && $pname != 35714 && $pname != 35715) {
        var$4 = $this.$gl;
        var$5 = $this.$programs.$get($program);
        $params.$put10(var$4.getProgramParameter(var$5, $pname));
    } else {
        var$6 = $this.$gl;
        var$7 = $this.$programs.$get($program);
        $result = var$6.getProgramParameter(var$7, $pname) ? 1 : 0;
        $params.$put10(!$result ? 0 : 1);
    }
}
function iaabt_TeaGL20_glGetProgramInfoLog($this, $program) {
    var var$2, var$3;
    var$2 = $this.$gl;
    var$3 = $this.$programs.$get($program);
    return $rt_str(var$2.getProgramInfoLog(var$3));
}
function iaabt_TeaGL20_glGetShaderiv($this, $shader, $pname, $params) {
    var var$4, var$5, $result, var$7;
    if ($pname != 35713 && $pname != 35712) {
        var$4 = $this.$gl;
        var$5 = $this.$shaders.$get($shader);
        $result = var$4.getShaderParameter(var$5, $pname);
        $params.$put10($result);
    } else {
        var$7 = $this.$gl;
        var$4 = $this.$shaders.$get($shader);
        $result = var$7.getShaderParameter(var$4, $pname) ? 1 : 0;
        $params.$put10(!$result ? 0 : 1);
    }
}
function iaabt_TeaGL20_glGetShaderInfoLog($this, $shader) {
    var var$2, var$3;
    var$2 = $this.$gl;
    var$3 = $this.$shaders.$get($shader);
    return $rt_str(var$2.getShaderInfoLog(var$3));
}
function iaabt_TeaGL20_glGetUniformLocation($this, $program, $name) {
    var var$3, var$4, $location;
    var$3 = $this.$gl;
    var$4 = $this.$programs.$get($program);
    $location = var$3.getUniformLocation(var$4, $rt_ustr($name));
    return iaabt_TeaGL20_allocateUniformLocationId($this, $program, $location);
}
function iaabt_TeaGL20_glLinkProgram($this, $program) {
    var var$2, var$3;
    var$2 = $this.$gl;
    var$3 = $this.$programs.$get($program);
    var$2.linkProgram(var$3);
}
function iaabt_TeaGL20_glRenderbufferStorage($this, $target, $internalformat, $width, $height) {
    $this.$gl.renderbufferStorage($target, $internalformat, $width, $height);
}
function iaabt_TeaGL20_glShaderSource($this, $shader, $source) {
    var var$3, var$4;
    var$3 = $this.$gl;
    var$4 = $this.$shaders.$get($shader);
    var$3.shaderSource(var$4, $rt_ustr($source));
}
function iaabt_TeaGL20_glTexParameteri($this, $target, $pname, $param) {
    var var$4, var$5;
    var$4 = $this.$gl;
    var$5 = $param;
    var$4.texParameterf($target, $pname, var$5);
}
function iaabt_TeaGL20_glUniform1f($this, $location, $x) {
    var $loc;
    $loc = iaabt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl.uniform1f($loc, $x);
}
function iaabt_TeaGL20_glUniform1i($this, $location, $x) {
    var $loc;
    $loc = iaabt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl.uniform1i($loc, $x);
}
function iaabt_TeaGL20_glUniform2f($this, $location, $x, $y) {
    var $loc;
    $loc = iaabt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl.uniform2f($loc, $x, $y);
}
function iaabt_TeaGL20_glUniform4f($this, $location, $x, $y, $z, $w) {
    var $loc;
    $loc = iaabt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl.uniform4f($loc, $x, $y, $z, $w);
}
function iaabt_TeaGL20_glUniformMatrix4fv($this, $location, $count, $transpose, $value, $offset) {
    var $loc;
    $loc = iaabt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl.uniformMatrix4fv($loc, !!$transpose, $value.data);
}
function iaabt_TeaGL20_glUseProgram($this, $program) {
    var var$2, var$3;
    $this.$currProgram = $program;
    var$2 = $this.$gl;
    var$3 = $this.$programs.$get($program);
    var$2.useProgram(var$3);
}
function iaabt_TeaGL20_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr) {
    $this.$gl.vertexAttribPointer($indx, $size, $type, !!$normalized, $stride, $ptr);
}
function iaabt_TeaGL20__clinit_() {
    iaabt_TeaGL20_window = window;
}
function iaabt_TeaGL20_wrapContext$js_body$_1(var$1) {
    if (typeof WebGLDebugUtils == 'undefined') {
        return var$1;
    }
    return WebGLDebugUtils.makeDebugContext(var$1);
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$031 = null;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaLetterOrDigit$1();
    jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_0($this, $this$0) {
    $this.$this$031 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains($this, $ch) {
    return jl_Character_isLetterOrDigit0($ch);
}
function iaagg_MipMapGenerator() {
    jl_Object.call(this);
}
var iaagg_MipMapGenerator_useHWMipMap = 0;
function iaagg_MipMapGenerator_$callClinit() {
    iaagg_MipMapGenerator_$callClinit = $rt_eraseClinit(iaagg_MipMapGenerator);
    iaagg_MipMapGenerator__clinit_();
}
function iaagg_MipMapGenerator_generateMipMap($target, $pixmap, $textureWidth, $textureHeight) {
    var var$5;
    iaagg_MipMapGenerator_$callClinit();
    if (!iaagg_MipMapGenerator_useHWMipMap) {
        iaagg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight);
        return;
    }
    a: {
        iaa_Core_$callClinit();
        var$5 = iaa_Core_app.$getType0();
        iaa_Application$ApplicationType_$callClinit();
        if (var$5 !== iaa_Application$ApplicationType_Android && iaa_Core_app.$getType0() !== iaa_Application$ApplicationType_WebGL) {
            var$5 = iaa_Core_app;
            if (var$5.$getType0() !== iaa_Application$ApplicationType_iOS) {
                iaagg_MipMapGenerator_generateMipMapDesktop($target, $pixmap, $textureWidth, $textureHeight);
                break a;
            }
        }
        iaagg_MipMapGenerator_generateMipMapGLES20($target, $pixmap);
    }
}
function iaagg_MipMapGenerator_generateMipMapGLES20($target, $pixmap) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    iaagg_MipMapGenerator_$callClinit();
    iaa_Core_$callClinit();
    var$3 = iaa_Core_gl;
    var$4 = $pixmap.$getGLInternalFormat();
    var$5 = $pixmap.$getWidth0();
    var$6 = $pixmap.$getHeight0();
    var$7 = $pixmap.$getGLFormat();
    var$8 = $pixmap.$getGLType();
    var$9 = $pixmap.$getPixels();
    var$3.$glTexImage2D($target, 0, var$4, var$5, var$6, 0, var$7, var$8, var$9);
    iaa_Core_gl20.$glGenerateMipmap($target);
}
function iaagg_MipMapGenerator_generateMipMapDesktop($target, $pixmap, $textureWidth, $textureHeight) {
    var var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    iaagg_MipMapGenerator_$callClinit();
    a: {
        iaa_Core_$callClinit();
        if (!iaa_Core_graphics.$supportsExtension($rt_s(1254))) {
            var$5 = iaa_Core_graphics;
            if (!var$5.$supportsExtension($rt_s(1255)) && iaa_Core_gl30 === null) {
                iaagg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight);
                break a;
            }
        }
        var$5 = iaa_Core_gl;
        var$6 = $pixmap.$getGLInternalFormat();
        var$7 = $pixmap.$getWidth0();
        var$8 = $pixmap.$getHeight0();
        var$9 = $pixmap.$getGLFormat();
        var$10 = $pixmap.$getGLType();
        var$11 = $pixmap.$getPixels();
        var$5.$glTexImage2D($target, 0, var$6, var$7, var$8, 0, var$9, var$10, var$11);
        iaa_Core_gl20.$glGenerateMipmap($target);
    }
}
function iaagg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight) {
    var var$5, var$6, var$7, var$8, var$9, var$10, var$11, $width, $height, $level, $tmp, var$16;
    iaagg_MipMapGenerator_$callClinit();
    iaa_Core_$callClinit();
    var$5 = iaa_Core_gl;
    var$6 = $pixmap.$getGLInternalFormat();
    var$7 = $pixmap.$getWidth0();
    var$8 = $pixmap.$getHeight0();
    var$9 = $pixmap.$getGLFormat();
    var$10 = $pixmap.$getGLType();
    var$11 = $pixmap.$getPixels();
    var$5.$glTexImage2D($target, 0, var$6, var$7, var$8, 0, var$9, var$10, var$11);
    if (iaa_Core_gl20 === null && $textureWidth != $textureHeight)
        $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1256)));
    $width = $pixmap.$getWidth0() / 2 | 0;
    $height = $pixmap.$getHeight0() / 2 | 0;
    $level = 1;
    while ($width > 0 && $height > 0) {
        $tmp = iaag_Pixmap__init_($width, $height, $pixmap.$getFormat());
        iaag_Pixmap$Blending_$callClinit();
        $tmp.$setBlending0(iaag_Pixmap$Blending_None);
        $tmp.$drawPixmap0($pixmap, 0, 0, $pixmap.$getWidth0(), $pixmap.$getHeight0(), 0, 0, $width, $height);
        if ($level > 1)
            $pixmap.$dispose();
        var$5 = iaa_Core_gl;
        var$9 = $tmp.$getGLInternalFormat();
        var$10 = $tmp.$getWidth0();
        var$16 = $tmp.$getHeight0();
        var$6 = $tmp.$getGLFormat();
        var$7 = $tmp.$getGLType();
        var$11 = $tmp.$getPixels();
        var$5.$glTexImage2D($target, $level, var$9, var$10, var$16, 0, var$6, var$7, var$11);
        $width = $tmp.$getWidth0() / 2 | 0;
        $height = $tmp.$getHeight0() / 2 | 0;
        $level = $level + 1 | 0;
        $pixmap = $tmp;
    }
}
function iaagg_MipMapGenerator__clinit_() {
    iaagg_MipMapGenerator_useHWMipMap = 1;
}
function jur_CharClass$18() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$bs = null;
    a.$this$032 = null;
}
function jur_CharClass$18__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$18();
    jur_CharClass$18__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$18__init_0($this, $this$0, var$2) {
    $this.$this$032 = $this$0;
    $this.$val$bs = var$2;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$18_contains($this, $ch) {
    return $this.$alt0 ^ $this.$val$bs.$get30($ch);
}
function jur_CharClass$18_toString($this) {
    var $temp, $i;
    $temp = jl_StringBuilder__init_();
    $i = $this.$val$bs.$nextSetBit(0);
    while ($i >= 0) {
        $temp.$append14(jl_Character_toChars($i));
        $temp.$append0(124);
        $i = $this.$val$bs.$nextSetBit($i + 1 | 0);
    }
    if ($temp.$length() > 0)
        $temp.$deleteCharAt($temp.$length() - 1 | 0);
    return $temp.$toString();
}
function jur_PossessiveGroupQuantifierSet() {
    jur_GroupQuantifierSet.call(this);
}
function jur_PossessiveGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PossessiveGroupQuantifierSet();
    jur_PossessiveGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PossessiveGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
}
function jur_PossessiveGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $stringIndex_0;
    while (true) {
        $stringIndex_0 = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        if ($stringIndex_0 <= 0)
            break;
        $stringIndex = $stringIndex_0;
    }
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function ig_Effects$EffectContainer() {
    var a = this; jl_Object.call(a);
    a.$x13 = 0.0;
    a.$y12 = 0.0;
    a.$time4 = 0.0;
    a.$lifetime2 = 0.0;
    a.$rotation5 = 0.0;
    a.$color18 = null;
    a.$id7 = 0;
    a.$data5 = null;
}
function ig_Effects$EffectContainer__init_() {
    var var_0 = new ig_Effects$EffectContainer();
    ig_Effects$EffectContainer__init_0(var_0);
    return var_0;
}
function ig_Effects$EffectContainer__init_0($this) {
    jl_Object__init_0($this);
}
function ig_Effects$EffectContainer_set($this, $id, $color, $life, $lifetime, $rotation, $x, $y, $data) {
    $this.$x13 = $x;
    $this.$y12 = $y;
    $this.$color18 = $color;
    $this.$time4 = $life;
    $this.$lifetime2 = $lifetime;
    $this.$id7 = $id;
    $this.$rotation5 = $rotation;
    $this.$data5 = $data;
}
function ig_Effects$EffectContainer_fin($this) {
    return $this.$time4 / $this.$lifetime2;
}
function iaamo_EllipseMapObject() {
    iaam_MapObject.call(this);
    this.$ellipse = null;
}
function iaamo_EllipseMapObject__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new iaamo_EllipseMapObject();
    iaamo_EllipseMapObject__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaamo_EllipseMapObject__init_0($this, $x, $y, $width, $height) {
    iaam_MapObject__init_0($this);
    $this.$ellipse = iaamg_Ellipse__init_($x, $y, $width, $height);
}
function jur_CharClass$13() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz3 = null;
    a.$this$033 = null;
}
function jur_CharClass$13__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$13();
    jur_CharClass$13__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$13__init_0($this, $this$0, var$2) {
    $this.$this$033 = $this$0;
    $this.$val$clazz3 = var$2;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$13_contains($this, $ch) {
    return $this.$val$clazz3.$contains($ch);
}
function iaai_InputMultiplexer() {
    jl_Object.call(this);
    this.$processors = null;
}
function iaai_InputMultiplexer__init_0(var_0) {
    var var_1 = new iaai_InputMultiplexer();
    iaai_InputMultiplexer__init_(var_1, var_0);
    return var_1;
}
function iaai_InputMultiplexer__init_($this, $processors) {
    jl_Object__init_0($this);
    $this.$processors = iaac_SnapshotArray__init_0(4);
    $this.$processors.$addAll6($processors);
}
function iaai_InputMultiplexer_addProcessor($this, $processor) {
    if ($processor !== null) {
        $this.$processors.$add1($processor);
        return;
    }
    $rt_throw(jl_NullPointerException__init_0($rt_s(1257)));
}
function iaai_InputMultiplexer_keyDown($this, $keycode) {
    var $items, $i, $n, var$5, $$je;
    $items = $this.$processors.$begin0();
    a: {
        try {
            $i = 0;
            $n = $this.$processors.$size;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;
            break a;

        }
        b: {
            try {
                while ($i < $n) {
                    if ($items.data[$i].$keyDown($keycode))
                        break b;
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$5 = $$je;
                break a;

            }
            $this.$processors.$end();
            return 0;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;
            break a;

        }
        $this.$processors.$end();
        return 1;
    }
    $this.$processors.$end();
    $rt_throw(var$5);
}
function iaai_InputMultiplexer_keyUp($this, $keycode) {
    var $items, $i, $n, var$5, $$je;
    $items = $this.$processors.$begin0();
    a: {
        try {
            $i = 0;
            $n = $this.$processors.$size;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;
            break a;

        }
        b: {
            try {
                while ($i < $n) {
                    if ($items.data[$i].$keyUp($keycode))
                        break b;
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$5 = $$je;
                break a;

            }
            $this.$processors.$end();
            return 0;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;
            break a;

        }
        $this.$processors.$end();
        return 1;
    }
    $this.$processors.$end();
    $rt_throw(var$5);
}
function iaai_InputMultiplexer_keyTyped($this, $character) {
    var $items, $i, $n, var$5, $$je;
    $items = $this.$processors.$begin0();
    a: {
        try {
            $i = 0;
            $n = $this.$processors.$size;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;
            break a;

        }
        b: {
            try {
                while ($i < $n) {
                    if ($items.data[$i].$keyTyped($character))
                        break b;
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$5 = $$je;
                break a;

            }
            $this.$processors.$end();
            return 0;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;
            break a;

        }
        $this.$processors.$end();
        return 1;
    }
    $this.$processors.$end();
    $rt_throw(var$5);
}
function iaai_InputMultiplexer_touchDown($this, $screenX, $screenY, $pointer, $button) {
    var $items, $i, $n, var$8, $$je;
    $items = $this.$processors.$begin0();
    a: {
        try {
            $i = 0;
            $n = $this.$processors.$size;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$8 = $$je;
            break a;

        }
        b: {
            try {
                while ($i < $n) {
                    if ($items.data[$i].$touchDown($screenX, $screenY, $pointer, $button))
                        break b;
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$8 = $$je;
                break a;

            }
            $this.$processors.$end();
            return 0;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$8 = $$je;
            break a;

        }
        $this.$processors.$end();
        return 1;
    }
    $this.$processors.$end();
    $rt_throw(var$8);
}
function iaai_InputMultiplexer_touchUp($this, $screenX, $screenY, $pointer, $button) {
    var $items, $i, $n, var$8, $$je;
    $items = $this.$processors.$begin0();
    a: {
        try {
            $i = 0;
            $n = $this.$processors.$size;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$8 = $$je;
            break a;

        }
        b: {
            try {
                while ($i < $n) {
                    if ($items.data[$i].$touchUp($screenX, $screenY, $pointer, $button))
                        break b;
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$8 = $$je;
                break a;

            }
            $this.$processors.$end();
            return 0;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$8 = $$je;
            break a;

        }
        $this.$processors.$end();
        return 1;
    }
    $this.$processors.$end();
    $rt_throw(var$8);
}
function iaai_InputMultiplexer_touchDragged($this, $screenX, $screenY, $pointer) {
    var $items, $i, $n, var$7, $$je;
    $items = $this.$processors.$begin0();
    a: {
        try {
            $i = 0;
            $n = $this.$processors.$size;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$7 = $$je;
            break a;

        }
        b: {
            try {
                while ($i < $n) {
                    if ($items.data[$i].$touchDragged($screenX, $screenY, $pointer))
                        break b;
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$7 = $$je;
                break a;

            }
            $this.$processors.$end();
            return 0;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$7 = $$je;
            break a;

        }
        $this.$processors.$end();
        return 1;
    }
    $this.$processors.$end();
    $rt_throw(var$7);
}
function iaai_InputMultiplexer_mouseMoved($this, $screenX, $screenY) {
    var $items, $i, $n, var$6, $$je;
    $items = $this.$processors.$begin0();
    a: {
        try {
            $i = 0;
            $n = $this.$processors.$size;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$6 = $$je;
            break a;

        }
        b: {
            try {
                while ($i < $n) {
                    if ($items.data[$i].$mouseMoved($screenX, $screenY))
                        break b;
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$6 = $$je;
                break a;

            }
            $this.$processors.$end();
            return 0;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$6 = $$je;
            break a;

        }
        $this.$processors.$end();
        return 1;
    }
    $this.$processors.$end();
    $rt_throw(var$6);
}
function iaai_InputMultiplexer_scrolled($this, $amountX, $amountY) {
    var $items, $i, $n, var$6, $$je;
    $items = $this.$processors.$begin0();
    a: {
        try {
            $i = 0;
            $n = $this.$processors.$size;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$6 = $$je;
            break a;

        }
        b: {
            try {
                while ($i < $n) {
                    if ($items.data[$i].$scrolled($amountX, $amountY))
                        break b;
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$6 = $$je;
                break a;

            }
            $this.$processors.$end();
            return 0;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$6 = $$je;
            break a;

        }
        $this.$processors.$end();
        return 1;
    }
    $this.$processors.$end();
    $rt_throw(var$6);
}
function jur_CharClass$12() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz4 = null;
    a.$this$034 = null;
}
function jur_CharClass$12__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$12();
    jur_CharClass$12__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$12__init_0($this, $this$0, var$2) {
    $this.$this$034 = $this$0;
    $this.$val$clazz4 = var$2;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$12_contains($this, $ch) {
    return $this.$val$clazz4.$contains($ch) ? 0 : 1;
}
function jur_CharClass$11() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt5 = 0;
    a.$val$nb1 = null;
    a.$val$clazz5 = null;
    a.$this$035 = null;
}
function jur_CharClass$11__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$11();
    jur_CharClass$11__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$11__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$035 = $this$0;
    $this.$val$curAlt5 = var$2;
    $this.$val$nb1 = var$3;
    $this.$val$clazz5 = var$4;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$11_contains($this, $ch) {
    return !($this.$val$curAlt5 ^ $this.$val$nb1.$contains($ch)) && !$this.$val$clazz5.$contains($ch) ? 0 : 1;
}
function jur_CharClass$10() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt6 = 0;
    a.$val$nb2 = null;
    a.$val$clazz6 = null;
    a.$this$036 = null;
}
function jur_CharClass$10__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$10();
    jur_CharClass$10__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$10__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$036 = $this$0;
    $this.$val$curAlt6 = var$2;
    $this.$val$nb2 = var$3;
    $this.$val$clazz6 = var$4;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$10_contains($this, $ch) {
    return !($this.$val$curAlt6 ^ $this.$val$nb2.$contains($ch)) && !$this.$val$clazz6.$contains($ch) ? 1 : 0;
}
function jur_CharClass$17() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt7 = 0;
    a.$val$nb3 = null;
    a.$val$clazz7 = null;
    a.$this$037 = null;
}
function jur_CharClass$17__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$17();
    jur_CharClass$17__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$17__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$037 = $this$0;
    $this.$val$curAlt7 = var$2;
    $this.$val$nb3 = var$3;
    $this.$val$clazz7 = var$4;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$17_contains($this, $ch) {
    return $this.$val$curAlt7 ^ $this.$val$nb3.$contains($ch) && $this.$val$clazz7.$contains($ch) ? 1 : 0;
}
function jur_CharClass$16() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt8 = 0;
    a.$val$nb4 = null;
    a.$val$clazz8 = null;
    a.$this$038 = null;
}
function jur_CharClass$16__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$16();
    jur_CharClass$16__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$16__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$038 = $this$0;
    $this.$val$curAlt8 = var$2;
    $this.$val$nb4 = var$3;
    $this.$val$clazz8 = var$4;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$16_contains($this, $ch) {
    return $this.$val$curAlt8 ^ $this.$val$nb4.$contains($ch) && $this.$val$clazz8.$contains($ch) ? 0 : 1;
}
function iaa_Settings$TypeSerializer() {
}
function jur_CharClass$15() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz9 = null;
    a.$val$curAlt9 = 0;
    a.$this$039 = null;
}
function jur_CharClass$15__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$15();
    jur_CharClass$15__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$15__init_0($this, $this$0, var$2, var$3) {
    $this.$this$039 = $this$0;
    $this.$val$clazz9 = var$2;
    $this.$val$curAlt9 = var$3;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$15_contains($this, $ch) {
    return $this.$val$clazz9.$contains($ch) && $this.$val$curAlt9 ^ $this.$this$039.$bits.$get30($ch) ? 1 : 0;
}
function jur_CharClass$14() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz10 = null;
    a.$val$curAlt10 = 0;
    a.$this$040 = null;
}
function jur_CharClass$14__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$14();
    jur_CharClass$14__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$14__init_0($this, $this$0, var$2, var$3) {
    $this.$this$040 = $this$0;
    $this.$val$clazz10 = var$2;
    $this.$val$curAlt10 = var$3;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$14_contains($this, $ch) {
    return $this.$val$clazz10.$contains($ch) && $this.$val$curAlt10 ^ $this.$this$040.$bits.$get30($ch) ? 0 : 1;
}
function it_Phases$lambda$static$21$lambda$_46_0() {
    jl_Object.call(this);
    this.$_0123 = 0.0;
}
function it_Phases$lambda$static$21$lambda$_46_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$static$21$lambda$_46_0();
    it_Phases$lambda$static$21$lambda$_46_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$static$21$lambda$_46_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0123 = var$1;
}
function it_Phases$lambda$static$21$lambda$_46_0_get(var$0, var$1) {
    it_Phases_lambda$null$20(var$0.$_0123, var$1);
}
function iaac_IntSet() {
    var a = this; jl_Object.call(a);
    a.$size4 = 0;
    a.$keyTable3 = null;
    a.$capacity5 = 0;
    a.$stashSize3 = 0;
    a.$hasZeroValue0 = 0;
    a.$loadFactor5 = 0.0;
    a.$hashShift2 = 0;
    a.$mask4 = 0;
    a.$threshold7 = 0;
    a.$stashCapacity2 = 0;
    a.$pushIterations2 = 0;
    a.$iterator10 = null;
    a.$iterator20 = null;
}
function iaac_IntSet__init_() {
    var var_0 = new iaac_IntSet();
    iaac_IntSet__init_0(var_0);
    return var_0;
}
function iaac_IntSet__init_1(var_0, var_1) {
    var var_2 = new iaac_IntSet();
    iaac_IntSet__init_2(var_2, var_0, var_1);
    return var_2;
}
function iaac_IntSet__init_0($this) {
    iaac_IntSet__init_2($this, 51, 0.800000011920929);
}
function iaac_IntSet__init_2($this, $initialCapacity, $loadFactor) {
    var var$3;
    jl_Object__init_0($this);
    if ($initialCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(280)).$append3($initialCapacity).$toString()));
    var$3 = iaam_Mathf_nextPowerOfTwo(jl_Math_ceil($initialCapacity / $loadFactor) | 0);
    if (var$3 > 1073741824)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(281)).$append3(var$3).$toString()));
    $this.$capacity5 = var$3;
    if ($loadFactor <= 0.0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(282)).$append13($loadFactor).$toString()));
    $this.$loadFactor5 = $loadFactor;
    $this.$threshold7 = $this.$capacity5 * $loadFactor | 0;
    $this.$mask4 = $this.$capacity5 - 1 | 0;
    $this.$hashShift2 = 31 - jl_Integer_numberOfTrailingZeros($this.$capacity5) | 0;
    $this.$stashCapacity2 = jl_Math_max1(3, (jl_Math_ceil(jl_Math_log($this.$capacity5)) | 0) * 2 | 0);
    $this.$pushIterations2 = jl_Math_max1(jl_Math_min1($this.$capacity5, 8), (jl_Math_sqrt($this.$capacity5) | 0) / 8 | 0);
    $this.$keyTable3 = $rt_createIntArray($this.$capacity5 + $this.$stashCapacity2 | 0);
}
function iaac_IntSet_add($this, $key) {
    var $keyTable, var$3, $index1, $key1, $index2, $key2, $index3, $key3, $i, $n, var$12;
    if (!$key) {
        if ($this.$hasZeroValue0)
            return 0;
        $this.$hasZeroValue0 = 1;
        $this.$size4 = $this.$size4 + 1 | 0;
        return 1;
    }
    $keyTable = $this.$keyTable3;
    var$3 = $keyTable.data;
    $index1 = $key & $this.$mask4;
    $key1 = var$3[$index1];
    if ($key1 == $key)
        return 0;
    $index2 = iaac_IntSet_hash2($this, $key);
    $key2 = var$3[$index2];
    if ($key2 == $key)
        return 0;
    $index3 = iaac_IntSet_hash3($this, $key);
    $key3 = var$3[$index3];
    if ($key3 == $key)
        return 0;
    $i = $this.$capacity5;
    $n = $i + $this.$stashSize3 | 0;
    while (true) {
        if ($i >= $n) {
            if (!$key1) {
                var$3[$index1] = $key;
                var$12 = $this.$size4;
                $this.$size4 = var$12 + 1 | 0;
                if (var$12 >= $this.$threshold7)
                    iaac_IntSet_resize($this, $this.$capacity5 << 1);
                return 1;
            }
            if (!$key2) {
                var$3[$index2] = $key;
                var$12 = $this.$size4;
                $this.$size4 = var$12 + 1 | 0;
                if (var$12 >= $this.$threshold7)
                    iaac_IntSet_resize($this, $this.$capacity5 << 1);
                return 1;
            }
            if ($key3) {
                iaac_IntSet_push($this, $key, $index1, $key1, $index2, $key2, $index3, $key3);
                return 1;
            }
            var$3[$index3] = $key;
            var$12 = $this.$size4;
            $this.$size4 = var$12 + 1 | 0;
            if (var$12 >= $this.$threshold7)
                iaac_IntSet_resize($this, $this.$capacity5 << 1);
            return 1;
        }
        if (var$3[$i] == $key)
            break;
        $i = $i + 1 | 0;
    }
    return 0;
}
function iaac_IntSet_addAll($this, $set) {
    var $iterator;
    $this.$ensureCapacity($set.$size4);
    $iterator = $set.$iterator4();
    while ($iterator.$hasNext2) {
        $this.$add5($iterator.$next5());
    }
}
function iaac_IntSet_addResize($this, $key) {
    var $index1, $key1, var$4, $index2, $key2, $index3, $key3;
    if (!$key) {
        $this.$hasZeroValue0 = 1;
        return;
    }
    $index1 = $key & $this.$mask4;
    $key1 = $this.$keyTable3.data[$index1];
    if (!$key1) {
        $this.$keyTable3.data[$index1] = $key;
        var$4 = $this.$size4;
        $this.$size4 = var$4 + 1 | 0;
        if (var$4 >= $this.$threshold7)
            iaac_IntSet_resize($this, $this.$capacity5 << 1);
        return;
    }
    $index2 = iaac_IntSet_hash2($this, $key);
    $key2 = $this.$keyTable3.data[$index2];
    if (!$key2) {
        $this.$keyTable3.data[$index2] = $key;
        var$4 = $this.$size4;
        $this.$size4 = var$4 + 1 | 0;
        if (var$4 >= $this.$threshold7)
            iaac_IntSet_resize($this, $this.$capacity5 << 1);
        return;
    }
    $index3 = iaac_IntSet_hash3($this, $key);
    $key3 = $this.$keyTable3.data[$index3];
    if ($key3) {
        iaac_IntSet_push($this, $key, $index1, $key1, $index2, $key2, $index3, $key3);
        return;
    }
    $this.$keyTable3.data[$index3] = $key;
    var$4 = $this.$size4;
    $this.$size4 = var$4 + 1 | 0;
    if (var$4 >= $this.$threshold7)
        iaac_IntSet_resize($this, $this.$capacity5 << 1);
}
function iaac_IntSet_push($this, $insertKey, $index1, $key1, $index2, $key2, $index3, $key3) {
    var $keyTable, $mask, $i, $pushIterations, var$12, var$13, var$14;
    $keyTable = $this.$keyTable3;
    $mask = $this.$mask4;
    $i = 0;
    $pushIterations = $this.$pushIterations2;
    while (true) {
        a: {
            switch (iaam_Mathf_random(2)) {
                case 0:
                    break;
                case 1:
                    $keyTable.data[$index2] = $insertKey;
                    $key1 = $key2;
                    break a;
                default:
                    $keyTable.data[$index3] = $insertKey;
                    $key1 = $key3;
                    break a;
            }
            $keyTable.data[$index1] = $insertKey;
        }
        var$12 = $keyTable.data;
        $index1 = $key1 & $mask;
        var$13 = var$12[$index1];
        if (!var$13) {
            var$12[$index1] = $key1;
            var$13 = $this.$size4;
            $this.$size4 = var$13 + 1 | 0;
            if (var$13 >= $this.$threshold7)
                iaac_IntSet_resize($this, $this.$capacity5 << 1);
            return;
        }
        $index2 = iaac_IntSet_hash2($this, $key1);
        $key2 = var$12[$index2];
        if (!$key2) {
            var$12[$index2] = $key1;
            var$13 = $this.$size4;
            $this.$size4 = var$13 + 1 | 0;
            if (var$13 >= $this.$threshold7)
                iaac_IntSet_resize($this, $this.$capacity5 << 1);
            return;
        }
        $index3 = iaac_IntSet_hash3($this, $key1);
        $key3 = var$12[$index3];
        if (!$key3) {
            var$12[$index3] = $key1;
            var$14 = $this.$size4;
            $this.$size4 = var$14 + 1 | 0;
            if (var$14 >= $this.$threshold7)
                iaac_IntSet_resize($this, $this.$capacity5 << 1);
            return;
        }
        $i = $i + 1 | 0;
        if ($i == $pushIterations)
            break;
        $insertKey = $key1;
        $key1 = var$13;
    }
    iaac_IntSet_addStash($this, $key1);
}
function iaac_IntSet_addStash($this, $key) {
    var $index;
    if ($this.$stashSize3 == $this.$stashCapacity2) {
        iaac_IntSet_resize($this, $this.$capacity5 << 1);
        iaac_IntSet_addResize($this, $key);
        return;
    }
    $index = $this.$capacity5 + $this.$stashSize3 | 0;
    $this.$keyTable3.data[$index] = $key;
    $this.$stashSize3 = $this.$stashSize3 + 1 | 0;
    $this.$size4 = $this.$size4 + 1 | 0;
}
function iaac_IntSet_remove($this, $key) {
    var $index, var$3, var$4;
    if (!$key) {
        if (!$this.$hasZeroValue0)
            return 0;
        $this.$hasZeroValue0 = 0;
        $this.$size4 = $this.$size4 - 1 | 0;
        return 1;
    }
    $index = $key & $this.$mask4;
    if ($this.$keyTable3.data[$index] == $key) {
        $this.$keyTable3.data[$index] = 0;
        $this.$size4 = $this.$size4 - 1 | 0;
        return 1;
    }
    var$3 = iaac_IntSet_hash2($this, $key);
    if ($this.$keyTable3.data[var$3] == $key) {
        $this.$keyTable3.data[var$3] = 0;
        $this.$size4 = $this.$size4 - 1 | 0;
        return 1;
    }
    var$4 = iaac_IntSet_hash3($this, $key);
    if ($this.$keyTable3.data[var$4] != $key)
        return $this.$removeStash($key);
    $this.$keyTable3.data[var$4] = 0;
    $this.$size4 = $this.$size4 - 1 | 0;
    return 1;
}
function iaac_IntSet_removeStash($this, $key) {
    var $keyTable, $i, $n;
    $keyTable = $this.$keyTable3;
    $i = $this.$capacity5;
    $n = $i + $this.$stashSize3 | 0;
    while ($i < $n) {
        if ($keyTable.data[$i] == $key) {
            $this.$removeStashIndex($i);
            $this.$size4 = $this.$size4 - 1 | 0;
            return 1;
        }
        $i = $i + 1 | 0;
    }
    return 0;
}
function iaac_IntSet_removeStashIndex($this, $index) {
    var $lastIndex;
    $this.$stashSize3 = $this.$stashSize3 - 1 | 0;
    $lastIndex = $this.$capacity5 + $this.$stashSize3 | 0;
    if ($index < $lastIndex)
        $this.$keyTable3.data[$index] = $this.$keyTable3.data[$lastIndex];
}
function iaac_IntSet_clear($this) {
    var $keyTable, $i, $i_0;
    if (!$this.$size4)
        return;
    $keyTable = $this.$keyTable3;
    $i = $this.$capacity5 + $this.$stashSize3 | 0;
    while (true) {
        $i_0 = $i + (-1) | 0;
        if ($i <= 0)
            break;
        $keyTable.data[$i_0] = 0;
        $i = $i_0;
    }
    $this.$size4 = 0;
    $this.$stashSize3 = 0;
    $this.$hasZeroValue0 = 0;
}
function iaac_IntSet_contains($this, $key) {
    var $index, var$3;
    if (!$key)
        return $this.$hasZeroValue0;
    $index = $key & $this.$mask4;
    if ($this.$keyTable3.data[$index] != $key) {
        var$3 = iaac_IntSet_hash2($this, $key);
        if ($this.$keyTable3.data[var$3] != $key) {
            var$3 = iaac_IntSet_hash3($this, $key);
            if ($this.$keyTable3.data[var$3] != $key)
                return iaac_IntSet_containsKeyStash($this, $key);
        }
    }
    return 1;
}
function iaac_IntSet_containsKeyStash($this, $key) {
    var $keyTable, $i, $n;
    $keyTable = $this.$keyTable3;
    $i = $this.$capacity5;
    $n = $i + $this.$stashSize3 | 0;
    while ($i < $n) {
        if ($keyTable.data[$i] == $key)
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
}
function iaac_IntSet_ensureCapacity($this, $additionalCapacity) {
    var $sizeNeeded;
    if ($additionalCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(307)).$append3($additionalCapacity).$toString()));
    $sizeNeeded = $this.$size4 + $additionalCapacity | 0;
    if ($sizeNeeded >= $this.$threshold7)
        iaac_IntSet_resize($this, iaam_Mathf_nextPowerOfTwo(jl_Math_ceil($sizeNeeded / $this.$loadFactor5) | 0));
}
function iaac_IntSet_resize($this, $newSize) {
    var $oldEndIndex, var$3, $oldKeyTable, $oldSize, var$6, $i, $key;
    $oldEndIndex = $this.$capacity5 + $this.$stashSize3 | 0;
    $this.$capacity5 = $newSize;
    $this.$threshold7 = $newSize * $this.$loadFactor5 | 0;
    $this.$mask4 = $newSize - 1 | 0;
    $this.$hashShift2 = 31 - jl_Integer_numberOfTrailingZeros($newSize) | 0;
    var$3 = $newSize;
    $this.$stashCapacity2 = jl_Math_max1(3, (jl_Math_ceil(jl_Math_log(var$3)) | 0) * 2 | 0);
    $this.$pushIterations2 = jl_Math_max1(jl_Math_min1($newSize, 8), (jl_Math_sqrt(var$3) | 0) / 8 | 0);
    $oldKeyTable = $this.$keyTable3;
    $this.$keyTable3 = $rt_createIntArray($newSize + $this.$stashCapacity2 | 0);
    $oldSize = $this.$size4;
    var$6 = !$this.$hasZeroValue0 ? 0 : 1;
    a: {
        $this.$size4 = var$6;
        $this.$stashSize3 = 0;
        if ($oldSize > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldEndIndex)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key)
                    iaac_IntSet_addResize($this, $key);
                $i = $i + 1 | 0;
            }
        }
    }
}
function iaac_IntSet_hash2($this, $h) {
    var var$2;
    var$2 = $rt_imul($h, (-1262997959));
    return (var$2 ^ var$2 >>> $this.$hashShift2) & $this.$mask4;
}
function iaac_IntSet_hash3($this, $h) {
    var var$2;
    var$2 = $rt_imul($h, (-825114047));
    return (var$2 ^ var$2 >>> $this.$hashShift2) & $this.$mask4;
}
function iaac_IntSet_iterator($this) {
    if ($this.$iterator10 === null) {
        $this.$iterator10 = iaac_IntSet$IntSetIterator__init_($this);
        $this.$iterator20 = iaac_IntSet$IntSetIterator__init_($this);
    }
    if ($this.$iterator10.$valid2) {
        $this.$iterator20.$reset();
        $this.$iterator20.$valid2 = 1;
        $this.$iterator10.$valid2 = 0;
        return $this.$iterator20;
    }
    $this.$iterator10.$reset();
    $this.$iterator10.$valid2 = 1;
    $this.$iterator20.$valid2 = 0;
    return $this.$iterator10;
}
function iaac_IntMap$Values() {
    iaac_IntMap$MapIterator.call(this);
}
function iaac_IntMap$Values__init_(var_0) {
    var var_1 = new iaac_IntMap$Values();
    iaac_IntMap$Values__init_0(var_1, var_0);
    return var_1;
}
function iaac_IntMap$Values__init_0($this, $map) {
    iaac_IntMap$MapIterator__init_0($this, $map);
}
function iaac_IntMap$Values_hasNext($this) {
    if ($this.$valid)
        return $this.$hasNext0;
    $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1178)));
}
function iaac_IntMap$Values_next($this) {
    var $value;
    if (!$this.$hasNext0)
        $rt_throw(ju_NoSuchElementException__init_0());
    if (!$this.$valid)
        $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1178)));
    $value = $this.$nextIndex == (-1) ? $this.$map.$zeroValue : $this.$map.$valueTable2.data[$this.$nextIndex];
    $this.$currentIndex = $this.$nextIndex;
    $this.$findNextIndex();
    return $value;
}
function iaac_IntMap$Values_iterator($this) {
    return $this;
}
function iaac_IntMap$Values_reset($this) {
    iaac_IntMap$MapIterator_reset($this);
}
function jl_StringBuilder() {
    jl_AbstractStringBuilder.call(this);
}
function jl_StringBuilder__init_0(var_0) {
    var var_1 = new jl_StringBuilder();
    jl_StringBuilder__init_1(var_1, var_0);
    return var_1;
}
function jl_StringBuilder__init_() {
    var var_0 = new jl_StringBuilder();
    jl_StringBuilder__init_2(var_0);
    return var_0;
}
function jl_StringBuilder__init_1($this, $capacity) {
    jl_AbstractStringBuilder__init_2($this, $capacity);
}
function jl_StringBuilder__init_2($this) {
    jl_AbstractStringBuilder__init_1($this);
}
function jl_StringBuilder_append($this, $string) {
    jl_AbstractStringBuilder_append($this, $string);
    return $this;
}
function jl_StringBuilder_append0($this, $value) {
    jl_AbstractStringBuilder_append0($this, $value);
    return $this;
}
function jl_StringBuilder_append1($this, $value) {
    jl_AbstractStringBuilder_append2($this, $value);
    return $this;
}
function jl_StringBuilder_append2($this, $c) {
    jl_AbstractStringBuilder_append3($this, $c);
    return $this;
}
function jl_StringBuilder_append3($this, $chars, $offset, $len) {
    jl_AbstractStringBuilder_append7($this, $chars, $offset, $len);
    return $this;
}
function jl_StringBuilder_append4($this, $chars) {
    jl_AbstractStringBuilder_append8($this, $chars);
    return $this;
}
function jl_StringBuilder_append5($this, $s, $start, $end) {
    jl_AbstractStringBuilder_append5($this, $s, $start, $end);
    return $this;
}
function jl_StringBuilder_append6($this, $s) {
    jl_AbstractStringBuilder_append6($this, $s);
    return $this;
}
function jl_StringBuilder_append7($this, $obj) {
    jl_AbstractStringBuilder_append4($this, $obj);
    return $this;
}
function jl_StringBuilder_insert($this, $target, $value) {
    jl_AbstractStringBuilder_insert1($this, $target, $value);
    return $this;
}
function jl_StringBuilder_insert0($this, $index, $s, $start, $end) {
    jl_AbstractStringBuilder_insert4($this, $index, $s, $start, $end);
    return $this;
}
function jl_StringBuilder_insert1($this, $index, $s) {
    jl_AbstractStringBuilder_insert5($this, $index, $s);
    return $this;
}
function jl_StringBuilder_insert2($this, $index, $chars, $offset, $len) {
    jl_AbstractStringBuilder_insert6($this, $index, $chars, $offset, $len);
    return $this;
}
function jl_StringBuilder_insert3($this, $index, $obj) {
    jl_AbstractStringBuilder_insert3($this, $index, $obj);
    return $this;
}
function jl_StringBuilder_insert4($this, $index, $c) {
    jl_AbstractStringBuilder_insert2($this, $index, $c);
    return $this;
}
function jl_StringBuilder_delete($this, $start, $end) {
    jl_AbstractStringBuilder_delete($this, $start, $end);
    return $this;
}
function jl_StringBuilder_deleteCharAt($this, $index) {
    jl_AbstractStringBuilder_deleteCharAt($this, $index);
    return $this;
}
function jl_StringBuilder_insert5($this, $index, $string) {
    jl_AbstractStringBuilder_insert($this, $index, $string);
    return $this;
}
function jl_StringBuilder_substring($this, var$1, var$2) {
    return jl_AbstractStringBuilder_substring($this, var$1, var$2);
}
function jl_StringBuilder_indexOf($this, var$1, var$2) {
    return jl_AbstractStringBuilder_indexOf0($this, var$1, var$2);
}
function jl_StringBuilder_indexOf0($this, var$1) {
    return jl_AbstractStringBuilder_indexOf($this, var$1);
}
function jl_StringBuilder_setLength($this, var$1) {
    jl_AbstractStringBuilder_setLength($this, var$1);
}
function jl_StringBuilder_getChars($this, var$1, var$2, var$3, var$4) {
    jl_AbstractStringBuilder_getChars($this, var$1, var$2, var$3, var$4);
}
function jl_StringBuilder_subSequence($this, var$1, var$2) {
    return jl_AbstractStringBuilder_subSequence($this, var$1, var$2);
}
function jl_StringBuilder_insert6($this, var$1, var$2, var$3, var$4) {
    return $this.$insert15(var$1, var$2, var$3, var$4);
}
function jl_StringBuilder_append8($this, var$1, var$2, var$3) {
    return $this.$append4(var$1, var$2, var$3);
}
function jl_StringBuilder_insert7($this, var$1, var$2, var$3, var$4) {
    return $this.$insert16(var$1, var$2, var$3, var$4);
}
function jl_StringBuilder_append9($this, var$1, var$2, var$3) {
    return $this.$append21(var$1, var$2, var$3);
}
function jl_StringBuilder_charAt($this, var$1) {
    return jl_AbstractStringBuilder_charAt($this, var$1);
}
function jl_StringBuilder_length($this) {
    return jl_AbstractStringBuilder_length($this);
}
function jl_StringBuilder_toString($this) {
    return jl_AbstractStringBuilder_toString($this);
}
function jl_StringBuilder_trimToSize($this) {
    jl_AbstractStringBuilder_trimToSize($this);
}
function jl_StringBuilder_ensureCapacity($this, var$1) {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
}
function jl_StringBuilder_insert8($this, var$1, var$2) {
    return $this.$insert17(var$1, var$2);
}
function jl_StringBuilder_insert9($this, var$1, var$2) {
    return $this.$insert18(var$1, var$2);
}
function jl_StringBuilder_insert10($this, var$1, var$2) {
    return $this.$insert19(var$1, var$2);
}
function jl_StringBuilder_insert11($this, var$1, var$2) {
    return $this.$insert(var$1, var$2);
}
function ju_ConcurrentModificationException() {
    jl_RuntimeException.call(this);
}
function ju_ConcurrentModificationException__init_() {
    var var_0 = new ju_ConcurrentModificationException();
    ju_ConcurrentModificationException__init_0(var_0);
    return var_0;
}
function ju_ConcurrentModificationException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function ju_Hashtable$1() {
    jl_Object.call(this);
}
function ju_Hashtable$1__init_() {
    var var_0 = new ju_Hashtable$1();
    ju_Hashtable$1__init_0(var_0);
    return var_0;
}
function ju_Hashtable$1__init_0($this) {
    jl_Object__init_0($this);
}
function ju_Hashtable$2() {
    jl_Object.call(this);
}
function ju_Hashtable$2__init_() {
    var var_0 = new ju_Hashtable$2();
    ju_Hashtable$2__init_0(var_0);
    return var_0;
}
function ju_Hashtable$2__init_0($this) {
    jl_Object__init_0($this);
}
function iaasu_TextField$TextFieldValidator() {
}
function iaat_TypingConfig() {
    jl_Object.call(this);
}
var iaat_TypingConfig_FORCE_COLOR_MARKUP_BY_DEFAULT = 0;
var iaat_TypingConfig_DEFAULT_WAIT_VALUE = 0.0;
var iaat_TypingConfig_DEFAULT_SPEED_PER_CHAR = 0.0;
var iaat_TypingConfig_MIN_SPEED_MODIFIER = 0.0;
var iaat_TypingConfig_MAX_SPEED_MODIFIER = 0.0;
var iaat_TypingConfig_CHAR_LIMIT_PER_FRAME = 0;
var iaat_TypingConfig_DEFAULT_CLEAR_COLOR = null;
var iaat_TypingConfig_INTERVAL_MULTIPLIERS_BY_CHAR = null;
var iaat_TypingConfig_GLOBAL_VARS = null;
var iaat_TypingConfig_EFFECTS = null;
var iaat_TypingConfig_dirtyEffectMaps = 0;
function iaat_TypingConfig_$callClinit() {
    iaat_TypingConfig_$callClinit = $rt_eraseClinit(iaat_TypingConfig);
    iaat_TypingConfig__clinit_();
}
function iaat_TypingConfig_registerEffect($tokenName, $effect) {
    iaat_TypingConfig_$callClinit();
    iaat_TypingConfig_EFFECTS.$put($tokenName, $effect);
    iaat_TypingConfig_dirtyEffectMaps = 1;
}
function iaat_TypingConfig__clinit_() {
    var var$1;
    iaat_TypingConfig_FORCE_COLOR_MARKUP_BY_DEFAULT = 1;
    iaat_TypingConfig_DEFAULT_WAIT_VALUE = 0.25;
    iaat_TypingConfig_DEFAULT_SPEED_PER_CHAR = 0.03500000014901161;
    iaat_TypingConfig_MIN_SPEED_MODIFIER = 0.0010000000474974513;
    iaat_TypingConfig_MAX_SPEED_MODIFIER = 100.0;
    iaat_TypingConfig_CHAR_LIMIT_PER_FRAME = (-1);
    var$1 = new iaag_Color;
    iaag_Color_$callClinit();
    iaag_Color__init_8(var$1, iaag_Color_white);
    iaat_TypingConfig_DEFAULT_CLEAR_COLOR = var$1;
    iaat_TypingConfig_INTERVAL_MULTIPLIERS_BY_CHAR = iaac_ObjectFloatMap__init_();
    iaat_TypingConfig_GLOBAL_VARS = iaac_ObjectMap__init_();
    iaat_TypingConfig_EFFECTS = iaac_ObjectMap__init_();
    iaat_TypingConfig_dirtyEffectMaps = 1;
    iaat_TypingConfig_INTERVAL_MULTIPLIERS_BY_CHAR.$put15(jl_Character_valueOf(32), 0.0);
    iaat_TypingConfig_INTERVAL_MULTIPLIERS_BY_CHAR.$put15(jl_Character_valueOf(58), 1.5);
    iaat_TypingConfig_INTERVAL_MULTIPLIERS_BY_CHAR.$put15(jl_Character_valueOf(44), 2.5);
    iaat_TypingConfig_INTERVAL_MULTIPLIERS_BY_CHAR.$put15(jl_Character_valueOf(46), 2.5);
    iaat_TypingConfig_INTERVAL_MULTIPLIERS_BY_CHAR.$put15(jl_Character_valueOf(33), 5.0);
    iaat_TypingConfig_INTERVAL_MULTIPLIERS_BY_CHAR.$put15(jl_Character_valueOf(63), 5.0);
    iaat_TypingConfig_INTERVAL_MULTIPLIERS_BY_CHAR.$put15(jl_Character_valueOf(10), 20.0);
    iaat_TypingConfig_registerEffect($rt_s(1258), iaat_TypingConfig$_clinit_$lambda$_3_0__init_());
    iaat_TypingConfig_registerEffect($rt_s(1259), iaat_TypingConfig$_clinit_$lambda$_3_1__init_());
    iaat_TypingConfig_registerEffect($rt_s(1260), iaat_TypingConfig$_clinit_$lambda$_3_2__init_());
    iaat_TypingConfig_registerEffect($rt_s(1261), iaat_TypingConfig$_clinit_$lambda$_3_3__init_());
    iaat_TypingConfig_registerEffect($rt_s(1262), iaat_TypingConfig$_clinit_$lambda$_3_4__init_());
    iaat_TypingConfig_registerEffect($rt_s(1263), iaat_TypingConfig$_clinit_$lambda$_3_5__init_());
    iaat_TypingConfig_registerEffect($rt_s(1264), iaat_TypingConfig$_clinit_$lambda$_3_6__init_());
    iaat_TypingConfig_registerEffect($rt_s(1265), iaat_TypingConfig$_clinit_$lambda$_3_7__init_());
    iaat_TypingConfig_registerEffect($rt_s(1266), iaat_TypingConfig$_clinit_$lambda$_3_8__init_());
    iaat_TypingConfig_registerEffect($rt_s(1267), iaat_TypingConfig$_clinit_$lambda$_3_9__init_());
}
function iaamg_Rectangle() {
    var a = this; jl_Object.call(a);
    a.$x1 = 0.0;
    a.$y1 = 0.0;
    a.$width0 = 0.0;
    a.$height0 = 0.0;
}
var iaamg_Rectangle_tmp = null;
var iaamg_Rectangle_tmp2 = null;
function iaamg_Rectangle_$callClinit() {
    iaamg_Rectangle_$callClinit = $rt_eraseClinit(iaamg_Rectangle);
    iaamg_Rectangle__clinit_();
}
function iaamg_Rectangle__init_0() {
    var var_0 = new iaamg_Rectangle();
    iaamg_Rectangle__init_1(var_0);
    return var_0;
}
function iaamg_Rectangle__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new iaamg_Rectangle();
    iaamg_Rectangle__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaamg_Rectangle__init_1($this) {
    iaamg_Rectangle_$callClinit();
    jl_Object__init_0($this);
}
function iaamg_Rectangle__init_2($this, $x, $y, $width, $height) {
    iaamg_Rectangle_$callClinit();
    jl_Object__init_0($this);
    $this.$x1 = $x;
    $this.$y1 = $y;
    $this.$width0 = $width;
    $this.$height0 = $height;
}
function iaamg_Rectangle_set($this, $x, $y, $width, $height) {
    $this.$x1 = $x;
    $this.$y1 = $y;
    $this.$width0 = $width;
    $this.$height0 = $height;
    return $this;
}
function iaamg_Rectangle_setPosition($this, $x, $y) {
    $this.$x1 = $x;
    $this.$y1 = $y;
    return $this;
}
function iaamg_Rectangle_setSize($this, $sizeXY) {
    $this.$width0 = $sizeXY;
    $this.$height0 = $sizeXY;
    return $this;
}
function iaamg_Rectangle_contains($this, $x, $y) {
    return $this.$x1 <= $x && $this.$x1 + $this.$width0 >= $x && $this.$y1 <= $y && $this.$y1 + $this.$height0 >= $y ? 1 : 0;
}
function iaamg_Rectangle_overlaps($this, $r) {
    return $this.$x1 < $r.$x1 + $r.$width0 && $this.$x1 + $this.$width0 > $r.$x1 && $this.$y1 < $r.$y1 + $r.$height0 && $this.$y1 + $this.$height0 > $r.$y1 ? 1 : 0;
}
function iaamg_Rectangle_overlaps0($this, $rx, $ry, $rwidth, $rheight) {
    return $this.$x1 < $rx + $rwidth && $this.$x1 + $this.$width0 > $rx && $this.$y1 < $ry + $rheight && $this.$y1 + $this.$height0 > $ry ? 1 : 0;
}
function iaamg_Rectangle_merge($this, $rect) {
    var $minX, $maxX, $minY, $maxY;
    $minX = jl_Math_min($this.$x1, $rect.$x1);
    $maxX = jl_Math_max($this.$x1 + $this.$width0, $rect.$x1 + $rect.$width0);
    $this.$x1 = $minX;
    $this.$width0 = $maxX - $minX;
    $minY = jl_Math_min($this.$y1, $rect.$y1);
    $maxY = jl_Math_max($this.$y1 + $this.$height0, $rect.$y1 + $rect.$height0);
    $this.$y1 = $minY;
    $this.$height0 = $maxY - $minY;
    return $this;
}
function iaamg_Rectangle_getCenter($this, $vector) {
    $vector.$x0 = $this.$x1 + $this.$width0 / 2.0;
    $vector.$y0 = $this.$y1 + $this.$height0 / 2.0;
    return $vector;
}
function iaamg_Rectangle_setCenter($this, $x, $y) {
    $this.$setPosition0($x - $this.$width0 / 2.0, $y - $this.$height0 / 2.0);
    return $this;
}
function iaamg_Rectangle_toString($this) {
    return jl_StringBuilder__init_().$append($rt_s(762)).$append13($this.$x1).$append($rt_s(430)).$append13($this.$y1).$append($rt_s(430)).$append13($this.$width0).$append($rt_s(430)).$append13($this.$height0).$append($rt_s(56)).$toString();
}
function iaamg_Rectangle_equals($this, $obj) {
    var $other;
    if ($this === $obj)
        return 1;
    if ($obj === null)
        return 0;
    if (jl_Object_getClass($this) !== jl_Object_getClass($obj))
        return 0;
    $other = $obj;
    if (jl_Float_floatToRawIntBits($this.$height0) != jl_Float_floatToRawIntBits($other.$height0))
        return 0;
    if (jl_Float_floatToRawIntBits($this.$width0) != jl_Float_floatToRawIntBits($other.$width0))
        return 0;
    if (jl_Float_floatToRawIntBits($this.$x1) != jl_Float_floatToRawIntBits($other.$x1))
        return 0;
    return jl_Float_floatToRawIntBits($this.$y1) != jl_Float_floatToRawIntBits($other.$y1) ? 0 : 1;
}
function iaamg_Rectangle__clinit_() {
    iaamg_Rectangle_tmp = iaamg_Rectangle__init_0();
    iaamg_Rectangle_tmp2 = iaamg_Rectangle__init_0();
}
function iaagg_TextureAtlas$TextureAtlasData$Page() {
    var a = this; jl_Object.call(a);
    a.$textureFile = null;
    a.$width14 = 0.0;
    a.$height13 = 0.0;
    a.$useMipMaps0 = 0;
    a.$format4 = null;
    a.$minFilter0 = null;
    a.$magFilter0 = null;
    a.$uWrap0 = null;
    a.$vWrap0 = null;
    a.$texture2 = null;
}
function iaagg_TextureAtlas$TextureAtlasData$Page__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) {
    var var_9 = new iaagg_TextureAtlas$TextureAtlasData$Page();
    iaagg_TextureAtlas$TextureAtlasData$Page__init_0(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
}
function iaagg_TextureAtlas$TextureAtlasData$Page__init_0($this, $handle, $width, $height, $useMipMaps, $format, $minFilter, $magFilter, $uWrap, $vWrap) {
    jl_Object__init_0($this);
    $this.$width14 = $width;
    $this.$height13 = $height;
    $this.$textureFile = $handle;
    $this.$useMipMaps0 = $useMipMaps;
    $this.$format4 = $format;
    $this.$minFilter0 = $minFilter;
    $this.$magFilter0 = $magFilter;
    $this.$uWrap0 = $uWrap;
    $this.$vWrap0 = $vWrap;
}
function otcju_TAbstractSet() {
    otcju_TAbstractCollection.call(this);
}
function otcju_TAbstractSet__init_() {
    var var_0 = new otcju_TAbstractSet();
    otcju_TAbstractSet__init_0(var_0);
    return var_0;
}
function otcju_TAbstractSet__init_0($this) {
    otcju_TAbstractCollection__init_0($this);
}
function otcju_THashSet() {
    otcju_TAbstractSet.call(this);
    this.$backingMap = null;
}
function otcju_THashSet__init_() {
    var var_0 = new otcju_THashSet();
    otcju_THashSet__init_0(var_0);
    return var_0;
}
function otcju_THashSet__init_1(var_0) {
    var var_1 = new otcju_THashSet();
    otcju_THashSet__init_2(var_1, var_0);
    return var_1;
}
function otcju_THashSet__init_0($this) {
    otcju_THashSet__init_2($this, otcju_THashMap__init_());
}
function otcju_THashSet__init_2($this, $backingMap) {
    otcju_TAbstractSet__init_0($this);
    $this.$backingMap = $backingMap;
}
function ie_EntityGroup$draw$lambda$_5_0() {
    jl_Object.call(this);
}
function ie_EntityGroup$draw$lambda$_5_0__init_() {
    var var_0 = new ie_EntityGroup$draw$lambda$_5_0();
    ie_EntityGroup$draw$lambda$_5_0__init_0(var_0);
    return var_0;
}
function ie_EntityGroup$draw$lambda$_5_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function ie_EntityGroup$draw$lambda$_5_0_get(var$0, var$1) {
    return ie_EntityGroup$draw$lambda$_5_0_get0(var$0, var$1);
}
function ie_EntityGroup$draw$lambda$_5_0_get0(var$0, var$1) {
    return ie_EntityGroup_lambda$draw$1(var$1);
}
function it_Phases$lambda$static$44$lambda$_23_0() {
    jl_Object.call(this);
}
function it_Phases$lambda$static$44$lambda$_23_0__init_() {
    var var_0 = new it_Phases$lambda$static$44$lambda$_23_0();
    it_Phases$lambda$static$44$lambda$_23_0__init_0(var_0);
    return var_0;
}
function it_Phases$lambda$static$44$lambda$_23_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$lambda$static$44$lambda$_23_0_run(var$0) {
    it_Phases_lambda$null$43();
}
function it_Phases$1$lambda$null$8$lambda$_16_0() {
    jl_Object.call(this);
    this.$_0124 = 0.0;
}
function it_Phases$1$lambda$null$8$lambda$_16_0__init_(var_0) {
    var var_1 = new it_Phases$1$lambda$null$8$lambda$_16_0();
    it_Phases$1$lambda$null$8$lambda$_16_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$1$lambda$null$8$lambda$_16_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0124 = var$1;
}
function it_Phases$1$lambda$null$8$lambda$_16_0_get(var$0, var$1) {
    it_Phases$1_lambda$null$7(var$0.$_0124, var$1);
}
function iaac_IntArray() {
    var a = this; jl_Object.call(a);
    a.$items3 = null;
    a.$size5 = 0;
    a.$ordered3 = 0;
}
function iaac_IntArray__init_0() {
    var var_0 = new iaac_IntArray();
    iaac_IntArray__init_1(var_0);
    return var_0;
}
function iaac_IntArray__init_(var_0) {
    var var_1 = new iaac_IntArray();
    iaac_IntArray__init_2(var_1, var_0);
    return var_1;
}
function iaac_IntArray__init_3(var_0, var_1) {
    var var_2 = new iaac_IntArray();
    iaac_IntArray__init_4(var_2, var_0, var_1);
    return var_2;
}
function iaac_IntArray__init_1($this) {
    iaac_IntArray__init_4($this, 1, 16);
}
function iaac_IntArray__init_2($this, $capacity) {
    iaac_IntArray__init_4($this, 1, $capacity);
}
function iaac_IntArray__init_4($this, $ordered, $capacity) {
    jl_Object__init_0($this);
    $this.$ordered3 = $ordered;
    $this.$items3 = $rt_createIntArray($capacity);
}
function iaac_IntArray_add($this, $value) {
    var $items, var$3, var$4;
    $items = $this.$items3;
    var$3 = $items.data;
    if ($this.$size5 == var$3.length)
        $items = $this.$resize5(jl_Math_max1(8, $this.$size5 * 1.75 | 0));
    var$3 = $items.data;
    var$4 = $this.$size5;
    $this.$size5 = var$4 + 1 | 0;
    var$3[var$4] = $value;
}
function iaac_IntArray_get($this, $index) {
    if ($index < $this.$size5)
        return $this.$items3.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(302)).$append3($index).$append($rt_s(303)).$append3($this.$size5).$toString()));
}
function iaac_IntArray_set($this, $index, $value) {
    if ($index < $this.$size5) {
        $this.$items3.data[$index] = $value;
        return;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(302)).$append3($index).$append($rt_s(303)).$append3($this.$size5).$toString()));
}
function iaac_IntArray_incr($this, $index, $value) {
    var var$3;
    if ($index < $this.$size5) {
        var$3 = $this.$items3.data;
        var$3[$index] = var$3[$index] + $value | 0;
        return;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(302)).$append3($index).$append($rt_s(303)).$append3($this.$size5).$toString()));
}
function iaac_IntArray_insert($this, $index, $value) {
    var $items, var$4;
    if ($index > $this.$size5)
        $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(1268)).$append3($index).$append($rt_s(306)).$append3($this.$size5).$toString()));
    $items = $this.$items3;
    var$4 = $items.data;
    if ($this.$size5 == var$4.length)
        $items = $this.$resize5(jl_Math_max1(8, $this.$size5 * 1.75 | 0));
    if (!$this.$ordered3) {
        var$4 = $items.data;
        var$4[$this.$size5] = var$4[$index];
    } else
        jl_System_arraycopy($items, $index, $items, $index + 1 | 0, $this.$size5 - $index | 0);
    var$4 = $items.data;
    $this.$size5 = $this.$size5 + 1 | 0;
    var$4[$index] = $value;
}
function iaac_IntArray_contains($this, $value) {
    var $i, $items, var$4, var$5;
    $i = $this.$size5 - 1 | 0;
    $items = $this.$items3;
    while ($i >= 0) {
        var$4 = $items.data;
        var$5 = $i + (-1) | 0;
        if (var$4[$i] == $value)
            return 1;
        $i = var$5;
    }
    return 0;
}
function iaac_IntArray_removeValue($this, $value) {
    var $items, $i, $n;
    $items = $this.$items3;
    $i = 0;
    $n = $this.$size5;
    while ($i < $n) {
        if ($items.data[$i] == $value) {
            $this.$removeIndex0($i);
            return 1;
        }
        $i = $i + 1 | 0;
    }
    return 0;
}
function iaac_IntArray_removeIndex($this, $index) {
    var $items, var$3, $value;
    if ($index >= $this.$size5)
        $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(302)).$append3($index).$append($rt_s(303)).$append3($this.$size5).$toString()));
    $items = $this.$items3;
    var$3 = $items.data;
    $value = var$3[$index];
    $this.$size5 = $this.$size5 - 1 | 0;
    if (!$this.$ordered3)
        var$3[$index] = var$3[$this.$size5];
    else
        jl_System_arraycopy($items, $index + 1 | 0, $items, $index, $this.$size5 - $index | 0);
    return $value;
}
function iaac_IntArray_pop($this) {
    var var$1, var$2;
    var$1 = $this.$items3.data;
    var$2 = $this.$size5 - 1 | 0;
    $this.$size5 = var$2;
    return var$1[var$2];
}
function iaac_IntArray_clear($this) {
    $this.$size5 = 0;
}
function iaac_IntArray_ensureCapacity($this, $additionalCapacity) {
    var $sizeNeeded;
    if ($additionalCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(307)).$append3($additionalCapacity).$toString()));
    $sizeNeeded = $this.$size5 + $additionalCapacity | 0;
    if ($sizeNeeded > $this.$items3.data.length)
        $this.$resize5(jl_Math_max1(8, $sizeNeeded));
    return $this.$items3;
}
function iaac_IntArray_setSize($this, $newSize) {
    if ($newSize < 0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(308)).$append3($newSize).$toString()));
    if ($newSize > $this.$items3.data.length)
        $this.$resize5(jl_Math_max1(8, $newSize));
    $this.$size5 = $newSize;
    return $this.$items3;
}
function iaac_IntArray_resize($this, $newSize) {
    var $newItems, var$3, $items;
    $newItems = $rt_createIntArray($newSize);
    var$3 = $newItems.data;
    $items = $this.$items3;
    jl_System_arraycopy($items, 0, $newItems, 0, jl_Math_min1($this.$size5, var$3.length));
    $this.$items3 = $newItems;
    return $newItems;
}
function iaac_IntArray_equals($this, $object) {
    var $array, $n, $i;
    if ($object === $this)
        return 1;
    if (!$this.$ordered3)
        return 0;
    if (!($object instanceof iaac_IntArray))
        return 0;
    $array = $object;
    if (!$array.$ordered3)
        return 0;
    $n = $this.$size5;
    if ($n != $array.$size5)
        return 0;
    $i = 0;
    while ($i < $n) {
        if ($this.$items3.data[$i] != $array.$items3.data[$i])
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
function iaac_IntArray_toString($this) {
    var $items, var$2, $buffer, $i;
    if (!$this.$size5)
        return $rt_s(368);
    $items = $this.$items3;
    var$2 = $items.data;
    $buffer = jl_StringBuilder__init_0(32);
    $buffer.$append0(91);
    $buffer.$append3(var$2[0]);
    $i = 1;
    while ($i < $this.$size5) {
        $buffer.$append($rt_s(516));
        $buffer.$append3(var$2[$i]);
        $i = $i + 1 | 0;
    }
    $buffer.$append0(93);
    return $buffer.$toString();
}
function it_Phases$3$lambda$$14$lambda$_18_0() {
    jl_Object.call(this);
}
function it_Phases$3$lambda$$14$lambda$_18_0__init_() {
    var var_0 = new it_Phases$3$lambda$$14$lambda$_18_0();
    it_Phases$3$lambda$$14$lambda$_18_0__init_0(var_0);
    return var_0;
}
function it_Phases$3$lambda$$14$lambda$_18_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$3$lambda$$14$lambda$_18_0_run(var$0) {
    it_Phases$3_lambda$null$13();
}
function jur_AbstractCharClass$LazyASCII() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyASCII__init_() {
    var var_0 = new jur_AbstractCharClass$LazyASCII();
    jur_AbstractCharClass$LazyASCII__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyASCII__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyASCII_computeValue($this) {
    return jur_CharClass__init_().$add0(0, 127);
}
function iaac_ObjectSet() {
    var a = this; jl_Object.call(a);
    a.$size14 = 0;
    a.$keyTable4 = null;
    a.$capacity6 = 0;
    a.$stashSize4 = 0;
    a.$loadFactor6 = 0.0;
    a.$hashShift3 = 0;
    a.$mask5 = 0;
    a.$threshold8 = 0;
    a.$stashCapacity3 = 0;
    a.$pushIterations3 = 0;
}
function iaac_ObjectSet__init_(var_0) {
    var var_1 = new iaac_ObjectSet();
    iaac_ObjectSet__init_0(var_1, var_0);
    return var_1;
}
function iaac_ObjectSet__init_1(var_0, var_1) {
    var var_2 = new iaac_ObjectSet();
    iaac_ObjectSet__init_2(var_2, var_0, var_1);
    return var_2;
}
function iaac_ObjectSet__init_0($this, $initialCapacity) {
    iaac_ObjectSet__init_2($this, $initialCapacity, 0.800000011920929);
}
function iaac_ObjectSet__init_2($this, $initialCapacity, $loadFactor) {
    var var$3;
    jl_Object__init_0($this);
    if ($initialCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(280)).$append3($initialCapacity).$toString()));
    var$3 = iaam_Mathf_nextPowerOfTwo(jl_Math_ceil($initialCapacity / $loadFactor) | 0);
    if (var$3 > 1073741824)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(281)).$append3(var$3).$toString()));
    $this.$capacity6 = var$3;
    if ($loadFactor <= 0.0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(282)).$append13($loadFactor).$toString()));
    $this.$loadFactor6 = $loadFactor;
    $this.$threshold8 = $this.$capacity6 * $loadFactor | 0;
    $this.$mask5 = $this.$capacity6 - 1 | 0;
    $this.$hashShift3 = 31 - jl_Integer_numberOfTrailingZeros($this.$capacity6) | 0;
    $this.$stashCapacity3 = jl_Math_max1(3, (jl_Math_ceil(jl_Math_log($this.$capacity6)) | 0) * 2 | 0);
    $this.$pushIterations3 = jl_Math_max1(jl_Math_min1($this.$capacity6, 8), (jl_Math_sqrt($this.$capacity6) | 0) / 8 | 0);
    $this.$keyTable4 = $rt_createArray(jl_Object, $this.$capacity6 + $this.$stashCapacity3 | 0);
}
function iaac_ObjectSet_add($this, $key) {
    var $keyTable, var$3, $hashCode, $index1, $key1, $index2, $key2, $index3, $key3, $i, $n, var$13;
    if ($key === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(283)));
    $keyTable = $this.$keyTable4;
    var$3 = $keyTable.data;
    $hashCode = $key.$hashCode();
    $index1 = $hashCode & $this.$mask5;
    $key1 = var$3[$index1];
    if ($key.$equals($key1))
        return 0;
    $index2 = iaac_ObjectSet_hash2($this, $hashCode);
    $key2 = var$3[$index2];
    if ($key.$equals($key2))
        return 0;
    $index3 = iaac_ObjectSet_hash3($this, $hashCode);
    $key3 = var$3[$index3];
    if ($key.$equals($key3))
        return 0;
    $i = $this.$capacity6;
    $n = $i + $this.$stashSize4 | 0;
    while (true) {
        if ($i >= $n) {
            if ($key1 === null) {
                var$3[$index1] = $key;
                var$13 = $this.$size14;
                $this.$size14 = var$13 + 1 | 0;
                if (var$13 >= $this.$threshold8)
                    iaac_ObjectSet_resize($this, $this.$capacity6 << 1);
                return 1;
            }
            if ($key2 === null) {
                var$3[$index2] = $key;
                var$13 = $this.$size14;
                $this.$size14 = var$13 + 1 | 0;
                if (var$13 >= $this.$threshold8)
                    iaac_ObjectSet_resize($this, $this.$capacity6 << 1);
                return 1;
            }
            if ($key3 !== null) {
                iaac_ObjectSet_push($this, $key, $index1, $key1, $index2, $key2, $index3, $key3);
                return 1;
            }
            var$3[$index3] = $key;
            var$13 = $this.$size14;
            $this.$size14 = var$13 + 1 | 0;
            if (var$13 >= $this.$threshold8)
                iaac_ObjectSet_resize($this, $this.$capacity6 << 1);
            return 1;
        }
        if ($key.$equals(var$3[$i]))
            break;
        $i = $i + 1 | 0;
    }
    return 0;
}
function iaac_ObjectSet_addResize($this, $key) {
    var $hashCode, $index1, $key1, var$5, $index2, $key2, $index3, $key3;
    $hashCode = $key.$hashCode();
    $index1 = $hashCode & $this.$mask5;
    $key1 = $this.$keyTable4.data[$index1];
    if ($key1 === null) {
        $this.$keyTable4.data[$index1] = $key;
        var$5 = $this.$size14;
        $this.$size14 = var$5 + 1 | 0;
        if (var$5 >= $this.$threshold8)
            iaac_ObjectSet_resize($this, $this.$capacity6 << 1);
        return;
    }
    $index2 = iaac_ObjectSet_hash2($this, $hashCode);
    $key2 = $this.$keyTable4.data[$index2];
    if ($key2 === null) {
        $this.$keyTable4.data[$index2] = $key;
        var$5 = $this.$size14;
        $this.$size14 = var$5 + 1 | 0;
        if (var$5 >= $this.$threshold8)
            iaac_ObjectSet_resize($this, $this.$capacity6 << 1);
        return;
    }
    $index3 = iaac_ObjectSet_hash3($this, $hashCode);
    $key3 = $this.$keyTable4.data[$index3];
    if ($key3 !== null) {
        iaac_ObjectSet_push($this, $key, $index1, $key1, $index2, $key2, $index3, $key3);
        return;
    }
    $this.$keyTable4.data[$index3] = $key;
    var$5 = $this.$size14;
    $this.$size14 = var$5 + 1 | 0;
    if (var$5 >= $this.$threshold8)
        iaac_ObjectSet_resize($this, $this.$capacity6 << 1);
}
function iaac_ObjectSet_push($this, $insertKey, $index1, $key1, $index2, $key2, $index3, $key3) {
    var $keyTable, $mask, $i, $pushIterations, var$12, $hashCode, var$14, var$15, var$16;
    $keyTable = $this.$keyTable4;
    $mask = $this.$mask5;
    $i = 0;
    $pushIterations = $this.$pushIterations3;
    while (true) {
        a: {
            switch (iaam_Mathf_random(2)) {
                case 0:
                    break;
                case 1:
                    $keyTable.data[$index2] = $insertKey;
                    $key1 = $key2;
                    break a;
                default:
                    $keyTable.data[$index3] = $insertKey;
                    $key1 = $key3;
                    break a;
            }
            $keyTable.data[$index1] = $insertKey;
        }
        var$12 = $keyTable.data;
        $hashCode = $key1.$hashCode();
        $index1 = $hashCode & $mask;
        var$14 = var$12[$index1];
        if (var$14 === null) {
            var$12[$index1] = $key1;
            var$15 = $this.$size14;
            $this.$size14 = var$15 + 1 | 0;
            if (var$15 >= $this.$threshold8)
                iaac_ObjectSet_resize($this, $this.$capacity6 << 1);
            return;
        }
        $index2 = iaac_ObjectSet_hash2($this, $hashCode);
        $key2 = var$12[$index2];
        if ($key2 === null) {
            var$12[$index2] = $key1;
            var$15 = $this.$size14;
            $this.$size14 = var$15 + 1 | 0;
            if (var$15 >= $this.$threshold8)
                iaac_ObjectSet_resize($this, $this.$capacity6 << 1);
            return;
        }
        $index3 = iaac_ObjectSet_hash3($this, $hashCode);
        $key3 = var$12[$index3];
        if ($key3 === null) {
            var$12[$index3] = $key1;
            var$16 = $this.$size14;
            $this.$size14 = var$16 + 1 | 0;
            if (var$16 >= $this.$threshold8)
                iaac_ObjectSet_resize($this, $this.$capacity6 << 1);
            return;
        }
        $i = $i + 1 | 0;
        if ($i == $pushIterations)
            break;
        $insertKey = $key1;
        $key1 = var$14;
    }
    iaac_ObjectSet_addStash($this, $key1);
}
function iaac_ObjectSet_addStash($this, $key) {
    var $index;
    if ($this.$stashSize4 == $this.$stashCapacity3) {
        iaac_ObjectSet_resize($this, $this.$capacity6 << 1);
        iaac_ObjectSet_addResize($this, $key);
        return;
    }
    $index = $this.$capacity6 + $this.$stashSize4 | 0;
    $this.$keyTable4.data[$index] = $key;
    $this.$stashSize4 = $this.$stashSize4 + 1 | 0;
    $this.$size14 = $this.$size14 + 1 | 0;
}
function iaac_ObjectSet_resize($this, $newSize) {
    var $oldEndIndex, var$3, $oldKeyTable, $oldSize, $i, $key;
    a: {
        $oldEndIndex = $this.$capacity6 + $this.$stashSize4 | 0;
        $this.$capacity6 = $newSize;
        $this.$threshold8 = $newSize * $this.$loadFactor6 | 0;
        $this.$mask5 = $newSize - 1 | 0;
        $this.$hashShift3 = 31 - jl_Integer_numberOfTrailingZeros($newSize) | 0;
        var$3 = $newSize;
        $this.$stashCapacity3 = jl_Math_max1(3, (jl_Math_ceil(jl_Math_log(var$3)) | 0) * 2 | 0);
        $this.$pushIterations3 = jl_Math_max1(jl_Math_min1($newSize, 8), (jl_Math_sqrt(var$3) | 0) / 8 | 0);
        $oldKeyTable = $this.$keyTable4;
        $this.$keyTable4 = $rt_createArray(jl_Object, $newSize + $this.$stashCapacity3 | 0);
        $oldSize = $this.$size14;
        $this.$size14 = 0;
        $this.$stashSize4 = 0;
        if ($oldSize > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldEndIndex)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key !== null)
                    iaac_ObjectSet_addResize($this, $key);
                $i = $i + 1 | 0;
            }
        }
    }
}
function iaac_ObjectSet_hash2($this, $h) {
    var var$2;
    var$2 = $rt_imul($h, (-1262997959));
    return (var$2 ^ var$2 >>> $this.$hashShift3) & $this.$mask5;
}
function iaac_ObjectSet_hash3($this, $h) {
    var var$2;
    var$2 = $rt_imul($h, (-825114047));
    return (var$2 ^ var$2 >>> $this.$hashShift3) & $this.$mask5;
}
function iaag_Pixmap$Blending() {
    jl_Enum.call(this);
}
var iaag_Pixmap$Blending_None = null;
var iaag_Pixmap$Blending_SourceOver = null;
var iaag_Pixmap$Blending_$VALUES = null;
function iaag_Pixmap$Blending_$callClinit() {
    iaag_Pixmap$Blending_$callClinit = $rt_eraseClinit(iaag_Pixmap$Blending);
    iaag_Pixmap$Blending__clinit_();
}
function iaag_Pixmap$Blending__init_(var_0, var_1) {
    var var_2 = new iaag_Pixmap$Blending();
    iaag_Pixmap$Blending__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaag_Pixmap$Blending_values() {
    iaag_Pixmap$Blending_$callClinit();
    return iaag_Pixmap$Blending_$VALUES.$clone();
}
function iaag_Pixmap$Blending__init_0($this, var$1, var$2) {
    iaag_Pixmap$Blending_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaag_Pixmap$Blending__clinit_() {
    var var$1, var$2;
    iaag_Pixmap$Blending_None = iaag_Pixmap$Blending__init_($rt_s(1269), 0);
    iaag_Pixmap$Blending_SourceOver = iaag_Pixmap$Blending__init_($rt_s(1270), 1);
    var$1 = $rt_createArray(iaag_Pixmap$Blending, 2);
    var$2 = var$1.data;
    var$2[0] = iaag_Pixmap$Blending_None;
    var$2[1] = iaag_Pixmap$Blending_SourceOver;
    iaag_Pixmap$Blending_$VALUES = var$1;
}
function iaase_FocusListener$FocusEvent$Type() {
    jl_Enum.call(this);
}
var iaase_FocusListener$FocusEvent$Type_keyboard = null;
var iaase_FocusListener$FocusEvent$Type_scroll = null;
var iaase_FocusListener$FocusEvent$Type_$VALUES = null;
function iaase_FocusListener$FocusEvent$Type_$callClinit() {
    iaase_FocusListener$FocusEvent$Type_$callClinit = $rt_eraseClinit(iaase_FocusListener$FocusEvent$Type);
    iaase_FocusListener$FocusEvent$Type__clinit_();
}
function iaase_FocusListener$FocusEvent$Type__init_(var_0, var_1) {
    var var_2 = new iaase_FocusListener$FocusEvent$Type();
    iaase_FocusListener$FocusEvent$Type__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaase_FocusListener$FocusEvent$Type_values() {
    iaase_FocusListener$FocusEvent$Type_$callClinit();
    return iaase_FocusListener$FocusEvent$Type_$VALUES.$clone();
}
function iaase_FocusListener$FocusEvent$Type__init_0($this, var$1, var$2) {
    iaase_FocusListener$FocusEvent$Type_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaase_FocusListener$FocusEvent$Type__clinit_() {
    var var$1, var$2;
    iaase_FocusListener$FocusEvent$Type_keyboard = iaase_FocusListener$FocusEvent$Type__init_($rt_s(1271), 0);
    iaase_FocusListener$FocusEvent$Type_scroll = iaase_FocusListener$FocusEvent$Type__init_($rt_s(1272), 1);
    var$1 = $rt_createArray(iaase_FocusListener$FocusEvent$Type, 2);
    var$2 = var$1.data;
    var$2[0] = iaase_FocusListener$FocusEvent$Type_keyboard;
    var$2[1] = iaase_FocusListener$FocusEvent$Type_scroll;
    iaase_FocusListener$FocusEvent$Type_$VALUES = var$1;
}
function it_Phases$lambda$static$31$lambda$_36_0() {
    jl_Object.call(this);
    this.$_0125 = 0.0;
}
function it_Phases$lambda$static$31$lambda$_36_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$static$31$lambda$_36_0();
    it_Phases$lambda$static$31$lambda$_36_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$static$31$lambda$_36_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0125 = var$1;
}
function it_Phases$lambda$static$31$lambda$_36_0_get(var$0, var$1) {
    it_Phases_lambda$null$30(var$0.$_0125, var$1);
}
function iaam_Interpolation$PowIn() {
    iaam_Interpolation$Pow.call(this);
}
function iaam_Interpolation$PowIn__init_(var_0) {
    var var_1 = new iaam_Interpolation$PowIn();
    iaam_Interpolation$PowIn__init_0(var_1, var_0);
    return var_1;
}
function iaam_Interpolation$PowIn__init_0($this, $power) {
    iaam_Interpolation$Pow__init_0($this, $power);
}
function iaam_Interpolation$PowIn_apply($this, $a) {
    return jl_Math_pow($a, $this.$power0);
}
function i_Control$_init_$lambda$_0_0() {
    jl_Object.call(this);
    this.$_0126 = null;
}
function i_Control$_init_$lambda$_0_0__init_(var_0) {
    var var_1 = new i_Control$_init_$lambda$_0_0();
    i_Control$_init_$lambda$_0_0__init_0(var_1, var_0);
    return var_1;
}
function i_Control$_init_$lambda$_0_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0126 = var$1;
}
function i_Control$_init_$lambda$_0_0_get(var$0) {
    return i_Control_lambda$new$0(var$0.$_0126);
}
function jur_Quantifier() {
    var a = this; jur_SpecialToken.call(a);
    a.$min5 = 0;
    a.$max5 = 0;
}
function jur_Quantifier__init_(var_0, var_1) {
    var var_2 = new jur_Quantifier();
    jur_Quantifier__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_Quantifier__init_0($this, $min, $max) {
    jur_SpecialToken__init_0($this);
    $this.$min5 = $min;
    $this.$max5 = $max;
}
function jur_Quantifier_min($this) {
    return $this.$min5;
}
function jur_Quantifier_max($this) {
    return $this.$max5;
}
function jur_Quantifier_toString($this) {
    return jl_StringBuilder__init_().$append($rt_s(25)).$append3($this.$min5).$append($rt_s(430)).$append($this.$max5 == 2147483647 ? $rt_s(58) : jl_Integer__init_($this.$max5).$toString()).$append($rt_s(26)).$toString();
}
function iaaua_AsyncExecutor() {
    jl_Object.call(this);
}
function iaaua_AsyncExecutor__init_(var_0) {
    var var_1 = new iaaua_AsyncExecutor();
    iaaua_AsyncExecutor__init_0(var_1, var_0);
    return var_1;
}
function iaaua_AsyncExecutor__init_0($this, $maxConcurrent) {
    jl_Object__init_0($this);
}
function jur_AbstractCharClass$LazyJavaUpperCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$041 = null;
}
function jur_AbstractCharClass$LazyJavaUpperCase$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaUpperCase$1();
    jur_AbstractCharClass$LazyJavaUpperCase$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaUpperCase$1__init_0($this, $this$0) {
    $this.$this$041 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaUpperCase$1_contains($this, $ch) {
    return jl_Character_isUpperCase($ch);
}
function iaat_TypingConfig$_clinit_$lambda$_3_2() {
    jl_Object.call(this);
}
function iaat_TypingConfig$_clinit_$lambda$_3_2__init_() {
    var var_0 = new iaat_TypingConfig$_clinit_$lambda$_3_2();
    iaat_TypingConfig$_clinit_$lambda$_3_2__init_0(var_0);
    return var_0;
}
function iaat_TypingConfig$_clinit_$lambda$_3_2__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaat_TypingConfig$_clinit_$lambda$_3_2_get(var$0, var$1) {
    return iaat_TypingConfig$_clinit_$lambda$_3_2_get0(var$0, var$1);
}
function iaat_TypingConfig$_clinit_$lambda$_3_2_get0(var$0, var$1) {
    return iaate_ShakeEffect__init_(var$1);
}
function iaat_TypingConfig$_clinit_$lambda$_3_3() {
    jl_Object.call(this);
}
function iaat_TypingConfig$_clinit_$lambda$_3_3__init_() {
    var var_0 = new iaat_TypingConfig$_clinit_$lambda$_3_3();
    iaat_TypingConfig$_clinit_$lambda$_3_3__init_0(var_0);
    return var_0;
}
function iaat_TypingConfig$_clinit_$lambda$_3_3__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaat_TypingConfig$_clinit_$lambda$_3_3_get(var$0, var$1) {
    return iaat_TypingConfig$_clinit_$lambda$_3_3_get0(var$0, var$1);
}
function iaat_TypingConfig$_clinit_$lambda$_3_3_get0(var$0, var$1) {
    return iaate_SickEffect__init_(var$1);
}
function iaat_TypingConfig$_clinit_$lambda$_3_4() {
    jl_Object.call(this);
}
function iaat_TypingConfig$_clinit_$lambda$_3_4__init_() {
    var var_0 = new iaat_TypingConfig$_clinit_$lambda$_3_4();
    iaat_TypingConfig$_clinit_$lambda$_3_4__init_0(var_0);
    return var_0;
}
function iaat_TypingConfig$_clinit_$lambda$_3_4__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaat_TypingConfig$_clinit_$lambda$_3_4_get(var$0, var$1) {
    return iaat_TypingConfig$_clinit_$lambda$_3_4_get0(var$0, var$1);
}
function iaat_TypingConfig$_clinit_$lambda$_3_4_get0(var$0, var$1) {
    return iaate_WaveEffect__init_(var$1);
}
function iaat_TypingConfig$_clinit_$lambda$_3_5() {
    jl_Object.call(this);
}
function iaat_TypingConfig$_clinit_$lambda$_3_5__init_() {
    var var_0 = new iaat_TypingConfig$_clinit_$lambda$_3_5();
    iaat_TypingConfig$_clinit_$lambda$_3_5__init_0(var_0);
    return var_0;
}
function iaat_TypingConfig$_clinit_$lambda$_3_5__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaat_TypingConfig$_clinit_$lambda$_3_5_get(var$0, var$1) {
    return iaat_TypingConfig$_clinit_$lambda$_3_5_get0(var$0, var$1);
}
function iaat_TypingConfig$_clinit_$lambda$_3_5_get0(var$0, var$1) {
    return iaate_WindEffect__init_(var$1);
}
function iaat_TypingConfig$_clinit_$lambda$_3_6() {
    jl_Object.call(this);
}
function iaat_TypingConfig$_clinit_$lambda$_3_6__init_() {
    var var_0 = new iaat_TypingConfig$_clinit_$lambda$_3_6();
    iaat_TypingConfig$_clinit_$lambda$_3_6__init_0(var_0);
    return var_0;
}
function iaat_TypingConfig$_clinit_$lambda$_3_6__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaat_TypingConfig$_clinit_$lambda$_3_6_get(var$0, var$1) {
    return iaat_TypingConfig$_clinit_$lambda$_3_6_get0(var$0, var$1);
}
function iaat_TypingConfig$_clinit_$lambda$_3_6_get0(var$0, var$1) {
    return iaate_RainbowEffect__init_(var$1);
}
function iaat_TypingConfig$_clinit_$lambda$_3_7() {
    jl_Object.call(this);
}
function iaat_TypingConfig$_clinit_$lambda$_3_7__init_() {
    var var_0 = new iaat_TypingConfig$_clinit_$lambda$_3_7();
    iaat_TypingConfig$_clinit_$lambda$_3_7__init_0(var_0);
    return var_0;
}
function iaat_TypingConfig$_clinit_$lambda$_3_7__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaat_TypingConfig$_clinit_$lambda$_3_7_get(var$0, var$1) {
    return iaat_TypingConfig$_clinit_$lambda$_3_7_get0(var$0, var$1);
}
function iaat_TypingConfig$_clinit_$lambda$_3_7_get0(var$0, var$1) {
    return iaate_GradientEffect__init_(var$1);
}
function otpp_ResourceAccessor() {
    jl_Object.call(this);
}
function iaat_TypingConfig$_clinit_$lambda$_3_8() {
    jl_Object.call(this);
}
function iaat_TypingConfig$_clinit_$lambda$_3_8__init_() {
    var var_0 = new iaat_TypingConfig$_clinit_$lambda$_3_8();
    iaat_TypingConfig$_clinit_$lambda$_3_8__init_0(var_0);
    return var_0;
}
function iaat_TypingConfig$_clinit_$lambda$_3_8__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaat_TypingConfig$_clinit_$lambda$_3_8_get(var$0, var$1) {
    return iaat_TypingConfig$_clinit_$lambda$_3_8_get0(var$0, var$1);
}
function iaat_TypingConfig$_clinit_$lambda$_3_8_get0(var$0, var$1) {
    return iaate_FadeEffect__init_(var$1);
}
function iaat_TypingConfig$_clinit_$lambda$_3_9() {
    jl_Object.call(this);
}
function iaat_TypingConfig$_clinit_$lambda$_3_9__init_() {
    var var_0 = new iaat_TypingConfig$_clinit_$lambda$_3_9();
    iaat_TypingConfig$_clinit_$lambda$_3_9__init_0(var_0);
    return var_0;
}
function iaat_TypingConfig$_clinit_$lambda$_3_9__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaat_TypingConfig$_clinit_$lambda$_3_9_get(var$0, var$1) {
    return iaat_TypingConfig$_clinit_$lambda$_3_9_get0(var$0, var$1);
}
function iaat_TypingConfig$_clinit_$lambda$_3_9_get0(var$0, var$1) {
    return iaate_BlinkEffect__init_(var$1);
}
function ig_Pal() {
    jl_Object.call(this);
}
var ig_Pal_player = null;
var ig_Pal_lucine = null;
var ig_Pal_candle = null;
var ig_Pal_fireball = null;
function ig_Pal_$callClinit() {
    ig_Pal_$callClinit = $rt_eraseClinit(ig_Pal);
    ig_Pal__clinit_();
}
function ig_Pal__clinit_() {
    ig_Pal_player = iaag_Color_valueOf($rt_s(1273));
    ig_Pal_lucine = iaag_Color_valueOf($rt_s(1274));
    ig_Pal_candle = iaag_Color_orange.$cpy();
    ig_Pal_fireball = iaag_Color_orange.$cpy();
}
function iaabt_TeaApplication$1() {
    jl_Object.call(this);
    this.$this$042 = null;
}
function iaabt_TeaApplication$1__init_(var_0) {
    var var_1 = new iaabt_TeaApplication$1();
    iaabt_TeaApplication$1__init_0(var_1, var_0);
    return var_1;
}
function iaabt_TeaApplication$1__init_0($this, $this$0) {
    $this.$this$042 = $this$0;
    jl_Object__init_0($this);
}
function iaabt_TeaApplication$1_error($this) {
    return;
}
function iaabt_TeaApplication$1_complete($this) {
    iaabt_TeaApplication_access$000($this.$this$042);
}
function iaat_TypingConfig$_clinit_$lambda$_3_0() {
    jl_Object.call(this);
}
function iaat_TypingConfig$_clinit_$lambda$_3_0__init_() {
    var var_0 = new iaat_TypingConfig$_clinit_$lambda$_3_0();
    iaat_TypingConfig$_clinit_$lambda$_3_0__init_0(var_0);
    return var_0;
}
function iaat_TypingConfig$_clinit_$lambda$_3_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaat_TypingConfig$_clinit_$lambda$_3_0_get(var$0, var$1) {
    return iaat_TypingConfig$_clinit_$lambda$_3_0_get0(var$0, var$1);
}
function iaat_TypingConfig$_clinit_$lambda$_3_0_get0(var$0, var$1) {
    return iaate_EaseEffect__init_(var$1);
}
function iaate_GradientEffect() {
    var a = this; iaat_Effect.call(a);
    a.$color19 = null;
    a.$color21 = null;
    a.$distance3 = 0.0;
    a.$frequency1 = 0.0;
}
function iaate_GradientEffect__init_(var_0) {
    var var_1 = new iaate_GradientEffect();
    iaate_GradientEffect__init_0(var_1, var_0);
    return var_1;
}
function iaate_GradientEffect__init_0($this, $label) {
    var var$2, var$3;
    iaat_Effect__init_0($this, $label);
    $this.$color19 = null;
    $this.$color21 = null;
    $this.$distance3 = 1.0;
    $this.$frequency1 = 1.0;
    if ($this.$color19 === null) {
        var$2 = new iaag_Color;
        iaag_Color_$callClinit();
        iaag_Color__init_8(var$2, iaag_Color_white);
        $this.$color19 = var$2;
    }
    if ($this.$color21 === null) {
        var$3 = new iaag_Color;
        iaag_Color_$callClinit();
        iaag_Color__init_8(var$3, iaag_Color_white);
        $this.$color21 = var$3;
    }
}
function iaate_GradientEffect_onApply($this, $glyph, $localIndex, $delta) {
    var $distanceMod, $frequencyMod, $progress, var$7;
    $distanceMod = 1.0 / $this.$distance3 * 0.02499997615814209;
    $frequencyMod = 1.0 / $this.$frequency1 * 2.0;
    $progress = $this.$calculateProgress($frequencyMod, $distanceMod * $localIndex, 1);
    if ($glyph.$color11 === null) {
        var$7 = new iaag_Color;
        iaag_Color_$callClinit();
        iaag_Color__init_8(var$7, iaag_Color_white);
        $glyph.$color11 = var$7;
    }
    $glyph.$color11.$set($this.$color19).$lerp($this.$color21, $progress);
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1() {
    jur_AbstractCharClass.call(this);
    this.$this$043 = null;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1();
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_0($this, $this$0) {
    $this.$this$043 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains($this, $ch) {
    return jl_Character_isIdentifierIgnorable($ch);
}
function iaat_TypingConfig$_clinit_$lambda$_3_1() {
    jl_Object.call(this);
}
function iaat_TypingConfig$_clinit_$lambda$_3_1__init_() {
    var var_0 = new iaat_TypingConfig$_clinit_$lambda$_3_1();
    iaat_TypingConfig$_clinit_$lambda$_3_1__init_0(var_0);
    return var_0;
}
function iaat_TypingConfig$_clinit_$lambda$_3_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaat_TypingConfig$_clinit_$lambda$_3_1_get(var$0, var$1) {
    return iaat_TypingConfig$_clinit_$lambda$_3_1_get0(var$0, var$1);
}
function iaat_TypingConfig$_clinit_$lambda$_3_1_get0(var$0, var$1) {
    return iaate_JumpEffect__init_(var$1);
}
function it_Phases$1$_init_$lambda$_0_0() {
    jl_Object.call(this);
}
function it_Phases$1$_init_$lambda$_0_0__init_() {
    var var_0 = new it_Phases$1$_init_$lambda$_0_0();
    it_Phases$1$_init_$lambda$_0_0__init_0(var_0);
    return var_0;
}
function it_Phases$1$_init_$lambda$_0_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$1$_init_$lambda$_0_0_run(var$0) {
    it_Phases$1_lambda$$5();
}
function it_Phases$1$_init_$lambda$_0_1() {
    jl_Object.call(this);
}
function it_Phases$1$_init_$lambda$_0_1__init_() {
    var var_0 = new it_Phases$1$_init_$lambda$_0_1();
    it_Phases$1$_init_$lambda$_0_1__init_0(var_0);
    return var_0;
}
function it_Phases$1$_init_$lambda$_0_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$1$_init_$lambda$_0_1_run(var$0) {
    it_Phases$1_lambda$$10();
}
function iaam_Mathf$Sin() {
    jl_Object.call(this);
}
var iaam_Mathf$Sin_table = null;
function iaam_Mathf$Sin_$callClinit() {
    iaam_Mathf$Sin_$callClinit = $rt_eraseClinit(iaam_Mathf$Sin);
    iaam_Mathf$Sin__clinit_();
}
function iaam_Mathf$Sin__clinit_() {
    var $i, var$2, var$3;
    iaam_Mathf$Sin_table = $rt_createFloatArray(16384);
    $i = 0;
    while ($i < 16384) {
        iaam_Mathf$Sin_table.data[$i] = jl_Math_sin(($i + 0.5) / 16384.0 * 6.2831854820251465);
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < 360) {
        var$2 = iaam_Mathf$Sin_table.data;
        var$3 = $i;
        var$2[(var$3 * 45.511112213134766 | 0) & 16383] = jl_Math_sin(var$3 * 0.01745329238474369);
        $i = $i + 90 | 0;
    }
}
function it_Phases$1$_init_$lambda$_0_2() {
    jl_Object.call(this);
}
function it_Phases$1$_init_$lambda$_0_2__init_() {
    var var_0 = new it_Phases$1$_init_$lambda$_0_2();
    it_Phases$1$_init_$lambda$_0_2__init_0(var_0);
    return var_0;
}
function it_Phases$1$_init_$lambda$_0_2__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$1$_init_$lambda$_0_2_run(var$0) {
    it_Phases$1_lambda$$18();
}
function iaat_TypeLabel$layoutCache$lambda$_39_0() {
    jl_Object.call(this);
}
function iaat_TypeLabel$layoutCache$lambda$_39_0__init_() {
    var var_0 = new iaat_TypeLabel$layoutCache$lambda$_39_0();
    iaat_TypeLabel$layoutCache$lambda$_39_0__init_0(var_0);
    return var_0;
}
function iaat_TypeLabel$layoutCache$lambda$_39_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaat_TypeLabel$layoutCache$lambda$_39_0_get(var$0) {
    return iaat_TypeLabel$layoutCache$lambda$_39_0_get0(var$0);
}
function iaat_TypeLabel$layoutCache$lambda$_39_0_get0(var$0) {
    return iaat_TypingGlyph__init_();
}
function it_Phases$1$_init_$lambda$_0_3() {
    jl_Object.call(this);
}
function it_Phases$1$_init_$lambda$_0_3__init_() {
    var var_0 = new it_Phases$1$_init_$lambda$_0_3();
    it_Phases$1$_init_$lambda$_0_3__init_0(var_0);
    return var_0;
}
function it_Phases$1$_init_$lambda$_0_3__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$1$_init_$lambda$_0_3_run(var$0) {
    it_Phases$1_lambda$$22();
}
function iaabt_TeaApplication$step$lambda$_4_0() {
    jl_Object.call(this);
    this.$_0127 = null;
}
function iaabt_TeaApplication$step$lambda$_4_0__init_(var_0) {
    var var_1 = new iaabt_TeaApplication$step$lambda$_4_0();
    iaabt_TeaApplication$step$lambda$_4_0__init_0(var_1, var_0);
    return var_1;
}
function iaabt_TeaApplication$step$lambda$_4_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0127 = var$1;
}
function iaabt_TeaApplication$step$lambda$_4_0_get(var$0, var$1) {
    iaabt_TeaApplication$step$lambda$_4_0_get0(var$0, var$1);
}
function iaabt_TeaApplication$step$lambda$_4_0_get0(var$0, var$1) {
    iaabt_TeaApplication_lambda$step$2(var$0.$_0127, var$1);
}
function it_Boss$onDeath$lambda$_1_0() {
    jl_Object.call(this);
    this.$_0128 = null;
}
function it_Boss$onDeath$lambda$_1_0__init_(var_0) {
    var var_1 = new it_Boss$onDeath$lambda$_1_0();
    it_Boss$onDeath$lambda$_1_0__init_0(var_1, var_0);
    return var_1;
}
function it_Boss$onDeath$lambda$_1_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0128 = var$1;
}
function it_Boss$onDeath$lambda$_1_0_get(var$0, var$1) {
    it_Boss_lambda$onDeath$0(var$0.$_0128, var$1);
}
function jur_ReluctantQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
}
function jur_ReluctantQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_ReluctantQuantifierSet();
    jur_ReluctantQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_ReluctantQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_ReluctantQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    while (true) {
        var$4 = $this.$next.$matches($stringIndex, $testString, $matchResult);
        if (var$4 >= 0)
            break;
        if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$getRightBound()) {
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            $stringIndex = $stringIndex + var$4 | 0;
        }
        if (var$4 < 1)
            return (-1);
    }
    return var$4;
}
function iaabt_TeaApplication$step$lambda$_4_1() {
    jl_Object.call(this);
}
function iaabt_TeaApplication$step$lambda$_4_1__init_() {
    var var_0 = new iaabt_TeaApplication$step$lambda$_4_1();
    iaabt_TeaApplication$step$lambda$_4_1__init_0(var_0);
    return var_0;
}
function iaabt_TeaApplication$step$lambda$_4_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaabt_TeaApplication$step$lambda$_4_1_get(var$0, var$1) {
    iaabt_TeaApplication$step$lambda$_4_1_get0(var$0, var$1);
}
function iaabt_TeaApplication$step$lambda$_4_1_get0(var$0, var$1) {
    var$1.$update1();
}
function iaasu_ButtonGroup() {
    jl_Object.call(this);
}
function iaagg_BitmapFont$Glyph() {
    var a = this; jl_Object.call(a);
    a.$id0 = 0;
    a.$srcX = 0;
    a.$srcY = 0;
    a.$width6 = 0;
    a.$height10 = 0;
    a.$u0 = 0.0;
    a.$v0 = 0.0;
    a.$u20 = 0.0;
    a.$v20 = 0.0;
    a.$xoffset = 0;
    a.$yoffset = 0;
    a.$xadvance = 0;
    a.$kerning = null;
    a.$fixedWidth = 0;
    a.$page0 = 0;
}
function iaagg_BitmapFont$Glyph__init_() {
    var var_0 = new iaagg_BitmapFont$Glyph();
    iaagg_BitmapFont$Glyph__init_0(var_0);
    return var_0;
}
function iaagg_BitmapFont$Glyph__init_0($this) {
    jl_Object__init_0($this);
    $this.$page0 = 0;
}
function iaagg_BitmapFont$Glyph_getKerning($this, $ch) {
    var $page;
    if ($this.$kerning !== null) {
        $page = $this.$kerning.data[$ch >>> 9];
        if ($page !== null)
            return $page.data[$ch & 511];
    }
    return 0;
}
function iaagg_BitmapFont$Glyph_setKerning($this, $ch, $value) {
    var var$3, var$4, $page;
    if ($this.$kerning === null)
        $this.$kerning = $rt_createArray($rt_arraycls($rt_bytecls()), 128);
    var$3 = $this.$kerning.data;
    var$4 = $ch >>> 9;
    $page = var$3[var$4];
    if ($page === null) {
        var$3 = $this.$kerning.data;
        $page = $rt_createByteArray(512);
        var$3[var$4] = $page;
    }
    $page.data[$ch & 511] = $value << 24 >> 24;
}
function iaagg_BitmapFont$Glyph_toString($this) {
    return jl_Character_toString($this.$id0 & 65535);
}
function iaam_Interpolation$ExpOut() {
    iaam_Interpolation$Exp.call(this);
}
function iaam_Interpolation$ExpOut__init_(var_0, var_1) {
    var var_2 = new iaam_Interpolation$ExpOut();
    iaam_Interpolation$ExpOut__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaam_Interpolation$ExpOut__init_0($this, $value, $power) {
    iaam_Interpolation$Exp__init_0($this, $value, $power);
}
function iaam_Interpolation$ExpOut_apply($this, $a) {
    return 1.0 - (jl_Math_pow($this.$value4,  -$this.$power1 * $a) - $this.$min4) * $this.$scale3;
}
function iaabt_TeaFileLoader$LoadFileTask() {
    var a = this; jl_Object.call(a);
    a.$entry2 = null;
    a.$path1 = null;
    a.$handler1 = null;
}
function iaabt_TeaFileLoader$LoadFileTask__init_(var_0, var_1) {
    var var_2 = new iaabt_TeaFileLoader$LoadFileTask();
    iaabt_TeaFileLoader$LoadFileTask__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaabt_TeaFileLoader$LoadFileTask__init_0($this, $entry, $path) {
    jl_Object__init_0($this);
    $this.$entry2 = $entry;
    $this.$path1 = $path;
}
function iaabt_TeaFileLoader$LoadFileTask_run($this, $handler) {
    var var$2, var$3, var$4;
    $this.$handler1 = $handler;
    var$2 = iaabt_TeaFileLoader_access$000();
    var$3 = otji_JS_function($this, "stateChanged");
    var$2.onreadystatechange = var$3;
    var$2 = iaabt_TeaFileLoader_access$000();
    var$4 = $this.$path1;
    var$2.open("GET", $rt_ustr(var$4));
    iaabt_TeaFileLoader_access$000().overrideMimeType("text/plain; charset=x-user-defined");
    iaabt_TeaFileLoader_access$000().send();
}
function iaabt_TeaFileLoader$LoadFileTask_stateChanged($this) {
    var $text, $i;
    if (iaabt_TeaFileLoader_access$000().readyState != 4)
        return;
    if (iaabt_TeaFileLoader_access$000().status != 200) {
        $this.$handler1.$error0();
        return;
    }
    $text = $rt_str(iaabt_TeaFileLoader_access$000().responseText);
    $this.$entry2.$data0 = $rt_createByteArray($text.$length());
    $i = 0;
    while ($i < $text.$length()) {
        $this.$entry2.$data0.data[$i] = $text.$charAt($i) << 24 >> 24;
        $i = $i + 1 | 0;
    }
    $this.$handler1.$complete0();
}
function iaabt_TeaFileLoader$LoadFileTask_stateChanged$exported$0(var$0) {
    var$0.$stateChanged();
}
function iaat_TokenEntry() {
    var a = this; jl_Object.call(a);
    a.$token = null;
    a.$category2 = null;
    a.$index8 = 0;
    a.$floatValue = 0.0;
    a.$stringValue = null;
    a.$effect3 = null;
}
function iaat_TokenEntry__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new iaat_TokenEntry();
    iaat_TokenEntry__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function iaat_TokenEntry__init_0($this, $token, $category, $index, $floatValue, $stringValue) {
    jl_Object__init_0($this);
    $this.$token = $token;
    $this.$category2 = $category;
    $this.$index8 = $index;
    $this.$floatValue = $floatValue;
    $this.$stringValue = $stringValue;
}
function iaat_TokenEntry_compareTo($this, $o) {
    return jl_Integer_compare($this.$index8, $o.$index8);
}
function iaat_TokenEntry_compareTo0($this, var$1) {
    return $this.$compareTo4(var$1);
}
function jur_EOISet() {
    jur_AbstractSet.call(this);
}
function jur_EOISet__init_() {
    var var_0 = new jur_EOISet();
    jur_EOISet__init_0(var_0);
    return var_0;
}
function jur_EOISet__init_0($this) {
    jur_AbstractSet__init_0($this);
}
function jur_EOISet_matches($this, $stringIndex, $testString, $matchResult) {
    var $rightBound;
    $rightBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getRightBound() : $testString.$length();
    if ($stringIndex < $rightBound)
        return (-1);
    $matchResult.$hitEnd = 1;
    $matchResult.$requireEnd = 1;
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_EOISet_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_EOISet_getName($this) {
    return $rt_s(1275);
}
function iaau_BufferUtils() {
    jl_Object.call(this);
}
var iaau_BufferUtils_unsafeBuffers = null;
var iaau_BufferUtils_allocatedUnsafe = 0;
function iaau_BufferUtils_$callClinit() {
    iaau_BufferUtils_$callClinit = $rt_eraseClinit(iaau_BufferUtils);
    iaau_BufferUtils__clinit_();
}
function iaau_BufferUtils_copy($src, $dst, $numFloats, $offset) {
    iaau_BufferUtils_$callClinit();
    if ($dst instanceof jn_ByteBuffer)
        $dst.$limit0($numFloats << 2);
    else if ($dst instanceof jn_FloatBuffer)
        $dst.$limit0($numFloats);
    cbgu_BufferUtils_copyJni($src, $dst, $numFloats, $offset);
    $dst.$position(0);
}
function iaau_BufferUtils_newFloatBuffer($numFloats) {
    var $buffer;
    iaau_BufferUtils_$callClinit();
    $buffer = jn_ByteBuffer_allocateDirect($numFloats * 4 | 0);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    return $buffer.$asFloatBuffer();
}
function iaau_BufferUtils_newByteBuffer($numBytes) {
    var $buffer;
    iaau_BufferUtils_$callClinit();
    $buffer = jn_ByteBuffer_allocateDirect($numBytes);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    return $buffer;
}
function iaau_BufferUtils_newShortBuffer($numShorts) {
    var $buffer;
    iaau_BufferUtils_$callClinit();
    $buffer = jn_ByteBuffer_allocateDirect($numShorts * 2 | 0);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    return $buffer.$asShortBuffer();
}
function iaau_BufferUtils_newIntBuffer($numInts) {
    var $buffer;
    iaau_BufferUtils_$callClinit();
    $buffer = jn_ByteBuffer_allocateDirect($numInts * 4 | 0);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    return $buffer.$asIntBuffer();
}
function iaau_BufferUtils_disposeUnsafeByteBuffer($buffer) {
    var $size, var$3, var$4, $$je;
    iaau_BufferUtils_$callClinit();
    $size = jn_Buffer_capacity($buffer);
    var$3 = iaau_BufferUtils_unsafeBuffers;
    jl_Object_monitorEnterSync(var$3);
    a: {
        try {
            if (!iaau_BufferUtils_unsafeBuffers.$removeValue($buffer, 1))
                $rt_throw(jl_IllegalArgumentException__init_($rt_s(1276)));
            jl_Object_monitorExitSync(var$3);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$4 = $$je;

        }
        jl_Object_monitorExitSync(var$3);
        $rt_throw(var$4);
    }
    iaau_BufferUtils_allocatedUnsafe = iaau_BufferUtils_allocatedUnsafe - $size | 0;
    cbgu_BufferUtils_freeMemory($buffer);
}
function iaau_BufferUtils_newUnsafeByteBuffer($numBytes) {
    var $buffer, var$3, var$4, $$je;
    iaau_BufferUtils_$callClinit();
    $buffer = cbgu_BufferUtils_newDisposableByteBuffer($numBytes);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    iaau_BufferUtils_allocatedUnsafe = iaau_BufferUtils_allocatedUnsafe + $numBytes | 0;
    var$3 = iaau_BufferUtils_unsafeBuffers;
    jl_Object_monitorEnterSync(var$3);
    a: {
        try {
            iaau_BufferUtils_unsafeBuffers.$add1($buffer);
            jl_Object_monitorExitSync(var$3);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$4 = $$je;
            break a;

        }
        return $buffer;
    }
    jl_Object_monitorExitSync(var$3);
    $rt_throw(var$4);
}
function iaau_BufferUtils__clinit_() {
    iaau_BufferUtils_unsafeBuffers = iaac_Array__init_0();
    iaau_BufferUtils_allocatedUnsafe = 0;
}
function it_Phases$1$lambda$null$7$lambda$_17_0() {
    var a = this; jl_Object.call(a);
    a.$_0129 = 0;
    a.$_151 = 0.0;
}
function it_Phases$1$lambda$null$7$lambda$_17_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$1$lambda$null$7$lambda$_17_0();
    it_Phases$1$lambda$null$7$lambda$_17_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$1$lambda$null$7$lambda$_17_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_0129 = var$1;
    var$0.$_151 = var$2;
}
function it_Phases$1$lambda$null$7$lambda$_17_0_run(var$0) {
    it_Phases$1_lambda$null$6(var$0.$_0129, var$0.$_151);
}
function jn_ByteBufferImpl() {
    var a = this; jn_ByteBuffer.call(a);
    a.$direct = 0;
    a.$readOnly4 = 0;
}
function jn_ByteBufferImpl__init_(var_0, var_1) {
    var var_2 = new jn_ByteBufferImpl();
    jn_ByteBufferImpl__init_1(var_2, var_0, var_1);
    return var_2;
}
function jn_ByteBufferImpl__init_0(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new jn_ByteBufferImpl();
    jn_ByteBufferImpl__init_2(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function jn_ByteBufferImpl__init_1($this, $capacity, $direct) {
    jn_ByteBufferImpl__init_2($this, 0, $capacity, $rt_createByteArray($capacity), 0, $capacity, $direct, 0);
}
function jn_ByteBufferImpl__init_2($this, $start, $capacity, $array, $position, $limit, $direct, $readOnly) {
    jn_ByteBuffer__init_0($this, $start, $capacity, $array, $position, $limit);
    $this.$direct = $direct;
    $this.$readOnly4 = $readOnly;
}
function jn_ByteBufferImpl_duplicate($this) {
    return jn_ByteBufferImpl__init_0($this.$start7, $this.$capacity, $this.$array, $this.$position0, $this.$limit1, $this.$direct, $this.$readOnly4);
}
function jn_ByteBufferImpl_compact($this) {
    var $sz, $dst, $src, $i, var$5, var$6, var$7, var$8;
    if ($this.$readOnly4)
        $rt_throw(jn_ReadOnlyBufferException__init_());
    a: {
        $sz = jn_Buffer_remaining($this);
        if ($this.$position0 > 0) {
            $dst = $this.$start7;
            $src = $this.$start7 + $this.$position0 | 0;
            $i = 0;
            while (true) {
                if ($i >= $sz)
                    break a;
                var$5 = $this.$array.data;
                var$6 = $dst + 1 | 0;
                var$7 = $this.$array.data;
                var$8 = $src + 1 | 0;
                var$5[$dst] = var$7[$src];
                $i = $i + 1 | 0;
                $dst = var$6;
                $src = var$8;
            }
        }
    }
    $this.$position0 = $sz;
    $this.$limit1 = $this.$capacity;
    $this.$mark = (-1);
    return $this;
}
function jn_ByteBufferImpl_isReadOnly($this) {
    return $this.$readOnly4;
}
function jn_ByteBufferImpl_asShortBuffer($this) {
    var $sz, var$2;
    $sz = jn_Buffer_remaining($this) / 2 | 0;
    var$2 = $this.$order0;
    jn_ByteOrder_$callClinit();
    if (var$2 !== jn_ByteOrder_BIG_ENDIAN)
        return jn_ShortBufferOverByteBufferLittleEndian__init_($this.$start7 + $this.$position0 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
    return jn_ShortBufferOverByteBufferBigEndian__init_($this.$start7 + $this.$position0 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
}
function jn_ByteBufferImpl_asIntBuffer($this) {
    var $sz, var$2;
    $sz = jn_Buffer_remaining($this) / 4 | 0;
    var$2 = $this.$order0;
    jn_ByteOrder_$callClinit();
    if (var$2 !== jn_ByteOrder_BIG_ENDIAN)
        return jn_IntBufferOverByteBufferLittleEndian__init_($this.$start7 + $this.$position0 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
    return jn_IntBufferOverByteBufferBigEndian__init_($this.$start7 + $this.$position0 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
}
function jn_ByteBufferImpl_asFloatBuffer($this) {
    var $sz, var$2;
    $sz = jn_Buffer_remaining($this) / 4 | 0;
    var$2 = $this.$order0;
    jn_ByteOrder_$callClinit();
    if (var$2 !== jn_ByteOrder_LITTLE_ENDIAN)
        return jn_FloatBufferOverByteBufferLittleEndian__init_($this.$start7 + $this.$position0 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
    return jn_FloatBufferOverByteBufferBigEndian__init_($this.$start7 + $this.$position0 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
}
function it_Phases$seq$lambda$_2_0() {
    var a = this; jl_Object.call(a);
    a.$_0130 = 0.0;
    a.$_152 = null;
}
function it_Phases$seq$lambda$_2_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$seq$lambda$_2_0();
    it_Phases$seq$lambda$_2_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$seq$lambda$_2_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_0130 = var$1;
    var$0.$_152 = var$2;
}
function it_Phases$seq$lambda$_2_0_get(var$0, var$1) {
    it_Phases_lambda$seq$61(var$0.$_0130, var$0.$_152, var$1);
}
function iaai_KeyCode$KeyType() {
    jl_Enum.call(this);
}
var iaai_KeyCode$KeyType_key = null;
var iaai_KeyCode$KeyType_mouse = null;
var iaai_KeyCode$KeyType_controller = null;
var iaai_KeyCode$KeyType_scroll = null;
var iaai_KeyCode$KeyType_$VALUES = null;
function iaai_KeyCode$KeyType_$callClinit() {
    iaai_KeyCode$KeyType_$callClinit = $rt_eraseClinit(iaai_KeyCode$KeyType);
    iaai_KeyCode$KeyType__clinit_();
}
function iaai_KeyCode$KeyType__init_(var_0, var_1) {
    var var_2 = new iaai_KeyCode$KeyType();
    iaai_KeyCode$KeyType__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaai_KeyCode$KeyType_values() {
    iaai_KeyCode$KeyType_$callClinit();
    return iaai_KeyCode$KeyType_$VALUES.$clone();
}
function iaai_KeyCode$KeyType__init_0($this, var$1, var$2) {
    iaai_KeyCode$KeyType_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaai_KeyCode$KeyType__clinit_() {
    var var$1, var$2;
    iaai_KeyCode$KeyType_key = iaai_KeyCode$KeyType__init_($rt_s(1277), 0);
    iaai_KeyCode$KeyType_mouse = iaai_KeyCode$KeyType__init_($rt_s(1278), 1);
    iaai_KeyCode$KeyType_controller = iaai_KeyCode$KeyType__init_($rt_s(1279), 2);
    iaai_KeyCode$KeyType_scroll = iaai_KeyCode$KeyType__init_($rt_s(1272), 3);
    var$1 = $rt_createArray(iaai_KeyCode$KeyType, 4);
    var$2 = var$1.data;
    var$2[0] = iaai_KeyCode$KeyType_key;
    var$2[1] = iaai_KeyCode$KeyType_mouse;
    var$2[2] = iaai_KeyCode$KeyType_controller;
    var$2[3] = iaai_KeyCode$KeyType_scroll;
    iaai_KeyCode$KeyType_$VALUES = var$1;
}
function iaate_WaveEffect() {
    var a = this; iaat_Effect.call(a);
    a.$distance4 = 0.0;
    a.$frequency2 = 0.0;
    a.$intensity4 = 0.0;
}
function iaate_WaveEffect__init_(var_0) {
    var var_1 = new iaate_WaveEffect();
    iaate_WaveEffect__init_0(var_1, var_0);
    return var_1;
}
function iaate_WaveEffect__init_0($this, $label) {
    iaat_Effect__init_0($this, $label);
    $this.$distance4 = 1.0;
    $this.$frequency2 = 1.0;
    $this.$intensity4 = 1.0;
}
function iaate_WaveEffect_onApply($this, $glyph, $localIndex, $delta) {
    var $progressModifier, $normalFrequency, $progressOffset, $progress, var$8, $y, $fadeout, var$11;
    $progressModifier = 1.0 / $this.$intensity4 * 0.5;
    $normalFrequency = 1.0 / $this.$frequency2 * 15.0;
    $progressOffset = $localIndex / $normalFrequency;
    $progress = $this.$calculateProgress0($progressModifier, $progressOffset);
    var$8 = $this.$getLineHeight() * $this.$distance4;
    iaam_Interpolation_$callClinit();
    $y = var$8 * iaam_Interpolation_sine.$apply0((-1.0), 1.0, $progress) * 0.33000001311302185;
    $fadeout = $this.$calculateFadeout();
    var$11 = $y * $fadeout;
    $glyph.$yoffset = $glyph.$yoffset + var$11 | 0;
}
function iaac_OrderedMap() {
    iaac_ObjectMap.call(this);
    this.$keys0 = null;
}
function iaac_OrderedMap__init_() {
    var var_0 = new iaac_OrderedMap();
    iaac_OrderedMap__init_0(var_0);
    return var_0;
}
function iaac_OrderedMap__init_0($this) {
    iaac_ObjectMap__init_0($this);
    $this.$keys0 = iaac_Array__init_0();
}
function iaac_OrderedMap_put($this, $key, $value) {
    if (!$this.$containsKey($key))
        $this.$keys0.$add1($key);
    return iaac_ObjectMap_put($this, $key, $value);
}
function iaac_OrderedMap_clear($this) {
    $this.$keys0.$clear();
    iaac_ObjectMap_clear($this);
}
function it_Phases$1$lambda$null$1$lambda$_23_0() {
    jl_Object.call(this);
    this.$_0131 = 0;
}
function it_Phases$1$lambda$null$1$lambda$_23_0__init_(var_0) {
    var var_1 = new it_Phases$1$lambda$null$1$lambda$_23_0();
    it_Phases$1$lambda$null$1$lambda$_23_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$1$lambda$null$1$lambda$_23_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0131 = var$1;
}
function it_Phases$1$lambda$null$1$lambda$_23_0_move(var$0, var$1) {
    return it_Phases$1_lambda$null$0(var$0.$_0131, var$1);
}
function it_Phases$1$lambda$$5$lambda$_19_0() {
    jl_Object.call(this);
}
function it_Phases$1$lambda$$5$lambda$_19_0__init_() {
    var var_0 = new it_Phases$1$lambda$$5$lambda$_19_0();
    it_Phases$1$lambda$$5$lambda$_19_0__init_0(var_0);
    return var_0;
}
function it_Phases$1$lambda$$5$lambda$_19_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$1$lambda$$5$lambda$_19_0_run(var$0) {
    it_Phases$1_lambda$null$4();
}
function jnc_BufferUnderflowException() {
    jl_RuntimeException.call(this);
}
function jnc_BufferUnderflowException__init_() {
    var var_0 = new jnc_BufferUnderflowException();
    jnc_BufferUnderflowException__init_0(var_0);
    return var_0;
}
function jnc_BufferUnderflowException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function it_Phases$1$lambda$null$2$lambda$_22_0() {
    jl_Object.call(this);
    this.$_0132 = 0;
}
function it_Phases$1$lambda$null$2$lambda$_22_0__init_(var_0) {
    var var_1 = new it_Phases$1$lambda$null$2$lambda$_22_0();
    it_Phases$1$lambda$null$2$lambda$_22_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$1$lambda$null$2$lambda$_22_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0132 = var$1;
}
function it_Phases$1$lambda$null$2$lambda$_22_0_get(var$0, var$1) {
    it_Phases$1_lambda$null$1(var$0.$_0132, var$1);
}
function juz_DataFormatException() {
    jl_Exception.call(this);
}
function juz_DataFormatException__init_0() {
    var var_0 = new juz_DataFormatException();
    juz_DataFormatException__init_1(var_0);
    return var_0;
}
function juz_DataFormatException__init_(var_0) {
    var var_1 = new juz_DataFormatException();
    juz_DataFormatException__init_2(var_1, var_0);
    return var_1;
}
function juz_DataFormatException__init_1($this) {
    jl_Exception__init_0($this);
}
function juz_DataFormatException__init_2($this, $detailMessage) {
    jl_Exception__init_4($this, $detailMessage);
}
function iaac_IntFloatMap() {
    var a = this; jl_Object.call(a);
    a.$size15 = 0;
    a.$keyTable5 = null;
    a.$valueTable3 = null;
    a.$capacity7 = 0;
    a.$stashSize5 = 0;
    a.$zeroValue0 = 0.0;
    a.$hasZeroValue1 = 0;
    a.$loadFactor7 = 0.0;
    a.$hashShift4 = 0;
    a.$mask6 = 0;
    a.$threshold9 = 0;
    a.$stashCapacity4 = 0;
    a.$pushIterations4 = 0;
}
function iaac_IntFloatMap__init_() {
    var var_0 = new iaac_IntFloatMap();
    iaac_IntFloatMap__init_0(var_0);
    return var_0;
}
function iaac_IntFloatMap__init_1(var_0, var_1) {
    var var_2 = new iaac_IntFloatMap();
    iaac_IntFloatMap__init_2(var_2, var_0, var_1);
    return var_2;
}
function iaac_IntFloatMap__init_0($this) {
    iaac_IntFloatMap__init_2($this, 51, 0.800000011920929);
}
function iaac_IntFloatMap__init_2($this, $initialCapacity, $loadFactor) {
    var var$3;
    jl_Object__init_0($this);
    if ($initialCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(280)).$append3($initialCapacity).$toString()));
    var$3 = iaam_Mathf_nextPowerOfTwo(jl_Math_ceil($initialCapacity / $loadFactor) | 0);
    if (var$3 > 1073741824)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(281)).$append3(var$3).$toString()));
    $this.$capacity7 = var$3;
    if ($loadFactor <= 0.0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(282)).$append13($loadFactor).$toString()));
    $this.$loadFactor7 = $loadFactor;
    $this.$threshold9 = $this.$capacity7 * $loadFactor | 0;
    $this.$mask6 = $this.$capacity7 - 1 | 0;
    $this.$hashShift4 = 31 - jl_Integer_numberOfTrailingZeros($this.$capacity7) | 0;
    $this.$stashCapacity4 = jl_Math_max1(3, (jl_Math_ceil(jl_Math_log($this.$capacity7)) | 0) * 2 | 0);
    $this.$pushIterations4 = jl_Math_max1(jl_Math_min1($this.$capacity7, 8), (jl_Math_sqrt($this.$capacity7) | 0) / 8 | 0);
    $this.$keyTable5 = $rt_createIntArray($this.$capacity7 + $this.$stashCapacity4 | 0);
    $this.$valueTable3 = $rt_createFloatArray($this.$keyTable5.data.length);
}
function iaac_IntFloatMap_put($this, $key, $value) {
    var $keyTable, var$4, $index1, $key1, $index2, $key2, $index3, $key3, $i, $n, var$13;
    if (!$key) {
        $this.$zeroValue0 = $value;
        if (!$this.$hasZeroValue1) {
            $this.$hasZeroValue1 = 1;
            $this.$size15 = $this.$size15 + 1 | 0;
        }
        return;
    }
    $keyTable = $this.$keyTable5;
    var$4 = $keyTable.data;
    $index1 = $key & $this.$mask6;
    $key1 = var$4[$index1];
    if ($key == $key1) {
        $this.$valueTable3.data[$index1] = $value;
        return;
    }
    $index2 = iaac_IntFloatMap_hash2($this, $key);
    $key2 = var$4[$index2];
    if ($key == $key2) {
        $this.$valueTable3.data[$index2] = $value;
        return;
    }
    $index3 = iaac_IntFloatMap_hash3($this, $key);
    $key3 = var$4[$index3];
    if ($key == $key3) {
        $this.$valueTable3.data[$index3] = $value;
        return;
    }
    $i = $this.$capacity7;
    $n = $i + $this.$stashSize5 | 0;
    while (true) {
        if ($i >= $n) {
            if (!$key1) {
                var$4[$index1] = $key;
                $this.$valueTable3.data[$index1] = $value;
                var$13 = $this.$size15;
                $this.$size15 = var$13 + 1 | 0;
                if (var$13 >= $this.$threshold9)
                    iaac_IntFloatMap_resize($this, $this.$capacity7 << 1);
                return;
            }
            if (!$key2) {
                var$4[$index2] = $key;
                $this.$valueTable3.data[$index2] = $value;
                var$13 = $this.$size15;
                $this.$size15 = var$13 + 1 | 0;
                if (var$13 >= $this.$threshold9)
                    iaac_IntFloatMap_resize($this, $this.$capacity7 << 1);
                return;
            }
            if ($key3) {
                iaac_IntFloatMap_push($this, $key, $value, $index1, $key1, $index2, $key2, $index3, $key3);
                return;
            }
            var$4[$index3] = $key;
            $this.$valueTable3.data[$index3] = $value;
            var$13 = $this.$size15;
            $this.$size15 = var$13 + 1 | 0;
            if (var$13 >= $this.$threshold9)
                iaac_IntFloatMap_resize($this, $this.$capacity7 << 1);
            return;
        }
        if ($key == var$4[$i])
            break;
        $i = $i + 1 | 0;
    }
    $this.$valueTable3.data[$i] = $value;
}
function iaac_IntFloatMap_putResize($this, $key, $value) {
    var $index1, $key1, var$5, $index2, $key2, $index3, $key3;
    if (!$key) {
        $this.$zeroValue0 = $value;
        $this.$hasZeroValue1 = 1;
        return;
    }
    $index1 = $key & $this.$mask6;
    $key1 = $this.$keyTable5.data[$index1];
    if (!$key1) {
        $this.$keyTable5.data[$index1] = $key;
        $this.$valueTable3.data[$index1] = $value;
        var$5 = $this.$size15;
        $this.$size15 = var$5 + 1 | 0;
        if (var$5 >= $this.$threshold9)
            iaac_IntFloatMap_resize($this, $this.$capacity7 << 1);
        return;
    }
    $index2 = iaac_IntFloatMap_hash2($this, $key);
    $key2 = $this.$keyTable5.data[$index2];
    if (!$key2) {
        $this.$keyTable5.data[$index2] = $key;
        $this.$valueTable3.data[$index2] = $value;
        var$5 = $this.$size15;
        $this.$size15 = var$5 + 1 | 0;
        if (var$5 >= $this.$threshold9)
            iaac_IntFloatMap_resize($this, $this.$capacity7 << 1);
        return;
    }
    $index3 = iaac_IntFloatMap_hash3($this, $key);
    $key3 = $this.$keyTable5.data[$index3];
    if ($key3) {
        iaac_IntFloatMap_push($this, $key, $value, $index1, $key1, $index2, $key2, $index3, $key3);
        return;
    }
    $this.$keyTable5.data[$index3] = $key;
    $this.$valueTable3.data[$index3] = $value;
    var$5 = $this.$size15;
    $this.$size15 = var$5 + 1 | 0;
    if (var$5 >= $this.$threshold9)
        iaac_IntFloatMap_resize($this, $this.$capacity7 << 1);
}
function iaac_IntFloatMap_push($this, $insertKey, $insertValue, $index1, $key1, $index2, $key2, $index3, $key3) {
    var $keyTable, $valueTable, $mask, $i, $pushIterations, var$14, var$15, $evictedValue, var$17, var$18;
    $keyTable = $this.$keyTable5;
    $valueTable = $this.$valueTable3;
    $mask = $this.$mask6;
    $i = 0;
    $pushIterations = $this.$pushIterations4;
    while (true) {
        a: {
            switch (iaam_Mathf_random(2)) {
                case 0:
                    break;
                case 1:
                    var$14 = $valueTable.data;
                    var$15 = $keyTable.data;
                    $evictedValue = var$14[$index2];
                    var$15[$index2] = $insertKey;
                    var$14[$index2] = $insertValue;
                    $key1 = $key2;
                    break a;
                default:
                    var$14 = $valueTable.data;
                    var$15 = $keyTable.data;
                    $evictedValue = var$14[$index3];
                    var$15[$index3] = $insertKey;
                    var$14[$index3] = $insertValue;
                    $key1 = $key3;
                    break a;
            }
            var$14 = $valueTable.data;
            var$15 = $keyTable.data;
            $evictedValue = var$14[$index1];
            var$15[$index1] = $insertKey;
            var$14[$index1] = $insertValue;
        }
        var$15 = $keyTable.data;
        $index1 = $key1 & $mask;
        var$17 = var$15[$index1];
        if (!var$17) {
            var$14 = $valueTable.data;
            var$15[$index1] = $key1;
            var$14[$index1] = $evictedValue;
            var$17 = $this.$size15;
            $this.$size15 = var$17 + 1 | 0;
            if (var$17 >= $this.$threshold9)
                iaac_IntFloatMap_resize($this, $this.$capacity7 << 1);
            return;
        }
        $index2 = iaac_IntFloatMap_hash2($this, $key1);
        $key2 = var$15[$index2];
        if (!$key2) {
            var$14 = $valueTable.data;
            var$15[$index2] = $key1;
            var$14[$index2] = $evictedValue;
            var$17 = $this.$size15;
            $this.$size15 = var$17 + 1 | 0;
            if (var$17 >= $this.$threshold9)
                iaac_IntFloatMap_resize($this, $this.$capacity7 << 1);
            return;
        }
        $index3 = iaac_IntFloatMap_hash3($this, $key1);
        $key3 = var$15[$index3];
        if (!$key3) {
            var$14 = $valueTable.data;
            var$15[$index3] = $key1;
            var$14[$index3] = $evictedValue;
            var$18 = $this.$size15;
            $this.$size15 = var$18 + 1 | 0;
            if (var$18 >= $this.$threshold9)
                iaac_IntFloatMap_resize($this, $this.$capacity7 << 1);
            return;
        }
        $i = $i + 1 | 0;
        if ($i == $pushIterations)
            break;
        $insertKey = $key1;
        $key1 = var$17;
        $insertValue = $evictedValue;
    }
    iaac_IntFloatMap_putStash($this, $key1, $evictedValue);
}
function iaac_IntFloatMap_putStash($this, $key, $value) {
    var $index;
    if ($this.$stashSize5 == $this.$stashCapacity4) {
        iaac_IntFloatMap_resize($this, $this.$capacity7 << 1);
        iaac_IntFloatMap_putResize($this, $key, $value);
        return;
    }
    $index = $this.$capacity7 + $this.$stashSize5 | 0;
    $this.$keyTable5.data[$index] = $key;
    $this.$valueTable3.data[$index] = $value;
    $this.$stashSize5 = $this.$stashSize5 + 1 | 0;
    $this.$size15 = $this.$size15 + 1 | 0;
}
function iaac_IntFloatMap_get($this, $key, $defaultValue) {
    var $index;
    if (!$key) {
        if (!$this.$hasZeroValue1)
            return $defaultValue;
        return $this.$zeroValue0;
    }
    $index = $key & $this.$mask6;
    if ($this.$keyTable5.data[$index] != $key) {
        $index = iaac_IntFloatMap_hash2($this, $key);
        if ($this.$keyTable5.data[$index] != $key) {
            $index = iaac_IntFloatMap_hash3($this, $key);
            if ($this.$keyTable5.data[$index] != $key)
                return iaac_IntFloatMap_getStash($this, $key, $defaultValue);
        }
    }
    return $this.$valueTable3.data[$index];
}
function iaac_IntFloatMap_getStash($this, $key, $defaultValue) {
    var $keyTable, $i, $n;
    $keyTable = $this.$keyTable5;
    $i = $this.$capacity7;
    $n = $i + $this.$stashSize5 | 0;
    while ($i < $n) {
        if ($key == $keyTable.data[$i])
            return $this.$valueTable3.data[$i];
        $i = $i + 1 | 0;
    }
    return $defaultValue;
}
function iaac_IntFloatMap_getAndIncrement($this, $key, $defaultValue, $increment) {
    var $value, $index;
    if (!$key) {
        if ($this.$hasZeroValue1) {
            $value = $this.$zeroValue0;
            $this.$zeroValue0 = $this.$zeroValue0 + $increment;
            return $value;
        }
        $this.$hasZeroValue1 = 1;
        $this.$zeroValue0 = $defaultValue + $increment;
        $this.$size15 = $this.$size15 + 1 | 0;
        return $defaultValue;
    }
    $index = $key & $this.$mask6;
    if ($key != $this.$keyTable5.data[$index]) {
        $index = iaac_IntFloatMap_hash2($this, $key);
        if ($key != $this.$keyTable5.data[$index]) {
            $index = iaac_IntFloatMap_hash3($this, $key);
            if ($key != $this.$keyTable5.data[$index])
                return iaac_IntFloatMap_getAndIncrementStash($this, $key, $defaultValue, $increment);
        }
    }
    $value = $this.$valueTable3.data[$index];
    $this.$valueTable3.data[$index] = $value + $increment;
    return $value;
}
function iaac_IntFloatMap_getAndIncrementStash($this, $key, $defaultValue, $increment) {
    var $keyTable, $i, $n, $value;
    $keyTable = $this.$keyTable5;
    $i = $this.$capacity7;
    $n = $i + $this.$stashSize5 | 0;
    while ($i < $n) {
        if ($key == $keyTable.data[$i]) {
            $value = $this.$valueTable3.data[$i];
            $this.$valueTable3.data[$i] = $value + $increment;
            return $value;
        }
        $i = $i + 1 | 0;
    }
    $this.$put4($key, $defaultValue + $increment);
    return $defaultValue;
}
function iaac_IntFloatMap_clear($this) {
    var $keyTable, $i, $i_0;
    if (!$this.$size15)
        return;
    $keyTable = $this.$keyTable5;
    $i = $this.$capacity7 + $this.$stashSize5 | 0;
    while (true) {
        $i_0 = $i + (-1) | 0;
        if ($i <= 0)
            break;
        $keyTable.data[$i_0] = 0;
        $i = $i_0;
    }
    $this.$hasZeroValue1 = 0;
    $this.$size15 = 0;
    $this.$stashSize5 = 0;
}
function iaac_IntFloatMap_resize($this, $newSize) {
    var $oldEndIndex, var$3, $oldKeyTable, $oldValueTable, $oldSize, var$7, $i, $key;
    $oldEndIndex = $this.$capacity7 + $this.$stashSize5 | 0;
    $this.$capacity7 = $newSize;
    $this.$threshold9 = $newSize * $this.$loadFactor7 | 0;
    $this.$mask6 = $newSize - 1 | 0;
    $this.$hashShift4 = 31 - jl_Integer_numberOfTrailingZeros($newSize) | 0;
    var$3 = $newSize;
    $this.$stashCapacity4 = jl_Math_max1(3, (jl_Math_ceil(jl_Math_log(var$3)) | 0) * 2 | 0);
    $this.$pushIterations4 = jl_Math_max1(jl_Math_min1($newSize, 8), (jl_Math_sqrt(var$3) | 0) / 8 | 0);
    $oldKeyTable = $this.$keyTable5;
    $oldValueTable = $this.$valueTable3;
    $this.$keyTable5 = $rt_createIntArray($newSize + $this.$stashCapacity4 | 0);
    $this.$valueTable3 = $rt_createFloatArray($newSize + $this.$stashCapacity4 | 0);
    $oldSize = $this.$size15;
    var$7 = !$this.$hasZeroValue1 ? 0 : 1;
    a: {
        $this.$size15 = var$7;
        $this.$stashSize5 = 0;
        if ($oldSize > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldEndIndex)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key)
                    iaac_IntFloatMap_putResize($this, $key, $oldValueTable.data[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
}
function iaac_IntFloatMap_hash2($this, $h) {
    var var$2;
    var$2 = $rt_imul($h, (-1262997959));
    return (var$2 ^ var$2 >>> $this.$hashShift4) & $this.$mask6;
}
function iaac_IntFloatMap_hash3($this, $h) {
    var var$2;
    var$2 = $rt_imul($h, (-825114047));
    return (var$2 ^ var$2 >>> $this.$hashShift4) & $this.$mask6;
}
function otjc_JSString() {
    jl_Object.call(this);
}
function otjc_JSString_stringValue$static($this) {
    return $rt_str($this);
}
function it_Bullets() {
    jl_Object.call(this);
}
var it_Bullets_basic = null;
var it_Bullets_lbasic = null;
var it_Bullets_lbasicslow = null;
var it_Bullets_lfast = null;
var it_Bullets_firebreath = null;
var it_Bullets_breathsmall = null;
var it_Bullets_breath2 = null;
var it_Bullets_breathfast = null;
var it_Bullets_fireball = null;
var it_Bullets_candle = null;
var it_Bullets_meteor = null;
var it_Bullets_laser = null;
function it_Bullets_$callClinit() {
    it_Bullets_$callClinit = $rt_eraseClinit(it_Bullets);
    it_Bullets__clinit_();
}
function it_Bullets__clinit_() {
    it_Bullets_basic = it_Bullets$1__init_();
    it_Bullets_lbasic = it_Bullets$2__init_();
    it_Bullets_lbasicslow = it_Bullets$3__init_();
    it_Bullets_lfast = it_Bullets$4__init_();
    it_Bullets_firebreath = it_Bullets$5__init_();
    it_Bullets_breathsmall = it_Bullets$6__init_();
    it_Bullets_breath2 = it_Bullets$7__init_();
    it_Bullets_breathfast = it_Bullets$8__init_();
    it_Bullets_fireball = it_Bullets$9__init_();
    it_Bullets_candle = it_Bullets$10__init_();
    it_Bullets_meteor = it_Bullets$11__init_();
    it_Bullets_laser = it_Bullets$12__init_();
}
function oti_AsyncCallback() {
}
function iaaus_JsonWriter$OutputType() {
    jl_Enum.call(this);
}
var iaaus_JsonWriter$OutputType_json = null;
var iaaus_JsonWriter$OutputType_javascript = null;
var iaaus_JsonWriter$OutputType_minimal = null;
var iaaus_JsonWriter$OutputType_javascriptPattern = null;
var iaaus_JsonWriter$OutputType_minimalNamePattern = null;
var iaaus_JsonWriter$OutputType_minimalValuePattern = null;
var iaaus_JsonWriter$OutputType_$VALUES = null;
function iaaus_JsonWriter$OutputType_$callClinit() {
    iaaus_JsonWriter$OutputType_$callClinit = $rt_eraseClinit(iaaus_JsonWriter$OutputType);
    iaaus_JsonWriter$OutputType__clinit_();
}
function iaaus_JsonWriter$OutputType__init_(var_0, var_1) {
    var var_2 = new iaaus_JsonWriter$OutputType();
    iaaus_JsonWriter$OutputType__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaaus_JsonWriter$OutputType_values() {
    iaaus_JsonWriter$OutputType_$callClinit();
    return iaaus_JsonWriter$OutputType_$VALUES.$clone();
}
function iaaus_JsonWriter$OutputType__init_0($this, var$1, var$2) {
    iaaus_JsonWriter$OutputType_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaaus_JsonWriter$OutputType__clinit_() {
    var var$1, var$2;
    iaaus_JsonWriter$OutputType_json = iaaus_JsonWriter$OutputType__init_($rt_s(1280), 0);
    iaaus_JsonWriter$OutputType_javascript = iaaus_JsonWriter$OutputType__init_($rt_s(1281), 1);
    iaaus_JsonWriter$OutputType_minimal = iaaus_JsonWriter$OutputType__init_($rt_s(1282), 2);
    var$1 = $rt_createArray(iaaus_JsonWriter$OutputType, 3);
    var$2 = var$1.data;
    var$2[0] = iaaus_JsonWriter$OutputType_json;
    var$2[1] = iaaus_JsonWriter$OutputType_javascript;
    var$2[2] = iaaus_JsonWriter$OutputType_minimal;
    iaaus_JsonWriter$OutputType_$VALUES = var$1;
    iaaus_JsonWriter$OutputType_javascriptPattern = jur_Pattern_compile($rt_s(1283));
    iaaus_JsonWriter$OutputType_minimalNamePattern = jur_Pattern_compile($rt_s(1284));
    iaaus_JsonWriter$OutputType_minimalValuePattern = jur_Pattern_compile($rt_s(1285));
}
function iaau_Time() {
    jl_Object.call(this);
}
var iaau_Time_time0 = 0.0;
var iaau_Time_runs = null;
var iaau_Time_removal = null;
var iaau_Time_marks = null;
var iaau_Time_deltaimpl = null;
function iaau_Time_$callClinit() {
    iaau_Time_$callClinit = $rt_eraseClinit(iaau_Time);
    iaau_Time__clinit_();
}
function iaau_Time_run($delay, $r) {
    var $run;
    jl_Object_monitorEnterSync($rt_cls(iaau_Time));
    try {
        iaau_Time_$callClinit();
        $run = iaaup_Pools_obtain($rt_cls(iaau_Time$DelayRun), iaau_Time$run$lambda$_1_0__init_());
        iaau_Time$DelayRun_access$002($run, $r);
        iaau_Time$DelayRun_access$102($run, $delay);
        iaau_Time_runs.$add1($run);
    } finally {
        jl_Object_monitorExitSync($rt_cls(iaau_Time));
    }
}
function iaau_Time_runTask($delay, $r) {
    jl_Object_monitorEnterSync($rt_cls(iaau_Time));
    try {
        iaau_Time_$callClinit();
        $rt_throw(jl_NoSuchMethodError__init_($rt_s(1286)));
    } finally {
        jl_Object_monitorExitSync($rt_cls(iaau_Time));
    }
}
function iaau_Time_time() {
    iaau_Time_$callClinit();
    return iaau_Time_time0;
}
function iaau_Time_update() {
    var $delta, var$2, $run;
    iaau_Time_$callClinit();
    $delta = iaau_Time_delta();
    iaau_Time_time0 = iaau_Time_time0 + $delta;
    iaau_Time_removal.$clear();
    if (!(!(!isFinite(iaau_Time_time0) ? 1 : 0) && !(isNaN(iaau_Time_time0) ? 1 : 0)))
        iaau_Time_time0 = 0.0;
    var$2 = iaau_Time_runs.$iterator();
    while (var$2.$hasNext()) {
        $run = var$2.$next0();
        iaau_Time$DelayRun_access$102($run, iaau_Time$DelayRun_access$100($run) - $delta);
        if (iaau_Time$DelayRun_access$100($run) <= 0.0) {
            iaau_Time$DelayRun_access$000($run).$run();
            iaau_Time_removal.$add1($run);
            iaaup_Pools_free($run);
        }
    }
    iaau_Time_runs.$removeAll0(iaau_Time_removal);
}
function iaau_Time_clear() {
    jl_Object_monitorEnterSync($rt_cls(iaau_Time));
    try {
        iaau_Time_$callClinit();
        iaau_Time_runs.$clear();
    } finally {
        jl_Object_monitorExitSync($rt_cls(iaau_Time));
    }
}
function iaau_Time_delta() {
    iaau_Time_$callClinit();
    return iaau_Time_deltaimpl.$get69();
}
function iaau_Time_setDeltaProvider($impl) {
    iaau_Time_$callClinit();
    iaau_Time_deltaimpl = $impl;
}
function iaau_Time_lambda$static$0() {
    iaau_Time_$callClinit();
    iaa_Core_$callClinit();
    return jl_Math_min(iaa_Core_graphics.$getDeltaTime() * 60.0, 3.0);
}
function iaau_Time__clinit_() {
    iaau_Time_runs = iaac_Array__init_0();
    iaau_Time_removal = iaac_Array__init_0();
    iaau_Time_marks = iaac_LongArray__init_();
    iaau_Time_deltaimpl = iaau_Time$_clinit_$lambda$_20_0__init_();
}
function it_EffectEntity() {
    var a = this; ie_Entity.call(a);
    a.$effect5 = null;
    a.$color17 = null;
    a.$data4 = null;
    a.$rotation4 = 0.0;
    a.$time5 = 0.0;
    a.$parent3 = null;
    a.$poffsetx = 0.0;
    a.$poffsety = 0.0;
}
function it_EffectEntity__init_() {
    var var_0 = new it_EffectEntity();
    it_EffectEntity__init_0(var_0);
    return var_0;
}
function it_EffectEntity__init_0($this) {
    var var$1;
    ie_Entity__init_0($this);
    var$1 = new iaag_Color;
    iaag_Color_$callClinit();
    iaag_Color__init_8(var$1, iaag_Color_white);
    $this.$color17 = var$1;
    $this.$rotation4 = 0.0;
}
function it_EffectEntity_targetGroup($this) {
    return i_Inferno_effectGroup;
}
function it_EffectEntity_lifetime($this) {
    return $this.$effect5.$lifetime;
}
function it_EffectEntity_drawSize($this) {
    return $this.$effect5.$size7;
}
function it_EffectEntity_update($this) {
    if ($this.$effect5 === null) {
        $this.$remove0();
        return;
    }
    $this.$time5 = iaam_Mathf_clamp($this.$time5 + iaau_Time_delta(), 0.0, $this.$lifetime3());
    if ($this.$time5 >= $this.$lifetime3())
        $this.$remove0();
    if ($this.$parent3 !== null) {
        $this.$x2 = $this.$parent3.$getX() + $this.$poffsetx;
        $this.$y2 = $this.$parent3.$getY() + $this.$poffsety;
    }
}
function it_EffectEntity_reset($this) {
    var var$1, var$2;
    $this.$effect5 = null;
    var$1 = $this.$color17;
    iaag_Color_$callClinit();
    var$1.$set(iaag_Color_white);
    $this.$poffsety = 0.0;
    $this.$poffsetx = 0.0;
    $this.$time5 = 0.0;
    $this.$rotation4 = 0.0;
    $this.$parent3 = null;
    $this.$data4 = null;
    ie_Entity_$callClinit();
    var$2 = ie_Entity_lastID;
    ie_Entity_lastID = var$2 + 1 | 0;
    $this.$id2 = var$2;
}
function it_EffectEntity_draw($this) {
    ig_Effects_renderEffect($this.$id2, $this.$effect5, $this.$color17, $this.$time5, $this.$rotation4, $this.$x2, $this.$y2, $this.$data4);
}
function it_EffectEntity_removed($this) {
    iaaup_Pools_free($this);
}
function otja_XMLHttpRequest() {
    jl_Object.call(this);
}
function it_Phases$5$lambda$null$3$lambda$_19_0() {
    jl_Object.call(this);
    this.$_0133 = null;
}
function it_Phases$5$lambda$null$3$lambda$_19_0__init_(var_0) {
    var var_1 = new it_Phases$5$lambda$null$3$lambda$_19_0();
    it_Phases$5$lambda$null$3$lambda$_19_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$5$lambda$null$3$lambda$_19_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0133 = var$1;
}
function it_Phases$5$lambda$null$3$lambda$_19_0_get(var$0, var$1) {
    it_Phases$5_lambda$null$2(var$0.$_0133, var$1);
}
function it_Phases$lambda$static$55$lambda$_12_0() {
    jl_Object.call(this);
    this.$_0134 = null;
}
function it_Phases$lambda$static$55$lambda$_12_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$static$55$lambda$_12_0();
    it_Phases$lambda$static$55$lambda$_12_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$static$55$lambda$_12_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0134 = var$1;
}
function it_Phases$lambda$static$55$lambda$_12_0_get(var$0, var$1) {
    it_Phases_lambda$null$54(var$0.$_0134, var$1);
}
function iaamo_RectangleMapObject() {
    iaam_MapObject.call(this);
    this.$rectangle = null;
}
function iaamo_RectangleMapObject__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new iaamo_RectangleMapObject();
    iaamo_RectangleMapObject__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaamo_RectangleMapObject__init_0($this, $x, $y, $width, $height) {
    iaam_MapObject__init_0($this);
    $this.$rectangle = iaamg_Rectangle__init_($x, $y, $width, $height);
}
function iaagg_GlyphLayout$GlyphRun() {
    var a = this; jl_Object.call(a);
    a.$color5 = null;
    a.$glyphs = null;
    a.$xAdvances = null;
    a.$x5 = 0.0;
    a.$y5 = 0.0;
    a.$width7 = 0.0;
}
function iaagg_GlyphLayout$GlyphRun__init_() {
    var var_0 = new iaagg_GlyphLayout$GlyphRun();
    iaagg_GlyphLayout$GlyphRun__init_0(var_0);
    return var_0;
}
function iaagg_GlyphLayout$GlyphRun__init_0($this) {
    jl_Object__init_0($this);
    $this.$color5 = iaag_Color__init_0();
    $this.$glyphs = iaac_Array__init_0();
    $this.$xAdvances = iaac_FloatArray__init_();
}
function iaagg_GlyphLayout$GlyphRun_reset($this) {
    $this.$glyphs.$clear();
    $this.$xAdvances.$clear();
    $this.$width7 = 0.0;
}
function iaagg_GlyphLayout$GlyphRun_toString($this) {
    var $buffer, $glyphs, $i, $n, $g;
    $buffer = jl_StringBuilder__init_0($this.$glyphs.$size);
    $glyphs = $this.$glyphs;
    $i = 0;
    $n = $glyphs.$size;
    while ($i < $n) {
        $g = $glyphs.$get($i);
        $buffer.$append0($g.$id0 & 65535);
        $i = $i + 1 | 0;
    }
    $buffer.$append($rt_s(1287));
    $buffer.$append1($this.$color5);
    $buffer.$append($rt_s(516));
    $buffer.$append13($this.$x5);
    $buffer.$append($rt_s(516));
    $buffer.$append13($this.$y5);
    $buffer.$append($rt_s(516));
    $buffer.$append13($this.$width7);
    return $buffer.$toString();
}
function iaaui_DefaultSerializers$3() {
    jl_Object.call(this);
    this.$val$settings = null;
}
function iaaui_DefaultSerializers$3__init_(var_0) {
    var var_1 = new iaaui_DefaultSerializers$3();
    iaaui_DefaultSerializers$3__init_0(var_1, var_0);
    return var_1;
}
function iaaui_DefaultSerializers$3__init_0($this, var$1) {
    $this.$val$settings = var$1;
    jl_Object__init_0($this);
}
function iaaui_DefaultSerializers$2() {
    jl_Object.call(this);
}
function iaaui_DefaultSerializers$2__init_() {
    var var_0 = new iaaui_DefaultSerializers$2();
    iaaui_DefaultSerializers$2__init_0(var_0);
    return var_0;
}
function iaaui_DefaultSerializers$2__init_0($this) {
    jl_Object__init_0($this);
}
function iaaui_DefaultSerializers$1() {
    jl_Object.call(this);
}
function iaaui_DefaultSerializers$1__init_() {
    var var_0 = new iaaui_DefaultSerializers$1();
    iaaui_DefaultSerializers$1__init_0(var_0);
    return var_0;
}
function iaaui_DefaultSerializers$1__init_0($this) {
    jl_Object__init_0($this);
}
function it_Phases$_clinit_$lambda$_75_10() {
    jl_Object.call(this);
}
function it_Phases$_clinit_$lambda$_75_10__init_() {
    var var_0 = new it_Phases$_clinit_$lambda$_75_10();
    it_Phases$_clinit_$lambda$_75_10__init_0(var_0);
    return var_0;
}
function it_Phases$_clinit_$lambda$_75_10__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$_clinit_$lambda$_75_10_run(var$0) {
    it_Phases_lambda$static$44();
}
function it_Phases$_clinit_$lambda$_75_11() {
    jl_Object.call(this);
}
function it_Phases$_clinit_$lambda$_75_11__init_() {
    var var_0 = new it_Phases$_clinit_$lambda$_75_11();
    it_Phases$_clinit_$lambda$_75_11__init_0(var_0);
    return var_0;
}
function it_Phases$_clinit_$lambda$_75_11__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$_clinit_$lambda$_75_11_run(var$0) {
    it_Phases_lambda$static$48();
}
function it_Phases$_clinit_$lambda$_75_12() {
    jl_Object.call(this);
}
function it_Phases$_clinit_$lambda$_75_12__init_() {
    var var_0 = new it_Phases$_clinit_$lambda$_75_12();
    it_Phases$_clinit_$lambda$_75_12__init_0(var_0);
    return var_0;
}
function it_Phases$_clinit_$lambda$_75_12__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$_clinit_$lambda$_75_12_run(var$0) {
    it_Phases_lambda$static$51();
}
function iaaui_DefaultSerializers$6() {
    jl_Object.call(this);
    this.$val$settings0 = null;
}
function iaaui_DefaultSerializers$6__init_(var_0) {
    var var_1 = new iaaui_DefaultSerializers$6();
    iaaui_DefaultSerializers$6__init_0(var_1, var_0);
    return var_1;
}
function iaaui_DefaultSerializers$6__init_0($this, var$1) {
    $this.$val$settings0 = var$1;
    jl_Object__init_0($this);
}
function it_Phases$_clinit_$lambda$_75_13() {
    jl_Object.call(this);
}
function it_Phases$_clinit_$lambda$_75_13__init_() {
    var var_0 = new it_Phases$_clinit_$lambda$_75_13();
    it_Phases$_clinit_$lambda$_75_13__init_0(var_0);
    return var_0;
}
function it_Phases$_clinit_$lambda$_75_13__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$_clinit_$lambda$_75_13_run(var$0) {
    it_Phases_lambda$static$52();
}
function it_Phases$1$lambda$null$6$lambda$_18_0() {
    jl_Object.call(this);
    this.$_0135 = null;
}
function it_Phases$1$lambda$null$6$lambda$_18_0__init_(var_0) {
    var var_1 = new it_Phases$1$lambda$null$6$lambda$_18_0();
    it_Phases$1$lambda$null$6$lambda$_18_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$1$lambda$null$6$lambda$_18_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0135 = var$1;
}
function it_Phases$1$lambda$null$6$lambda$_18_0_get(var$0, var$1) {
    var$0.$_0135.$shoot(var$1);
}
function iaaui_DefaultSerializers$5() {
    jl_Object.call(this);
    this.$val$settings1 = null;
}
function iaaui_DefaultSerializers$5__init_(var_0) {
    var var_1 = new iaaui_DefaultSerializers$5();
    iaaui_DefaultSerializers$5__init_0(var_1, var_0);
    return var_1;
}
function iaaui_DefaultSerializers$5__init_0($this, var$1) {
    $this.$val$settings1 = var$1;
    jl_Object__init_0($this);
}
function it_Phases$_clinit_$lambda$_75_14() {
    jl_Object.call(this);
}
function it_Phases$_clinit_$lambda$_75_14__init_() {
    var var_0 = new it_Phases$_clinit_$lambda$_75_14();
    it_Phases$_clinit_$lambda$_75_14__init_0(var_0);
    return var_0;
}
function it_Phases$_clinit_$lambda$_75_14__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$_clinit_$lambda$_75_14_run(var$0) {
    it_Phases_lambda$static$55();
}
function iaaui_DefaultSerializers$4() {
    jl_Object.call(this);
    this.$val$settings2 = null;
}
function iaaui_DefaultSerializers$4__init_(var_0) {
    var var_1 = new iaaui_DefaultSerializers$4();
    iaaui_DefaultSerializers$4__init_0(var_1, var_0);
    return var_1;
}
function iaaui_DefaultSerializers$4__init_0($this, var$1) {
    $this.$val$settings2 = var$1;
    jl_Object__init_0($this);
}
function it_Phases$_clinit_$lambda$_75_15() {
    jl_Object.call(this);
}
function it_Phases$_clinit_$lambda$_75_15__init_() {
    var var_0 = new it_Phases$_clinit_$lambda$_75_15();
    it_Phases$_clinit_$lambda$_75_15__init_0(var_0);
    return var_0;
}
function it_Phases$_clinit_$lambda$_75_15__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$_clinit_$lambda$_75_15_run(var$0) {
    it_Phases_lambda$static$59();
}
function iaagg_FileTextureData() {
    var a = this; jl_Object.call(a);
    a.$file0 = null;
    a.$width15 = 0;
    a.$height14 = 0;
    a.$format5 = null;
    a.$pixmap = null;
    a.$useMipMaps1 = 0;
    a.$isPrepared1 = 0;
}
function iaagg_FileTextureData__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new iaagg_FileTextureData();
    iaagg_FileTextureData__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaagg_FileTextureData__init_0($this, $file, $preloadedPixmap, $format, $useMipMaps) {
    jl_Object__init_0($this);
    $this.$width15 = 0;
    $this.$height14 = 0;
    $this.$isPrepared1 = 0;
    $this.$file0 = $file;
    $this.$pixmap = $preloadedPixmap;
    $this.$format5 = $format;
    $this.$useMipMaps1 = $useMipMaps;
    if ($this.$pixmap !== null) {
        $this.$width15 = $this.$pixmap.$getWidth0();
        $this.$height14 = $this.$pixmap.$getHeight0();
        if ($format === null)
            $this.$format5 = $this.$pixmap.$getFormat();
    }
}
function iaagg_FileTextureData_isPrepared($this) {
    return $this.$isPrepared1;
}
function iaagg_FileTextureData_prepare($this) {
    if ($this.$isPrepared1)
        $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1213)));
    if ($this.$pixmap === null) {
        if ($this.$file0.$extension().$equals($rt_s(1288)))
            $this.$pixmap = iaag_PixmapIO_readCIM($this.$file0);
        else
            $this.$pixmap = iaag_Pixmap__init_0($this.$file0);
        $this.$width15 = $this.$pixmap.$getWidth0();
        $this.$height14 = $this.$pixmap.$getHeight0();
        if ($this.$format5 === null)
            $this.$format5 = $this.$pixmap.$getFormat();
    }
    $this.$isPrepared1 = 1;
}
function iaagg_FileTextureData_consumePixmap($this) {
    var $pixmap;
    if (!$this.$isPrepared1)
        $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1289)));
    $this.$isPrepared1 = 0;
    $pixmap = $this.$pixmap;
    $this.$pixmap = null;
    return $pixmap;
}
function iaagg_FileTextureData_disposePixmap($this) {
    return 1;
}
function iaagg_FileTextureData_getWidth($this) {
    return $this.$width15;
}
function iaagg_FileTextureData_getHeight($this) {
    return $this.$height14;
}
function iaagg_FileTextureData_getFormat($this) {
    return $this.$format5;
}
function iaagg_FileTextureData_useMipMaps($this) {
    return $this.$useMipMaps1;
}
function iaagg_FileTextureData_isManaged($this) {
    return 1;
}
function iaagg_FileTextureData_getType($this) {
    iaag_TextureData$TextureDataType_$callClinit();
    return iaag_TextureData$TextureDataType_Pixmap;
}
function iaagg_FileTextureData_consumeCustomData($this, $target) {
    $rt_throw(iaau_ArcRuntimeException__init_0($rt_s(1290)));
}
function iaagg_FileTextureData_toString($this) {
    return $this.$file0.$toString();
}
function iaabt_TeaFileLoader$loadFiles$lambda$_1_0() {
    jl_Object.call(this);
    this.$_0136 = null;
}
function iaabt_TeaFileLoader$loadFiles$lambda$_1_0__init_(var_0) {
    var var_1 = new iaabt_TeaFileLoader$loadFiles$lambda$_1_0();
    iaabt_TeaFileLoader$loadFiles$lambda$_1_0__init_0(var_1, var_0);
    return var_1;
}
function iaabt_TeaFileLoader$loadFiles$lambda$_1_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0136 = var$1;
}
function iaabt_TeaFileLoader$loadFiles$lambda$_1_0_stateChanged(var$0) {
    iaabt_TeaFileLoader_lambda$loadFiles$0(var$0.$_0136);
}
function iaabt_TeaFileLoader$loadFiles$lambda$_1_0_stateChanged$exported$0(var$0) {
    var$0.$stateChanged();
}
function it_Boss$midPhase$lambda$_2_0() {
    jl_Object.call(this);
}
function it_Boss$midPhase$lambda$_2_0__init_() {
    var var_0 = new it_Boss$midPhase$lambda$_2_0();
    it_Boss$midPhase$lambda$_2_0__init_0(var_0);
    return var_0;
}
function it_Boss$midPhase$lambda$_2_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Boss$midPhase$lambda$_2_0_get(var$0, var$1) {
    it_Boss$midPhase$lambda$_2_0_get0(var$0, var$1);
}
function it_Boss$midPhase$lambda$_2_0_get0(var$0, var$1) {
    it_Boss_lambda$midPhase$1(var$1);
}
function jl_System() {
    jl_Object.call(this);
}
var jl_System_outCache = null;
var jl_System_properties = null;
function jl_System_out() {
    if (jl_System_outCache === null)
        jl_System_outCache = ji_PrintStream__init_(jl_ConsoleOutputStreamStdout__init_(), 0);
    return jl_System_outCache;
}
function jl_System_arraycopy($src, $srcPos, $dest, $destPos, $length) {
    var var$6, $srcType, $targetType, $srcArray, $i, var$11, var$12, $elem;
    if ($src !== null && $dest !== null) {
        if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src)) {
            var$6 = $destPos + $length | 0;
            if (var$6 <= jlr_Array_getLength($dest)) {
                a: {
                    b: {
                        if ($src !== $dest) {
                            $srcType = jl_Object_getClass($src).$getComponentType();
                            $targetType = jl_Object_getClass($dest).$getComponentType();
                            if ($srcType !== null && $targetType !== null) {
                                if ($srcType === $targetType)
                                    break b;
                                if (!$srcType.$isPrimitive() && !$targetType.$isPrimitive()) {
                                    $srcArray = $src;
                                    $i = 0;
                                    var$6 = $srcPos;
                                    while ($i < $length) {
                                        var$11 = $srcArray.data;
                                        var$12 = var$6 + 1 | 0;
                                        $elem = var$11[var$6];
                                        if (!$targetType.$isInstance($elem)) {
                                            jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $i);
                                            $rt_throw(jl_ArrayStoreException__init_());
                                        }
                                        $i = $i + 1 | 0;
                                        var$6 = var$12;
                                    }
                                    jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                                    return;
                                }
                                if (!$srcType.$isPrimitive())
                                    break a;
                                if ($targetType.$isPrimitive())
                                    break b;
                                else
                                    break a;
                            }
                            $rt_throw(jl_ArrayStoreException__init_());
                        }
                    }
                    jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                    return;
                }
                $rt_throw(jl_ArrayStoreException__init_());
            }
        }
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    }
    $rt_throw(jl_NullPointerException__init_0($rt_s(1291)));
}
function jl_System_doArrayCopy(var$1, var$2, var$3, var$4, var$5) {
    if (var$1 !== var$3 || var$4 < var$2) {
        for (var i = 0; i < var$5; i = (i + 1) | 0) {
            var$3.data[var$4++] = var$1.data[var$2++];
        }
    } else {
        var$2 = (var$2 + var$5) | 0;
        var$4 = (var$4 + var$5) | 0;
        for (var i = 0; i < var$5; i = (i + 1) | 0) {
            var$3.data[--var$4] = var$1.data[--var$2];
        }
    }
}
function jl_System_currentTimeMillis() {
    return Long_fromNumber(new Date().getTime());
}
function jl_System_initPropertiesIfNeeded() {
    var $defaults;
    if (jl_System_properties === null) {
        $defaults = ju_Properties__init_();
        $defaults.$put($rt_s(1292), $rt_s(1293));
        $defaults.$put($rt_s(1225), $rt_s(1294));
        $defaults.$put($rt_s(1295), $rt_s(556));
        $defaults.$put($rt_s(1296), $rt_s(21));
        $defaults.$put($rt_s(1297), jl_System_lineSeparator());
        $defaults.$put($rt_s(1298), jl_System_getTempDir());
        $defaults.$put($rt_s(1299), $rt_s(1293));
        $defaults.$put($rt_s(1300), jl_System_getHomeDir());
        jl_System_properties = ju_Properties__init_1($defaults);
    }
}
function jl_System_getTempDir() {
    return $rt_s(1301);
}
function jl_System_getHomeDir() {
    return $rt_s(556);
}
function jl_System_getProperty($key) {
    jl_System_initPropertiesIfNeeded();
    return jl_System_properties.$getProperty($key);
}
function jl_System_lineSeparator() {
    return $rt_s(337);
}
function iaagg_GlyphLayout$reset$lambda$_11_0() {
    jl_Object.call(this);
}
function iaagg_GlyphLayout$reset$lambda$_11_0__init_() {
    var var_0 = new iaagg_GlyphLayout$reset$lambda$_11_0();
    iaagg_GlyphLayout$reset$lambda$_11_0__init_0(var_0);
    return var_0;
}
function iaagg_GlyphLayout$reset$lambda$_11_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaagg_GlyphLayout$reset$lambda$_11_0_get(var$0) {
    return iaagg_GlyphLayout$reset$lambda$_11_0_get0(var$0);
}
function iaagg_GlyphLayout$reset$lambda$_11_0_get0(var$0) {
    return iaagg_GlyphLayout$GlyphRun__init_();
}
function iaaus_UBJsonReader() {
    jl_Object.call(this);
    this.$oldFormat = 0;
}
function iaaus_UBJsonReader__init_() {
    var var_0 = new iaaus_UBJsonReader();
    iaaus_UBJsonReader__init_0(var_0);
    return var_0;
}
function iaaus_UBJsonReader__init_0($this) {
    jl_Object__init_0($this);
    $this.$oldFormat = 1;
}
function iaagg_SpriteCache() {
    var a = this; jl_Object.call(a);
    a.$mesh0 = null;
    a.$transformMatrix0 = null;
    a.$projectionMatrix0 = null;
    a.$combinedMatrix0 = null;
    a.$shader3 = null;
    a.$textures1 = null;
    a.$counts0 = null;
    a.$color22 = null;
    a.$renderCalls0 = 0;
    a.$totalRenderCalls0 = 0;
    a.$drawing = 0;
    a.$caches = null;
    a.$currentCache = null;
    a.$colorPacked0 = 0.0;
    a.$customShader0 = null;
    a.$lastBoundTexture = null;
}
var iaagg_SpriteCache_tempVertices = null;
function iaagg_SpriteCache_$callClinit() {
    iaagg_SpriteCache_$callClinit = $rt_eraseClinit(iaagg_SpriteCache);
    iaagg_SpriteCache__clinit_();
}
function iaagg_SpriteCache__init_(var_0, var_1) {
    var var_2 = new iaagg_SpriteCache();
    iaagg_SpriteCache__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaagg_SpriteCache__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new iaagg_SpriteCache();
    iaagg_SpriteCache__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaagg_SpriteCache__init_0($this, $size, $useIndices) {
    iaagg_SpriteCache_$callClinit();
    iaagg_SpriteCache__init_2($this, $size, 16, iaagg_SpriteCache_createDefaultShader(), $useIndices);
}
function iaagg_SpriteCache__init_2($this, $size, $cacheSize, $shader, $useIndices) {
    var var$5, var$6, var$7, var$8, var$9, $length, $indices, $j, $i, var$14, var$15, var$16;
    iaagg_SpriteCache_$callClinit();
    jl_Object__init_0($this);
    $this.$transformMatrix0 = iaam_Matrix3__init_();
    $this.$projectionMatrix0 = iaam_Matrix3__init_();
    $this.$combinedMatrix0 = iaam_Matrix3__init_();
    $this.$textures1 = iaac_Array__init_(8);
    $this.$counts0 = iaac_IntArray__init_(8);
    $this.$color22 = iaag_Color__init_(1.0, 1.0, 1.0, 1.0);
    $this.$renderCalls0 = 0;
    $this.$totalRenderCalls0 = 0;
    $this.$colorPacked0 = iaag_Color_whiteFloatBits;
    $this.$customShader0 = null;
    $this.$shader3 = $shader;
    if ($useIndices && $size > 8191)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1182)).$append3($size).$toString()));
    var$5 = new iaag_Mesh;
    var$6 = $rt_imul($size, !$useIndices ? 6 : 4);
    var$7 = !$useIndices ? 0 : $size * 6 | 0;
    var$8 = $rt_createArray(iaag_VertexAttribute, 3);
    var$9 = var$8.data;
    var$9[0] = iaag_VertexAttribute__init_(1, 2, $rt_s(575));
    var$9[1] = iaag_VertexAttribute__init_(4, 4, $rt_s(1183));
    var$9[2] = iaag_VertexAttribute__init_(16, 2, $rt_s(576));
    iaag_Mesh__init_(var$5, 1, var$6, var$7, var$8);
    $this.$mesh0 = var$5;
    $this.$mesh0.$setAutoBind(0);
    $this.$caches = iaac_Array__init_($cacheSize);
    if ($useIndices) {
        $length = $size * 6 | 0;
        $indices = $rt_createShortArray($length);
        $j = 0;
        $i = 0;
        while ($i < $length) {
            var$8 = $indices.data;
            var$8[$i] = $j;
            var$8[$i + 1 | 0] = ($j + 1 | 0) << 16 >> 16;
            var$14 = $i + 2 | 0;
            var$15 = ($j + 2 | 0) << 16 >> 16;
            var$8[var$14] = var$15;
            var$8[$i + 3 | 0] = var$15;
            var$8[$i + 4 | 0] = ($j + 3 | 0) << 16 >> 16;
            var$8[$i + 5 | 0] = $j;
            $i = $i + 6 | 0;
            $j = ($j + 4 | 0) << 16 >> 16;
        }
        $this.$mesh0.$setIndices($indices);
    }
    var$16 = $this.$projectionMatrix0;
    iaa_Core_$callClinit();
    var$16.$setOrtho(0.0, 0.0, iaa_Core_graphics.$getWidth0(), iaa_Core_graphics.$getHeight0());
}
function iaagg_SpriteCache_createDefaultShader() {
    var $vertexShader, $fragmentShader;
    iaagg_SpriteCache_$callClinit();
    $vertexShader = $rt_s(1302);
    $fragmentShader = $rt_s(1303);
    return iaagg_Shader__init_($vertexShader, $fragmentShader);
}
function iaagg_SpriteCache_setColor($this, $r, $g, $b, $a) {
    $this.$color22.$set3($r, $g, $b, $a);
    $this.$colorPacked0 = $this.$color22.$toFloatBits();
}
function iaagg_SpriteCache_getColor($this) {
    return $this.$color22;
}
function iaagg_SpriteCache_setColor0($this, $tint) {
    $this.$color22.$set($tint);
    $this.$colorPacked0 = $tint.$toFloatBits();
}
function iaagg_SpriteCache_setPackedColor($this, $packedColor) {
    iaag_Color_abgr8888ToColor($this.$color22, $packedColor);
    $this.$colorPacked0 = $packedColor;
}
function iaagg_SpriteCache_beginCache($this) {
    if ($this.$drawing)
        $rt_throw(jl_IllegalStateException__init_($rt_s(1304)));
    if ($this.$currentCache !== null)
        $rt_throw(jl_IllegalStateException__init_($rt_s(1305)));
    $this.$currentCache = iaagg_SpriteCache$Cache__init_($this.$caches.$size, jn_Buffer_position($this.$mesh0.$getVerticesBuffer()));
    $this.$caches.$add1($this.$currentCache);
    $this.$mesh0.$getVerticesBuffer().$limit0(jn_Buffer_capacity($this.$mesh0.$getVerticesBuffer()));
}
function iaagg_SpriteCache_endCache($this) {
    var $cache, $cacheCount, $i, $n, $vertices, $lastCache;
    if ($this.$currentCache === null)
        $rt_throw(jl_IllegalStateException__init_($rt_s(1306)));
    $cache = $this.$currentCache;
    $cacheCount = jn_Buffer_position($this.$mesh0.$getVerticesBuffer()) - $cache.$offset0 | 0;
    if ($cache.$textures === null) {
        $cache.$maxCount = $cacheCount;
        $cache.$textureCount = $this.$textures1.$size;
        $cache.$textures = $this.$textures1.$toArray1($rt_cls(iaag_Texture));
        $cache.$counts = $rt_createIntArray($cache.$textureCount);
        $i = 0;
        $n = $this.$counts0.$size5;
        while ($i < $n) {
            $cache.$counts.data[$i] = $this.$counts0.$get29($i);
            $i = $i + 1 | 0;
        }
    } else {
        if ($cacheCount > $cache.$maxCount)
            $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(1307)).$append3($cacheCount).$append($rt_s(1308)).$append3($cache.$maxCount).$append($rt_s(1309)).$toString()));
        $cache.$textureCount = $this.$textures1.$size;
        if ($cache.$textures.data.length < $cache.$textureCount)
            $cache.$textures = $rt_createArray(iaag_Texture, $cache.$textureCount);
        $i = 0;
        $n = $cache.$textureCount;
        while ($i < $n) {
            $cache.$textures.data[$i] = $this.$textures1.$get($i);
            $i = $i + 1 | 0;
        }
        if ($cache.$counts.data.length < $cache.$textureCount)
            $cache.$counts = $rt_createIntArray($cache.$textureCount);
        $i = 0;
        $n = $cache.$textureCount;
        while ($i < $n) {
            $cache.$counts.data[$i] = $this.$counts0.$get29($i);
            $i = $i + 1 | 0;
        }
        $vertices = $this.$mesh0.$getVerticesBuffer();
        $vertices.$position(0);
        $lastCache = $this.$caches.$get($this.$caches.$size - 1 | 0);
        $vertices.$limit0($lastCache.$offset0 + $lastCache.$maxCount | 0);
    }
    $this.$currentCache = null;
    $this.$textures1.$clear();
    $this.$counts0.$clear();
    return $cache.$id4;
}
function iaagg_SpriteCache_add($this, $texture, $vertices, $offset, $length) {
    var $verticesPerImage, $count, $lastIndex;
    if ($this.$currentCache === null)
        $rt_throw(jl_IllegalStateException__init_($rt_s(1310)));
    if ((jn_Buffer_position($this.$mesh0.$getVerticesBuffer()) + $length | 0) >= jn_Buffer_limit($this.$mesh0.$getVerticesBuffer()))
        $rt_throw(jl_IllegalStateException__init_(jl_StringBuilder__init_().$append($rt_s(1311)).$append3(jn_Buffer_capacity($this.$mesh0.$getVerticesBuffer())).$append($rt_s(1312)).$append3(jn_Buffer_position($this.$mesh0.$getVerticesBuffer()) + $length | 0).$toString()));
    $verticesPerImage = $this.$mesh0.$getNumIndices() <= 0 ? 6 : 4;
    $count = ($length / ($verticesPerImage * 5 | 0) | 0) * 6 | 0;
    $lastIndex = $this.$textures1.$size - 1 | 0;
    if ($lastIndex >= 0 && $this.$textures1.$get($lastIndex) === $texture)
        $this.$counts0.$incr($lastIndex, $count);
    else {
        $this.$textures1.$add1($texture);
        $this.$counts0.$add6($count);
    }
    $this.$mesh0.$getVerticesBuffer().$put13($vertices, $offset, $length);
}
function iaagg_SpriteCache_add0($this, $region, $x, $y, $originX, $originY, $width, $height, $scaleX, $scaleY, $rotation) {
    var $worldOriginX, $worldOriginY, $x2, $y4, $x4, $y3, $x1, $y1, $y2, $x3, $cos, $sin, var$23, var$24, var$25, var$26, var$27, var$28, var$29, var$30, $u, $v, $u2, $v2;
    $worldOriginX = $x + $originX;
    $worldOriginY = $y + $originY;
    $x2 =  -$originX;
    $y4 =  -$originY;
    $x4 = $width - $originX;
    $y3 = $height - $originY;
    if (!($scaleX === 1.0 && $scaleY === 1.0)) {
        $x2 = $x2 * $scaleX;
        $y4 = $y4 * $scaleY;
        $x4 = $x4 * $scaleX;
        $y3 = $y3 * $scaleY;
    }
    if ($rotation === 0.0) {
        $x1 = $x2;
        $y1 = $y4;
        $y2 = $y3;
        $x3 = $x4;
    } else {
        $cos = iaam_Mathf_cosDeg($rotation);
        $sin = iaam_Mathf_sinDeg($rotation);
        var$23 = $cos * $x2;
        $x1 = var$23 - $sin * $y4;
        var$24 = $sin * $x2;
        $y1 = var$24 + $cos * $y4;
        var$25 = $sin * $y3;
        $x2 = var$23 - var$25;
        var$23 = $cos * $y3;
        $y2 = var$24 + var$23;
        $x3 = $cos * $x4 - var$25;
        $y3 = $sin * $x4 + var$23;
        $x4 = $x1 + $x3 - $x2;
        $y4 = $y3 - ($y2 - $y1);
    }
    var$23 = $x1 + $worldOriginX;
    var$24 = $y1 + $worldOriginY;
    var$25 = $x2 + $worldOriginX;
    var$26 = $y2 + $worldOriginY;
    var$27 = $x3 + $worldOriginX;
    var$28 = $y3 + $worldOriginY;
    var$29 = $x4 + $worldOriginX;
    var$30 = $y4 + $worldOriginY;
    $u = $region.$u;
    $v = $region.$v2;
    $u2 = $region.$u2;
    $v2 = $region.$v;
    iaagg_SpriteCache_tempVertices.data[0] = var$23;
    iaagg_SpriteCache_tempVertices.data[1] = var$24;
    iaagg_SpriteCache_tempVertices.data[2] = $this.$colorPacked0;
    iaagg_SpriteCache_tempVertices.data[3] = $u;
    iaagg_SpriteCache_tempVertices.data[4] = $v;
    iaagg_SpriteCache_tempVertices.data[5] = var$25;
    iaagg_SpriteCache_tempVertices.data[6] = var$26;
    iaagg_SpriteCache_tempVertices.data[7] = $this.$colorPacked0;
    iaagg_SpriteCache_tempVertices.data[8] = $u;
    iaagg_SpriteCache_tempVertices.data[9] = $v2;
    iaagg_SpriteCache_tempVertices.data[10] = var$27;
    iaagg_SpriteCache_tempVertices.data[11] = var$28;
    iaagg_SpriteCache_tempVertices.data[12] = $this.$colorPacked0;
    iaagg_SpriteCache_tempVertices.data[13] = $u2;
    iaagg_SpriteCache_tempVertices.data[14] = $v2;
    if ($this.$mesh0.$getNumIndices() > 0) {
        iaagg_SpriteCache_tempVertices.data[15] = var$29;
        iaagg_SpriteCache_tempVertices.data[16] = var$30;
        iaagg_SpriteCache_tempVertices.data[17] = $this.$colorPacked0;
        iaagg_SpriteCache_tempVertices.data[18] = $u2;
        iaagg_SpriteCache_tempVertices.data[19] = $v;
        $this.$add16($region.$texture0, iaagg_SpriteCache_tempVertices, 0, 20);
    } else {
        iaagg_SpriteCache_tempVertices.data[15] = var$27;
        iaagg_SpriteCache_tempVertices.data[16] = var$28;
        iaagg_SpriteCache_tempVertices.data[17] = $this.$colorPacked0;
        iaagg_SpriteCache_tempVertices.data[18] = $u2;
        iaagg_SpriteCache_tempVertices.data[19] = $v2;
        iaagg_SpriteCache_tempVertices.data[20] = var$29;
        iaagg_SpriteCache_tempVertices.data[21] = var$30;
        iaagg_SpriteCache_tempVertices.data[22] = $this.$colorPacked0;
        iaagg_SpriteCache_tempVertices.data[23] = $u2;
        iaagg_SpriteCache_tempVertices.data[24] = $v;
        iaagg_SpriteCache_tempVertices.data[25] = var$23;
        iaagg_SpriteCache_tempVertices.data[26] = var$24;
        iaagg_SpriteCache_tempVertices.data[27] = $this.$colorPacked0;
        iaagg_SpriteCache_tempVertices.data[28] = $u;
        iaagg_SpriteCache_tempVertices.data[29] = $v;
        $this.$add16($region.$texture0, iaagg_SpriteCache_tempVertices, 0, 30);
    }
}
function iaagg_SpriteCache_begin($this) {
    if ($this.$drawing)
        $rt_throw(jl_IllegalStateException__init_($rt_s(1313)));
    if ($this.$currentCache !== null)
        $rt_throw(jl_IllegalStateException__init_($rt_s(1314)));
    $this.$renderCalls0 = 0;
    $this.$lastBoundTexture = null;
    $this.$combinedMatrix0.$set1($this.$projectionMatrix0).$mul3($this.$transformMatrix0);
    iaa_Core_$callClinit();
    iaa_Core_gl20.$glDepthMask(0);
    if ($this.$customShader0 === null) {
        $this.$shader3.$begin();
        $this.$shader3.$setUniformMatrix4($rt_s(1315), iaagg_BatchShader_copyTransform($this.$combinedMatrix0));
        $this.$shader3.$setUniformi($rt_s(1186), 0);
        $this.$mesh0.$bind1($this.$shader3);
    } else {
        $this.$customShader0.$begin();
        $this.$customShader0.$setUniformMatrix4($rt_s(1315), iaagg_BatchShader_copyTransform($this.$combinedMatrix0));
        $this.$customShader0.$setUniformi($rt_s(1186), 0);
        $this.$mesh0.$bind1($this.$customShader0);
    }
    $this.$drawing = 1;
}
function iaagg_SpriteCache_end($this) {
    var $gl;
    if (!$this.$drawing)
        $rt_throw(jl_IllegalStateException__init_($rt_s(517)));
    $this.$drawing = 0;
    $this.$shader3.$end();
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl20;
    $gl.$glDepthMask(1);
    if ($this.$customShader0 === null)
        $this.$mesh0.$unbind0($this.$shader3);
    else
        $this.$mesh0.$unbind0($this.$customShader0);
}
function iaagg_SpriteCache_draw($this, $cacheID) {
    var $cache, $verticesPerImage, $offset, $textures, $counts, $textureCount, $i, var$9, $count;
    if (!$this.$drawing)
        $rt_throw(jl_IllegalStateException__init_($rt_s(1316)));
    $cache = $this.$caches.$get($cacheID);
    $verticesPerImage = $this.$mesh0.$getNumIndices() <= 0 ? 6 : 4;
    $offset = ($cache.$offset0 / ($verticesPerImage * 5 | 0) | 0) * 6 | 0;
    $textures = $cache.$textures;
    $counts = $cache.$counts;
    $textureCount = $cache.$textureCount;
    $i = 0;
    while ($i < $textureCount) {
        var$9 = $textures.data;
        $count = $counts.data[$i];
        if ($this.$lastBoundTexture !== var$9[$i]) {
            var$9[$i].$bind();
            $this.$lastBoundTexture = var$9[$i];
        }
        if ($this.$customShader0 === null)
            $this.$mesh0.$render1($this.$shader3, 4, $offset, $count);
        else
            $this.$mesh0.$render1($this.$customShader0, 4, $offset, $count);
        $offset = $offset + $count | 0;
        $i = $i + 1 | 0;
    }
    $this.$renderCalls0 = $this.$renderCalls0 + $textureCount | 0;
    $this.$totalRenderCalls0 = $this.$totalRenderCalls0 + $textureCount | 0;
}
function iaagg_SpriteCache_setProjectionMatrix($this, $projection) {
    if (!$this.$drawing) {
        $this.$projectionMatrix0.$set1($projection);
        return;
    }
    $rt_throw(jl_IllegalStateException__init_($rt_s(1317)));
}
function iaagg_SpriteCache_setShader($this, $shader) {
    $this.$customShader0 = $shader;
}
function iaagg_SpriteCache_isDrawing($this) {
    return $this.$drawing;
}
function iaagg_SpriteCache__clinit_() {
    iaagg_SpriteCache_tempVertices = $rt_createFloatArray(30);
}
function jur_AbstractCharClass$LazyXDigit() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyXDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyXDigit();
    jur_AbstractCharClass$LazyXDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyXDigit__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyXDigit_computeValue($this) {
    return jur_CharClass__init_().$add0(48, 57).$add0(97, 102).$add0(65, 70);
}
function iaamg_Circle() {
    var a = this; jl_Object.call(a);
    a.$x12 = 0.0;
    a.$y11 = 0.0;
    a.$radius = 0.0;
}
function iaamg_Circle__init_() {
    var var_0 = new iaamg_Circle();
    iaamg_Circle__init_0(var_0);
    return var_0;
}
function iaamg_Circle__init_0($this) {
    jl_Object__init_0($this);
}
function iaamg_Circle_set($this, $x, $y, $radius) {
    $this.$x12 = $x;
    $this.$y11 = $y;
    $this.$radius = $radius;
    return $this;
}
function jur_Matcher() {
    var a = this; jl_Object.call(a);
    a.$pat = null;
    a.$start10 = null;
    a.$string4 = null;
    a.$matchResult = null;
    a.$leftBound0 = 0;
    a.$rightBound0 = 0;
    a.$appendPos = 0;
    a.$replacement1 = null;
    a.$processedRepl = null;
    a.$replacementParts = null;
}
function jur_Matcher__init_(var_0, var_1) {
    var var_2 = new jur_Matcher();
    jur_Matcher__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_Matcher_appendReplacement($this, $buffer, $replacement) {
    $this.$processedRepl = jur_Matcher_processReplacement($this, $replacement);
    $buffer.$append22($this.$string4.$subSequence($this.$appendPos, jur_Matcher_start($this)));
    $buffer.$append23($this.$processedRepl);
    $this.$appendPos = jur_Matcher_end($this);
    return $this;
}
function jur_Matcher_processReplacement($this, $replacement) {
    var $sb, $i, $repl, $res, $index, $replacementPos, $nextBackSlashed, var$9, var$10, var$11, $gr, $group, $$je;
    if ($this.$replacement1 !== null && $this.$replacement1.$equals($replacement)) {
        if ($this.$replacementParts === null)
            return $this.$processedRepl;
        $sb = jl_StringBuilder__init_();
        $i = 0;
        while ($i < $this.$replacementParts.$size0()) {
            $sb.$append1($this.$replacementParts.$get($i));
            $i = $i + 1 | 0;
        }
        return $sb.$toString();
    }
    $this.$replacement1 = $replacement;
    $repl = $replacement.$toCharArray();
    $res = jl_StringBuilder__init_();
    $this.$replacementParts = null;
    $index = 0;
    $replacementPos = 0;
    $nextBackSlashed = 0;
    a: {
        b: while (true) {
            var$9 = $repl.data;
            var$10 = var$9.length;
            if ($index >= var$10) {
                if ($this.$replacementParts !== null && $replacementPos != $res.$length())
                    $this.$replacementParts.$add7($res.$subSequence($replacementPos, $res.$length()));
                return $res.$toString();
            }
            if (var$9[$index] == 92 && !$nextBackSlashed) {
                $nextBackSlashed = 1;
                $index = $index + 1 | 0;
            }
            c: {
                if ($nextBackSlashed) {
                    if ($index >= var$10)
                        break b;
                    $res.$append0(var$9[$index]);
                    $nextBackSlashed = 0;
                } else if (var$9[$index] != 36)
                    $res.$append0(var$9[$index]);
                else {
                    if ($this.$replacementParts === null)
                        $this.$replacementParts = ju_ArrayList__init_();
                    d: {
                        try {
                            var$11 = new jl_String;
                            $index = $index + 1 | 0;
                            jl_String__init_1(var$11, $repl, $index, 1);
                            $gr = jl_Integer_parseInt0(var$11);
                            if ($replacementPos == $res.$length())
                                break d;
                            $this.$replacementParts.$add7($res.$subSequence($replacementPos, $res.$length()));
                            $replacementPos = $res.$length();
                            break d;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Exception) {
                                break a;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                    try {
                        $this.$replacementParts.$add7(jur_Matcher$1__init_($this, $gr));
                        $group = jur_Matcher_group($this, $gr);
                        $replacementPos = $replacementPos + $group.$length() | 0;
                        $res.$append($group);
                        break c;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Exception) {
                            break a;
                        } else {
                            throw $$e;
                        }
                    }
                }
            }
            $index = $index + 1 | 0;
        }
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(58)));
}
function jur_Matcher_reset($this) {
    $this.$leftBound0 = 0;
    $this.$rightBound0 = $this.$string4.$length();
    $this.$matchResult.$reset1($this.$string4, $this.$leftBound0, $this.$rightBound0);
    $this.$appendPos = 0;
    $this.$replacement1 = null;
    $this.$matchResult.$previousMatch = (-1);
    return $this;
}
function jur_Matcher_appendTail($this, $buffer) {
    return $buffer.$append22($this.$string4.$subSequence($this.$appendPos, $this.$string4.$length()));
}
function jur_Matcher_replaceAll($this, $replacement) {
    var $sb;
    $sb = jl_StringBuffer__init_();
    jur_Matcher_reset($this);
    while (jur_Matcher_find($this)) {
        jur_Matcher_appendReplacement($this, $sb, $replacement);
    }
    return jur_Matcher_appendTail($this, $sb).$toString();
}
function jur_Matcher_group($this, $group) {
    return $this.$matchResult.$group($group);
}
function jur_Matcher_find0($this, $start) {
    var $stringLength, var$3;
    $stringLength = $this.$string4.$length();
    if ($start >= 0 && $start <= $stringLength) {
        var$3 = jur_Matcher_findAt($this, $start);
        if (var$3 >= 0 && $this.$matchResult.$isValid()) {
            $this.$matchResult.$finalizeMatch();
            return 1;
        }
        $this.$matchResult.$startIndex = (-1);
        return 0;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_String_valueOf0($start)));
}
function jur_Matcher_findAt($this, $startIndex) {
    var $foundIndex;
    $this.$matchResult.$reset();
    $this.$matchResult.$setMode(1);
    $this.$matchResult.$setStartIndex($startIndex);
    $foundIndex = $this.$start10.$find0($startIndex, $this.$string4, $this.$matchResult);
    if ($foundIndex == (-1))
        $this.$matchResult.$hitEnd = 1;
    return $foundIndex;
}
function jur_Matcher_find($this) {
    var $length, var$2;
    $length = $this.$string4.$length();
    if (!jur_Matcher_hasTransparentBounds($this))
        $length = $this.$rightBound0;
    if ($this.$matchResult.$startIndex >= 0 && $this.$matchResult.$mode2() == 1) {
        $this.$matchResult.$startIndex = $this.$matchResult.$end2();
        if ($this.$matchResult.$end2() == $this.$matchResult.$start9()) {
            var$2 = $this.$matchResult;
            var$2.$startIndex = var$2.$startIndex + 1 | 0;
        }
        return $this.$matchResult.$startIndex <= $length && jur_Matcher_find0($this, $this.$matchResult.$startIndex) ? 1 : 0;
    }
    return jur_Matcher_find0($this, $this.$leftBound0);
}
function jur_Matcher_start0($this, $group) {
    return $this.$matchResult.$start($group);
}
function jur_Matcher_end0($this, $group) {
    return $this.$matchResult.$end1($group);
}
function jur_Matcher_start($this) {
    return jur_Matcher_start0($this, 0);
}
function jur_Matcher_end($this) {
    return jur_Matcher_end0($this, 0);
}
function jur_Matcher_hasTransparentBounds($this) {
    return $this.$matchResult.$hasTransparentBounds();
}
function jur_Matcher__init_0($this, $pat, $cs) {
    var var$3, var$4, var$5, var$6, var$7;
    jl_Object__init_0($this);
    $this.$leftBound0 = (-1);
    $this.$rightBound0 = (-1);
    $this.$pat = $pat;
    $this.$start10 = $pat.$start8;
    $this.$string4 = $cs;
    $this.$leftBound0 = 0;
    $this.$rightBound0 = $this.$string4.$length();
    var$3 = new jur_MatchResultImpl;
    var$4 = $this.$leftBound0;
    var$5 = $this.$rightBound0;
    var$6 = jur_Pattern_groupCount($pat);
    var$7 = jur_Pattern_compCount($pat);
    jur_MatchResultImpl__init_0(var$3, $cs, var$4, var$5, var$6, var$7, jur_Pattern_consCount($pat));
    $this.$matchResult = var$3;
}
function jur_DotAllSet() {
    jur_JointSet.call(this);
}
function jur_DotAllSet__init_() {
    var var_0 = new jur_DotAllSet();
    jur_DotAllSet__init_0(var_0);
    return var_0;
}
function jur_DotAllSet__init_0($this) {
    jur_JointSet__init_0($this);
}
function jur_DotAllSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, $high, var$7, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        var$7 = $stringIndex + 2 | 0;
        if (var$7 <= $strLength) {
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low))
                return $this.$next.$matches(var$7, $testString, $matchResult);
        }
    }
    return $this.$next.$matches(var$5, $testString, $matchResult);
}
function jur_DotAllSet_getName($this) {
    return $rt_s(1318);
}
function jur_DotAllSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_DotAllSet_getType($this) {
    return (-2147483602);
}
function jur_DotAllSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_AbstractCharClass$LazyJavaUpperCase() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaUpperCase__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUpperCase();
    jur_AbstractCharClass$LazyJavaUpperCase__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUpperCase__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaUpperCase_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaUpperCase$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_HangulDecomposedCharSet() {
    var a = this; jur_JointSet.call(a);
    a.$decomposedChar0 = null;
    a.$decomposedCharUTF160 = null;
    a.$decomposedCharLength0 = 0;
}
function jur_HangulDecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_HangulDecomposedCharSet();
    jur_HangulDecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_HangulDecomposedCharSet__init_0($this, $decomposedChar, $decomposedCharLength) {
    jur_JointSet__init_0($this);
    $this.$decomposedChar0 = $decomposedChar;
    $this.$decomposedCharLength0 = $decomposedCharLength;
}
function jur_HangulDecomposedCharSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_HangulDecomposedCharSet_getDecomposedChar($this) {
    if ($this.$decomposedCharUTF160 === null)
        $this.$decomposedCharUTF160 = jl_String__init_($this.$decomposedChar0);
    return $this.$decomposedCharUTF160;
}
function jur_HangulDecomposedCharSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(1319)).$append(jur_HangulDecomposedCharSet_getDecomposedChar($this)).$toString();
}
function jur_HangulDecomposedCharSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound, $syllIndex, $decompSyllable, $vIndex, $tIndex, var$9, $curSymb, $decompCurSymb, var$12, $i, var$14, $lIndex, var$16, var$17, var$18;
    $rightBound = $matchResult.$getRightBound();
    $syllIndex = 0;
    $decompSyllable = $rt_createIntArray(3);
    $vIndex = (-1);
    $tIndex = (-1);
    if ($strIndex >= $rightBound)
        return (-1);
    var$9 = $strIndex + 1 | 0;
    $curSymb = $testString.$charAt($strIndex);
    $decompCurSymb = jur_Lexer_getHangulDecomposition($curSymb);
    if ($decompCurSymb !== null) {
        var$12 = $decompCurSymb.data;
        $i = 0;
        if (var$12.length != $this.$decomposedCharLength0)
            return (-1);
        while (true) {
            if ($i >= $this.$decomposedCharLength0)
                return $this.$next.$matches(var$9, $testString, $matchResult);
            if (var$12[$i] != $this.$decomposedChar0.data[$i])
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    var$14 = $decompSyllable.data;
    var$14[$syllIndex] = $curSymb;
    $lIndex = $curSymb - 4352 | 0;
    if ($lIndex >= 0 && $lIndex < 19) {
        if (var$9 < $rightBound) {
            $curSymb = $testString.$charAt(var$9);
            $vIndex = $curSymb - 4449 | 0;
        }
        if ($vIndex >= 0 && $vIndex < 21) {
            var$16 = var$9 + 1 | 0;
            var$14[1] = $curSymb;
            if (var$16 < $rightBound) {
                $curSymb = $testString.$charAt(var$16);
                $tIndex = $curSymb - 4519 | 0;
            }
            if ($tIndex >= 0 && $tIndex < 28) {
                var$17 = var$16 + 1 | 0;
                var$14[2] = $curSymb;
                if ($this.$decomposedCharLength0 == 3 && var$14[0] == $this.$decomposedChar0.data[0] && var$14[1] == $this.$decomposedChar0.data[1] && var$14[2] == $this.$decomposedChar0.data[2]) {
                    var$18 = $this.$next;
                    var$17 = var$18.$matches(var$17, $testString, $matchResult);
                } else
                    var$17 = (-1);
                return var$17;
            }
            if ($this.$decomposedCharLength0 == 2 && var$14[0] == $this.$decomposedChar0.data[0] && var$14[1] == $this.$decomposedChar0.data[1]) {
                var$18 = $this.$next;
                var$17 = var$18.$matches(var$16, $testString, $matchResult);
            } else
                var$17 = (-1);
            return var$17;
        }
        return (-1);
    }
    return (-1);
}
function jur_HangulDecomposedCharSet_first($this, $set) {
    var var$2, var$3;
    a: {
        if ($set instanceof jur_HangulDecomposedCharSet) {
            var$2 = $set;
            if (!jur_HangulDecomposedCharSet_getDecomposedChar(var$2).$equals(jur_HangulDecomposedCharSet_getDecomposedChar($this))) {
                var$3 = 0;
                break a;
            }
        }
        var$3 = 1;
    }
    return var$3;
}
function jur_HangulDecomposedCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
function iaai_InputDevice$DeviceType() {
    jl_Enum.call(this);
}
var iaai_InputDevice$DeviceType_keyboard = null;
var iaai_InputDevice$DeviceType_controller = null;
var iaai_InputDevice$DeviceType_$VALUES = null;
function iaai_InputDevice$DeviceType_$callClinit() {
    iaai_InputDevice$DeviceType_$callClinit = $rt_eraseClinit(iaai_InputDevice$DeviceType);
    iaai_InputDevice$DeviceType__clinit_();
}
function iaai_InputDevice$DeviceType__init_(var_0, var_1) {
    var var_2 = new iaai_InputDevice$DeviceType();
    iaai_InputDevice$DeviceType__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaai_InputDevice$DeviceType_values() {
    iaai_InputDevice$DeviceType_$callClinit();
    return iaai_InputDevice$DeviceType_$VALUES.$clone();
}
function iaai_InputDevice$DeviceType__init_0($this, var$1, var$2) {
    iaai_InputDevice$DeviceType_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaai_InputDevice$DeviceType__clinit_() {
    var var$1, var$2;
    iaai_InputDevice$DeviceType_keyboard = iaai_InputDevice$DeviceType__init_($rt_s(1271), 0);
    iaai_InputDevice$DeviceType_controller = iaai_InputDevice$DeviceType__init_($rt_s(1279), 1);
    var$1 = $rt_createArray(iaai_InputDevice$DeviceType, 2);
    var$2 = var$1.data;
    var$2[0] = iaai_InputDevice$DeviceType_keyboard;
    var$2[1] = iaai_InputDevice$DeviceType_controller;
    iaai_InputDevice$DeviceType_$VALUES = var$1;
}
function iaac_IntMap() {
    var a = this; jl_Object.call(a);
    a.$size16 = 0;
    a.$keyTable = null;
    a.$valueTable2 = null;
    a.$capacity0 = 0;
    a.$stashSize = 0;
    a.$zeroValue = null;
    a.$hasZeroValue = 0;
    a.$loadFactor8 = 0.0;
    a.$hashShift5 = 0;
    a.$mask7 = 0;
    a.$threshold10 = 0;
    a.$stashCapacity5 = 0;
    a.$pushIterations5 = 0;
    a.$values10 = null;
    a.$values20 = null;
}
function iaac_IntMap__init_() {
    var var_0 = new iaac_IntMap();
    iaac_IntMap__init_0(var_0);
    return var_0;
}
function iaac_IntMap__init_1(var_0, var_1) {
    var var_2 = new iaac_IntMap();
    iaac_IntMap__init_2(var_2, var_0, var_1);
    return var_2;
}
function iaac_IntMap__init_0($this) {
    iaac_IntMap__init_2($this, 51, 0.800000011920929);
}
function iaac_IntMap__init_2($this, $initialCapacity, $loadFactor) {
    var var$3;
    jl_Object__init_0($this);
    if ($initialCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(280)).$append3($initialCapacity).$toString()));
    var$3 = iaam_Mathf_nextPowerOfTwo(jl_Math_ceil($initialCapacity / $loadFactor) | 0);
    if (var$3 > 1073741824)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(281)).$append3(var$3).$toString()));
    $this.$capacity0 = var$3;
    if ($loadFactor <= 0.0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(282)).$append13($loadFactor).$toString()));
    $this.$loadFactor8 = $loadFactor;
    $this.$threshold10 = $this.$capacity0 * $loadFactor | 0;
    $this.$mask7 = $this.$capacity0 - 1 | 0;
    $this.$hashShift5 = 31 - jl_Integer_numberOfTrailingZeros($this.$capacity0) | 0;
    $this.$stashCapacity5 = jl_Math_max1(3, (jl_Math_ceil(jl_Math_log($this.$capacity0)) | 0) * 2 | 0);
    $this.$pushIterations5 = jl_Math_max1(jl_Math_min1($this.$capacity0, 8), (jl_Math_sqrt($this.$capacity0) | 0) / 8 | 0);
    $this.$keyTable = $rt_createIntArray($this.$capacity0 + $this.$stashCapacity5 | 0);
    $this.$valueTable2 = $rt_createArray(jl_Object, $this.$keyTable.data.length);
}
function iaac_IntMap_put($this, $key, $value) {
    var $oldValue, $keyTable, var$5, $index1, $key1, $index2, $key2, $index3, $key3, $i, $n, var$14;
    if (!$key) {
        $oldValue = $this.$zeroValue;
        $this.$zeroValue = $value;
        if (!$this.$hasZeroValue) {
            $this.$hasZeroValue = 1;
            $this.$size16 = $this.$size16 + 1 | 0;
        }
        return $oldValue;
    }
    $keyTable = $this.$keyTable;
    var$5 = $keyTable.data;
    $index1 = $key & $this.$mask7;
    $key1 = var$5[$index1];
    if ($key1 == $key) {
        $oldValue = $this.$valueTable2.data[$index1];
        $this.$valueTable2.data[$index1] = $value;
        return $oldValue;
    }
    $index2 = iaac_IntMap_hash2($this, $key);
    $key2 = var$5[$index2];
    if ($key2 == $key) {
        $oldValue = $this.$valueTable2.data[$index2];
        $this.$valueTable2.data[$index2] = $value;
        return $oldValue;
    }
    $index3 = iaac_IntMap_hash3($this, $key);
    $key3 = var$5[$index3];
    if ($key3 == $key) {
        $oldValue = $this.$valueTable2.data[$index3];
        $this.$valueTable2.data[$index3] = $value;
        return $oldValue;
    }
    $i = $this.$capacity0;
    $n = $i + $this.$stashSize | 0;
    while (true) {
        if ($i >= $n) {
            if (!$key1) {
                var$5[$index1] = $key;
                $this.$valueTable2.data[$index1] = $value;
                var$14 = $this.$size16;
                $this.$size16 = var$14 + 1 | 0;
                if (var$14 >= $this.$threshold10)
                    iaac_IntMap_resize($this, $this.$capacity0 << 1);
                return null;
            }
            if (!$key2) {
                var$5[$index2] = $key;
                $this.$valueTable2.data[$index2] = $value;
                var$14 = $this.$size16;
                $this.$size16 = var$14 + 1 | 0;
                if (var$14 >= $this.$threshold10)
                    iaac_IntMap_resize($this, $this.$capacity0 << 1);
                return null;
            }
            if ($key3) {
                iaac_IntMap_push($this, $key, $value, $index1, $key1, $index2, $key2, $index3, $key3);
                return null;
            }
            var$5[$index3] = $key;
            $this.$valueTable2.data[$index3] = $value;
            var$14 = $this.$size16;
            $this.$size16 = var$14 + 1 | 0;
            if (var$14 >= $this.$threshold10)
                iaac_IntMap_resize($this, $this.$capacity0 << 1);
            return null;
        }
        if (var$5[$i] == $key)
            break;
        $i = $i + 1 | 0;
    }
    $oldValue = $this.$valueTable2.data[$i];
    $this.$valueTable2.data[$i] = $value;
    return $oldValue;
}
function iaac_IntMap_putResize($this, $key, $value) {
    var $index1, $key1, var$5, $index2, $key2, $index3, $key3;
    if (!$key) {
        $this.$zeroValue = $value;
        $this.$hasZeroValue = 1;
        return;
    }
    $index1 = $key & $this.$mask7;
    $key1 = $this.$keyTable.data[$index1];
    if (!$key1) {
        $this.$keyTable.data[$index1] = $key;
        $this.$valueTable2.data[$index1] = $value;
        var$5 = $this.$size16;
        $this.$size16 = var$5 + 1 | 0;
        if (var$5 >= $this.$threshold10)
            iaac_IntMap_resize($this, $this.$capacity0 << 1);
        return;
    }
    $index2 = iaac_IntMap_hash2($this, $key);
    $key2 = $this.$keyTable.data[$index2];
    if (!$key2) {
        $this.$keyTable.data[$index2] = $key;
        $this.$valueTable2.data[$index2] = $value;
        var$5 = $this.$size16;
        $this.$size16 = var$5 + 1 | 0;
        if (var$5 >= $this.$threshold10)
            iaac_IntMap_resize($this, $this.$capacity0 << 1);
        return;
    }
    $index3 = iaac_IntMap_hash3($this, $key);
    $key3 = $this.$keyTable.data[$index3];
    if ($key3) {
        iaac_IntMap_push($this, $key, $value, $index1, $key1, $index2, $key2, $index3, $key3);
        return;
    }
    $this.$keyTable.data[$index3] = $key;
    $this.$valueTable2.data[$index3] = $value;
    var$5 = $this.$size16;
    $this.$size16 = var$5 + 1 | 0;
    if (var$5 >= $this.$threshold10)
        iaac_IntMap_resize($this, $this.$capacity0 << 1);
}
function iaac_IntMap_push($this, $insertKey, $insertValue, $index1, $key1, $index2, $key2, $index3, $key3) {
    var $keyTable, $valueTable, $mask, $i, $pushIterations, var$14, var$15, $evictedValue, var$17, var$18;
    $keyTable = $this.$keyTable;
    $valueTable = $this.$valueTable2;
    $mask = $this.$mask7;
    $i = 0;
    $pushIterations = $this.$pushIterations5;
    while (true) {
        a: {
            switch (iaam_Mathf_random(2)) {
                case 0:
                    break;
                case 1:
                    var$14 = $valueTable.data;
                    var$15 = $keyTable.data;
                    $evictedValue = var$14[$index2];
                    var$15[$index2] = $insertKey;
                    var$14[$index2] = $insertValue;
                    $key1 = $key2;
                    break a;
                default:
                    var$14 = $valueTable.data;
                    var$15 = $keyTable.data;
                    $evictedValue = var$14[$index3];
                    var$15[$index3] = $insertKey;
                    var$14[$index3] = $insertValue;
                    $key1 = $key3;
                    break a;
            }
            var$14 = $valueTable.data;
            var$15 = $keyTable.data;
            $evictedValue = var$14[$index1];
            var$15[$index1] = $insertKey;
            var$14[$index1] = $insertValue;
        }
        var$15 = $keyTable.data;
        $index1 = $key1 & $mask;
        var$17 = var$15[$index1];
        if (!var$17) {
            var$14 = $valueTable.data;
            var$15[$index1] = $key1;
            var$14[$index1] = $evictedValue;
            var$17 = $this.$size16;
            $this.$size16 = var$17 + 1 | 0;
            if (var$17 >= $this.$threshold10)
                iaac_IntMap_resize($this, $this.$capacity0 << 1);
            return;
        }
        $index2 = iaac_IntMap_hash2($this, $key1);
        $key2 = var$15[$index2];
        if (!$key2) {
            var$14 = $valueTable.data;
            var$15[$index2] = $key1;
            var$14[$index2] = $evictedValue;
            var$17 = $this.$size16;
            $this.$size16 = var$17 + 1 | 0;
            if (var$17 >= $this.$threshold10)
                iaac_IntMap_resize($this, $this.$capacity0 << 1);
            return;
        }
        $index3 = iaac_IntMap_hash3($this, $key1);
        $key3 = var$15[$index3];
        if (!$key3) {
            var$14 = $valueTable.data;
            var$15[$index3] = $key1;
            var$14[$index3] = $evictedValue;
            var$18 = $this.$size16;
            $this.$size16 = var$18 + 1 | 0;
            if (var$18 >= $this.$threshold10)
                iaac_IntMap_resize($this, $this.$capacity0 << 1);
            return;
        }
        $i = $i + 1 | 0;
        if ($i == $pushIterations)
            break;
        $insertKey = $key1;
        $key1 = var$17;
        $insertValue = $evictedValue;
    }
    iaac_IntMap_putStash($this, $key1, $evictedValue);
}
function iaac_IntMap_putStash($this, $key, $value) {
    var $index;
    if ($this.$stashSize == $this.$stashCapacity5) {
        iaac_IntMap_resize($this, $this.$capacity0 << 1);
        iaac_IntMap_putResize($this, $key, $value);
        return;
    }
    $index = $this.$capacity0 + $this.$stashSize | 0;
    $this.$keyTable.data[$index] = $key;
    $this.$valueTable2.data[$index] = $value;
    $this.$stashSize = $this.$stashSize + 1 | 0;
    $this.$size16 = $this.$size16 + 1 | 0;
}
function iaac_IntMap_get($this, $key) {
    var $index;
    if (!$key) {
        if ($this.$hasZeroValue)
            return $this.$zeroValue;
        return null;
    }
    $index = $key & $this.$mask7;
    if ($this.$keyTable.data[$index] != $key) {
        $index = iaac_IntMap_hash2($this, $key);
        if ($this.$keyTable.data[$index] != $key) {
            $index = iaac_IntMap_hash3($this, $key);
            if ($this.$keyTable.data[$index] != $key)
                return iaac_IntMap_getStash($this, $key, null);
        }
    }
    return $this.$valueTable2.data[$index];
}
function iaac_IntMap_getStash($this, $key, $defaultValue) {
    var $keyTable, $i, $n;
    $keyTable = $this.$keyTable;
    $i = $this.$capacity0;
    $n = $i + $this.$stashSize | 0;
    while ($i < $n) {
        if ($keyTable.data[$i] == $key)
            return $this.$valueTable2.data[$i];
        $i = $i + 1 | 0;
    }
    return $defaultValue;
}
function iaac_IntMap_remove($this, $key) {
    var $oldValue, $index, var$4, var$5;
    if (!$key) {
        if (!$this.$hasZeroValue)
            return null;
        $oldValue = $this.$zeroValue;
        $this.$zeroValue = null;
        $this.$hasZeroValue = 0;
        $this.$size16 = $this.$size16 - 1 | 0;
        return $oldValue;
    }
    $index = $key & $this.$mask7;
    if ($this.$keyTable.data[$index] == $key) {
        $this.$keyTable.data[$index] = 0;
        $oldValue = $this.$valueTable2.data[$index];
        $this.$valueTable2.data[$index] = null;
        $this.$size16 = $this.$size16 - 1 | 0;
        return $oldValue;
    }
    var$4 = iaac_IntMap_hash2($this, $key);
    if ($this.$keyTable.data[var$4] == $key) {
        $this.$keyTable.data[var$4] = 0;
        $oldValue = $this.$valueTable2.data[var$4];
        $this.$valueTable2.data[var$4] = null;
        $this.$size16 = $this.$size16 - 1 | 0;
        return $oldValue;
    }
    var$5 = iaac_IntMap_hash3($this, $key);
    if ($this.$keyTable.data[var$5] != $key)
        return $this.$removeStash0($key);
    $this.$keyTable.data[var$5] = 0;
    $oldValue = $this.$valueTable2.data[var$5];
    $this.$valueTable2.data[var$5] = null;
    $this.$size16 = $this.$size16 - 1 | 0;
    return $oldValue;
}
function iaac_IntMap_removeStash($this, $key) {
    var $keyTable, $i, $n, $oldValue;
    $keyTable = $this.$keyTable;
    $i = $this.$capacity0;
    $n = $i + $this.$stashSize | 0;
    while ($i < $n) {
        if ($keyTable.data[$i] == $key) {
            $oldValue = $this.$valueTable2.data[$i];
            $this.$removeStashIndex($i);
            $this.$size16 = $this.$size16 - 1 | 0;
            return $oldValue;
        }
        $i = $i + 1 | 0;
    }
    return null;
}
function iaac_IntMap_removeStashIndex($this, $index) {
    var $lastIndex;
    $this.$stashSize = $this.$stashSize - 1 | 0;
    $lastIndex = $this.$capacity0 + $this.$stashSize | 0;
    if ($index >= $lastIndex)
        $this.$valueTable2.data[$index] = null;
    else {
        $this.$keyTable.data[$index] = $this.$keyTable.data[$lastIndex];
        $this.$valueTable2.data[$index] = $this.$valueTable2.data[$lastIndex];
        $this.$valueTable2.data[$lastIndex] = null;
    }
}
function iaac_IntMap_resize($this, $newSize) {
    var $oldEndIndex, var$3, $oldKeyTable, $oldValueTable, $oldSize, var$7, $i, $key;
    $oldEndIndex = $this.$capacity0 + $this.$stashSize | 0;
    $this.$capacity0 = $newSize;
    $this.$threshold10 = $newSize * $this.$loadFactor8 | 0;
    $this.$mask7 = $newSize - 1 | 0;
    $this.$hashShift5 = 31 - jl_Integer_numberOfTrailingZeros($newSize) | 0;
    var$3 = $newSize;
    $this.$stashCapacity5 = jl_Math_max1(3, (jl_Math_ceil(jl_Math_log(var$3)) | 0) * 2 | 0);
    $this.$pushIterations5 = jl_Math_max1(jl_Math_min1($newSize, 8), (jl_Math_sqrt(var$3) | 0) / 8 | 0);
    $oldKeyTable = $this.$keyTable;
    $oldValueTable = $this.$valueTable2;
    $this.$keyTable = $rt_createIntArray($newSize + $this.$stashCapacity5 | 0);
    $this.$valueTable2 = $rt_createArray(jl_Object, $newSize + $this.$stashCapacity5 | 0);
    $oldSize = $this.$size16;
    var$7 = !$this.$hasZeroValue ? 0 : 1;
    a: {
        $this.$size16 = var$7;
        $this.$stashSize = 0;
        if ($oldSize > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldEndIndex)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key)
                    iaac_IntMap_putResize($this, $key, $oldValueTable.data[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
}
function iaac_IntMap_hash2($this, $h) {
    var var$2;
    var$2 = $rt_imul($h, (-1262997959));
    return (var$2 ^ var$2 >>> $this.$hashShift5) & $this.$mask7;
}
function iaac_IntMap_hash3($this, $h) {
    var var$2;
    var$2 = $rt_imul($h, (-825114047));
    return (var$2 ^ var$2 >>> $this.$hashShift5) & $this.$mask7;
}
function iaac_IntMap_values($this) {
    if ($this.$values10 === null) {
        $this.$values10 = iaac_IntMap$Values__init_($this);
        $this.$values20 = iaac_IntMap$Values__init_($this);
    }
    if ($this.$values10.$valid) {
        $this.$values20.$reset();
        $this.$values20.$valid = 1;
        $this.$values10.$valid = 0;
        return $this.$values20;
    }
    $this.$values10.$reset();
    $this.$values10.$valid = 1;
    $this.$values20.$valid = 0;
    return $this.$values10;
}
function it_Phases$5$lambda$null$8$lambda$_14_0() {
    var a = this; jl_Object.call(a);
    a.$_0137 = 0;
    a.$_153 = null;
}
function it_Phases$5$lambda$null$8$lambda$_14_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$5$lambda$null$8$lambda$_14_0();
    it_Phases$5$lambda$null$8$lambda$_14_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$5$lambda$null$8$lambda$_14_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_0137 = var$1;
    var$0.$_153 = var$2;
}
function it_Phases$5$lambda$null$8$lambda$_14_0_get(var$0, var$1) {
    it_Phases$5_lambda$null$7(var$0.$_0137, var$0.$_153, var$1);
}
function iaam_TileLayer() {
    var a = this; iaam_MapLayer.call(a);
    a.$width8 = 0;
    a.$height6 = 0;
    a.$tileWidth = 0.0;
    a.$tileHeight = 0.0;
    a.$cells0 = null;
}
function iaam_TileLayer__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new iaam_TileLayer();
    iaam_TileLayer__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaam_TileLayer__init_0($this, $width, $height, $tileWidth, $tileHeight) {
    iaam_MapLayer__init_0($this);
    $this.$width8 = $width;
    $this.$height6 = $height;
    $this.$tileWidth = $tileWidth;
    $this.$tileHeight = $tileHeight;
    $this.$cells0 = $rt_createMultiArray($rt_arraycls($rt_arraycls(iaam_TileLayer$Cell)), [$height, $width]);
}
function iaam_TileLayer_getCell($this, $x, $y) {
    if ($x >= 0 && $x < $this.$width8 && $y >= 0 && $y < $this.$height6)
        return $this.$cells0.data[$x].data[$y];
    return null;
}
function iaam_TileLayer_setCell($this, $x, $y, $cell) {
    if ($x >= 0 && $x < $this.$width8 && $y >= 0 && $y < $this.$height6) {
        $this.$cells0.data[$x].data[$y] = $cell;
        return;
    }
}
function iaam_TileLayer_getTile($this, $x, $y) {
    return $this.$getCell0($x, $y) === null ? null : $this.$getCell0($x, $y).$tile0;
}
function it_Phases$2$lambda$null$6$lambda$_18_0() {
    jl_Object.call(this);
    this.$_0138 = null;
}
function it_Phases$2$lambda$null$6$lambda$_18_0__init_(var_0) {
    var var_1 = new it_Phases$2$lambda$null$6$lambda$_18_0();
    it_Phases$2$lambda$null$6$lambda$_18_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$2$lambda$null$6$lambda$_18_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0138 = var$1;
}
function it_Phases$2$lambda$null$6$lambda$_18_0_get(var$0, var$1) {
    var$0.$_0138.$shoot(var$1);
}
function iaa_Files$FileType() {
    jl_Enum.call(this);
}
var iaa_Files$FileType_classpath = null;
var iaa_Files$FileType_internal = null;
var iaa_Files$FileType_external = null;
var iaa_Files$FileType_absolute = null;
var iaa_Files$FileType_local = null;
var iaa_Files$FileType_$VALUES = null;
function iaa_Files$FileType_$callClinit() {
    iaa_Files$FileType_$callClinit = $rt_eraseClinit(iaa_Files$FileType);
    iaa_Files$FileType__clinit_();
}
function iaa_Files$FileType__init_(var_0, var_1) {
    var var_2 = new iaa_Files$FileType();
    iaa_Files$FileType__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaa_Files$FileType_values() {
    iaa_Files$FileType_$callClinit();
    return iaa_Files$FileType_$VALUES.$clone();
}
function iaa_Files$FileType__init_0($this, var$1, var$2) {
    iaa_Files$FileType_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaa_Files$FileType__clinit_() {
    var var$1, var$2;
    iaa_Files$FileType_classpath = iaa_Files$FileType__init_($rt_s(1320), 0);
    iaa_Files$FileType_internal = iaa_Files$FileType__init_($rt_s(1321), 1);
    iaa_Files$FileType_external = iaa_Files$FileType__init_($rt_s(1322), 2);
    iaa_Files$FileType_absolute = iaa_Files$FileType__init_($rt_s(1323), 3);
    iaa_Files$FileType_local = iaa_Files$FileType__init_($rt_s(1324), 4);
    var$1 = $rt_createArray(iaa_Files$FileType, 5);
    var$2 = var$1.data;
    var$2[0] = iaa_Files$FileType_classpath;
    var$2[1] = iaa_Files$FileType_internal;
    var$2[2] = iaa_Files$FileType_external;
    var$2[3] = iaa_Files$FileType_absolute;
    var$2[4] = iaa_Files$FileType_local;
    iaa_Files$FileType_$VALUES = var$1;
}
function iaac_ObjectSet$ObjectSetIterator() {
    jl_Object.call(this);
}
function jur_WordBoundary() {
    jur_AbstractSet.call(this);
    this.$positive = 0;
}
function jur_WordBoundary__init_(var_0) {
    var var_1 = new jur_WordBoundary();
    jur_WordBoundary__init_0(var_1, var_0);
    return var_1;
}
function jur_WordBoundary__init_0($this, $positive) {
    jur_AbstractSet__init_0($this);
    $this.$positive = $positive;
}
function jur_WordBoundary_matches($this, $stringIndex, $testString, $matchResult) {
    var $ch1, $ch2, $leftBound, $left, $right;
    $ch1 = $stringIndex < $matchResult.$getRightBound() ? $testString.$charAt($stringIndex) : 32;
    $ch2 = !$stringIndex ? 32 : $testString.$charAt($stringIndex - 1 | 0);
    $leftBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getLeftBound() : 0;
    $left = $ch1 != 32 && !jur_WordBoundary_isSpace($this, $ch1, $stringIndex, $leftBound, $testString) ? 0 : 1;
    $right = $ch2 != 32 && !jur_WordBoundary_isSpace($this, $ch2, $stringIndex - 1 | 0, $leftBound, $testString) ? 0 : 1;
    return $left ^ $right ^ $this.$positive ? (-1) : $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_WordBoundary_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_WordBoundary_getName($this) {
    return $rt_s(1325);
}
function jur_WordBoundary_isSpace($this, $ch, $index, $leftBound, $testString) {
    var var$5;
    if (!jl_Character_isLetterOrDigit($ch) && $ch != 95) {
        a: {
            if (jl_Character_getType0($ch) == 6)
                while (true) {
                    $index = $index + (-1) | 0;
                    if ($index < $leftBound)
                        break a;
                    var$5 = $testString.$charAt($index);
                    if (jl_Character_isLetterOrDigit(var$5))
                        return 0;
                    if (jl_Character_getType0(var$5) != 6)
                        return 1;
                }
        }
        return 1;
    }
    return 0;
}
function it_Phases$5$lambda$null$6$lambda$_16_0() {
    jl_Object.call(this);
    this.$_0139 = null;
}
function it_Phases$5$lambda$null$6$lambda$_16_0__init_(var_0) {
    var var_1 = new it_Phases$5$lambda$null$6$lambda$_16_0();
    it_Phases$5$lambda$null$6$lambda$_16_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$5$lambda$null$6$lambda$_16_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0139 = var$1;
}
function it_Phases$5$lambda$null$6$lambda$_16_0_get(var$0, var$1) {
    it_Phases$5_lambda$null$5(var$0.$_0139, var$1);
}
function iaas_Scene$1() {
    iaauv_ScreenViewport.call(this);
    this.$this$044 = null;
}
function iaas_Scene$1__init_(var_0) {
    var var_1 = new iaas_Scene$1();
    iaas_Scene$1__init_0(var_1, var_0);
    return var_1;
}
function iaas_Scene$1__init_0($this, $this$0) {
    $this.$this$044 = $this$0;
    iaauv_ScreenViewport__init_0($this);
}
function iaas_Scene$1_calculateScissors($this, $batchTransform, $area, $scissor) {
    var var$4, var$5, var$6, var$7, var$8;
    var$4 = $this.$getCamera();
    var$5 = $this.$getScreenX();
    var$6 = $this.$getScreenY();
    var$7 = $this.$getScreenWidth();
    var$8 = $this.$getScreenHeight();
    iaagg_ScissorStack_calculateScissors(var$4, var$5, var$6, var$7, var$8, $batchTransform, $area, $scissor);
}
function cbgu_BufferUtils() {
    jl_Object.call(this);
}
var cbgu_BufferUtils_unsafeBuffers = null;
var cbgu_BufferUtils_allocatedUnsafe = 0;
function cbgu_BufferUtils_$callClinit() {
    cbgu_BufferUtils_$callClinit = $rt_eraseClinit(cbgu_BufferUtils);
    cbgu_BufferUtils__clinit_();
}
function cbgu_BufferUtils__clinit_() {
    cbgu_BufferUtils_unsafeBuffers = cbgu_Array__init_();
    cbgu_BufferUtils_allocatedUnsafe = 0;
}
function cbgu_BufferUtils_copyJni($src, $dst, $numFloats, $offset) {
    var $floatDst, $byteDst;
    cbgu_BufferUtils_$callClinit();
    $dst.$position(0);
    $dst.$limit0(jn_Buffer_capacity($dst));
    if ($dst instanceof jn_FloatBuffer) {
        $floatDst = $dst;
        $floatDst = $floatDst.$duplicate1();
    } else {
        if (!($dst instanceof jn_ByteBuffer))
            $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(1326)).$append(jl_Object_getClass($dst).$getName()).$append($rt_s(1327)).$toString()));
        $byteDst = $dst;
        $floatDst = $byteDst.$asFloatBuffer();
    }
    $floatDst.$put13($src, $offset, $numFloats);
}
function cbgu_BufferUtils_newDisposableByteBuffer($numBytes) {
    cbgu_BufferUtils_$callClinit();
    return jn_ByteBuffer_wrap($rt_createByteArray($numBytes));
}
function cbgu_BufferUtils_freeMemory($buffer) {
    cbgu_BufferUtils_$callClinit();
}
function jl_Double() {
    jl_Number.call(this);
}
var jl_Double_NaN = 0.0;
var jl_Double_TYPE = null;
function jl_Double_$callClinit() {
    jl_Double_$callClinit = $rt_eraseClinit(jl_Double);
    jl_Double__clinit_();
}
function jl_Double__clinit_() {
    jl_Double_NaN = NaN;
    jl_Double_TYPE = $rt_cls($rt_doublecls());
}
function iaate_FadeEffect() {
    var a = this; iaat_Effect.call(a);
    a.$color110 = null;
    a.$color23 = null;
    a.$alpha1 = 0.0;
    a.$alpha2 = 0.0;
    a.$fadeDuration = 0.0;
    a.$timePassedByGlyphIndex0 = null;
}
function iaate_FadeEffect__init_(var_0) {
    var var_1 = new iaate_FadeEffect();
    iaate_FadeEffect__init_0(var_1, var_0);
    return var_1;
}
function iaate_FadeEffect__init_0($this, $label) {
    iaat_Effect__init_0($this, $label);
    $this.$color110 = null;
    $this.$color23 = null;
    $this.$alpha1 = 0.0;
    $this.$alpha2 = 1.0;
    $this.$fadeDuration = 1.0;
    $this.$timePassedByGlyphIndex0 = iaac_IntFloatMap__init_();
}
function iaate_FadeEffect_onApply($this, $glyph, $localIndex, $delta) {
    var $timePassed, $progress;
    $timePassed = $this.$timePassedByGlyphIndex0.$getAndIncrement($localIndex, 0.0, $delta);
    $progress = $timePassed / $this.$fadeDuration;
    if ($progress >= 0.0 && $progress <= 1.0) {
        if ($glyph.$color11 === null)
            $glyph.$color11 = iaag_Color__init_7($glyph.$run2.$color5);
        if ($this.$color110 !== null)
            $glyph.$color11.$lerp($this.$color110, 1.0 - $progress);
        else
            $glyph.$color11.$a = iaam_Mathf_lerp($glyph.$color11.$a, $this.$alpha1, 1.0 - $progress);
        if ($this.$color23 !== null)
            $glyph.$color11.$lerp($this.$color23, $progress);
        else
            $glyph.$color11.$a = iaam_Mathf_lerp($glyph.$color11.$a, $this.$alpha2, $progress);
        return;
    }
}
function it_Phases$lambda$static$48$lambda$_19_0() {
    jl_Object.call(this);
}
function it_Phases$lambda$static$48$lambda$_19_0__init_() {
    var var_0 = new it_Phases$lambda$static$48$lambda$_19_0();
    it_Phases$lambda$static$48$lambda$_19_0__init_0(var_0);
    return var_0;
}
function it_Phases$lambda$static$48$lambda$_19_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$lambda$static$48$lambda$_19_0_get(var$0, var$1, var$2) {
    it_Phases_lambda$null$46(var$1, var$2);
}
function iaate_RainbowEffect() {
    var a = this; iaat_Effect.call(a);
    a.$distance5 = 0.0;
    a.$frequency3 = 0.0;
    a.$saturation = 0.0;
    a.$brightness = 0.0;
}
function iaate_RainbowEffect__init_(var_0) {
    var var_1 = new iaate_RainbowEffect();
    iaate_RainbowEffect__init_0(var_1, var_0);
    return var_1;
}
function iaate_RainbowEffect__init_0($this, $label) {
    iaat_Effect__init_0($this, $label);
    $this.$distance5 = 1.0;
    $this.$frequency3 = 1.0;
    $this.$saturation = 1.0;
    $this.$brightness = 1.0;
}
function iaate_RainbowEffect_onApply($this, $glyph, $localIndex, $delta) {
    var $distanceMod, $frequencyMod, $progress, var$7;
    $distanceMod = 1.0 / $this.$distance5 * 0.02499997615814209;
    $frequencyMod = 1.0 / $this.$frequency3 * 2.0;
    $progress = $this.$calculateProgress($frequencyMod, $distanceMod * $localIndex, 0);
    if ($glyph.$color11 === null) {
        var$7 = new iaag_Color;
        iaag_Color_$callClinit();
        iaag_Color__init_8(var$7, iaag_Color_white);
        $glyph.$color11 = var$7;
    }
    iaag_Color_HSVtoRGB(360.0 * $progress, $this.$saturation * 100.0, $this.$brightness * 100.0, $glyph.$color11);
}
function iaag_Texture$TextureFilter() {
    jl_Enum.call(this);
    this.$glEnum0 = 0;
}
var iaag_Texture$TextureFilter_Nearest = null;
var iaag_Texture$TextureFilter_Linear = null;
var iaag_Texture$TextureFilter_MipMap = null;
var iaag_Texture$TextureFilter_MipMapNearestNearest = null;
var iaag_Texture$TextureFilter_MipMapLinearNearest = null;
var iaag_Texture$TextureFilter_MipMapNearestLinear = null;
var iaag_Texture$TextureFilter_MipMapLinearLinear = null;
var iaag_Texture$TextureFilter_$VALUES = null;
function iaag_Texture$TextureFilter_$callClinit() {
    iaag_Texture$TextureFilter_$callClinit = $rt_eraseClinit(iaag_Texture$TextureFilter);
    iaag_Texture$TextureFilter__clinit_();
}
function iaag_Texture$TextureFilter__init_(var_0, var_1, var_2) {
    var var_3 = new iaag_Texture$TextureFilter();
    iaag_Texture$TextureFilter__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaag_Texture$TextureFilter_values() {
    iaag_Texture$TextureFilter_$callClinit();
    return iaag_Texture$TextureFilter_$VALUES.$clone();
}
function iaag_Texture$TextureFilter_valueOf($name) {
    iaag_Texture$TextureFilter_$callClinit();
    return jl_Enum_valueOf($rt_cls(iaag_Texture$TextureFilter), $name);
}
function iaag_Texture$TextureFilter__init_0($this, var$1, var$2, $glEnum) {
    iaag_Texture$TextureFilter_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
    $this.$glEnum0 = $glEnum;
}
function iaag_Texture$TextureFilter_isMipMap($this) {
    return $this.$glEnum0 != 9728 && $this.$glEnum0 != 9729 ? 1 : 0;
}
function iaag_Texture$TextureFilter_getGLEnum($this) {
    return $this.$glEnum0;
}
function iaag_Texture$TextureFilter__clinit_() {
    var var$1, var$2;
    iaag_Texture$TextureFilter_Nearest = iaag_Texture$TextureFilter__init_($rt_s(1328), 0, 9728);
    iaag_Texture$TextureFilter_Linear = iaag_Texture$TextureFilter__init_($rt_s(1329), 1, 9729);
    iaag_Texture$TextureFilter_MipMap = iaag_Texture$TextureFilter__init_($rt_s(1330), 2, 9987);
    iaag_Texture$TextureFilter_MipMapNearestNearest = iaag_Texture$TextureFilter__init_($rt_s(1331), 3, 9984);
    iaag_Texture$TextureFilter_MipMapLinearNearest = iaag_Texture$TextureFilter__init_($rt_s(1332), 4, 9985);
    iaag_Texture$TextureFilter_MipMapNearestLinear = iaag_Texture$TextureFilter__init_($rt_s(1333), 5, 9986);
    iaag_Texture$TextureFilter_MipMapLinearLinear = iaag_Texture$TextureFilter__init_($rt_s(1334), 6, 9987);
    var$1 = $rt_createArray(iaag_Texture$TextureFilter, 7);
    var$2 = var$1.data;
    var$2[0] = iaag_Texture$TextureFilter_Nearest;
    var$2[1] = iaag_Texture$TextureFilter_Linear;
    var$2[2] = iaag_Texture$TextureFilter_MipMap;
    var$2[3] = iaag_Texture$TextureFilter_MipMapNearestNearest;
    var$2[4] = iaag_Texture$TextureFilter_MipMapLinearNearest;
    var$2[5] = iaag_Texture$TextureFilter_MipMapNearestLinear;
    var$2[6] = iaag_Texture$TextureFilter_MipMapLinearLinear;
    iaag_Texture$TextureFilter_$VALUES = var$1;
}
function iaas_Scene$2() {
    iaas_Group.call(this);
    this.$this$045 = null;
}
function iaas_Scene$2__init_(var_0) {
    var var_1 = new iaas_Scene$2();
    iaas_Scene$2__init_0(var_1, var_0);
    return var_1;
}
function iaas_Scene$2__init_0($this, $this$0) {
    $this.$this$045 = $this$0;
    iaas_Group__init_0($this);
}
function it_Bullets$9$hit$lambda$_3_1() {
    var a = this; jl_Object.call(a);
    a.$_0140 = null;
    a.$_154 = 0.0;
}
function it_Bullets$9$hit$lambda$_3_1__init_(var_0, var_1) {
    var var_2 = new it_Bullets$9$hit$lambda$_3_1();
    it_Bullets$9$hit$lambda$_3_1__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Bullets$9$hit$lambda$_3_1__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_0140 = var$1;
    var$0.$_154 = var$2;
}
function it_Bullets$9$hit$lambda$_3_1_run(var$0) {
    it_Bullets$9_lambda$hit$8(var$0.$_0140, var$0.$_154);
}
function it_Phases$lambda$static$48$lambda$_19_1() {
    jl_Object.call(this);
    this.$_0141 = null;
}
function it_Phases$lambda$static$48$lambda$_19_1__init_(var_0) {
    var var_1 = new it_Phases$lambda$static$48$lambda$_19_1();
    it_Phases$lambda$static$48$lambda$_19_1__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$static$48$lambda$_19_1__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0141 = var$1;
}
function it_Phases$lambda$static$48$lambda$_19_1_run(var$0) {
    it_Phases_lambda$null$47(var$0.$_0141);
}
function it_Bullets$9$hit$lambda$_3_0() {
    jl_Object.call(this);
    this.$_0142 = null;
}
function it_Bullets$9$hit$lambda$_3_0__init_(var_0) {
    var var_1 = new it_Bullets$9$hit$lambda$_3_0();
    it_Bullets$9$hit$lambda$_3_0__init_0(var_1, var_0);
    return var_1;
}
function it_Bullets$9$hit$lambda$_3_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0142 = var$1;
}
function it_Bullets$9$hit$lambda$_3_0_get(var$0, var$1) {
    it_Bullets$9_lambda$hit$2(var$0.$_0142, var$1);
}
function iaas_Scene$setScrollFocus$lambda$_45_0() {
    jl_Object.call(this);
}
function iaas_Scene$setScrollFocus$lambda$_45_0__init_() {
    var var_0 = new iaas_Scene$setScrollFocus$lambda$_45_0();
    iaas_Scene$setScrollFocus$lambda$_45_0__init_0(var_0);
    return var_0;
}
function iaas_Scene$setScrollFocus$lambda$_45_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaas_Scene$setScrollFocus$lambda$_45_0_get(var$0) {
    return iaas_Scene$setScrollFocus$lambda$_45_0_get0(var$0);
}
function iaas_Scene$setScrollFocus$lambda$_45_0_get0(var$0) {
    return iaase_FocusListener$FocusEvent__init_();
}
function otjb_StorageProvider() {
}
function otjc_JSArrayReader() {
}
function otjb_Window() {
    jl_Object.call(this);
}
function otjb_Window_addEventListener$exported$0(var$0, var$1, var$2) {
    var$0.$addEventListener($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function otjb_Window_removeEventListener$exported$1(var$0, var$1, var$2) {
    var$0.$removeEventListener($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function otjb_Window_get$exported$2(var$0, var$1) {
    return var$0.$get70(var$1);
}
function otjb_Window_removeEventListener$exported$3(var$0, var$1, var$2, var$3) {
    var$0.$removeEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
function otjb_Window_dispatchEvent$exported$4(var$0, var$1) {
    return !!var$0.$dispatchEvent(var$1);
}
function otjb_Window_getLength$exported$5(var$0) {
    return var$0.$getLength0();
}
function otjb_Window_addEventListener$exported$6(var$0, var$1, var$2, var$3) {
    var$0.$addEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
function it_Bullet$_init_$lambda$_1_0() {
    jl_Object.call(this);
}
function it_Bullet$_init_$lambda$_1_0__init_() {
    var var_0 = new it_Bullet$_init_$lambda$_1_0();
    it_Bullet$_init_$lambda$_1_0__init_0(var_0);
    return var_0;
}
function it_Bullet$_init_$lambda$_1_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Bullet$_init_$lambda$_1_0_move(var$0, var$1) {
    return it_Bullet_lambda$new$0(var$1);
}
function jur_IntHash() {
    jl_Object.call(this);
}
function it_Phases$lambda$static$18$lambda$_49_0() {
    jl_Object.call(this);
    this.$_0143 = 0.0;
}
function it_Phases$lambda$static$18$lambda$_49_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$static$18$lambda$_49_0();
    it_Phases$lambda$static$18$lambda$_49_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$static$18$lambda$_49_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0143 = var$1;
}
function it_Phases$lambda$static$18$lambda$_49_0_get(var$0, var$1) {
    it_Phases_lambda$null$17(var$0.$_0143, var$1);
}
function jur_ReluctantAltQuantifierSet() {
    jur_AltQuantifierSet.call(this);
}
function jur_ReluctantAltQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_ReluctantAltQuantifierSet();
    jur_ReluctantAltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_ReluctantAltQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_AltQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_ReluctantAltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
}
function cjj_GZIPException() {
    ji_IOException.call(this);
}
function cjj_GZIPException__init_(var_0) {
    var var_1 = new cjj_GZIPException();
    cjj_GZIPException__init_0(var_1, var_0);
    return var_1;
}
function cjj_GZIPException__init_0($this, $s) {
    ji_IOException__init_3($this, $s);
}
function jur_AbstractCharClass$LazyJavaWhitespace() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaWhitespace__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaWhitespace();
    jur_AbstractCharClass$LazyJavaWhitespace__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaWhitespace__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaWhitespace_computeValue($this) {
    return jur_AbstractCharClass$LazyJavaWhitespace$1__init_($this);
}
function jur_Matcher$1() {
    var a = this; jl_Object.call(a);
    a.$grN = 0;
    a.$val$gr = 0;
    a.$this$046 = null;
}
function jur_Matcher$1__init_(var_0, var_1) {
    var var_2 = new jur_Matcher$1();
    jur_Matcher$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_Matcher$1__init_0($this, $this$0, var$2) {
    $this.$this$046 = $this$0;
    $this.$val$gr = var$2;
    jl_Object__init_0($this);
    $this.$grN = $this.$val$gr;
}
function jur_Matcher$1_toString($this) {
    return jur_Matcher_group($this.$this$046, $this.$grN);
}
function cjj_CRC32() {
    jl_Object.call(this);
    this.$v3 = 0;
}
var cjj_CRC32_crc_table = null;
function cjj_CRC32_$callClinit() {
    cjj_CRC32_$callClinit = $rt_eraseClinit(cjj_CRC32);
    cjj_CRC32__clinit_();
}
function cjj_CRC32__init_() {
    var var_0 = new cjj_CRC32();
    cjj_CRC32__init_0(var_0);
    return var_0;
}
function cjj_CRC32__init_0($this) {
    cjj_CRC32_$callClinit();
    jl_Object__init_0($this);
    $this.$v3 = 0;
}
function cjj_CRC32_update($this, $buf, $index, $len) {
    var $c, var$5, var$6, var$7;
    $c = $this.$v3 ^ (-1);
    while (true) {
        $len = $len + (-1) | 0;
        if ($len < 0)
            break;
        var$5 = $buf.data;
        var$6 = cjj_CRC32_crc_table.data;
        var$7 = $index + 1 | 0;
        $c = var$6[($c ^ var$5[$index]) & 255] ^ $c >>> 8;
        $index = var$7;
    }
    $this.$v3 = $c ^ (-1);
}
function cjj_CRC32_reset($this) {
    $this.$v3 = 0;
}
function cjj_CRC32_reset0($this, $vv) {
    $this.$v3 = Long_and($vv, new Long(4294967295, 0)).lo;
}
function cjj_CRC32_getValue($this) {
    return Long_and(Long_fromInt($this.$v3), new Long(4294967295, 0));
}
function cjj_CRC32__clinit_() {
    var $n, $k, var$3;
    cjj_CRC32_crc_table = null;
    cjj_CRC32_crc_table = $rt_createIntArray(256);
    $n = 0;
    while ($n < 256) {
        $k = 8;
        var$3 = $n;
        while (true) {
            $k = $k + (-1) | 0;
            if ($k < 0)
                break;
            if (!(var$3 & 1)) {
                var$3 = var$3 >>> 1;
                continue;
            }
            var$3 = (-306674912) ^ var$3 >>> 1;
        }
        cjj_CRC32_crc_table.data[$n] = var$3;
        $n = $n + 1 | 0;
    }
}
function it_Phases$lambda$seq$61$lambda$_6_0() {
    var a = this; jl_Object.call(a);
    a.$_0144 = null;
    a.$_155 = 0;
}
function it_Phases$lambda$seq$61$lambda$_6_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$lambda$seq$61$lambda$_6_0();
    it_Phases$lambda$seq$61$lambda$_6_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$lambda$seq$61$lambda$_6_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_0144 = var$1;
    var$0.$_155 = var$2;
}
function it_Phases$lambda$seq$61$lambda$_6_0_run(var$0) {
    it_Phases_lambda$null$60(var$0.$_0144, var$0.$_155);
}
function iaac_ObjectMap$Entry() {
    var a = this; jl_Object.call(a);
    a.$key2 = null;
    a.$value5 = null;
}
function iaac_ObjectMap$Entry__init_() {
    var var_0 = new iaac_ObjectMap$Entry();
    iaac_ObjectMap$Entry__init_0(var_0);
    return var_0;
}
function iaac_ObjectMap$Entry__init_0($this) {
    jl_Object__init_0($this);
}
function jl_NumberFormatException() {
    jl_IllegalArgumentException.call(this);
}
function jl_NumberFormatException__init_() {
    var var_0 = new jl_NumberFormatException();
    jl_NumberFormatException__init_1(var_0);
    return var_0;
}
function jl_NumberFormatException__init_0(var_0) {
    var var_1 = new jl_NumberFormatException();
    jl_NumberFormatException__init_2(var_1, var_0);
    return var_1;
}
function jl_NumberFormatException__init_1($this) {
    jl_IllegalArgumentException__init_2($this);
}
function jl_NumberFormatException__init_2($this, $message) {
    jl_IllegalArgumentException__init_1($this, $message);
}
function i_UI$lambda$null$4$lambda$_15_0() {
    jl_Object.call(this);
    this.$_0145 = null;
}
function i_UI$lambda$null$4$lambda$_15_0__init_(var_0) {
    var var_1 = new i_UI$lambda$null$4$lambda$_15_0();
    i_UI$lambda$null$4$lambda$_15_0__init_0(var_1, var_0);
    return var_1;
}
function i_UI$lambda$null$4$lambda$_15_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0145 = var$1;
}
function i_UI$lambda$null$4$lambda$_15_0_get(var$0) {
    return i_UI_lambda$null$0(var$0.$_0145);
}
function i_UI$lambda$null$4$lambda$_15_1() {
    jl_Object.call(this);
    this.$_0146 = null;
}
function i_UI$lambda$null$4$lambda$_15_1__init_(var_0) {
    var var_1 = new i_UI$lambda$null$4$lambda$_15_1();
    i_UI$lambda$null$4$lambda$_15_1__init_0(var_1, var_0);
    return var_1;
}
function i_UI$lambda$null$4$lambda$_15_1__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0146 = var$1;
}
function i_UI$lambda$null$4$lambda$_15_1_get(var$0, var$1) {
    i_UI$lambda$null$4$lambda$_15_1_get0(var$0, var$1);
}
function i_UI$lambda$null$4$lambda$_15_1_get0(var$0, var$1) {
    i_UI_lambda$null$2(var$0.$_0146, var$1);
}
function i_UI$lambda$null$4$lambda$_15_2() {
    jl_Object.call(this);
    this.$_0147 = null;
}
function i_UI$lambda$null$4$lambda$_15_2__init_(var_0) {
    var var_1 = new i_UI$lambda$null$4$lambda$_15_2();
    i_UI$lambda$null$4$lambda$_15_2__init_0(var_1, var_0);
    return var_1;
}
function i_UI$lambda$null$4$lambda$_15_2__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0147 = var$1;
}
function i_UI$lambda$null$4$lambda$_15_2_run(var$0) {
    i_UI_lambda$null$3(var$0.$_0147);
}
function iaas_Scene$mouseMoved$lambda$_23_0() {
    jl_Object.call(this);
}
function iaas_Scene$mouseMoved$lambda$_23_0__init_() {
    var var_0 = new iaas_Scene$mouseMoved$lambda$_23_0();
    iaas_Scene$mouseMoved$lambda$_23_0__init_0(var_0);
    return var_0;
}
function iaas_Scene$mouseMoved$lambda$_23_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaas_Scene$mouseMoved$lambda$_23_0_get(var$0) {
    return iaas_Scene$mouseMoved$lambda$_23_0_get0(var$0);
}
function iaas_Scene$mouseMoved$lambda$_23_0_get0(var$0) {
    return iaase_InputEvent__init_();
}
function jur_IntArrHash() {
    jl_Object.call(this);
}
function it_Phases$3$lambda$update$29$lambda$_3_0() {
    var a = this; jl_Object.call(a);
    a.$_0148 = 0.0;
    a.$_156 = 0.0;
}
function it_Phases$3$lambda$update$29$lambda$_3_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$3$lambda$update$29$lambda$_3_0();
    it_Phases$3$lambda$update$29$lambda$_3_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$3$lambda$update$29$lambda$_3_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_0148 = var$1;
    var$0.$_156 = var$2;
}
function jur_AbstractCharClass$LazyJavaMirrored() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaMirrored__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaMirrored();
    jur_AbstractCharClass$LazyJavaMirrored__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaMirrored__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaMirrored_computeValue($this) {
    return jur_AbstractCharClass$LazyJavaMirrored$1__init_($this);
}
function iaagg_GLVersion$Type() {
    jl_Enum.call(this);
}
var iaagg_GLVersion$Type_OpenGL = null;
var iaagg_GLVersion$Type_GLES = null;
var iaagg_GLVersion$Type_WebGL = null;
var iaagg_GLVersion$Type_NONE = null;
var iaagg_GLVersion$Type_$VALUES = null;
function iaagg_GLVersion$Type_$callClinit() {
    iaagg_GLVersion$Type_$callClinit = $rt_eraseClinit(iaagg_GLVersion$Type);
    iaagg_GLVersion$Type__clinit_();
}
function iaagg_GLVersion$Type__init_(var_0, var_1) {
    var var_2 = new iaagg_GLVersion$Type();
    iaagg_GLVersion$Type__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaagg_GLVersion$Type_values() {
    iaagg_GLVersion$Type_$callClinit();
    return iaagg_GLVersion$Type_$VALUES.$clone();
}
function iaagg_GLVersion$Type__init_0($this, var$1, var$2) {
    iaagg_GLVersion$Type_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaagg_GLVersion$Type__clinit_() {
    var var$1, var$2;
    iaagg_GLVersion$Type_OpenGL = iaagg_GLVersion$Type__init_($rt_s(1335), 0);
    iaagg_GLVersion$Type_GLES = iaagg_GLVersion$Type__init_($rt_s(1336), 1);
    iaagg_GLVersion$Type_WebGL = iaagg_GLVersion$Type__init_($rt_s(492), 2);
    iaagg_GLVersion$Type_NONE = iaagg_GLVersion$Type__init_($rt_s(1337), 3);
    var$1 = $rt_createArray(iaagg_GLVersion$Type, 4);
    var$2 = var$1.data;
    var$2[0] = iaagg_GLVersion$Type_OpenGL;
    var$2[1] = iaagg_GLVersion$Type_GLES;
    var$2[2] = iaagg_GLVersion$Type_WebGL;
    var$2[3] = iaagg_GLVersion$Type_NONE;
    iaagg_GLVersion$Type_$VALUES = var$1;
}
function it_Boss$update$lambda$_6_0() {
    jl_Object.call(this);
    this.$_0149 = null;
}
function it_Boss$update$lambda$_6_0__init_(var_0) {
    var var_1 = new it_Boss$update$lambda$_6_0();
    it_Boss$update$lambda$_6_0__init_0(var_1, var_0);
    return var_1;
}
function it_Boss$update$lambda$_6_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0149 = var$1;
}
function it_Boss$update$lambda$_6_0_run(var$0) {
    it_Boss_lambda$update$3(var$0.$_0149);
}
function jur_AbstractCharClass$LazyJavaISOControl() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaISOControl__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaISOControl();
    jur_AbstractCharClass$LazyJavaISOControl__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaISOControl__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaISOControl_computeValue($this) {
    return jur_AbstractCharClass$LazyJavaISOControl$1__init_($this);
}
function iaau_TaskQueue() {
    var a = this; jl_Object.call(a);
    a.$runnables = null;
    a.$executedRunnables = null;
}
function iaau_TaskQueue__init_() {
    var var_0 = new iaau_TaskQueue();
    iaau_TaskQueue__init_0(var_0);
    return var_0;
}
function iaau_TaskQueue__init_0($this) {
    jl_Object__init_0($this);
    $this.$runnables = iaac_Array__init_0();
    $this.$executedRunnables = iaac_Array__init_0();
}
function iaau_TaskQueue_run($this) {
    var var$1, var$2, $runnable, $$je;
    var$1 = $this.$runnables;
    jl_Object_monitorEnterSync(var$1);
    a: {
        try {
            $this.$executedRunnables.$clear();
            $this.$executedRunnables.$addAll($this.$runnables);
            $this.$runnables.$clear();
            jl_Object_monitorExitSync(var$1);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$2 = $$je;

        }
        jl_Object_monitorExitSync(var$1);
        $rt_throw(var$2);
    }
    var$1 = $this.$executedRunnables.$iterator();
    while (var$1.$hasNext()) {
        $runnable = var$1.$next0();
        $runnable.$run();
    }
}
function iaau_TaskQueue_post($this, $runnable) {
    var var$2, var$3, $$je;
    var$2 = $this.$runnables;
    jl_Object_monitorEnterSync(var$2);
    a: {
        try {
            $this.$runnables.$add1($runnable);
            jl_Object_monitorExitSync(var$2);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$3 = $$je;
            break a;

        }
        return;
    }
    jl_Object_monitorExitSync(var$2);
    $rt_throw(var$3);
}
function it_Fx() {
    jl_Object.call(this);
}
var it_Fx_random = null;
var it_Fx_spark = null;
var it_Fx_ldash = null;
var it_Fx_fireballtrail = null;
var it_Fx_dash = null;
var it_Fx_wave = null;
var it_Fx_tpwave = null;
var it_Fx_lspiral = null;
var it_Fx_blastind = null;
var it_Fx_blast = null;
var it_Fx_blastspark = null;
var it_Fx_candlespiral = null;
var it_Fx_candleinwave = null;
var it_Fx_candlefire = null;
var it_Fx_fireballfire = null;
var it_Fx_fire = null;
var it_Fx_ghost = null;
var it_Fx_meteorpre = null;
var it_Fx_meteorpost = null;
var it_Fx_playershoot = null;
var it_Fx_eyes = null;
var it_Fx_indline = null;
var it_Fx_indwave = null;
var it_Fx_indlaser = null;
function it_Fx_$callClinit() {
    it_Fx_$callClinit = $rt_eraseClinit(it_Fx);
    it_Fx__clinit_();
}
function it_Fx_lambda$static$30($e) {
    var var$2, var$3, var$4, $i;
    it_Fx_$callClinit();
    ig_Drawf_z((-90.0));
    ig_Pal_$callClinit();
    iaagg_Draw_color(ig_Pal_fireball);
    iaagg_Lines_stroke0(2.0 * $e.$fin());
    iaam_Mathf_$callClinit();
    var$2 = iaam_Mathf_signs.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $i = var$2[var$4];
        iaau_Tmp_$callClinit();
        iaau_Tmp_v1.$trns($e.$rotation5 + ($i * 90 | 0), 30.0 * $e.$fout() - 1.0);
        iaagg_Lines_lineAngle($e.$x13 + iaau_Tmp_v1.$x0, $e.$y12 + iaau_Tmp_v1.$y0, $e.$rotation5, 1300.0);
        var$4 = var$4 + 1 | 0;
    }
}
function it_Fx_lambda$static$29($e) {
    var $fract, $i;
    it_Fx_$callClinit();
    ig_Drawf_z($e.$y12 + 1000.0);
    ig_Pal_$callClinit();
    iaagg_Draw_color(ig_Pal_lucine);
    iaagg_Lines_stroke0(2.0 * $e.$fslope());
    $fract = 0.17000000178813934;
    $i = 0;
    while ($i < 4) {
        iaagg_Lines_swirl($e.$x13, $e.$y12, jl_Math_max(100.0 * $e.$fin() + $i * 20.0 - 10.0, 0.0), $fract, $e.$rotation5 - 30.600000381469727);
        $i = $i + 1 | 0;
    }
    iaagg_Draw_reset();
}
function it_Fx_lambda$static$28($e) {
    var $fract, $i;
    it_Fx_$callClinit();
    ig_Drawf_z($e.$y12 + 1000.0);
    ig_Pal_$callClinit();
    iaagg_Draw_color(ig_Pal_lucine);
    iaagg_Lines_stroke0(2.0 * $e.$fslope());
    $fract = 0.4000000059604645;
    $i = 0;
    while ($i < 4) {
        iaau_Tmp_$callClinit();
        iaau_Tmp_v1.$trns($e.$rotation5, jl_Math_max($e.$fin() * 100.0 + ($i * 20 | 0) - 20.0, 0.0));
        iaagg_Lines_swirl($e.$x13 + iaau_Tmp_v1.$x0, $e.$y12 + iaau_Tmp_v1.$y0, 10.0, $fract, $e.$rotation5 - 72.0);
        $i = $i + 1 | 0;
    }
    iaagg_Draw_reset();
}
function it_Fx_lambda$static$27($e) {
    var $r, $x, $y;
    it_Fx_$callClinit();
    ig_Drawf_z((-10.0));
    iaa_Core_$callClinit();
    $r = iaa_Core_atlas.$find($rt_s(494));
    $x = 648.0;
    $y = (i_Inferno_world.$height4() - 10.5) * 16.0 + $r.$getHeight0() / 2.0;
    iaagg_Draw_alpha($e.$fin() / 2.0 * 1.2000000476837158);
    iaagg_Draw_rect3($r, $x, $y, $r.$getWidth0() * (1.2000000476837158 + $e.$fin()), $r.$getHeight0() * (1.2000000476837158 + $e.$fin()));
    iaagg_Draw_alpha($e.$fin() * 1.2000000476837158);
    iaagg_Draw_rect($r, $x, $y);
}
function it_Fx_lambda$static$26($e) {
    it_Fx_$callClinit();
    iaag_Color_$callClinit();
    iaagg_Draw_color4(iaag_Color_white, iaag_Color_cyan, $e.$fout());
    iaam_Angles_randLenVectors0(Long_fromInt($e.$id7), 3, 40.0 * $e.$fin(), $e.$rotation5, 20.0, it_Fx$lambda$static$26$lambda$_5_0__init_($e));
}
function it_Fx_lambda$null$25($e, $x, $y) {
    var var$4, var$5, var$6;
    it_Fx_$callClinit();
    iaagg_Fill_circle($e.$x13 + $x, $e.$y12 + $y, $e.$fout() * 6.0);
    var$4 = $e.$x13 + $x;
    var$5 = $e.$y12 + $y;
    var$6 = 8.0 * $e.$fout();
    iaag_Color_$callClinit();
    ig_Drawf_light(var$4, var$5, var$6, iaag_Color_cyan);
}
function it_Fx_lambda$static$24($e) {
    var var$2;
    it_Fx_$callClinit();
    ig_Drawf_z($e.$y12 - 10.0);
    iaagg_Lines_stroke0(1.100000023841858 * $e.$fout() + 1.0);
    iaag_Color_$callClinit();
    var$2 = iaag_Color_white;
    ig_Pal_$callClinit();
    iaagg_Draw_color4(var$2, ig_Pal_lucine, $e.$fin());
    iaam_Angles_randLenVectors(Long_fromInt($e.$id7), 14, 70.0 * $e.$finpow(), it_Fx$lambda$static$24$lambda$_7_0__init_($e));
}
function it_Fx_lambda$null$23($e, $x, $y) {
    it_Fx_$callClinit();
    iaagg_Lines_lineAngle($e.$x13 + $x, $e.$y12 + $y, iaam_Mathf_angle($x, $y), 6.0 * $e.$fout() + 1.0);
}
function it_Fx_lambda$static$22($e) {
    var $length;
    it_Fx_$callClinit();
    ig_Drawf_z(100000.0);
    iaagg_Lines_stroke0(3.0 * $e.$fin());
    ig_Pal_$callClinit();
    iaagg_Draw_color(ig_Pal_lucine);
    iaagg_Lines_circle($e.$x13, $e.$y12, $e.$fout() * 40.0);
    iaagg_Lines_stroke0(1.0 * $e.$fin());
    iaagg_Lines_circle($e.$x13, $e.$y12, 30.0);
    iaagg_Draw_alpha($e.$fin());
    ig_Drawf_symbols($e.$id7, $e.$x13, $e.$y12, 40.0);
    ig_Drawf_light1($e.$x13, $e.$y12, 40.0, ig_Pal_lucine, $e.$fin());
    iaam_Interpolation_$callClinit();
    $length = $e.$fout0(iaam_Interpolation_exp5Out) * 200.0;
    iaau_Tmp_$callClinit();
    iaau_Tmp_v1.$trns(75.0, $length);
    ig_Drawf_z($e.$y12);
    iaagg_Draw_color(ig_Pal_lucine);
    iaagg_Draw_alpha($e.$fin0(iaam_Interpolation_exp5In));
    iaagg_Fill_circle($e.$x13 + iaau_Tmp_v1.$x0, $e.$y12 + iaau_Tmp_v1.$y0, $e.$fin0(iaam_Interpolation_exp5In) * 13.0);
}
function it_Fx_lambda$static$21($e) {
    var $dir, $region;
    it_Fx_$callClinit();
    ig_Drawf_z($e.$y12);
    $dir = $e.$data5;
    iaa_Core_$callClinit();
    $region = iaa_Core_atlas.$find(jl_StringBuilder__init_().$append($rt_s(1338)).$append($dir.$name4).$toString());
    iaagg_Draw_alpha($e.$fout() * 1.0);
    iaagg_Draw_rect3($region, $e.$x13, $e.$y12 + $region.$getHeight0() / 2.0, $rt_imul($region.$getWidth0(), !$dir.$flipped ? 1 : (-1)), $region.$getHeight0());
}
function it_Fx_lambda$static$20($e) {
    it_Fx_$callClinit();
    iaag_Color_$callClinit();
    iaagg_Draw_color4(iaag_Color_yellow, iaag_Color_scarlet, $e.$fin());
    iaam_Angles_randLenVectors0(Long_fromInt($e.$id7), 2, 2.0 + $e.$fin() * 30.0, 90.0, 120.0, it_Fx$lambda$static$20$lambda$_11_0__init_($e));
    iaagg_Draw_color0();
}
function it_Fx_lambda$null$19($e, $x, $y) {
    var var$4, var$5, var$6, var$7, var$8;
    it_Fx_$callClinit();
    iaagg_Fill_circle($e.$x13 + $x, $e.$y12 + $y, 0.20000000298023224 + $e.$fslope() * 2.5);
    var$4 = $e.$x13;
    var$5 = $x / 2.0;
    var$4 = var$4 + var$5;
    var$6 = $e.$y12;
    var$7 = $y / 2.0;
    iaagg_Fill_circle(var$4, var$6 + var$7, 0.10000000149011612 + $e.$fslope() * 1.899999976158142);
    var$4 = $e.$x13 + $x;
    var$6 = $e.$y12 + $y;
    var$8 = 4.0 + $e.$fslope() * 10.0;
    iaag_Color_$callClinit();
    ig_Drawf_light1(var$4, var$6, var$8, iaag_Color_orange, 0.699999988079071);
    ig_Drawf_light1($e.$x13 + var$5, $e.$y12 + var$7, 2.0 + $e.$fslope() * 8.0, iaag_Color_orange, 0.699999988079071);
}
function it_Fx_lambda$static$18($e) {
    var var$2;
    it_Fx_$callClinit();
    ig_Drawf_z($e.$y12 - 30.0);
    iaag_Color_$callClinit();
    var$2 = iaag_Color_white;
    ig_Pal_$callClinit();
    iaagg_Draw_color4(var$2, ig_Pal_fireball, $e.$fin());
    iaagg_Fill_circle($e.$x13, $e.$y12, 50.0 * $e.$fout());
    iaagg_Lines_stroke0($e.$fout() * 2.0);
    iaagg_Lines_circle($e.$x13, $e.$y12, $e.$fin() * 50.0);
    ig_Drawf_light1($e.$x13, $e.$y12, 200.0, ig_Pal_fireball, $e.$fout());
}
function it_Fx_lambda$static$17($e) {
    var var$2;
    it_Fx_$callClinit();
    ig_Drawf_z($e.$y12 - 30.0);
    iaag_Color_$callClinit();
    var$2 = iaag_Color_white;
    ig_Pal_$callClinit();
    iaagg_Draw_color4(var$2, ig_Pal_candle, $e.$fin());
    iaagg_Fill_circle($e.$x13, $e.$y12, 20.0 * $e.$fout());
    iaam_Angles_randLenVectors(Long_fromInt($e.$id7), 20, 50.0 * $e.$finpow(), it_Fx$lambda$static$17$lambda$_14_0__init_($e));
    iaagg_Lines_stroke0($e.$fout() * 2.0);
    iaagg_Lines_circle($e.$x13, $e.$y12, $e.$fin() * 50.0);
}
function it_Fx_lambda$null$16($e, $x, $y) {
    it_Fx_$callClinit();
    iaagg_Lines_lineAngle($e.$x13 + $x, $e.$y12 + $y, iaam_Mathf_angle($x, $y), 6.0 * $e.$fout());
}
function it_Fx_lambda$static$15($e) {
    it_Fx_$callClinit();
    ig_Drawf_z($e.$y12 - 20.0);
    ig_Pal_$callClinit();
    iaagg_Draw_color(ig_Pal_candle);
    iaagg_Lines_stroke0($e.$fin() * 1.5);
    iaagg_Lines_circle($e.$x13, $e.$y12, $e.$fout() * 10.0);
}
function it_Fx_lambda$static$14($e) {
    var $amount, $length, $i, $scl, $vang, var$7, var$8, var$9;
    it_Fx_$callClinit();
    ig_Drawf_z($e.$y12 - 20.0);
    $amount = 100;
    $length = $e.$fout() * 110.0;
    ig_Pal_$callClinit();
    iaagg_Draw_color(ig_Pal_candle);
    it_Fx_random.$setSeed(Long_fromInt($e.$id7));
    $i = 0;
    while ($i < $amount) {
        $scl = $length * it_Fx_random.$nextFloat();
        $vang = it_Fx_random.$nextFloat() * 360.0 + $e.$fin() * 360.0 * it_Fx_random.$nextFloat() * $e.$fin();
        iaau_Tmp_$callClinit();
        iaau_Tmp_v1.$set2($scl, 0.0).$rotate1($vang);
        iaagg_Fill_circle(iaau_Tmp_v1.$x0 + $e.$x13, iaau_Tmp_v1.$y0 + $e.$y12, 2.0 * $e.$fin());
        $i = $i + 1 | 0;
    }
    iaagg_Draw_color(ig_Pal_candle);
    iaagg_Fill_circle($e.$x13, $e.$y12, $e.$fin() * 6.0 + 1.7999999523162842);
    iaagg_Draw_color0();
    iaagg_Fill_circle($e.$x13, $e.$y12, $e.$fin() * 4.0 + 1.0);
    var$7 = $e.$x13;
    var$8 = $e.$y12;
    var$9 = $e.$fin() * 70.0;
    iaag_Color_$callClinit();
    ig_Drawf_light1(var$7, var$8, var$9, iaag_Color_orange, $e.$fin());
}
function it_Fx_lambda$static$13($e) {
    var var$2;
    it_Fx_$callClinit();
    ig_Drawf_z($e.$y12 - 80.0);
    iaag_Color_$callClinit();
    var$2 = iaag_Color_white;
    ig_Pal_$callClinit();
    iaagg_Draw_color4(var$2, ig_Pal_fireball, $e.$fout());
    iaagg_Lines_stroke0(2.0 * $e.$fout() + 1.0);
    iaam_Angles_randLenVectors(Long_fromInt($e.$id7), 100, 300.0 * $e.$fin(), it_Fx$lambda$static$13$lambda$_18_0__init_($e));
}
function it_Fx_lambda$null$12($e, $x, $y) {
    it_Fx_$callClinit();
    iaagg_Lines_lineAngle($e.$x13 + $x, $e.$y12 + $y, iaam_Mathf_angle($x, $y), 5.0 * $e.$fout() + 1.0);
}
function it_Fx_lambda$static$11($e) {
    var var$2, var$3;
    it_Fx_$callClinit();
    ig_Drawf_z(0.0);
    iaam_Interpolation_$callClinit();
    iaagg_Draw_alpha(iaam_Interpolation_exp5Out.$apply($e.$fout()));
    iaagg_Fill_circle($e.$x13, $e.$y12, 200.0);
    var$2 = $e.$x13;
    var$3 = $e.$y12;
    ig_Pal_$callClinit();
    ig_Drawf_light1(var$2, var$3, 500.0, ig_Pal_fireball, 1.0);
}
function it_Fx_lambda$static$10($e) {
    var $i;
    it_Fx_$callClinit();
    ig_Drawf_z($e.$y12 + 1000.0);
    ig_Pal_$callClinit();
    iaagg_Draw_color(ig_Pal_lucine);
    iaagg_Lines_stroke0(2.0 * $e.$fslope());
    $i = 0;
    while ($i < 4) {
        iaagg_Lines_poly($e.$x13, $e.$y12, 200, jl_Math_max(150.0 * $e.$fin() + $i * 20.0 - 10.0, 0.0));
        $i = $i + 1 | 0;
    }
    iaagg_Lines_stroke0(2.0 * $e.$fin());
    iaagg_Lines_poly($e.$x13, $e.$y12, 200, 200.0);
    iaagg_Draw_alpha($e.$fin());
    ig_Drawf_symbols($e.$id7, $e.$x13, $e.$y12, 210.0);
    iaagg_Draw_reset();
}
function it_Fx_lambda$static$9($e) {
    var $amount, $length, var$4, $i, $scl, $vang;
    it_Fx_$callClinit();
    ig_Drawf_z($e.$y12 - 40.0);
    $amount = 100;
    $length = $e.$fout() * 200.0;
    ig_Pal_$callClinit();
    var$4 = ig_Pal_lucine;
    iaag_Color_$callClinit();
    iaagg_Draw_color4(var$4, iaag_Color_white, $e.$fin());
    it_Fx_random.$setSeed(Long_fromInt($e.$id7));
    $i = 0;
    while ($i < $amount) {
        $scl = $length * it_Fx_random.$nextFloat();
        $vang = it_Fx_random.$nextFloat() * 360.0 + $e.$fin() * 360.0 * it_Fx_random.$nextFloat() * $e.$fin();
        iaau_Tmp_$callClinit();
        iaau_Tmp_v1.$set2($scl, 0.0).$rotate1($vang);
        iaagg_Fill_circle(iaau_Tmp_v1.$x0 + $e.$x13, iaau_Tmp_v1.$y0 + $e.$y12, 2.0 * $e.$fin());
        $i = $i + 1 | 0;
    }
    iaagg_Draw_color0();
    iaagg_Draw_alpha($e.$fin() * 0.8999999761581421);
    iaagg_Fill_circle($e.$x13, $e.$y12, $e.$fin() * 10.0 + 1.0);
    ig_Drawf_light1($e.$x13, $e.$y12, $e.$fin() * 200.0, ig_Pal_lucine, $e.$fin());
}
function it_Fx_lambda$static$8($e) {
    it_Fx_$callClinit();
    iaagg_Lines_stroke0(4.0 * $e.$fin());
    ig_Pal_$callClinit();
    iaagg_Draw_color4(ig_Pal_lucine, ig_Pal_candle, 0.5);
    iaagg_Lines_circle($e.$x13, $e.$y12, $e.$fout() * 60.0);
    iaagg_Draw_alpha($e.$fin());
    ig_Drawf_symbols($e.$id7, $e.$x13, $e.$y12, 40.0);
}
function it_Fx_lambda$static$7($e) {
    var var$2;
    it_Fx_$callClinit();
    iaagg_Lines_stroke0(4.0 * $e.$fout());
    iaag_Color_$callClinit();
    var$2 = iaag_Color_white;
    ig_Pal_$callClinit();
    iaagg_Draw_color4(var$2, ig_Pal_lucine, $e.$fout());
    iaagg_Lines_circle($e.$x13, $e.$y12, $e.$fin() * 70.0);
}
function it_Fx_lambda$static$6($e) {
    it_Fx_$callClinit();
    iaag_Color_$callClinit();
    iaagg_Draw_color4(iaag_Color_white, $e.$color18, $e.$fout());
    iaagg_Lines_stroke0(2.0 * $e.$fout() + 1.0);
    iaam_Angles_randLenVectors0(Long_fromInt($e.$id7), 5, 70.0 * $e.$fin(), $e.$rotation5, 30.0, it_Fx$lambda$static$6$lambda$_25_0__init_($e));
}
function it_Fx_lambda$null$5($e, $x, $y) {
    it_Fx_$callClinit();
    iaagg_Lines_lineAngle($e.$x13 + $x, $e.$y12 + $y, iaam_Mathf_angle($x, $y), 5.0 * $e.$fout() + 1.0);
}
function it_Fx_lambda$static$4($e) {
    it_Fx_$callClinit();
    ig_Drawf_z($e.$y12 + 1.0);
    iaagg_Draw_color($e.$color18);
    iaam_Angles_randLenVectors(Long_fromInt($e.$id7), 2, 5.0 + 20.0 * $e.$fin(), it_Fx$lambda$static$4$lambda$_27_0__init_($e));
}
function it_Fx_lambda$null$3($e, $x, $y) {
    it_Fx_$callClinit();
    iaagg_Fill_circle($e.$x13 + $x, $e.$y12 + $y, $e.$fout() * 5.0 + 1.0);
}
function it_Fx_lambda$static$2($e) {
    var $region;
    it_Fx_$callClinit();
    iaa_Core_$callClinit();
    $region = iaa_Core_atlas.$find($rt_s(1170));
    iaagg_Draw_alpha($e.$fout());
    iaagg_Draw_rect3($region, $e.$x13, $e.$y12 + $region.$getHeight0() / 2.0 + 1.0, $region.$getWidth0() * $e.$rotation5, $region.$getHeight0());
}
function it_Fx_lambda$static$1($e) {
    it_Fx_$callClinit();
    iaag_Color_$callClinit();
    iaagg_Draw_color4(iaag_Color_white, $e.$color18, $e.$fout());
    iaam_Angles_randLenVectors(Long_fromInt($e.$id7), 7, 30.0 * $e.$fin(), it_Fx$lambda$static$1$lambda$_30_0__init_($e));
}
function it_Fx_lambda$null$0($e, $x, $y) {
    it_Fx_$callClinit();
    iaagg_Fill_circle($e.$x13 + $x, $e.$y12 + $y, $e.$fout() * 4.0);
}
function it_Fx__clinit_() {
    it_Fx_random = iaam_RandomXS128__init_();
    it_Fx_spark = ig_Effects$Effect__init_1(20.0, it_Fx$_clinit_$lambda$_32_0__init_());
    it_Fx_ldash = ig_Effects$Effect__init_1(30.0, it_Fx$_clinit_$lambda$_32_1__init_());
    it_Fx_fireballtrail = ig_Effects$Effect__init_1(70.0, it_Fx$_clinit_$lambda$_32_2__init_());
    it_Fx_dash = ig_Effects$Effect__init_1(30.0, it_Fx$_clinit_$lambda$_32_3__init_());
    it_Fx_wave = ig_Effects$Effect__init_1(8.0, it_Fx$_clinit_$lambda$_32_4__init_());
    it_Fx_tpwave = ig_Effects$Effect__init_1(50.0, it_Fx$_clinit_$lambda$_32_5__init_());
    it_Fx_lspiral = ig_Effects$Effect__init_1(200.0, it_Fx$_clinit_$lambda$_32_6__init_());
    it_Fx_blastind = ig_Effects$Effect__init_1(it_Fx_lspiral.$lifetime, it_Fx$_clinit_$lambda$_32_7__init_());
    it_Fx_blast = ig_Effects$Effect__init_1(30.0, it_Fx$_clinit_$lambda$_32_8__init_());
    it_Fx_blastspark = ig_Effects$Effect__init_1(200.0, it_Fx$_clinit_$lambda$_32_9__init_());
    it_Fx_candlespiral = ig_Effects$Effect__init_1(100.0, it_Fx$_clinit_$lambda$_32_10__init_());
    it_Fx_candleinwave = ig_Effects$Effect__init_1(30.0, it_Fx$_clinit_$lambda$_32_11__init_());
    it_Fx_candlefire = ig_Effects$Effect__init_1(10.0, it_Fx$_clinit_$lambda$_32_12__init_());
    it_Fx_fireballfire = ig_Effects$Effect__init_1(10.0, it_Fx$_clinit_$lambda$_32_13__init_());
    it_Fx_fire = ig_Effects$Effect__init_1(70.0, it_Fx$_clinit_$lambda$_32_14__init_());
    it_Fx_ghost = ig_Effects$Effect__init_1(50.0, it_Fx$_clinit_$lambda$_32_15__init_());
    it_Fx_meteorpre = ig_Effects$Effect__init_1(60.0, it_Fx$_clinit_$lambda$_32_16__init_());
    it_Fx_meteorpost = ig_Effects$Effect__init_1(40.0, it_Fx$_clinit_$lambda$_32_17__init_());
    it_Fx_playershoot = ig_Effects$Effect__init_1(10.0, it_Fx$_clinit_$lambda$_32_18__init_());
    it_Fx_eyes = ig_Effects$Effect__init_1(it_Fx_blastind.$lifetime, it_Fx$_clinit_$lambda$_32_19__init_());
    it_Fx_indline = ig_Effects$Effect__init_1(30.0, it_Fx$_clinit_$lambda$_32_20__init_());
    it_Fx_indwave = ig_Effects$Effect__init_1(it_Fx_indline.$lifetime, it_Fx$_clinit_$lambda$_32_21__init_());
    it_Fx_indlaser = ig_Effects$Effect__init_1(30.0, it_Fx$_clinit_$lambda$_32_22__init_());
}
function jur_HighSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$high0 = 0;
}
function jur_HighSurrogateCharSet__init_(var_0) {
    var var_1 = new jur_HighSurrogateCharSet();
    jur_HighSurrogateCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_HighSurrogateCharSet__init_0($this, $high) {
    jur_JointSet__init_0($this);
    $this.$high0 = $high;
}
function jur_HighSurrogateCharSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_HighSurrogateCharSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, var$6, $high, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    var$6 = $rt_compare(var$5, $strLength);
    if (var$6 > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (var$6 < 0) {
        $low = $testString.$charAt(var$5);
        if (jl_Character_isLowSurrogate($low))
            return (-1);
    }
    if ($this.$high0 != $high)
        return (-1);
    return $this.$next.$matches(var$5, $testString, $matchResult);
}
function jur_HighSurrogateCharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = $testStr.$indexOf1($this.$high0, $strIndex);
        if (var$6 < 0)
            return (-1);
        $strIndex = var$6 + 1 | 0;
        if ($strIndex < $strLength && jl_Character_isLowSurrogate($testStr.$charAt($strIndex))) {
            $strIndex = var$6 + 2 | 0;
            continue;
        }
        if ($this.$next.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
}
function jur_HighSurrogateCharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$7, var$8;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf0($this.$high0, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            var$8 = var$7 + 1 | 0;
            if (var$8 < $strLength && jl_Character_isLowSurrogate($testStr.$charAt(var$8))) {
                $lastIndex = var$7 + (-1) | 0;
                continue;
            }
            if ($this.$next.$matches(var$8, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_HighSurrogateCharSet_getName($this) {
    return jl_StringBuilder__init_().$append($rt_s(58)).$append0($this.$high0).$toString();
}
function jur_HighSurrogateCharSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_LowSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_HighSurrogateCharSet))
        return 1;
    return $set.$high0 != $this.$high0 ? 0 : 1;
}
function jur_HighSurrogateCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
function iaagg_VertexBufferObjectWithVAO() {
    var a = this; jl_Object.call(a);
    a.$attributes5 = null;
    a.$buffer9 = null;
    a.$byteBuffer1 = null;
    a.$isStatic2 = 0;
    a.$usage6 = 0;
    a.$bufferHandle5 = 0;
    a.$isDirty5 = 0;
    a.$isBound5 = 0;
    a.$vaoHandle = 0;
    a.$cachedLocations = null;
}
var iaagg_VertexBufferObjectWithVAO_tmpHandle = null;
function iaagg_VertexBufferObjectWithVAO_$callClinit() {
    iaagg_VertexBufferObjectWithVAO_$callClinit = $rt_eraseClinit(iaagg_VertexBufferObjectWithVAO);
    iaagg_VertexBufferObjectWithVAO__clinit_();
}
function iaagg_VertexBufferObjectWithVAO__init_(var_0, var_1, var_2) {
    var var_3 = new iaagg_VertexBufferObjectWithVAO();
    iaagg_VertexBufferObjectWithVAO__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaagg_VertexBufferObjectWithVAO__init_0($this, $isStatic, $numVertices, $attributes) {
    iaagg_VertexBufferObjectWithVAO_$callClinit();
    jl_Object__init_0($this);
    $this.$isDirty5 = 0;
    $this.$isBound5 = 0;
    $this.$vaoHandle = (-1);
    $this.$cachedLocations = iaac_IntArray__init_0();
    $this.$isStatic2 = $isStatic;
    $this.$attributes5 = $attributes;
    $this.$byteBuffer1 = iaau_BufferUtils_newUnsafeByteBuffer($rt_imul($this.$attributes5.$vertexSize, $numVertices));
    $this.$buffer9 = $this.$byteBuffer1.$asFloatBuffer();
    $this.$buffer9.$flip();
    $this.$byteBuffer1.$flip();
    iaa_Core_$callClinit();
    $this.$bufferHandle5 = iaa_Core_gl20.$glGenBuffer();
    $this.$usage6 = !$isStatic ? 35048 : 35044;
    iaagg_VertexBufferObjectWithVAO_createVAO($this);
}
function iaagg_VertexBufferObjectWithVAO_getNumVertices($this) {
    return (jn_Buffer_limit($this.$buffer9) * 4 | 0) / $this.$attributes5.$vertexSize | 0;
}
function iaagg_VertexBufferObjectWithVAO_getBuffer($this) {
    $this.$isDirty5 = 1;
    return $this.$buffer9;
}
function iaagg_VertexBufferObjectWithVAO_bufferChanged($this) {
    if ($this.$isBound5) {
        iaa_Core_$callClinit();
        iaa_Core_gl20.$glBufferData(34962, jn_Buffer_limit($this.$byteBuffer1), $this.$byteBuffer1, $this.$usage6);
        $this.$isDirty5 = 0;
    }
}
function iaagg_VertexBufferObjectWithVAO_setVertices($this, $vertices, $offset, $count) {
    $this.$isDirty5 = 1;
    iaau_BufferUtils_copy($vertices, $this.$byteBuffer1, $count, $offset);
    $this.$buffer9.$position(0);
    $this.$buffer9.$limit0($count);
    iaagg_VertexBufferObjectWithVAO_bufferChanged($this);
}
function iaagg_VertexBufferObjectWithVAO_bind($this, $shader, $locations) {
    var $gl;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl30;
    $gl.$glBindVertexArray($this.$vaoHandle);
    iaagg_VertexBufferObjectWithVAO_bindAttributes($this, $shader, $locations);
    iaagg_VertexBufferObjectWithVAO_bindData($this, $gl);
    $this.$isBound5 = 1;
}
function iaagg_VertexBufferObjectWithVAO_bindAttributes($this, $shader, $locations) {
    var $stillValid, $numAttributes, $i, $attribute, $location, var$8;
    $stillValid = !$this.$cachedLocations.$size5 ? 0 : 1;
    a: {
        $numAttributes = iaag_VertexAttributes_size($this.$attributes5);
        if ($stillValid) {
            if ($locations === null) {
                $i = 0;
                while ($stillValid && $i < $numAttributes) {
                    $attribute = iaag_VertexAttributes_get($this.$attributes5, $i);
                    $location = $shader.$getAttributeLocation($attribute.$alias);
                    $stillValid = $location != $this.$cachedLocations.$get29($i) ? 0 : 1;
                    $i = $i + 1 | 0;
                }
            } else {
                var$8 = $locations.data;
                $stillValid = var$8.length != $this.$cachedLocations.$size5 ? 0 : 1;
                $i = 0;
                while ($stillValid) {
                    if ($i >= $numAttributes)
                        break a;
                    $stillValid = var$8[$i] != $this.$cachedLocations.$get29($i) ? 0 : 1;
                    $i = $i + 1 | 0;
                }
            }
        }
    }
    b: {
        if (!$stillValid) {
            iaa_Core_$callClinit();
            iaa_Core_gl.$glBindBuffer(34962, $this.$bufferHandle5);
            iaagg_VertexBufferObjectWithVAO_unbindAttributes($this, $shader);
            $this.$cachedLocations.$clear();
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break b;
                $attribute = iaag_VertexAttributes_get($this.$attributes5, $i);
                if ($locations !== null) {
                    var$8 = $locations.data;
                    $this.$cachedLocations.$add6(var$8[$i]);
                } else
                    $this.$cachedLocations.$add6($shader.$getAttributeLocation($attribute.$alias));
                $location = $this.$cachedLocations.$get29($i);
                if ($location >= 0) {
                    $shader.$enableVertexAttribute($location);
                    $shader.$setVertexAttribute($location, $attribute.$numComponents, $attribute.$type2, $attribute.$normalized, $this.$attributes5.$vertexSize, $attribute.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
    }
}
function iaagg_VertexBufferObjectWithVAO_unbindAttributes($this, $shader) {
    var $numAttributes, $i, $location;
    if (!$this.$cachedLocations.$size5)
        return;
    $numAttributes = iaag_VertexAttributes_size($this.$attributes5);
    $i = 0;
    while ($i < $numAttributes) {
        $location = $this.$cachedLocations.$get29($i);
        if ($location >= 0)
            $shader.$disableVertexAttribute0($location);
        $i = $i + 1 | 0;
    }
}
function iaagg_VertexBufferObjectWithVAO_bindData($this, $gl) {
    if ($this.$isDirty5) {
        $gl.$glBindBuffer(34962, $this.$bufferHandle5);
        $this.$byteBuffer1.$limit0(jn_Buffer_limit($this.$buffer9) * 4 | 0);
        $gl.$glBufferData(34962, jn_Buffer_limit($this.$byteBuffer1), $this.$byteBuffer1, $this.$usage6);
        $this.$isDirty5 = 0;
    }
}
function iaagg_VertexBufferObjectWithVAO_unbind($this, $shader, $locations) {
    var $gl;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl30;
    $gl.$glBindVertexArray(0);
    $this.$isBound5 = 0;
}
function iaagg_VertexBufferObjectWithVAO_dispose($this) {
    var $gl;
    iaa_Core_$callClinit();
    $gl = iaa_Core_gl30;
    $gl.$glBindBuffer(34962, 0);
    $gl.$glDeleteBuffer($this.$bufferHandle5);
    $this.$bufferHandle5 = 0;
    iaau_BufferUtils_disposeUnsafeByteBuffer($this.$byteBuffer1);
    iaagg_VertexBufferObjectWithVAO_deleteVAO($this);
}
function iaagg_VertexBufferObjectWithVAO_createVAO($this) {
    iaagg_VertexBufferObjectWithVAO_tmpHandle.$clear2();
    iaa_Core_$callClinit();
    iaa_Core_gl30.$glGenVertexArrays(1, iaagg_VertexBufferObjectWithVAO_tmpHandle);
    $this.$vaoHandle = iaagg_VertexBufferObjectWithVAO_tmpHandle.$get71();
}
function iaagg_VertexBufferObjectWithVAO_deleteVAO($this) {
    if ($this.$vaoHandle != (-1)) {
        iaagg_VertexBufferObjectWithVAO_tmpHandle.$clear2();
        iaagg_VertexBufferObjectWithVAO_tmpHandle.$put10($this.$vaoHandle);
        iaagg_VertexBufferObjectWithVAO_tmpHandle.$flip();
        iaa_Core_$callClinit();
        iaa_Core_gl30.$glDeleteVertexArrays(1, iaagg_VertexBufferObjectWithVAO_tmpHandle);
        $this.$vaoHandle = (-1);
    }
}
function iaagg_VertexBufferObjectWithVAO__clinit_() {
    iaagg_VertexBufferObjectWithVAO_tmpHandle = iaau_BufferUtils_newIntBuffer(1);
}
function iaac_SnapshotArray() {
    var a = this; iaac_Array.call(a);
    a.$snapshot = null;
    a.$recycled = null;
    a.$snapshots = 0;
}
function iaac_SnapshotArray__init_(var_0, var_1, var_2) {
    var var_3 = new iaac_SnapshotArray();
    iaac_SnapshotArray__init_1(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaac_SnapshotArray__init_0(var_0) {
    var var_1 = new iaac_SnapshotArray();
    iaac_SnapshotArray__init_2(var_1, var_0);
    return var_1;
}
function iaac_SnapshotArray__init_1($this, $ordered, $capacity, $arrayType) {
    iaac_Array__init_6($this, $ordered, $capacity, $arrayType);
}
function iaac_SnapshotArray__init_2($this, $capacity) {
    iaac_Array__init_2($this, $capacity);
}
function iaac_SnapshotArray_begin($this) {
    iaac_SnapshotArray_modified($this);
    $this.$snapshot = $this.$items;
    $this.$snapshots = $this.$snapshots + 1 | 0;
    return $this.$items;
}
function iaac_SnapshotArray_end($this) {
    var $i, $n;
    $this.$snapshots = jl_Math_max1(0, $this.$snapshots - 1 | 0);
    if ($this.$snapshot === null)
        return;
    a: {
        if ($this.$snapshot !== $this.$items && !$this.$snapshots) {
            $this.$recycled = $this.$snapshot;
            $i = 0;
            $n = $this.$recycled.data.length;
            while (true) {
                if ($i >= $n)
                    break a;
                $this.$recycled.data[$i] = null;
                $i = $i + 1 | 0;
            }
        }
    }
    $this.$snapshot = null;
}
function iaac_SnapshotArray_modified($this) {
    if ($this.$snapshot !== null && $this.$snapshot === $this.$items) {
        if ($this.$recycled !== null && $this.$recycled.data.length >= $this.$size) {
            jl_System_arraycopy($this.$items, 0, $this.$recycled, 0, $this.$size);
            $this.$items = $this.$recycled;
            $this.$recycled = null;
        } else
            $this.$resize3($this.$items.data.length);
        return;
    }
}
function iaac_SnapshotArray_removeValue($this, $value, $identity) {
    iaac_SnapshotArray_modified($this);
    return iaac_Array_removeValue($this, $value, $identity);
}
function iaac_SnapshotArray_remove($this, $index) {
    iaac_SnapshotArray_modified($this);
    return iaac_Array_remove($this, $index);
}
function otpp_AsyncCallbackWrapper() {
    jl_Object.call(this);
    this.$realAsyncCallback = null;
}
function otpp_AsyncCallbackWrapper__init_(var_0) {
    var var_1 = new otpp_AsyncCallbackWrapper();
    otpp_AsyncCallbackWrapper__init_0(var_1, var_0);
    return var_1;
}
function otpp_AsyncCallbackWrapper__init_0($this, $realAsyncCallback) {
    jl_Object__init_0($this);
    $this.$realAsyncCallback = $realAsyncCallback;
}
function otpp_AsyncCallbackWrapper_create($realAsyncCallback) {
    return otpp_AsyncCallbackWrapper__init_($realAsyncCallback);
}
function otpp_AsyncCallbackWrapper_complete($this, $result) {
    $this.$realAsyncCallback.$complete($result);
}
function otpp_AsyncCallbackWrapper_error($this, $e) {
    $this.$realAsyncCallback.$error($e);
}
function it_Phases$5$lambda$update$20$lambda$_2_0() {
    jl_Object.call(this);
}
function it_Phases$5$lambda$update$20$lambda$_2_0__init_() {
    var var_0 = new it_Phases$5$lambda$update$20$lambda$_2_0();
    it_Phases$5$lambda$update$20$lambda$_2_0__init_0(var_0);
    return var_0;
}
function it_Phases$5$lambda$update$20$lambda$_2_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$5$lambda$update$20$lambda$_2_0_get(var$0, var$1) {
    it_Phases$5_lambda$null$19(var$1);
}
function iaam_Interpolation$SwingOut() {
    iaam_Interpolation.call(this);
    this.$scale4 = 0.0;
}
function iaam_Interpolation$SwingOut__init_(var_0) {
    var var_1 = new iaam_Interpolation$SwingOut();
    iaam_Interpolation$SwingOut__init_0(var_1, var_0);
    return var_1;
}
function iaam_Interpolation$SwingOut__init_0($this, $scale) {
    iaam_Interpolation__init_0($this);
    $this.$scale4 = $scale;
}
function iaam_Interpolation$SwingOut_apply($this, $a) {
    var var$2;
    var$2 = $a - 1.0;
    return var$2 * var$2 * (($this.$scale4 + 1.0) * var$2 + $this.$scale4) + 1.0;
}
function it_Phases$1$lambda$$10$lambda$_14_0() {
    jl_Object.call(this);
}
function it_Phases$1$lambda$$10$lambda$_14_0__init_() {
    var var_0 = new it_Phases$1$lambda$$10$lambda$_14_0();
    it_Phases$1$lambda$$10$lambda$_14_0__init_0(var_0);
    return var_0;
}
function it_Phases$1$lambda$$10$lambda$_14_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$1$lambda$$10$lambda$_14_0_run(var$0) {
    it_Phases$1_lambda$null$9();
}
function it_Phases$4$lambda$$2$lambda$_15_0() {
    jl_Object.call(this);
}
function it_Phases$4$lambda$$2$lambda$_15_0__init_() {
    var var_0 = new it_Phases$4$lambda$$2$lambda$_15_0();
    it_Phases$4$lambda$$2$lambda$_15_0__init_0(var_0);
    return var_0;
}
function it_Phases$4$lambda$$2$lambda$_15_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$4$lambda$$2$lambda$_15_0_run(var$0) {
    it_Phases$4_lambda$null$1();
}
function jl_IllegalAccessException() {
    jl_ReflectiveOperationException.call(this);
}
function jl_IllegalAccessException__init_() {
    var var_0 = new jl_IllegalAccessException();
    jl_IllegalAccessException__init_0(var_0);
    return var_0;
}
function jl_IllegalAccessException__init_0($this) {
    jl_ReflectiveOperationException__init_0($this);
}
function iaagg_TextureAtlas() {
    var a = this; jl_Object.call(a);
    a.$textures2 = null;
    a.$regions2 = null;
    a.$drawables = null;
    a.$regionmap = null;
    a.$pixmaps = null;
    a.$error1 = null;
    a.$white0 = null;
}
var iaagg_TextureAtlas_tuple = null;
var iaagg_TextureAtlas_indexComparator = null;
function iaagg_TextureAtlas_$callClinit() {
    iaagg_TextureAtlas_$callClinit = $rt_eraseClinit(iaagg_TextureAtlas);
    iaagg_TextureAtlas__clinit_();
}
function iaagg_TextureAtlas__init_(var_0) {
    var var_1 = new iaagg_TextureAtlas();
    iaagg_TextureAtlas__init_0(var_1, var_0);
    return var_1;
}
function iaagg_TextureAtlas__init_1(var_0, var_1) {
    var var_2 = new iaagg_TextureAtlas();
    iaagg_TextureAtlas__init_2(var_2, var_0, var_1);
    return var_2;
}
function iaagg_TextureAtlas__init_3(var_0, var_1, var_2) {
    var var_3 = new iaagg_TextureAtlas();
    iaagg_TextureAtlas__init_4(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaagg_TextureAtlas__init_5(var_0) {
    var var_1 = new iaagg_TextureAtlas();
    iaagg_TextureAtlas__init_6(var_1, var_0);
    return var_1;
}
function iaagg_TextureAtlas__init_0($this, $packFile) {
    iaagg_TextureAtlas_$callClinit();
    iaagg_TextureAtlas__init_2($this, $packFile, $packFile.$parent0());
}
function iaagg_TextureAtlas__init_2($this, $packFile, $imagesDir) {
    iaagg_TextureAtlas_$callClinit();
    iaagg_TextureAtlas__init_4($this, $packFile, $imagesDir, 0);
}
function iaagg_TextureAtlas__init_4($this, $packFile, $imagesDir, $flip) {
    iaagg_TextureAtlas_$callClinit();
    iaagg_TextureAtlas__init_6($this, iaagg_TextureAtlas$TextureAtlasData__init_($packFile, $imagesDir, $flip));
}
function iaagg_TextureAtlas__init_6($this, $data) {
    iaagg_TextureAtlas_$callClinit();
    jl_Object__init_0($this);
    $this.$textures2 = iaac_ObjectSet__init_(4);
    $this.$regions2 = iaac_Array__init_0();
    $this.$drawables = iaac_ObjectMap__init_();
    $this.$regionmap = iaac_ObjectMap__init_();
    $this.$pixmaps = iaac_ObjectMap__init_();
    if ($data !== null)
        iaagg_TextureAtlas_load($this, $data);
}
function iaagg_TextureAtlas_readValue($reader) {
    var $line, $colon;
    iaagg_TextureAtlas_$callClinit();
    $line = $reader.$readLine();
    $colon = $line.$indexOf3(58);
    if ($colon != (-1))
        return $line.$substring($colon + 1 | 0).$trim();
    $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(1339)).$append($line).$toString()));
}
function iaagg_TextureAtlas_readTuple($reader) {
    var $line, $colon, $lastMatch, var$5, $comma;
    iaagg_TextureAtlas_$callClinit();
    $line = $reader.$readLine();
    $colon = $line.$indexOf3(58);
    if ($colon == (-1))
        $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(1339)).$append($line).$toString()));
    $lastMatch = $colon + 1 | 0;
    var$5 = 0;
    a: {
        while (true) {
            if (var$5 >= 3)
                break a;
            $comma = $line.$indexOf1(44, $lastMatch);
            if ($comma == (-1))
                break;
            iaagg_TextureAtlas_tuple.data[var$5] = $line.$substring0($lastMatch, $comma).$trim();
            $lastMatch = $comma + 1 | 0;
            var$5 = var$5 + 1 | 0;
        }
    }
    iaagg_TextureAtlas_tuple.data[var$5] = $line.$substring($lastMatch).$trim();
    return var$5 + 1 | 0;
}
function iaagg_TextureAtlas_load($this, $data) {
    var $pageToTexture, var$3, $page, var$5, var$6, $region, $width, $height, $atlasRegion, var$11, var$12, var$13, var$14;
    $pageToTexture = iaac_ObjectMap__init_();
    var$3 = $data.$pages.$iterator();
    while (var$3.$hasNext()) {
        $page = var$3.$next0();
        if ($page.$texture2 !== null) {
            var$5 = $page.$texture2;
            var$5.$setFilter($page.$minFilter0, $page.$magFilter0);
            var$5.$setWrap0($page.$uWrap0, $page.$vWrap0);
        } else {
            var$5 = iaag_Texture__init_1($page.$textureFile, $page.$format4, $page.$useMipMaps0);
            var$5.$setFilter($page.$minFilter0, $page.$magFilter0);
            var$5.$setWrap0($page.$uWrap0, $page.$vWrap0);
        }
        $this.$textures2.$add7(var$5);
        $pageToTexture.$put($page, var$5);
    }
    var$6 = $data.$regions.$iterator();
    while (var$6.$hasNext()) {
        $region = var$6.$next0();
        $width = $region.$width2;
        $height = $region.$height2;
        $atlasRegion = new iaagg_TextureAtlas$AtlasRegion;
        var$11 = $pageToTexture.$get9($region.$page);
        var$12 = $region.$left;
        var$13 = $region.$top;
        var$14 = !$region.$rotate ? $width : $height;
        if ($region.$rotate)
            $height = $width;
        iaagg_TextureAtlas$AtlasRegion__init_0($atlasRegion, var$11, var$12, var$13, var$14, $height);
        $atlasRegion.$index6 = $region.$index0;
        $atlasRegion.$name11 = $region.$name5;
        $atlasRegion.$offsetX0 = $region.$offsetX;
        $atlasRegion.$offsetY0 = $region.$offsetY;
        $atlasRegion.$originalHeight0 = $region.$originalHeight;
        $atlasRegion.$originalWidth0 = $region.$originalWidth;
        $atlasRegion.$rotate0 = $region.$rotate;
        $atlasRegion.$splits0 = $region.$splits;
        $atlasRegion.$pads0 = $region.$pads;
        if ($region.$flip0)
            $atlasRegion.$flip4(0, 1);
        $this.$regions2.$add1($atlasRegion);
        $this.$regionmap.$put($atlasRegion.$name11, $atlasRegion);
    }
    $this.$error1 = $this.$find($rt_s(1154));
}
function iaagg_TextureAtlas_white($this) {
    if ($this.$white0 === null)
        $this.$white0 = $this.$find($rt_s(1106));
    return $this.$white0;
}
function iaagg_TextureAtlas_find($this, $name) {
    var $r;
    $r = $this.$regionmap.$get9($name);
    if ($r === null && $this.$error1 === null && !$name.$equals($rt_s(1154)))
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1340)).$append($name).$append($rt_s(1341)).$toString()));
    if ($r !== null)
        return $r;
    return $this.$error1;
}
function iaagg_TextureAtlas_has($this, $s) {
    return $this.$regionmap.$containsKey($s);
}
function iaagg_TextureAtlas_drawable($this, $name) {
    var $out, $region, $splits, var$5, $patch, $pads;
    if ($this.$drawables.$containsKey($name))
        return $this.$drawables.$get9($name);
    $out = null;
    if ($this.$has($name)) {
        $region = $this.$find($name);
        if ($region.$splits0 === null)
            $out = iaass_TextureRegionDrawable__init_($region);
        else {
            $splits = $region.$splits0;
            var$5 = $splits.data;
            $patch = iaagg_NinePatch__init_($region, var$5[0], var$5[1], var$5[2], var$5[3]);
            $pads = $region.$pads0;
            if ($pads !== null) {
                var$5 = $pads.data;
                $patch.$setPadding(var$5[0], var$5[1], var$5[2], var$5[3]);
            }
            $out = iaass_ScaledNinePatchDrawable__init_($patch);
        }
    }
    if ($this.$error1 === null && $out === null)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1342)).$append($name).$append($rt_s(1343)).$toString()));
    if ($out === null)
        $out = iaass_TextureRegionDrawable__init_($this.$error1);
    $this.$drawables.$put($name, $out);
    return $out;
}
function iaagg_TextureAtlas_lambda$static$0($region1, $region2) {
    var $i1, $i2;
    iaagg_TextureAtlas_$callClinit();
    $i1 = $region1.$index0;
    if ($i1 == (-1))
        $i1 = 2147483647;
    $i2 = $region2.$index0;
    if ($i2 == (-1))
        $i2 = 2147483647;
    return $i1 - $i2 | 0;
}
function iaagg_TextureAtlas__clinit_() {
    iaagg_TextureAtlas_tuple = $rt_createArray(jl_String, 4);
    iaagg_TextureAtlas_indexComparator = iaagg_TextureAtlas$_clinit_$lambda$_33_0__init_();
}
function it_Boss$seesPlayer$lambda$_23_0() {
    jl_Object.call(this);
}
function it_Boss$seesPlayer$lambda$_23_0__init_() {
    var var_0 = new it_Boss$seesPlayer$lambda$_23_0();
    it_Boss$seesPlayer$lambda$_23_0__init_0(var_0);
    return var_0;
}
function it_Boss$seesPlayer$lambda$_23_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Boss$seesPlayer$lambda$_23_0_accept(var$0, var$1, var$2) {
    return it_Boss_lambda$seesPlayer$7(var$1, var$2);
}
function iaagg_BitmapFont() {
    var a = this; jl_Object.call(a);
    a.$data1 = null;
    a.$cache2 = null;
    a.$regions1 = null;
    a.$integer0 = 0;
    a.$flipped1 = 0;
    a.$ownsTexture = 0;
}
function iaagg_BitmapFont__init_0(var_0) {
    var var_1 = new iaagg_BitmapFont();
    iaagg_BitmapFont__init_(var_1, var_0);
    return var_1;
}
function iaagg_BitmapFont__init_1(var_0, var_1) {
    var var_2 = new iaagg_BitmapFont();
    iaagg_BitmapFont__init_2(var_2, var_0, var_1);
    return var_2;
}
function iaagg_BitmapFont__init_3(var_0, var_1, var_2) {
    var var_3 = new iaagg_BitmapFont();
    iaagg_BitmapFont__init_4(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaagg_BitmapFont__init_5(var_0, var_1, var_2) {
    var var_3 = new iaagg_BitmapFont();
    iaagg_BitmapFont__init_6(var_3, var_0, var_1, var_2);
    return var_3;
}
function iaagg_BitmapFont__init_($this, $fontFile) {
    iaagg_BitmapFont__init_2($this, $fontFile, 0);
}
function iaagg_BitmapFont__init_2($this, $fontFile, $flip) {
    iaagg_BitmapFont__init_4($this, iaagg_BitmapFont$BitmapFontData__init_($fontFile, $flip), null, 1);
}
function iaagg_BitmapFont__init_4($this, $data, $region, $integer) {
    var var$4, var$5;
    if ($region === null)
        var$4 = null;
    else {
        var$5 = $rt_createArray(iaagg_TextureRegion, 1);
        var$5.data[0] = $region;
        var$4 = iaac_Array_with(var$5);
    }
    iaagg_BitmapFont__init_6($this, $data, var$4, $integer);
}
function iaagg_BitmapFont__init_6($this, $data, $pageRegions, $integer) {
    var $n, $i, $file;
    jl_Object__init_0($this);
    $this.$flipped1 = $data.$flipped0;
    $this.$data1 = $data;
    $this.$integer0 = $integer;
    if ($pageRegions !== null && $pageRegions.$size) {
        $this.$regions1 = $pageRegions;
        $this.$ownsTexture = 0;
    } else {
        if ($data.$imagePaths === null)
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(1344)));
        $n = $data.$imagePaths.data.length;
        $this.$regions1 = iaac_Array__init_($n);
        $i = 0;
        while ($i < $n) {
            if ($data.$fontFile === null) {
                iaa_Core_$callClinit();
                $file = iaa_Core_files.$internal($data.$imagePaths.data[$i]);
            } else {
                iaa_Core_$callClinit();
                $file = iaa_Core_files.$get59($data.$imagePaths.data[$i], $data.$fontFile.$type11());
            }
            $this.$regions1.$add1(iaagg_TextureRegion__init_3(iaag_Texture__init_($file, 0)));
            $i = $i + 1 | 0;
        }
        $this.$ownsTexture = 1;
    }
    $this.$cache2 = $this.$newFontCache();
    $this.$load7($data);
}
function iaagg_BitmapFont_load($this, $data) {
    var var$2, var$3, var$4, $page, var$6, var$7, var$8, $glyph;
    var$2 = $data.$glyphs0.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        a: {
            $page = var$2[var$4];
            if ($page !== null) {
                var$6 = $page.data;
                var$7 = var$6.length;
                var$8 = 0;
                while (true) {
                    if (var$8 >= var$7)
                        break a;
                    $glyph = var$6[var$8];
                    if ($glyph !== null)
                        $data.$setGlyphRegion($glyph, $this.$regions1.$get($glyph.$page0));
                    var$8 = var$8 + 1 | 0;
                }
            }
        }
        var$4 = var$4 + 1 | 0;
    }
    if ($data.$missingGlyph !== null)
        $data.$setGlyphRegion($data.$missingGlyph, $this.$regions1.$get($data.$missingGlyph.$page0));
}
function iaagg_BitmapFont_getScaleX($this) {
    return $this.$data1.$scaleX1;
}
function iaagg_BitmapFont_getScaleY($this) {
    return $this.$data1.$scaleY2;
}
function iaagg_BitmapFont_getRegions($this) {
    return $this.$regions1;
}
function iaagg_BitmapFont_getLineHeight($this) {
    return $this.$data1.$lineHeight;
}
function iaagg_BitmapFont_getDescent($this) {
    return $this.$data1.$descent;
}
function iaagg_BitmapFont_isFlipped($this) {
    return $this.$flipped1;
}
function iaagg_BitmapFont_getData($this) {
    return $this.$data1;
}
function iaagg_BitmapFont_newFontCache($this) {
    return iaagg_BitmapFontCache__init_($this, $this.$integer0);
}
function it_Phases() {
    jl_Object.call(this);
}
var it_Phases_in = null;
var it_Phases_allAttacks = null;
var it_Phases_cycle = null;
var it_Phases_spiral = null;
var it_Phases_data = 0;
var it_Phases_phases = null;
function it_Phases_$callClinit() {
    it_Phases_$callClinit = $rt_eraseClinit(it_Phases);
    it_Phases__clinit_();
}
function it_Phases_wave() {
    var var$1;
    it_Phases_$callClinit();
    var$1 = i_Inferno_boss;
    it_Boss_$callClinit();
    var$1.$anim(it_Boss_awave, 20.0);
    i_Inferno_renderer.$shake(4.0, 4.0);
}
function it_Phases_seq($amount, $space, $run) {
    it_Phases_$callClinit();
    iaam_Angles_loop($amount, it_Phases$seq$lambda$_2_0__init_($space, $run));
}
function it_Phases_every($time, $run) {
    it_Phases_$callClinit();
    if (it_Phases_in.$get20($time))
        $run.$run();
}
function it_Phases_healthi($max) {
    it_Phases_$callClinit();
    return (1.0 - i_Inferno_boss.$health / i_Inferno_boss.$maxHealth()) * $max | 0;
}
function it_Phases_v($x, $y) {
    it_Phases_$callClinit();
    iaau_Tmp_$callClinit();
    return iaau_Tmp_v1.$set2($x / 10.0, $y / 10.0);
}
function it_Phases_lambda$seq$61($space, $run, $i) {
    it_Phases_$callClinit();
    iaau_Time_run($i * $space, it_Phases$lambda$seq$61$lambda$_6_0__init_($run, $i));
}
function it_Phases_lambda$null$60($run, $i) {
    it_Phases_$callClinit();
    $run.$get54($i);
}
function it_Phases_lambda$static$59() {
    it_Phases_$callClinit();
    iaam_Angles_loop(10, it_Phases$lambda$static$59$lambda$_8_0__init_());
}
function it_Phases_lambda$null$58($i) {
    it_Phases_$callClinit();
    iaau_Time_run($i * 2.0, it_Phases$lambda$null$58$lambda$_9_0__init_($i));
}
function it_Phases_lambda$null$57($i) {
    it_Phases_$callClinit();
    iaam_Angles_circle(6, $i * 4.0, it_Phases$lambda$null$57$lambda$_10_0__init_());
}
function it_Phases_lambda$null$56($f) {
    it_Phases_$callClinit();
    i_Inferno_boss.$shoot($f);
}
function it_Phases_lambda$static$55() {
    var $s;
    it_Phases_$callClinit();
    $s = i_Inferno_world.$statue();
    iaam_Angles_loop(80, it_Phases$lambda$static$55$lambda$_12_0__init_($s));
}
function it_Phases_lambda$null$54($s, $i) {
    it_Phases_$callClinit();
    iaau_Time_run($i * 8.0, it_Phases$lambda$null$54$lambda$_13_0__init_($s));
}
function it_Phases_lambda$null$53($s) {
    var var$2;
    it_Phases_$callClinit();
    var$2 = i_Inferno_boss;
    it_Bullets_$callClinit();
    var$2.$shoot1(it_Bullets_firebreath, $s.$x0, $s.$y0, 270.0 + iaam_Mathf_range(7.0));
}
function it_Phases_lambda$static$52() {
    var $b;
    it_Phases_$callClinit();
    it_Bullets_$callClinit();
    $b = it_Bullet_shoot(it_Bullets_fireball, i_Inferno_boss, i_Inferno_boss.$x2, i_Inferno_boss.$y2 + i_Inferno_boss.$height8(), i_Inferno_boss.$aim());
    $b.$lifetime1 = $b.$dst(i_Inferno_player) / $b.$type8.$speed;
}
function it_Phases_lambda$static$51() {
    var var$1, $tile, $x, $y;
    it_Phases_$callClinit();
    var$1 = i_Inferno_world.$candles().$iterator();
    while (var$1.$hasNext()) {
        $tile = var$1.$next0();
        $x = $tile.$x3 * 16 | 0;
        $y = ($tile.$y3 * 16 | 0) + 14.0;
        it_Fx_$callClinit();
        it_Fx_candlespiral.$at($x, $y);
        iaau_Time_run(it_Fx_candlespiral.$lifetime, it_Phases$lambda$static$51$lambda$_16_0__init_($x, $y));
    }
}
function it_Phases_lambda$null$50($x, $y) {
    it_Phases_$callClinit();
    iaam_Angles_circle0(20, it_Phases$lambda$null$50$lambda$_17_0__init_($x, $y));
    it_Fx_$callClinit();
    it_Fx_candlefire.$at($x, $y);
    i_Inferno_renderer.$shake1(4.0);
}
function it_Phases_lambda$null$49($x, $y, $f) {
    var var$4;
    it_Phases_$callClinit();
    var$4 = i_Inferno_boss;
    it_Bullets_$callClinit();
    var$4.$shoot1(it_Bullets_candle, $x, $y, $f);
}
function it_Phases_lambda$static$48() {
    var $met, $i;
    it_Phases_$callClinit();
    $met = it_Phases$lambda$static$48$lambda$_19_0__init_();
    $i = 0;
    while ($i < 50) {
        iaau_Time_run(iaam_Mathf_random1(240.0), it_Phases$lambda$static$48$lambda$_19_1__init_($met));
        $i = $i + 1 | 0;
    }
    $met.$get56(i_Inferno_player.$x2, i_Inferno_player.$y2);
}
function it_Phases_lambda$null$47($met) {
    it_Phases_$callClinit();
    $met.$get56(i_Inferno_player.$x2 + iaam_Mathf_range(400.0), i_Inferno_player.$y2 + iaam_Mathf_range(400.0));
}
function it_Phases_lambda$null$46($x, $y) {
    it_Phases_$callClinit();
    it_Fx_$callClinit();
    it_Fx_meteorpre.$at($x, $y);
    iaau_Time_run(it_Fx_meteorpre.$lifetime, it_Phases$lambda$null$46$lambda$_21_0__init_($x, $y));
}
function it_Phases_lambda$null$45($x, $y) {
    var var$3;
    it_Phases_$callClinit();
    var$3 = i_Inferno_boss;
    it_Bullets_$callClinit();
    var$3.$shoot1(it_Bullets_meteor, $x, $y, 0.0);
}
function it_Phases_lambda$static$44() {
    it_Phases_$callClinit();
    it_Fx_$callClinit();
    it_Fx_wave.$at(i_Inferno_boss.$x2, i_Inferno_boss.$y2);
    iaau_Time_run(15.0, it_Phases$lambda$static$44$lambda$_23_0__init_());
}
function it_Phases_lambda$null$43() {
    it_Phases_$callClinit();
    iaau_Tmp_$callClinit();
    iaau_Tmp_v1.$trns(i_Inferno_player.$mouseAngle0(), 40.0);
    i_Inferno_boss.$set5(i_Inferno_player.$x2 + iaau_Tmp_v1.$x0, i_Inferno_player.$y2 + iaau_Tmp_v1.$y0);
    i_Inferno_boss.$hitboxTile(iaau_Tmp_r1);
    if (ie_EntityCollisions_overlapsTile(iaau_Tmp_r1))
        i_Inferno_boss.$set5(i_Inferno_player.$x2, i_Inferno_player.$y2);
    it_Fx_$callClinit();
    it_Fx_wave.$at(i_Inferno_boss.$x2, i_Inferno_boss.$y2);
}
function it_Phases_lambda$static$42() {
    var $aim;
    it_Phases_$callClinit();
    $aim = i_Inferno_boss.$aim();
    it_Fx_$callClinit();
    it_Fx_indwave.$at1(i_Inferno_boss.$x2, i_Inferno_boss.$y2, $aim);
    iaau_Time_run(it_Fx_indline.$lifetime, it_Phases$lambda$static$42$lambda$_25_0__init_($aim));
}
function it_Phases_lambda$null$41($aim) {
    it_Phases_$callClinit();
    iaam_Angles_loop(8, it_Phases$lambda$null$41$lambda$_26_0__init_($aim));
}
function it_Phases_lambda$null$40($aim, $i) {
    it_Phases_$callClinit();
    iaau_Time_run($i * 3.0, it_Phases$lambda$null$40$lambda$_27_0__init_($i, $aim));
}
function it_Phases_lambda$null$39($i, $aim) {
    var var$3, var$4;
    it_Phases_$callClinit();
    var$3 = 2 + $i | 0;
    var$4 = i_Inferno_boss;
    jl_Object_getClass(var$4);
    iaam_Angles_shotgun(var$3, 8.0, $aim, it_Phases$lambda$null$39$lambda$_28_0__init_(var$4));
}
function it_Phases_lambda$static$38() {
    var $aim;
    it_Phases_$callClinit();
    $aim = i_Inferno_boss.$aim();
    iaam_Angles_loop(2, it_Phases$lambda$static$38$lambda$_29_0__init_($aim));
}
function it_Phases_lambda$null$37($aim, $j) {
    it_Phases_$callClinit();
    iaau_Time_run($j * 20 | 0, it_Phases$lambda$null$37$lambda$_30_0__init_($aim, $j));
}
function it_Phases_lambda$null$36($aim, $j) {
    it_Phases_$callClinit();
    it_Fx_$callClinit();
    iaau_Time_run(it_Fx_indline.$lifetime, it_Phases$lambda$null$36$lambda$_31_0__init_($aim, $j));
    iaam_Angles_circle(3, $aim + $j * 60.0, it_Phases$lambda$null$36$lambda$_31_1__init_());
}
function it_Phases_lambda$null$35($f) {
    it_Phases_$callClinit();
    it_Fx_$callClinit();
    it_Fx_indline.$at1(i_Inferno_boss.$x2, i_Inferno_boss.$y2, $f);
}
function it_Phases_lambda$null$34($aim, $j) {
    it_Phases_$callClinit();
    iaam_Angles_loop(8, it_Phases$lambda$null$34$lambda$_33_0__init_($aim, $j));
}
function it_Phases_lambda$null$33($aim, $j, $i) {
    it_Phases_$callClinit();
    iaau_Time_run($i * 3.0, it_Phases$lambda$null$33$lambda$_34_0__init_($aim, $j));
}
function it_Phases_lambda$null$32($aim, $j) {
    var var$3, var$4;
    it_Phases_$callClinit();
    var$3 = $aim + $j * 60.0;
    var$4 = i_Inferno_boss;
    jl_Object_getClass(var$4);
    iaam_Angles_circle(3, var$3, it_Phases$lambda$null$32$lambda$_35_0__init_(var$4));
}
function it_Phases_lambda$static$31() {
    var $aim;
    it_Phases_$callClinit();
    $aim = i_Inferno_boss.$aim();
    iaam_Angles_loop(8, it_Phases$lambda$static$31$lambda$_36_0__init_($aim));
}
function it_Phases_lambda$null$30($aim, $i) {
    it_Phases_$callClinit();
    iaau_Time_run($i * 3.0, it_Phases$lambda$null$30$lambda$_37_0__init_($aim, $i));
}
function it_Phases_lambda$null$29($aim, $i) {
    it_Phases_$callClinit();
    iaam_Angles_circle(3, $aim, it_Phases$lambda$null$29$lambda$_38_0__init_($i));
}
function it_Phases_lambda$null$28($i, $f) {
    var var$3, var$4, var$5;
    it_Phases_$callClinit();
    var$3 = 1 + $i | 0;
    var$4 = 3.0 + $i;
    var$5 = i_Inferno_boss;
    jl_Object_getClass(var$5);
    iaam_Angles_shotgun(var$3, var$4, $f, it_Phases$lambda$null$28$lambda$_39_0__init_(var$5));
}
function it_Phases_lambda$static$27() {
    var $aim;
    it_Phases_$callClinit();
    $aim = i_Inferno_boss.$aim();
    iaam_Angles_loop(8, it_Phases$lambda$static$27$lambda$_40_0__init_($aim));
}
function it_Phases_lambda$null$26($aim, $i) {
    it_Phases_$callClinit();
    iaau_Time_run($i * 3.0, it_Phases$lambda$null$26$lambda$_41_0__init_($i, $aim));
}
function it_Phases_lambda$null$25($i, $aim) {
    var var$3, var$4;
    it_Phases_$callClinit();
    var$3 = 2 + $i | 0;
    var$4 = i_Inferno_boss;
    jl_Object_getClass(var$4);
    iaam_Angles_shotgun(var$3, 8.0, $aim, it_Phases$lambda$null$25$lambda$_42_0__init_(var$4));
}
function it_Phases_lambda$static$24() {
    var $aim;
    it_Phases_$callClinit();
    $aim = i_Inferno_boss.$aim();
    iaam_Angles_loop(30, it_Phases$lambda$static$24$lambda$_43_0__init_($aim));
}
function it_Phases_lambda$null$23($aim, $i) {
    it_Phases_$callClinit();
    iaau_Time_run($i * 1.0, it_Phases$lambda$null$23$lambda$_44_0__init_($aim, $i));
}
function it_Phases_lambda$null$22($aim, $i) {
    var var$3, var$4;
    it_Phases_$callClinit();
    var$3 = $aim + $i * 10.0;
    var$4 = i_Inferno_boss;
    jl_Object_getClass(var$4);
    iaam_Angles_shotgun(3, 120.0, var$3, it_Phases$lambda$null$22$lambda$_45_0__init_(var$4));
}
function it_Phases_lambda$static$21() {
    var $aim;
    it_Phases_$callClinit();
    $aim = i_Inferno_boss.$aim();
    iaam_Angles_loop(40, it_Phases$lambda$static$21$lambda$_46_0__init_($aim));
}
function it_Phases_lambda$null$20($aim, $i) {
    it_Phases_$callClinit();
    iaau_Time_run($i * 3 | 0, it_Phases$lambda$null$20$lambda$_47_0__init_($aim, $i));
}
function it_Phases_lambda$null$19($aim, $i) {
    var var$3, var$4;
    it_Phases_$callClinit();
    var$3 = $aim + $i * 10.0;
    var$4 = i_Inferno_boss;
    jl_Object_getClass(var$4);
    iaam_Angles_shotgun(2, 180.0, var$3, it_Phases$lambda$null$19$lambda$_48_0__init_(var$4));
}
function it_Phases_lambda$static$18() {
    var $aim;
    it_Phases_$callClinit();
    $aim = i_Inferno_boss.$aim();
    iaam_Angles_loop(20, it_Phases$lambda$static$18$lambda$_49_0__init_($aim));
}
function it_Phases_lambda$null$17($aim, $i) {
    it_Phases_$callClinit();
    iaau_Time_run($i * 2 | 0, it_Phases$lambda$null$17$lambda$_50_0__init_($aim, $i));
}
function it_Phases_lambda$null$16($aim, $i) {
    var var$3, var$4;
    it_Phases_$callClinit();
    var$3 = $aim + iaam_Mathf_sin($i, 1.0, 5.0);
    var$4 = i_Inferno_boss;
    jl_Object_getClass(var$4);
    iaam_Angles_shotgun(3, 15.0, var$3, it_Phases$lambda$null$16$lambda$_51_0__init_(var$4));
}
function it_Phases_lambda$static$15() {
    var $aim;
    it_Phases_$callClinit();
    $aim = i_Inferno_boss.$aim();
    iaam_Angles_loop(20, it_Phases$lambda$static$15$lambda$_52_0__init_($aim));
}
function it_Phases_lambda$null$14($aim, $i) {
    var var$3;
    it_Phases_$callClinit();
    var$3 = $i * 2 | 0;
    iaau_Time_run(var$3, it_Phases$lambda$null$14$lambda$_53_0__init_($aim, $i));
    iaau_Time_run(var$3, it_Phases$lambda$null$14$lambda$_53_1__init_($aim, $i));
}
function it_Phases_lambda$null$13($aim, $i) {
    it_Phases_$callClinit();
    i_Inferno_boss.$shoot($aim - 50.0 + ($i * 5 | 0));
}
function it_Phases_lambda$null$12($aim, $i) {
    it_Phases_$callClinit();
    i_Inferno_boss.$shoot($aim + 50.0 - ($i * 5 | 0));
}
function it_Phases_lambda$static$11() {
    var $aim, $length;
    it_Phases_$callClinit();
    $aim = i_Inferno_boss.$aim();
    $length = 15;
    iaam_Angles_loop(14, it_Phases$lambda$static$11$lambda$_56_0__init_($length, $aim));
}
function it_Phases_lambda$null$10($length, $aim, $i) {
    var var$4;
    it_Phases_$callClinit();
    var$4 = $i * 2 | 0;
    iaau_Time_run(var$4, it_Phases$lambda$null$10$lambda$_57_0__init_($i, $length, $aim));
    iaau_Time_run(var$4 + 30 | 0, it_Phases$lambda$null$10$lambda$_57_1__init_($i, $length, $aim));
}
function it_Phases_lambda$null$9($i, $length, $aim) {
    it_Phases_$callClinit();
    iaam_Angles_circle0(5, it_Phases$lambda$null$9$lambda$_58_0__init_($i, $length, $aim));
}
function it_Phases_lambda$null$8($i, $length, $aim, $f) {
    var var$5, var$6, var$7;
    it_Phases_$callClinit();
    var$5 = 72.0 * $i / $length;
    var$6 = $f + $aim + 180.0;
    var$7 = i_Inferno_boss;
    jl_Object_getClass(var$7);
    iaam_Angles_shotgun(2, var$5, var$6, it_Phases$lambda$null$8$lambda$_59_0__init_(var$7));
}
function it_Phases_lambda$null$7($i, $length, $aim) {
    it_Phases_$callClinit();
    iaam_Angles_circle0(5, it_Phases$lambda$null$7$lambda$_60_0__init_($i, $length, $aim));
}
function it_Phases_lambda$null$6($i, $length, $aim, $f) {
    var var$5, var$6, var$7;
    it_Phases_$callClinit();
    var$5 = 72.0 * $i / $length;
    var$6 = $f + $aim;
    var$7 = i_Inferno_boss;
    jl_Object_getClass(var$7);
    iaam_Angles_shotgun(2, var$5, var$6, it_Phases$lambda$null$6$lambda$_61_0__init_(var$7));
}
function it_Phases_lambda$static$5() {
    var $aim;
    it_Phases_$callClinit();
    $aim = i_Inferno_boss.$aim();
    iaam_Angles_loop(7, it_Phases$lambda$static$5$lambda$_62_0__init_($aim));
}
function it_Phases_lambda$null$4($aim, $i) {
    var var$3;
    it_Phases_$callClinit();
    var$3 = $i * 4 | 0;
    iaau_Time_run(10.0 + var$3, it_Phases$lambda$null$4$lambda$_63_0__init_($aim));
    iaau_Time_run(var$3, it_Phases$lambda$null$4$lambda$_63_1__init_($aim));
}
function it_Phases_lambda$null$3($aim) {
    it_Phases_$callClinit();
    iaam_Angles_circle0(5, it_Phases$lambda$null$3$lambda$_64_0__init_($aim));
}
function it_Phases_lambda$null$2($aim, $f) {
    it_Phases_$callClinit();
    i_Inferno_boss.$shoot($f + $aim);
}
function it_Phases_lambda$null$1($aim) {
    it_Phases_$callClinit();
    iaam_Angles_circle0(5, it_Phases$lambda$null$1$lambda$_66_0__init_($aim));
}
function it_Phases_lambda$null$0($aim, $f) {
    it_Phases_$callClinit();
    i_Inferno_boss.$shoot($f + 36.0 + $aim);
}
function it_Phases_access$000() {
    it_Phases_$callClinit();
    return it_Phases_cycle;
}
function it_Phases_access$100($x0, $x1) {
    it_Phases_$callClinit();
    it_Phases_every($x0, $x1);
}
function it_Phases_access$200($x0, $x1, $x2) {
    it_Phases_$callClinit();
    it_Phases_seq($x0, $x1, $x2);
}
function it_Phases_access$300() {
    it_Phases_$callClinit();
    it_Phases_wave();
}
function it_Phases_access$400($x0, $x1) {
    it_Phases_$callClinit();
    return it_Phases_v($x0, $x1);
}
function it_Phases_access$500($x0) {
    it_Phases_$callClinit();
    return it_Phases_healthi($x0);
}
function it_Phases_access$600() {
    it_Phases_$callClinit();
    return it_Phases_spiral;
}
function it_Phases__clinit_() {
    var var$1, var$2, var$3;
    it_Phases_in = iaau_Interval__init_(20);
    var$1 = $rt_createArray(jl_Runnable, 10);
    var$2 = var$1.data;
    var$2[0] = it_Phases$_clinit_$lambda$_75_0__init_();
    var$2[1] = it_Phases$_clinit_$lambda$_75_1__init_();
    var$2[2] = it_Phases$_clinit_$lambda$_75_2__init_();
    var$2[3] = it_Phases$_clinit_$lambda$_75_3__init_();
    var$2[4] = it_Phases$_clinit_$lambda$_75_4__init_();
    var$2[5] = it_Phases$_clinit_$lambda$_75_5__init_();
    var$2[6] = it_Phases$_clinit_$lambda$_75_6__init_();
    var$2[7] = it_Phases$_clinit_$lambda$_75_7__init_();
    var$2[8] = it_Phases$_clinit_$lambda$_75_8__init_();
    var$2[9] = it_Phases$_clinit_$lambda$_75_9__init_();
    it_Phases_allAttacks = iaac_Array_with(var$1);
    var$1 = $rt_createArray(jl_Runnable, 5);
    var$2 = var$1.data;
    var$2[0] = it_Phases$_clinit_$lambda$_75_10__init_();
    var$2[1] = it_Phases$_clinit_$lambda$_75_11__init_();
    var$2[2] = it_Phases$_clinit_$lambda$_75_12__init_();
    var$2[3] = it_Phases$_clinit_$lambda$_75_13__init_();
    var$2[4] = it_Phases$_clinit_$lambda$_75_14__init_();
    it_Phases_cycle = iaac_Array_with(var$1);
    it_Phases_spiral = it_Phases$_clinit_$lambda$_75_15__init_();
    it_Phases_data = 0;
    var$1 = $rt_createArray(it_Phases$Phase, 6);
    var$2 = var$1.data;
    var$3 = new it_Phases$1;
    i_Text_$callClinit();
    it_Phases$1__init_0(var$3, i_Text_start);
    var$2[0] = var$3;
    var$2[1] = it_Phases$2__init_(null);
    var$2[2] = it_Phases$3__init_(i_Text_phase1);
    var$2[3] = it_Phases$4__init_(i_Text_phase2);
    var$2[4] = it_Phases$5__init_(i_Text_phase3);
    var$2[5] = it_Phases$6__init_(i_Text_phase4);
    it_Phases_phases = iaac_Array_with(var$1);
}
function otcju_THashMap$HashEntry() {
    otcju_TMapEntry.call(this);
}
function it_Phases$lambda$static$38$lambda$_29_0() {
    jl_Object.call(this);
    this.$_0150 = 0.0;
}
function it_Phases$lambda$static$38$lambda$_29_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$static$38$lambda$_29_0();
    it_Phases$lambda$static$38$lambda$_29_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$static$38$lambda$_29_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0150 = var$1;
}
function it_Phases$lambda$static$38$lambda$_29_0_get(var$0, var$1) {
    it_Phases_lambda$null$37(var$0.$_0150, var$1);
}
function iaau_Log() {
    jl_Object.call(this);
}
var iaau_Log_empty = null;
var iaau_Log_useColors = 0;
var iaau_Log_level = null;
var iaau_Log_logger = null;
function iaau_Log_$callClinit() {
    iaau_Log_$callClinit = $rt_eraseClinit(iaau_Log);
    iaau_Log__clinit_();
}
function iaau_Log_setLogger($log) {
    iaau_Log_$callClinit();
    iaau_Log_logger = $log;
}
function iaau_Log_log($level, $text, $args) {
    iaau_Log_$callClinit();
    if (jl_Enum_ordinal(iaau_Log_level) > jl_Enum_ordinal($level))
        return;
    iaau_Log_logger.$log1($level, $text, $args);
}
function iaau_Log_info0($text, $args) {
    var var$3;
    iaau_Log_$callClinit();
    var$3 = iaau_Log_logger;
    iaau_Log$LogLevel_$callClinit();
    var$3.$log1(iaau_Log$LogLevel_info, $text, $args);
}
function iaau_Log_info($object) {
    iaau_Log_$callClinit();
    iaau_Log_info0(jl_String_valueOf($object), iaau_Log_empty);
}
function iaau_Log_err($text, $args) {
    iaau_Log_$callClinit();
    iaau_Log$LogLevel_$callClinit();
    iaau_Log_log(iaau_Log$LogLevel_err, $text, $args);
}
function iaau_Log_format($text, $args) {
    iaau_Log_$callClinit();
    return iaau_Log_format0($text, iaau_Log_useColors, $args);
}
function iaau_Log_format0($text, $useColors, $args) {
    var var$4, var$5, $color;
    iaau_Log_$callClinit();
    var$4 = iaau_Strings_format($text, $args);
    if (!$useColors) {
        var$5 = iaau_ColorCodes_getColorCodes().$iterator();
        while (var$5.$hasNext()) {
            $color = var$5.$next0();
            var$4 = var$4.$replace(jl_StringBuilder__init_().$append($rt_s(46)).$append($color).$toString(), $rt_s(58));
        }
    } else {
        var$5 = iaau_ColorCodes_getColorCodes().$iterator();
        while (var$5.$hasNext()) {
            $color = var$5.$next0();
            var$4 = var$4.$replace(jl_StringBuilder__init_().$append($rt_s(46)).$append($color).$toString(), iaau_ColorCodes_getColorText($color));
        }
    }
    return var$4;
}
function iaau_Log__clinit_() {
    iaau_Log_empty = $rt_createArray(jl_Object, 0);
    iaau_Log_useColors = 1;
    iaau_Log$LogLevel_$callClinit();
    iaau_Log_level = iaau_Log$LogLevel_info;
    iaau_Log_logger = iaau_Log$DefaultLogHandler__init_();
}
function iaamg_Polyline() {
    var a = this; jl_Object.call(a);
    a.$localVertices0 = null;
    a.$x14 = 0.0;
    a.$y13 = 0.0;
    a.$scaleX3 = 0.0;
    a.$scaleY3 = 0.0;
    a.$calculateScaledLength = 0;
    a.$calculateLength = 0;
    a.$dirty0 = 0;
}
function iaamg_Polyline__init_(var_0) {
    var var_1 = new iaamg_Polyline();
    iaamg_Polyline__init_0(var_1, var_0);
    return var_1;
}
function iaamg_Polyline__init_0($this, $vertices) {
    var var$2;
    var$2 = $vertices.data;
    jl_Object__init_0($this);
    $this.$scaleX3 = 1.0;
    $this.$scaleY3 = 1.0;
    $this.$calculateScaledLength = 1;
    $this.$calculateLength = 1;
    $this.$dirty0 = 1;
    if (var$2.length >= 4) {
        $this.$localVertices0 = $vertices;
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(1345)));
}
function iaamg_Polyline_setPosition($this, $x, $y) {
    $this.$x14 = $x;
    $this.$y13 = $y;
    $this.$dirty0 = 1;
}
function jur_UMultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter3 = 0;
}
function jur_UMultiLineEOLSet__init_(var_0) {
    var var_1 = new jur_UMultiLineEOLSet();
    jur_UMultiLineEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UMultiLineEOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_0($this);
    $this.$consCounter3 = $counter;
}
function jur_UMultiLineEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $strDif;
    $strDif = !$matchResult.$hasAnchoringBounds() ? $testString.$length() - $strIndex | 0 : $matchResult.$getRightBound() - $strIndex | 0;
    if ($strDif <= 0) {
        $matchResult.$setConsumed($this.$consCounter3, 0);
        return $this.$next.$matches($strIndex, $testString, $matchResult);
    }
    if ($testString.$charAt($strIndex) != 10)
        return (-1);
    $matchResult.$setConsumed($this.$consCounter3, 1);
    return $this.$next.$matches($strIndex + 1 | 0, $testString, $matchResult);
}
function jur_UMultiLineEOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter3) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter3, (-1));
    return $res;
}
function jur_UMultiLineEOLSet_getName($this) {
    return $rt_s(1346);
}
function i_Control() {
    var a = this; jl_Object.call(a);
    a.$paused0 = 0;
    a.$slowmo0 = 0.0;
}
function i_Control__init_() {
    var var_0 = new i_Control();
    i_Control__init_0(var_0);
    return var_0;
}
function i_Control__init_0($this) {
    jl_Object__init_0($this);
    $this.$paused0 = 0;
    iaau_Time_setDeltaProvider(i_Control$_init_$lambda$_0_0__init_($this));
    iaa_Core_$callClinit();
    iaa_Core_keybinds.$setDefaults(i_Binding_values(), $rt_createArray(iaa_KeyBinds$Section, 0));
    iaa_Core_settings.$setAppName($rt_s(1347));
    iaa_Core_settings.$load();
}
function i_Control_init($this) {
    i_Inferno_boss = it_Boss__init_();
    i_Inferno_player = it_Player__init_();
    $this.$reset();
}
function i_Control_slowmo($this, $amount) {
    $this.$slowmo0 = $amount;
}
function i_Control_reset($this) {
    iaau_Time_clear();
    i_Inferno_bulletGroup.$clear();
    i_Inferno_effectGroup.$clear();
    i_Inferno_player.$set5((i_Inferno_world.$width4() * 16 | 0) / 2.0 + 0.5, (i_Inferno_world.$height4() * 16 | 0) / 2.0 + 0.5);
    i_Inferno_player.$heal();
    iaa_Core_$callClinit();
    iaa_Core_camera.$position6.$set16(i_Inferno_player);
    i_Inferno_boss.$set5((i_Inferno_world.$width4() * 16 | 0) / 2.0, (i_Inferno_world.$height4() * 16 | 0) / 2.0 + 400.0);
    i_Inferno_boss.$heal();
    i_Inferno_boss.$reset();
    i_Inferno_boss.$add15();
    i_Inferno_player.$add15();
}
function i_Control_update($this) {
    var var$1;
    iaag_Color_$callClinit();
    iaag_Color_white.$set3(1.0, 1.0, 1.0, 1.0);
    iaagg_Draw_mixcol0();
    iaa_Core_$callClinit();
    var$1 = iaa_Core_input;
    iaai_KeyCode_$callClinit();
    if (var$1.$keyTap0(iaai_KeyCode_ESCAPE))
        iaa_Core_app.$exit();
    if (iaa_Core_input.$keyTap0(iaai_KeyCode_SPACE))
        $this.$setPaused($this.$isPaused() ? 0 : 1);
    if (!$this.$isPaused()) {
        iaau_Time_update();
        $this.$slowmo0 = $this.$slowmo0 - iaa_Core_graphics.$getDeltaTime() * 60.0 / 50.0;
        i_Inferno_charGroup.$update1();
        i_Inferno_bulletGroup.$update1();
        i_Inferno_effectGroup.$update1();
        i_Inferno_charGroup.$collide(i_Inferno_bulletGroup);
    }
}
function i_Control_isPaused($this) {
    return !$this.$paused0 && !i_Inferno_ui.$hasDialogue() ? 0 : 1;
}
function i_Control_setPaused($this, $paused) {
    $this.$paused0 = $paused;
}
function i_Control_lambda$new$0($this) {
    var var$1;
    var$1 = $this.$slowmo0 <= 0.0 ? 1.0 : iaam_Mathf_lerp(1.0, 0.6000000238418579, iaam_Mathf_clamp0($this.$slowmo0));
    iaa_Core_$callClinit();
    return var$1 * jl_Math_min(iaa_Core_graphics.$getDeltaTime() * 60.0, 1.0);
}
function iaam_MapTile() {
    var a = this; jl_Object.call(a);
    a.$id1 = 0;
    a.$region0 = null;
    a.$offsetX2 = 0.0;
    a.$offsetY2 = 0.0;
    a.$properties5 = null;
    a.$objects1 = null;
}
function iaam_MapTile__init_(var_0) {
    var var_1 = new iaam_MapTile();
    iaam_MapTile__init_0(var_1, var_0);
    return var_1;
}
function iaam_MapTile__init_0($this, $region) {
    jl_Object__init_0($this);
    $this.$region0 = $region;
}
function iaam_MapTile_getProperties($this) {
    if ($this.$properties5 === null)
        $this.$properties5 = iaam_MapProperties__init_();
    return $this.$properties5;
}
function iaam_MapTile_getObjects($this) {
    if ($this.$objects1 === null)
        $this.$objects1 = iaac_Array__init_0();
    return $this.$objects1;
}
function iaag_Pixmap$Format() {
    jl_Enum.call(this);
}
var iaag_Pixmap$Format_Alpha = null;
var iaag_Pixmap$Format_Intensity = null;
var iaag_Pixmap$Format_LuminanceAlpha = null;
var iaag_Pixmap$Format_RGB565 = null;
var iaag_Pixmap$Format_RGBA4444 = null;
var iaag_Pixmap$Format_RGB888 = null;
var iaag_Pixmap$Format_RGBA8888 = null;
var iaag_Pixmap$Format_$VALUES = null;
function iaag_Pixmap$Format_$callClinit() {
    iaag_Pixmap$Format_$callClinit = $rt_eraseClinit(iaag_Pixmap$Format);
    iaag_Pixmap$Format__clinit_();
}
function iaag_Pixmap$Format__init_(var_0, var_1) {
    var var_2 = new iaag_Pixmap$Format();
    iaag_Pixmap$Format__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaag_Pixmap$Format_values() {
    iaag_Pixmap$Format_$callClinit();
    return iaag_Pixmap$Format_$VALUES.$clone();
}
function iaag_Pixmap$Format_valueOf($name) {
    iaag_Pixmap$Format_$callClinit();
    return jl_Enum_valueOf($rt_cls(iaag_Pixmap$Format), $name);
}
function iaag_Pixmap$Format__init_0($this, var$1, var$2) {
    iaag_Pixmap$Format_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaag_Pixmap$Format_toGdx2DPixmapFormat($format) {
    iaag_Pixmap$Format_$callClinit();
    if ($format === iaag_Pixmap$Format_Alpha)
        return 1;
    if ($format === iaag_Pixmap$Format_Intensity)
        return 1;
    if ($format === iaag_Pixmap$Format_LuminanceAlpha)
        return 2;
    if ($format === iaag_Pixmap$Format_RGB565)
        return 5;
    if ($format === iaag_Pixmap$Format_RGBA4444)
        return 6;
    if ($format === iaag_Pixmap$Format_RGB888)
        return 3;
    if ($format === iaag_Pixmap$Format_RGBA8888)
        return 4;
    $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(1348)).$append1($format).$toString()));
}
function iaag_Pixmap$Format_fromGdx2DPixmapFormat($format) {
    iaag_Pixmap$Format_$callClinit();
    if ($format == 1)
        return iaag_Pixmap$Format_Alpha;
    if ($format == 2)
        return iaag_Pixmap$Format_LuminanceAlpha;
    if ($format == 5)
        return iaag_Pixmap$Format_RGB565;
    if ($format == 6)
        return iaag_Pixmap$Format_RGBA4444;
    if ($format == 3)
        return iaag_Pixmap$Format_RGB888;
    if ($format == 4)
        return iaag_Pixmap$Format_RGBA8888;
    $rt_throw(iaau_ArcRuntimeException__init_0(jl_StringBuilder__init_().$append($rt_s(1349)).$append3($format).$toString()));
}
function iaag_Pixmap$Format_toGlFormat($format) {
    iaag_Pixmap$Format_$callClinit();
    return cbggg_Gdx2DPixmap_toGlFormat(iaag_Pixmap$Format_toGdx2DPixmapFormat($format));
}
function iaag_Pixmap$Format_toGlType($format) {
    iaag_Pixmap$Format_$callClinit();
    return cbggg_Gdx2DPixmap_toGlType(iaag_Pixmap$Format_toGdx2DPixmapFormat($format));
}
function iaag_Pixmap$Format__clinit_() {
    var var$1, var$2;
    iaag_Pixmap$Format_Alpha = iaag_Pixmap$Format__init_($rt_s(62), 0);
    iaag_Pixmap$Format_Intensity = iaag_Pixmap$Format__init_($rt_s(1350), 1);
    iaag_Pixmap$Format_LuminanceAlpha = iaag_Pixmap$Format__init_($rt_s(1351), 2);
    iaag_Pixmap$Format_RGB565 = iaag_Pixmap$Format__init_($rt_s(1352), 3);
    iaag_Pixmap$Format_RGBA4444 = iaag_Pixmap$Format__init_($rt_s(1353), 4);
    iaag_Pixmap$Format_RGB888 = iaag_Pixmap$Format__init_($rt_s(1354), 5);
    iaag_Pixmap$Format_RGBA8888 = iaag_Pixmap$Format__init_($rt_s(1355), 6);
    var$1 = $rt_createArray(iaag_Pixmap$Format, 7);
    var$2 = var$1.data;
    var$2[0] = iaag_Pixmap$Format_Alpha;
    var$2[1] = iaag_Pixmap$Format_Intensity;
    var$2[2] = iaag_Pixmap$Format_LuminanceAlpha;
    var$2[3] = iaag_Pixmap$Format_RGB565;
    var$2[4] = iaag_Pixmap$Format_RGBA4444;
    var$2[5] = iaag_Pixmap$Format_RGB888;
    var$2[6] = iaag_Pixmap$Format_RGBA8888;
    iaag_Pixmap$Format_$VALUES = var$1;
}
function iaau_Log$LogLevel() {
    jl_Enum.call(this);
}
var iaau_Log$LogLevel_debug = null;
var iaau_Log$LogLevel_info = null;
var iaau_Log$LogLevel_warn = null;
var iaau_Log$LogLevel_err = null;
var iaau_Log$LogLevel_none = null;
var iaau_Log$LogLevel_$VALUES = null;
function iaau_Log$LogLevel_$callClinit() {
    iaau_Log$LogLevel_$callClinit = $rt_eraseClinit(iaau_Log$LogLevel);
    iaau_Log$LogLevel__clinit_();
}
function iaau_Log$LogLevel__init_(var_0, var_1) {
    var var_2 = new iaau_Log$LogLevel();
    iaau_Log$LogLevel__init_0(var_2, var_0, var_1);
    return var_2;
}
function iaau_Log$LogLevel_values() {
    iaau_Log$LogLevel_$callClinit();
    return iaau_Log$LogLevel_$VALUES.$clone();
}
function iaau_Log$LogLevel__init_0($this, var$1, var$2) {
    iaau_Log$LogLevel_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function iaau_Log$LogLevel__clinit_() {
    var var$1, var$2;
    iaau_Log$LogLevel_debug = iaau_Log$LogLevel__init_($rt_s(1356), 0);
    iaau_Log$LogLevel_info = iaau_Log$LogLevel__init_($rt_s(1357), 1);
    iaau_Log$LogLevel_warn = iaau_Log$LogLevel__init_($rt_s(1358), 2);
    iaau_Log$LogLevel_err = iaau_Log$LogLevel__init_($rt_s(1359), 3);
    iaau_Log$LogLevel_none = iaau_Log$LogLevel__init_($rt_s(480), 4);
    var$1 = $rt_createArray(iaau_Log$LogLevel, 5);
    var$2 = var$1.data;
    var$2[0] = iaau_Log$LogLevel_debug;
    var$2[1] = iaau_Log$LogLevel_info;
    var$2[2] = iaau_Log$LogLevel_warn;
    var$2[3] = iaau_Log$LogLevel_err;
    var$2[4] = iaau_Log$LogLevel_none;
    iaau_Log$LogLevel_$VALUES = var$1;
}
function iaag_Mesh() {
    var a = this; jl_Object.call(a);
    a.$vertices2 = null;
    a.$indices0 = null;
    a.$isVertexArray = 0;
    a.$autoBind = 0;
}
var iaag_Mesh_meshes = null;
function iaag_Mesh_$callClinit() {
    iaag_Mesh_$callClinit = $rt_eraseClinit(iaag_Mesh);
    iaag_Mesh__clinit_();
}
function iaag_Mesh__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new iaag_Mesh();
    iaag_Mesh__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaag_Mesh__init_2(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new iaag_Mesh();
    iaag_Mesh__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function iaag_Mesh__init_3(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new iaag_Mesh();
    iaag_Mesh__init_4(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function iaag_Mesh__init_($this, $isStatic, $maxVertices, $maxIndices, $attributes) {
    iaag_Mesh_$callClinit();
    jl_Object__init_0($this);
    $this.$autoBind = 1;
    $this.$vertices2 = iaag_Mesh_makeVertexBuffer($this, $isStatic, $maxVertices, iaag_VertexAttributes__init_($attributes));
    $this.$indices0 = iaagg_IndexBufferObject__init_($isStatic, $maxIndices);
    $this.$isVertexArray = 0;
    iaa_Core_$callClinit();
    iaag_Mesh_addManagedMesh(iaa_Core_app, $this);
}
function iaag_Mesh__init_0($this, $type, $isStatic, $maxVertices, $maxIndices, $attributes) {
    iaag_Mesh_$callClinit();
    iaag_Mesh__init_4($this, $type, $isStatic, $maxVertices, $maxIndices, iaag_VertexAttributes__init_($attributes));
}
function iaag_Mesh__init_4($this, $type, $isStatic, $maxVertices, $maxIndices, $attributes) {
    iaag_Mesh_$callClinit();
    a: {
        b: {
            jl_Object__init_0($this);
            $this.$autoBind = 1;
            iaag_Mesh$1_$callClinit();
            switch (iaag_Mesh$1_$SwitchMap$io$anuke$arc$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal($type)]) {
                case 1:
                    break;
                case 2:
                    $this.$vertices2 = iaagg_VertexBufferObjectSubData__init_($isStatic, $maxVertices, $attributes);
                    $this.$indices0 = iaagg_IndexBufferObjectSubData__init_($isStatic, $maxIndices);
                    $this.$isVertexArray = 0;
                    break a;
                case 3:
                    $this.$vertices2 = iaagg_VertexBufferObjectWithVAO__init_($isStatic, $maxVertices, $attributes);
                    $this.$indices0 = iaagg_IndexBufferObjectSubData__init_($isStatic, $maxIndices);
                    $this.$isVertexArray = 0;
                    break a;
                case 4:
                    break b;
                default:
                    break b;
            }
            $this.$vertices2 = iaagg_VertexBufferObject__init_($isStatic, $maxVertices, $attributes);
            $this.$indices0 = iaagg_IndexBufferObject__init_($isStatic, $maxIndices);
            $this.$isVertexArray = 0;
            break a;
        }
        $this.$vertices2 = iaagg_VertexArray__init_($maxVertices, $attributes);
        $this.$indices0 = iaagg_IndexArray__init_($maxIndices);
        $this.$isVertexArray = 1;
    }
    iaa_Core_$callClinit();
    iaag_Mesh_addManagedMesh(iaa_Core_app, $this);
}
function iaag_Mesh_addManagedMesh($app, $mesh) {
    var $managedResources;
    iaag_Mesh_$callClinit();
    $managedResources = iaag_Mesh_meshes.$get9($app);
    if ($managedResources === null)
        $managedResources = iaac_Array__init_0();
    $managedResources.$add1($mesh);
    iaag_Mesh_meshes.$put($app, $managedResources);
}
function iaag_Mesh_makeVertexBuffer($this, $isStatic, $maxVertices, $vertexAttributes) {
    iaa_Core_$callClinit();
    if (iaa_Core_gl30 === null)
        return iaagg_VertexBufferObject__init_($isStatic, $maxVertices, $vertexAttributes);
    return iaagg_VertexBufferObjectWithVAO__init_($isStatic, $maxVertices, $vertexAttributes);
}
function iaag_Mesh_setVertices($this, $vertices) {
    var var$2;
    var$2 = $vertices.data;
    $this.$vertices2.$setVertices1($vertices, 0, var$2.length);
    return $this;
}
function iaag_Mesh_setVertices0($this, $vertices, $offset, $count) {
    $this.$vertices2.$setVertices1($vertices, $offset, $count);
    return $this;
}
function iaag_Mesh_setIndices($this, $indices) {
    var var$2;
    var$2 = $indices.data;
    $this.$indices0.$setIndices0($indices, 0, var$2.length);
    return $this;
}
function iaag_Mesh_getNumIndices($this) {
    return $this.$indices0.$getNumIndices();
}
function iaag_Mesh_getNumVertices($this) {
    return $this.$vertices2.$getNumVertices();
}
function iaag_Mesh_setAutoBind($this, $autoBind) {
    $this.$autoBind = $autoBind;
}
function iaag_Mesh_bind($this, $shader) {
    $this.$bind2($shader, null);
}
function iaag_Mesh_bind0($this, $shader, $locations) {
    $this.$vertices2.$bind2($shader, $locations);
    if ($this.$indices0.$getNumIndices() > 0)
        $this.$indices0.$bind();
}
function iaag_Mesh_unbind($this, $shader) {
    $this.$unbind1($shader, null);
}
function iaag_Mesh_unbind0($this, $shader, $locations) {
    $this.$vertices2.$unbind1($shader, $locations);
    if ($this.$indices0.$getNumIndices() > 0)
        $this.$indices0.$unbind();
}
function iaag_Mesh_render($this, $shader, $primitiveType) {
    $this.$render2($shader, $primitiveType, 0, $this.$indices0.$getNumMaxIndices() <= 0 ? $this.$getNumVertices() : $this.$getNumIndices(), $this.$autoBind);
}
function iaag_Mesh_render0($this, $shader, $primitiveType, $offset, $count) {
    $this.$render2($shader, $primitiveType, $offset, $count, $this.$autoBind);
}
function iaag_Mesh_render1($this, $shader, $primitiveType, $offset, $count, $autoBind) {
    var $buffer, $oldPosition, $oldLimit, var$9, var$10, var$11;
    if (!$count)
        return;
    if ($autoBind)
        $this.$bind1($shader);
    if ($this.$isVertexArray) {
        if ($this.$indices0.$getNumIndices() <= 0) {
            iaa_Core_$callClinit();
            iaa_Core_gl20.$glDrawArrays($primitiveType, $offset, $count);
        } else {
            $buffer = $this.$indices0.$getBuffer();
            $oldPosition = jn_Buffer_position($buffer);
            $oldLimit = jn_Buffer_limit($buffer);
            $buffer.$position($offset);
            $buffer.$limit0($offset + $count | 0);
            iaa_Core_$callClinit();
            iaa_Core_gl20.$glDrawElements($primitiveType, $count, 5123, $buffer);
            $buffer.$position($oldPosition);
            $buffer.$limit0($oldLimit);
        }
    } else if ($this.$indices0.$getNumIndices() <= 0) {
        iaa_Core_$callClinit();
        iaa_Core_gl20.$glDrawArrays($primitiveType, $offset, $count);
    } else {
        if (($count + $offset | 0) > $this.$indices0.$getNumMaxIndices()) {
            var$9 = new iaau_ArcRuntimeException;
            var$10 = jl_StringBuilder__init_().$append($rt_s(1360)).$append3($count).$append($rt_s(1361)).$append3($offset).$append($rt_s(1362));
            var$11 = $this.$indices0;
            iaau_ArcRuntimeException__init_1(var$9, var$10.$append3(var$11.$getNumMaxIndices()).$append($rt_s(364)).$toString());
            $rt_throw(var$9);
        }
        iaa_Core_$callClinit();
        iaa_Core_gl20.$glDrawElements0($primitiveType, $count, 5123, $offset * 2 | 0);
    }
    if ($autoBind)
        $this.$unbind0($shader);
}
function iaag_Mesh_dispose($this) {
    var var$1;
    var$1 = iaag_Mesh_meshes;
    iaa_Core_$callClinit();
    if (var$1.$get9(iaa_Core_app) !== null)
        iaag_Mesh_meshes.$get9(iaa_Core_app).$removeValue($this, 1);
    $this.$vertices2.$dispose();
    $this.$indices0.$dispose();
}
function iaag_Mesh_getVerticesBuffer($this) {
    return $this.$vertices2.$getBuffer0();
}
function iaag_Mesh_getIndicesBuffer($this) {
    return $this.$indices0.$getBuffer();
}
function iaag_Mesh__clinit_() {
    iaag_Mesh_meshes = ju_HashMap__init_();
}
function iaau_Time$DelayRun() {
    var a = this; jl_Object.call(a);
    a.$delay = 0.0;
    a.$finish = null;
}
function iaau_Time$DelayRun__init_() {
    var var_0 = new iaau_Time$DelayRun();
    iaau_Time$DelayRun__init_0(var_0);
    return var_0;
}
function iaau_Time$DelayRun__init_0($this) {
    jl_Object__init_0($this);
}
function iaau_Time$DelayRun_reset($this) {
    $this.$delay = 0.0;
    $this.$finish = null;
}
function iaau_Time$DelayRun_access$002($x0, $x1) {
    $x0.$finish = $x1;
    return $x1;
}
function iaau_Time$DelayRun_access$102($x0, $x1) {
    $x0.$delay = $x1;
    return $x1;
}
function iaau_Time$DelayRun_access$100($x0) {
    return $x0.$delay;
}
function iaau_Time$DelayRun_access$000($x0) {
    return $x0.$finish;
}
function it_Player$lambda$update$2$lambda$_12_0() {
    jl_Object.call(this);
}
function it_Player$lambda$update$2$lambda$_12_0__init_() {
    var var_0 = new it_Player$lambda$update$2$lambda$_12_0();
    it_Player$lambda$update$2$lambda$_12_0__init_0(var_0);
    return var_0;
}
function it_Player$lambda$update$2$lambda$_12_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Player$lambda$update$2$lambda$_12_0_move(var$0, var$1) {
    return it_Player_lambda$null$1(var$1);
}
function it_Phases$2$lambda$$22$lambda$_2_0() {
    jl_Object.call(this);
}
function it_Phases$2$lambda$$22$lambda$_2_0__init_() {
    var var_0 = new it_Phases$2$lambda$$22$lambda$_2_0();
    it_Phases$2$lambda$$22$lambda$_2_0__init_0(var_0);
    return var_0;
}
function it_Phases$2$lambda$$22$lambda$_2_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$2$lambda$$22$lambda$_2_0_run(var$0) {
    it_Phases$2_lambda$null$21();
}
function i_World$_init_$lambda$_0_0() {
    jl_Object.call(this);
    this.$_0151 = null;
}
function i_World$_init_$lambda$_0_0__init_(var_0) {
    var var_1 = new i_World$_init_$lambda$_0_0();
    i_World$_init_$lambda$_0_0__init_0(var_1, var_0);
    return var_1;
}
function i_World$_init_$lambda$_0_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0151 = var$1;
}
function i_World$_init_$lambda$_0_0_get(var$0, var$1) {
    return i_World$_init_$lambda$_0_0_get0(var$0, var$1);
}
function i_World$_init_$lambda$_0_0_get0(var$0, var$1) {
    return i_World_lambda$new$0(var$0.$_0151, var$1);
}
function iaag_PixmapIO$CIM() {
    jl_Object.call(this);
}
var iaag_PixmapIO$CIM_writeBuffer = null;
var iaag_PixmapIO$CIM_readBuffer = null;
function iaag_PixmapIO$CIM_$callClinit() {
    iaag_PixmapIO$CIM_$callClinit = $rt_eraseClinit(iaag_PixmapIO$CIM);
    iaag_PixmapIO$CIM__clinit_();
}
function iaag_PixmapIO$CIM_read($file) {
    var $in, $width, $height, $format, $pixmap, $pixelBuf, var$8, var$9, var$10, $e, var$12, $$je;
    iaag_PixmapIO$CIM_$callClinit();
    $in = null;
    a: {
        b: {
            try {
                $in = ji_DataInputStream__init_(juz_InflaterInputStream__init_(ji_BufferedInputStream__init_($file.$read2())));
                $width = ji_DataInputStream_readInt($in);
                $height = ji_DataInputStream_readInt($in);
                $format = iaag_Pixmap$Format_fromGdx2DPixmapFormat(ji_DataInputStream_readInt($in));
                $pixmap = iaag_Pixmap__init_($width, $height, $format);
                $pixelBuf = $pixmap.$getPixels();
                $pixelBuf.$position(0);
                $pixelBuf.$limit0(jn_Buffer_capacity($pixelBuf));
                var$8 = iaag_PixmapIO$CIM_readBuffer;
                jl_Object_monitorEnterSync(var$8);
                c: {
                    try {
                        while (true) {
                            var$9 = ji_DataInputStream_read($in, iaag_PixmapIO$CIM_readBuffer);
                            if (var$9 <= 0)
                                break;
                            $pixelBuf.$put3(iaag_PixmapIO$CIM_readBuffer, 0, var$9);
                        }
                        jl_Object_monitorExitSync(var$8);
                        break c;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$10 = $$je;

                    }
                    jl_Object_monitorExitSync(var$8);
                    $rt_throw(var$10);
                }
                $pixelBuf.$position(0);
                $pixelBuf.$limit0(jn_Buffer_capacity($pixelBuf));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                    break b;
                } else{
                    var$10 = $$je;
                    break a;
                }
            }
            iaaui_Streams_closeQuietly($in);
            return $pixmap;
        }
        try {
            $rt_throw(iaau_ArcRuntimeException__init_(jl_StringBuilder__init_().$append($rt_s(1363)).$append1($file).$append($rt_s(48)).$toString(), $e));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$10 = $$je;

        }
    }
    iaaui_Streams_closeQuietly(var$12);
    $rt_throw(var$10);
}
function iaag_PixmapIO$CIM__clinit_() {
    iaag_PixmapIO$CIM_writeBuffer = $rt_createByteArray(32000);
    iaag_PixmapIO$CIM_readBuffer = $rt_createByteArray(32000);
}
function jur_AbstractCharClass$LazySpecialsBlock() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazySpecialsBlock__init_() {
    var var_0 = new jur_AbstractCharClass$LazySpecialsBlock();
    jur_AbstractCharClass$LazySpecialsBlock__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazySpecialsBlock__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazySpecialsBlock_computeValue($this) {
    return jur_CharClass__init_().$add0(65279, 65279).$add0(65520, 65533);
}
function i_UI$lambda$null$2$lambda$_17_0() {
    jl_Object.call(this);
    this.$_0152 = null;
}
function i_UI$lambda$null$2$lambda$_17_0__init_(var_0) {
    var var_1 = new i_UI$lambda$null$2$lambda$_17_0();
    i_UI$lambda$null$2$lambda$_17_0__init_0(var_1, var_0);
    return var_1;
}
function i_UI$lambda$null$2$lambda$_17_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0152 = var$1;
}
function i_UI$lambda$null$2$lambda$_17_0_get(var$0) {
    return i_UI$lambda$null$2$lambda$_17_0_get0(var$0);
}
function i_UI$lambda$null$2$lambda$_17_0_get0(var$0) {
    return i_UI_lambda$null$1(var$0.$_0152);
}
function iaau_Time$_clinit_$lambda$_20_0() {
    jl_Object.call(this);
}
function iaau_Time$_clinit_$lambda$_20_0__init_() {
    var var_0 = new iaau_Time$_clinit_$lambda$_20_0();
    iaau_Time$_clinit_$lambda$_20_0__init_0(var_0);
    return var_0;
}
function iaau_Time$_clinit_$lambda$_20_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function iaau_Time$_clinit_$lambda$_20_0_get(var$0) {
    return iaau_Time_lambda$static$0();
}
function iaaus_SerializationException() {
    jl_RuntimeException.call(this);
}
function iaaus_SerializationException__init_0(var_0, var_1) {
    var var_2 = new iaaus_SerializationException();
    iaaus_SerializationException__init_3(var_2, var_0, var_1);
    return var_2;
}
function iaaus_SerializationException__init_1(var_0) {
    var var_1 = new iaaus_SerializationException();
    iaaus_SerializationException__init_2(var_1, var_0);
    return var_1;
}
function iaaus_SerializationException__init_(var_0) {
    var var_1 = new iaaus_SerializationException();
    iaaus_SerializationException__init_4(var_1, var_0);
    return var_1;
}
function iaaus_SerializationException__init_3($this, $message, $cause) {
    jl_RuntimeException__init_3($this, $message, $cause);
}
function iaaus_SerializationException__init_2($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
function iaaus_SerializationException__init_4($this, $cause) {
    jl_RuntimeException__init_3($this, $rt_s(58), $cause);
}
function it_Phases$5$lambda$null$13$lambda$_9_0() {
    jl_Object.call(this);
}
function it_Phases$5$lambda$null$13$lambda$_9_0__init_() {
    var var_0 = new it_Phases$5$lambda$null$13$lambda$_9_0();
    it_Phases$5$lambda$null$13$lambda$_9_0__init_0(var_0);
    return var_0;
}
function it_Phases$5$lambda$null$13$lambda$_9_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function it_Phases$5$lambda$null$13$lambda$_9_0_get(var$0, var$1) {
    it_Phases$5_lambda$null$12(var$1);
}
function iaase_FocusListener$FocusEvent() {
    var a = this; iaase_SceneEvent.call(a);
    a.$focused = 0;
    a.$type9 = null;
    a.$relatedActor0 = null;
}
function iaase_FocusListener$FocusEvent__init_() {
    var var_0 = new iaase_FocusListener$FocusEvent();
    iaase_FocusListener$FocusEvent__init_0(var_0);
    return var_0;
}
function iaase_FocusListener$FocusEvent__init_0($this) {
    iaase_SceneEvent__init_0($this);
}
function iaase_FocusListener$FocusEvent_reset($this) {
    iaase_SceneEvent_reset($this);
    $this.$relatedActor0 = null;
}
function iaat_TypingGlyph() {
    var a = this; iaagg_BitmapFont$Glyph.call(a);
    a.$run2 = null;
    a.$internalIndex = 0;
    a.$color11 = null;
}
function iaat_TypingGlyph__init_() {
    var var_0 = new iaat_TypingGlyph();
    iaat_TypingGlyph__init_0(var_0);
    return var_0;
}
function iaat_TypingGlyph__init_0($this) {
    iaagg_BitmapFont$Glyph__init_0($this);
    $this.$run2 = null;
    $this.$internalIndex = (-1);
    $this.$color11 = null;
}
function iaat_TypingGlyph_set($this, $from) {
    $this.$id0 = $from.$id0;
    $this.$srcX = $from.$srcX;
    $this.$srcY = $from.$srcY;
    $this.$width6 = $from.$width6;
    $this.$height10 = $from.$height10;
    $this.$u0 = $from.$u0;
    $this.$v0 = $from.$v0;
    $this.$u20 = $from.$u20;
    $this.$v20 = $from.$v20;
    $this.$xoffset = $from.$xoffset;
    $this.$yoffset = $from.$yoffset;
    $this.$xadvance = $from.$xadvance;
    $this.$kerning = $from.$kerning;
    $this.$fixedWidth = $from.$fixedWidth;
    $this.$run2 = null;
    $this.$internalIndex = (-1);
    $this.$color11 = null;
}
function iaat_TypingGlyph_reset($this) {
    $this.$id0 = 0;
    $this.$srcX = 0;
    $this.$srcY = 0;
    $this.$width6 = 0;
    $this.$height10 = 0;
    $this.$u0 = 0.0;
    $this.$v0 = 0.0;
    $this.$u20 = 0.0;
    $this.$v20 = 0.0;
    $this.$xoffset = 0;
    $this.$yoffset = 0;
    $this.$xadvance = 0;
    $this.$kerning = null;
    $this.$fixedWidth = 0;
    $this.$run2 = null;
    $this.$internalIndex = (-1);
    $this.$color11 = null;
}
function it_Phases$lambda$static$24$lambda$_43_0() {
    jl_Object.call(this);
    this.$_0153 = 0.0;
}
function it_Phases$lambda$static$24$lambda$_43_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$static$24$lambda$_43_0();
    it_Phases$lambda$static$24$lambda$_43_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$static$24$lambda$_43_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0153 = var$1;
}
function it_Phases$lambda$static$24$lambda$_43_0_get(var$0, var$1) {
    it_Phases_lambda$null$23(var$0.$_0153, var$1);
}
function it_Phases$lambda$static$15$lambda$_52_0() {
    jl_Object.call(this);
    this.$_0154 = 0.0;
}
function it_Phases$lambda$static$15$lambda$_52_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$static$15$lambda$_52_0();
    it_Phases$lambda$static$15$lambda$_52_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$static$15$lambda$_52_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0154 = var$1;
}
function it_Phases$lambda$static$15$lambda$_52_0_get(var$0, var$1) {
    it_Phases_lambda$null$14(var$0.$_0154, var$1);
}
function iaass_TextureRegionDrawable() {
    var a = this; iaass_BaseDrawable.call(a);
    a.$region2 = null;
    a.$tint1 = null;
}
function iaass_TextureRegionDrawable__init_(var_0) {
    var var_1 = new iaass_TextureRegionDrawable();
    iaass_TextureRegionDrawable__init_0(var_1, var_0);
    return var_1;
}
function iaass_TextureRegionDrawable__init_0($this, $region) {
    iaass_BaseDrawable__init_0($this);
    $this.$tint1 = iaag_Color__init_5(1.0, 1.0, 1.0);
    $this.$setRegion($region);
}
function iaass_TextureRegionDrawable_draw($this, $x, $y, $width, $height) {
    iaau_Tmp_$callClinit();
    iaagg_Draw_color3(iaau_Tmp_c1.$set($this.$tint1).$mul(iaagg_Draw_getColor()).$toFloatBits());
    iaagg_Draw_rect3($this.$region2, $x + $width / 2.0, $y + $height / 2.0, $width, $height);
}
function iaass_TextureRegionDrawable_draw0($this, $x, $y, $originX, $originY, $width, $height, $scaleX, $scaleY, $rotation) {
    iaau_Tmp_$callClinit();
    iaagg_Draw_color3(iaau_Tmp_c1.$set($this.$tint1).$mul(iaagg_Draw_getColor()).$toFloatBits());
    iaagg_Draw_rect4($this.$region2, $x + $width / 2.0, $y + $height / 2.0, $width * $scaleX, $height * $scaleY, $originX, $originY, $rotation);
}
function iaass_TextureRegionDrawable_getRegion($this) {
    return $this.$region2;
}
function iaass_TextureRegionDrawable_setRegion($this, $region) {
    $this.$region2 = $region;
    $this.$setMinWidth(iaasul_Scl_scl0($region.$getWidth0()));
    $this.$setMinHeight(iaasul_Scl_scl0($region.$getHeight0()));
}
function iaass_TextureRegionDrawable_tint($this, $r, $g, $b, $a) {
    iaau_Tmp_$callClinit();
    return $this.$tint2(iaau_Tmp_c1.$set3($r, $g, $b, $a));
}
function iaass_TextureRegionDrawable_tint0($this, $tint) {
    var $drawable;
    $drawable = iaass_TextureRegionDrawable__init_($this.$region2);
    $drawable.$tint1.$set($tint);
    return $drawable;
}
function it_Phases$5$lambda$null$7$lambda$_15_0() {
    var a = this; jl_Object.call(a);
    a.$_0155 = 0;
    a.$_157 = 0.0;
    a.$_215 = null;
}
function it_Phases$5$lambda$null$7$lambda$_15_0__init_(var_0, var_1, var_2) {
    var var_3 = new it_Phases$5$lambda$null$7$lambda$_15_0();
    it_Phases$5$lambda$null$7$lambda$_15_0__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function it_Phases$5$lambda$null$7$lambda$_15_0__init_0(var$0, var$1, var$2, var$3) {
    jl_Object__init_0(var$0);
    var$0.$_0155 = var$1;
    var$0.$_157 = var$2;
    var$0.$_215 = var$3;
}
function it_Phases$5$lambda$null$7$lambda$_15_0_run(var$0) {
    it_Phases$5_lambda$null$6(var$0.$_0155, var$0.$_157, var$0.$_215);
}
function iaamg_Ellipse() {
    var a = this; jl_Object.call(a);
    a.$x15 = 0.0;
    a.$y14 = 0.0;
    a.$width16 = 0.0;
    a.$height15 = 0.0;
}
function iaamg_Ellipse__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new iaamg_Ellipse();
    iaamg_Ellipse__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function iaamg_Ellipse__init_0($this, $x, $y, $width, $height) {
    jl_Object__init_0($this);
    $this.$x15 = $x;
    $this.$y14 = $y;
    $this.$width16 = $width;
    $this.$height15 = $height;
}
function it_Phases$lambda$static$42$lambda$_25_0() {
    jl_Object.call(this);
    this.$_0156 = 0.0;
}
function it_Phases$lambda$static$42$lambda$_25_0__init_(var_0) {
    var var_1 = new it_Phases$lambda$static$42$lambda$_25_0();
    it_Phases$lambda$static$42$lambda$_25_0__init_0(var_1, var_0);
    return var_1;
}
function it_Phases$lambda$static$42$lambda$_25_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_0156 = var$1;
}
function it_Phases$lambda$static$42$lambda$_25_0_run(var$0) {
    it_Phases_lambda$null$41(var$0.$_0156);
}
function it_Phases$lambda$static$51$lambda$_16_0() {
    var a = this; jl_Object.call(a);
    a.$_0157 = 0.0;
    a.$_158 = 0.0;
}
function it_Phases$lambda$static$51$lambda$_16_0__init_(var_0, var_1) {
    var var_2 = new it_Phases$lambda$static$51$lambda$_16_0();
    it_Phases$lambda$static$51$lambda$_16_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function it_Phases$lambda$static$51$lambda$_16_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_0157 = var$1;
    var$0.$_158 = var$2;
}
function it_Phases$lambda$static$51$lambda$_16_0_run(var$0) {
    it_Phases_lambda$null$50(var$0.$_0157, var$0.$_158);
}
$rt_packages([-1, "java", 0, "util", 1, "regex", 0, "nio", 3, "charset", 0, "io", 0, "lang", 6, "reflect", -1, "org", 8, "teavm", 9, "interop", 9, "classlib", 11, "impl", 12, "unicode", 9, "runtime", -1, "io", 15, "anuke", 16, "arc", 17, "input", 17, "recorder", 17, "util", 20, "serialization", 17, "maps", 22, "objects", 17, "func", 17, "files", 17, "typelabel", 26, "effects", 17, "math", 28, "geom", 17, "collection", 17, "graphics", 31, "g2d", 31, "glutils", 17, "backends", 34, "teavm", 17, "scene", 36, "ui",
37, "layout", 36, "style", 36, "event", -1, "inferno", 41, "world", 41, "graphics", 41, "type", 41, "entity"
]);
$rt_metadata([jl_Object, "Object", 6, 0, [], 0, 3, 0, ["$isEmptyMonitor", function() { return jl_Object_isEmptyMonitor(this); }, "$deleteMonitor", function() { jl_Object_deleteMonitor(this); }, "$getClass0", function() { return jl_Object_getClass(this); }, "$hashCode", function() { return jl_Object_hashCode(this); }, "$equals", function(var_1) { return jl_Object_equals(this, var_1); }, "$toString", function() { return jl_Object_toString(this); }, "$identity", function() { return jl_Object_identity(this); },
"$clone", function() { return jl_Object_clone(this); }],
jur_AbstractCharClass$LazyCharClass, 0, jl_Object, [], 1, 0, 0, ["$getValue0", function(var_1) { return jur_AbstractCharClass$LazyCharClass_getValue(this, var_1); }],
jur_AbstractCharClass$LazyBlank, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyBlank_computeValue(this); }],
jur_AbstractCharClass$LazyCntrl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyCntrl_computeValue(this); }],
iaasu_Layout, 0, jl_Object, [], 3, 3, 0, 0,
iaas_Element, "Element", 36, jl_Object, [iaasu_Layout], 0, 3, 0, ["$act0", function(var_1) { iaas_Element_act(this, var_1); }, "$updateVisibility", function() { iaas_Element_updateVisibility(this); }, "$fire", function(var_1) { return iaas_Element_fire(this, var_1); }, "$notify", function(var_1, var_2) { return iaas_Element_notify(this, var_1, var_2); }, "$hit", function(var_1, var_2, var_3) { return iaas_Element_hit(this, var_1, var_2, var_3); }, "$getScene", function() { return iaas_Element_getScene(this);
}, "$setScene", function(var_1) { iaas_Element_setScene(this, var_1); }, "$getParent", function() { return iaas_Element_getParent(this); }, "$setParent", function(var_1) { iaas_Element_setParent(this, var_1); }, "$getTouchable", function() { return iaas_Element_getTouchable(this); }, "$touchable0", function(var_1) { iaas_Element_touchable(this, var_1); }, "$isVisible", function() { return iaas_Element_isVisible(this); }, "$visible0", function(var_1) { iaas_Element_visible(this, var_1); }, "$getX", function()
{ return iaas_Element_getX(this); }, "$getY", function() { return iaas_Element_getY(this); }, "$getWidth", function() { return iaas_Element_getWidth(this); }, "$setWidth", function(var_1) { iaas_Element_setWidth(this, var_1); }, "$getHeight", function() { return iaas_Element_getHeight(this); }, "$setHeight", function(var_1) { iaas_Element_setHeight(this, var_1); }, "$positionChanged", function() { iaas_Element_positionChanged(this); }, "$sizeChanged", function() { iaas_Element_sizeChanged(this); }, "$setSize",
function(var_1, var_2) { iaas_Element_setSize(this, var_1, var_2); }, "$setBounds0", function(var_1, var_2, var_3, var_4) { iaas_Element_setBounds(this, var_1, var_2, var_3, var_4); }, "$getOriginX", function() { return iaas_Element_getOriginX(this); }, "$getOriginY", function() { return iaas_Element_getOriginY(this); }, "$getScaleX", function() { return iaas_Element_getScaleX(this); }, "$getScaleY", function() { return iaas_Element_getScaleY(this); }, "$getRotation", function() { return iaas_Element_getRotation(this);
}, "$getColor", function() { return iaas_Element_getColor(this); }, "$setColor", function(var_1) { iaas_Element_setColor(this, var_1); }, "$clipBegin", function(var_1, var_2, var_3, var_4) { return iaas_Element_clipBegin(this, var_1, var_2, var_3, var_4); }, "$clipEnd", function() { iaas_Element_clipEnd(this); }, "$parentToLocalCoordinates", function(var_1) { return iaas_Element_parentToLocalCoordinates(this, var_1); }, "$getMinWidth", function() { return iaas_Element_getMinWidth(this); }, "$getMinHeight", function()
{ return iaas_Element_getMinHeight(this); }, "$getPrefWidth", function() { return iaas_Element_getPrefWidth(this); }, "$getPrefHeight", function() { return iaas_Element_getPrefHeight(this); }, "$getMaxWidth", function() { return iaas_Element_getMaxWidth(this); }, "$getMaxHeight", function() { return iaas_Element_getMaxHeight(this); }, "$validate", function() { iaas_Element_validate(this); }, "$invalidate", function() { iaas_Element_invalidate(this); }, "$invalidateHierarchy", function() { iaas_Element_invalidateHierarchy(this);
}, "$layout", function() { iaas_Element_layout(this); }, "$getTranslation", function() { return iaas_Element_getTranslation(this); }, "$update4", function(var_1) { return iaas_Element_update(this, var_1); }, "$visible3", function(var_1) { return iaas_Element_visible0(this, var_1); }, "$toString", function() { return iaas_Element_toString(this); }],
iaasu_Cullable, 0, jl_Object, [], 3, 3, 0, 0,
iaas_Group, 0, iaas_Element, [iaasu_Cullable], 1, 3, iaas_Group_$callClinit, ["$act0", function(var_1) { iaas_Group_act(this, var_1); }, "$draw", function() { iaas_Group_draw(this); }, "$drawChildren", function() { iaas_Group_drawChildren(this); }, "$computeTransform", function() { return iaas_Group_computeTransform(this); }, "$applyTransform", function(var_1) { iaas_Group_applyTransform(this, var_1); }, "$resetTransform", function() { iaas_Group_resetTransform(this); }, "$hit", function(var_1, var_2, var_3)
{ return iaas_Group_hit(this, var_1, var_2, var_3); }, "$childrenChanged", function() { iaas_Group_childrenChanged(this); }, "$addChild0", function(var_1) { iaas_Group_addChild(this, var_1); }, "$removeChild", function(var_1, var_2) { return iaas_Group_removeChild(this, var_1, var_2); }, "$setScene", function(var_1) { iaas_Group_setScene(this, var_1); }, "$getChildren", function() { return iaas_Group_getChildren(this); }, "$isTransform", function() { return iaas_Group_isTransform(this); }, "$setTransform", function(var_1)
{ iaas_Group_setTransform(this, var_1); }, "$toString", function() { return iaas_Group_toString(this); }, "$toString0", function(var_1, var_2) { iaas_Group_toString0(this, var_1, var_2); }],
iaasul_WidgetGroup, 0, iaas_Group, [iaasu_Layout], 0, 3, 0, ["$validate", function() { iaasul_WidgetGroup_validate(this); }, "$invalidate", function() { iaasul_WidgetGroup_invalidate(this); }, "$invalidateHierarchy", function() { iaasul_WidgetGroup_invalidateHierarchy(this); }, "$childrenChanged", function() { iaasul_WidgetGroup_childrenChanged(this); }, "$sizeChanged", function() { iaasul_WidgetGroup_sizeChanged(this); }, "$setFillParent", function(var_1) { iaasul_WidgetGroup_setFillParent(this, var_1); },
"$draw", function() { iaasul_WidgetGroup_draw(this); }],
jl_Runnable, "Runnable", 6, jl_Object, [], 3, 3, 0, 0,
it_Phases$lambda$null$26$lambda$_41_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$26$lambda$_41_0_run(this); }],
iaabt_TeaFileLoader$TaskHandler, 0, jl_Object, [], 3, 0, 0, 0,
jl_AutoCloseable, 0, jl_Object, [], 3, 3, 0, 0,
ji_Closeable, 0, jl_Object, [jl_AutoCloseable], 3, 3, 0, 0,
ji_InputStream, 0, jl_Object, [ji_Closeable], 1, 3, 0, ["$read0", function(var_1) { return ji_InputStream_read(this, var_1); }],
ji_FilterInputStream, 0, ji_InputStream, [], 0, 3, 0, ["$read0", function(var_1) { return ji_FilterInputStream_read(this, var_1); }],
ji_BufferedInputStream, 0, ji_FilterInputStream, [], 0, 3, 0, ["$available", function() { return ji_BufferedInputStream_available(this); }, "$fillbuf", function(var_1, var_2) { return ji_BufferedInputStream_fillbuf(this, var_1, var_2); }, "$read4", function() { return ji_BufferedInputStream_read(this); }, "$read", function(var_1, var_2, var_3) { return ji_BufferedInputStream_read0(this, var_1, var_2, var_3); }],
cjj_Inflate, 0, jl_Object, [], 4, 0, cjj_Inflate_$callClinit, ["$inflateReset", function() { return cjj_Inflate_inflateReset(this); }, "$inflateEnd", function() { return cjj_Inflate_inflateEnd(this); }, "$inflateInit", function(var_1) { return cjj_Inflate_inflateInit(this, var_1); }, "$inflate0", function(var_1) { return cjj_Inflate_inflate(this, var_1); }, "$readBytes", function(var_1, var_2, var_3) { return cjj_Inflate_readBytes(this, var_1, var_2, var_3); }, "$readString", function(var_1, var_2) { return cjj_Inflate_readString(this,
var_1, var_2); }, "$readBytes0", function(var_1, var_2) { return cjj_Inflate_readBytes0(this, var_1, var_2); }, "$checksum", function(var_1, var_2) { cjj_Inflate_checksum(this, var_1, var_2); }],
it_Phases$lambda$null$20$lambda$_47_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$20$lambda$_47_0_run(this); }],
iaaf_Floatc, 0, jl_Object, [], 3, 3, 0, 0,
it_Phases$lambda$null$22$lambda$_45_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$lambda$null$22$lambda$_45_0_get(this, var_1); }],
iaau_Disposable, 0, jl_Object, [], 3, 3, 0, 0,
iaagg_VertexData, 0, jl_Object, [iaau_Disposable], 3, 3, 0, 0,
iaagg_VertexArray, 0, jl_Object, [iaagg_VertexData], 0, 3, 0, ["$getNumVertices", function() { return iaagg_VertexArray_getNumVertices(this); }, "$getBuffer0", function() { return iaagg_VertexArray_getBuffer(this); }, "$bufferChanged", function() { iaagg_VertexArray_bufferChanged(this); }, "$setVertices1", function(var_1, var_2, var_3) { iaagg_VertexArray_setVertices(this, var_1, var_2, var_3); }, "$bind2", function(var_1, var_2) { iaagg_VertexArray_bind(this, var_1, var_2); }, "$unbind1", function(var_1, var_2)
{ iaagg_VertexArray_unbind(this, var_1, var_2); }, "$dispose", function() { iaagg_VertexArray_dispose(this); }],
jnci_BufferedEncoder$Controller, 0, jl_Object, [], 0, 3, 0, ["$hasMoreInput", function() { return jnci_BufferedEncoder$Controller_hasMoreInput(this); }, "$hasMoreOutput", function(var_1) { return jnci_BufferedEncoder$Controller_hasMoreOutput(this, var_1); }, "$setInPosition", function(var_1) { jnci_BufferedEncoder$Controller_setInPosition(this, var_1); }, "$setOutPosition", function(var_1) { jnci_BufferedEncoder$Controller_setOutPosition(this, var_1); }],
it_Phases$lambda$null$17$lambda$_50_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$17$lambda$_50_0_run(this); }],
it_Phases$lambda$null$37$lambda$_30_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$37$lambda$_30_0_run(this); }],
iaabt_TeaFileLoader$Task, 0, jl_Object, [], 3, 0, 0, 0,
otj_JSObject, 0, jl_Object, [], 3, 3, 0, 0,
otjde_EventListener, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0,
iaabt_TeaFileLoader$LoadImageTask, 0, jl_Object, [iaabt_TeaFileLoader$Task, otjde_EventListener], 0, 0, 0, ["$run1", function(var_1) { iaabt_TeaFileLoader$LoadImageTask_run(this, var_1); }, "$handleEvent", function(var_1) { iaabt_TeaFileLoader$LoadImageTask_handleEvent(this, var_1); }, "$handleEvent$exported$0", function(var_1) { return iaabt_TeaFileLoader$LoadImageTask_handleEvent$exported$0(this, var_1); }],
ji_Serializable, 0, jl_Object, [], 3, 3, 0, 0,
jl_Number, 0, jl_Object, [ji_Serializable], 1, 3, 0, 0,
jl_Comparable, 0, jl_Object, [], 3, 3, 0, 0,
jl_Integer, 0, jl_Number, [jl_Comparable], 0, 3, jl_Integer_$callClinit, ["$intValue", function() { return jl_Integer_intValue(this); }, "$toString", function() { return jl_Integer_toString1(this); }, "$hashCode", function() { return jl_Integer_hashCode(this); }, "$equals", function(var_1) { return jl_Integer_equals(this, var_1); }],
iaagg_GLFrameBuffer$GLFrameBufferBuilder, 0, jl_Object, [], 1, 3, 0, ["$addColorTextureAttachment", function(var_1, var_2, var_3) { return iaagg_GLFrameBuffer$GLFrameBufferBuilder_addColorTextureAttachment(this, var_1, var_2, var_3); }, "$addBasicColorTextureAttachment", function(var_1) { return iaagg_GLFrameBuffer$GLFrameBufferBuilder_addBasicColorTextureAttachment(this, var_1); }, "$addDepthRenderBuffer", function(var_1) { return iaagg_GLFrameBuffer$GLFrameBufferBuilder_addDepthRenderBuffer(this, var_1); },
"$addStencilRenderBuffer", function(var_1) { return iaagg_GLFrameBuffer$GLFrameBufferBuilder_addStencilRenderBuffer(this, var_1); }, "$addBasicDepthRenderBuffer", function() { return iaagg_GLFrameBuffer$GLFrameBufferBuilder_addBasicDepthRenderBuffer(this); }, "$addBasicStencilRenderBuffer", function() { return iaagg_GLFrameBuffer$GLFrameBufferBuilder_addBasicStencilRenderBuffer(this); }],
iaamg_Geometry, 0, jl_Object, [], 4, 3, iaamg_Geometry_$callClinit, 0,
it_Phases$1$lambda$$18$lambda$_6_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$1$lambda$$18$lambda$_6_0_run(this); }],
it_Phases$lambda$null$46$lambda$_21_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$46$lambda$_21_0_run(this); }],
it_Phases$5$lambda$null$2$lambda$_20_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$5$lambda$null$2$lambda$_20_0_run(this); }],
jur_AbstractCharClass$LazyAlpha, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyAlpha_computeValue(this); }],
iaaf_Prov, "Prov", 24, jl_Object, [], 3, 3, 0, 0,
iaasul_Table$_clinit_$lambda$_113_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaasul_Table$_clinit_$lambda$_113_0_get(this); }, "$get3", function() { return iaasul_Table$_clinit_$lambda$_113_0_get0(this); }],
it_Phases$lambda$null$57$lambda$_10_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$lambda$null$57$lambda$_10_0_get(this, var_1); }],
jur_AbstractCharClass$LazyWord, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyWord_computeValue(this); }],
jur_AbstractCharClass$LazyNonWord, 0, jur_AbstractCharClass$LazyWord, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyNonWord_computeValue(this); }],
it_Phases$3$lambda$null$22$lambda$_10_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$3$lambda$null$22$lambda$_10_0_get(this, var_1); }],
it_Phases$3$lambda$null$20$lambda$_12_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$3$lambda$null$20$lambda$_12_0_get(this, var_1); }],
jur_AbstractSet, 0, jl_Object, [], 1, 0, jur_AbstractSet_$callClinit, ["$find0", function(var_1, var_2, var_3) { return jur_AbstractSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_AbstractSet_findBack(this, var_1, var_2, var_3, var_4); }, "$setType", function(var_1) { jur_AbstractSet_setType(this, var_1); }, "$getType", function() { return jur_AbstractSet_getType(this); }, "$getQualifiedName", function() { return jur_AbstractSet_getQualifiedName(this); },
"$toString", function() { return jur_AbstractSet_toString(this); }, "$getNext", function() { return jur_AbstractSet_getNext(this); }, "$setNext", function(var_1) { jur_AbstractSet_setNext(this, var_1); }, "$first", function(var_1) { return jur_AbstractSet_first(this, var_1); }, "$processBackRefReplacement", function() { return jur_AbstractSet_processBackRefReplacement(this); }, "$processSecondPass", function() { jur_AbstractSet_processSecondPass(this); }],
jur_LeafSet, 0, jur_AbstractSet, [], 1, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_LeafSet_matches(this, var_1, var_2, var_3); }, "$charCount0", function() { return jur_LeafSet_charCount(this); }, "$hasConsumed", function(var_1) { return jur_LeafSet_hasConsumed(this, var_1); }]]);
$rt_metadata([jur_CISequenceSet, "CISequenceSet", 2, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_CISequenceSet_accepts(this, var_1, var_2); }, "$getName", function() { return jur_CISequenceSet_getName(this); }],
iaag_Color, "Color", 31, jl_Object, [], 0, 3, iaag_Color_$callClinit, ["$set", function(var_1) { return iaag_Color_set(this, var_1); }, "$mul", function(var_1) { return iaag_Color_mul(this, var_1); }, "$mul2", function(var_1) { return iaag_Color_mul0(this, var_1); }, "$clamp", function() { return iaag_Color_clamp(this); }, "$set3", function(var_1, var_2, var_3, var_4) { return iaag_Color_set0(this, var_1, var_2, var_3, var_4); }, "$mul1", function(var_1, var_2, var_3, var_4) { return iaag_Color_mul1(this, var_1,
var_2, var_3, var_4); }, "$lerp", function(var_1, var_2) { return iaag_Color_lerp(this, var_1, var_2); }, "$shiftHue", function(var_1) { return iaag_Color_shiftHue(this, var_1); }, "$equals", function(var_1) { return iaag_Color_equals(this, var_1); }, "$toFloatBits", function() { return iaag_Color_toFloatBits(this); }, "$toIntBits", function() { return iaag_Color_toIntBits(this); }, "$toString", function() { return iaag_Color_toString(this); }, "$toString3", function(var_1) { iaag_Color_toString0(this, var_1);
}, "$fromHsv0", function(var_1, var_2, var_3) { return iaag_Color_fromHsv(this, var_1, var_2, var_3); }, "$fromHsv", function(var_1) { return iaag_Color_fromHsv0(this, var_1); }, "$toHsv", function(var_1) { return iaag_Color_toHsv(this, var_1); }, "$cpy", function() { return iaag_Color_cpy(this); }],
jl_CharSequence, "CharSequence", 6, jl_Object, [], 3, 3, 0, 0,
jl_Throwable, 0, jl_Object, [], 0, 3, 0, ["$fillInStackTrace", function() { return jl_Throwable_fillInStackTrace(this); }, "$getMessage", function() { return jl_Throwable_getMessage(this); }],
jl_Error, 0, jl_Throwable, [], 0, 3, 0, 0,
jl_LinkageError, 0, jl_Error, [], 0, 3, 0, 0,
iaau_Strings, 0, jl_Object, [], 0, 3, iaau_Strings_$callClinit, 0,
iaaf_Floatc2, 0, jl_Object, [], 3, 3, 0, 0,
it_Fx$lambda$static$1$lambda$_30_0, 0, jl_Object, [iaaf_Floatc2], 0, 3, 0, ["$get56", function(var_1, var_2) { it_Fx$lambda$static$1$lambda$_30_0_get(this, var_1, var_2); }],
jur_AbstractCharClass$LazyCategory, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyCategory_computeValue(this); }],
iaac_LongArray, 0, jl_Object, [], 0, 3, 0, 0,
it_Player$onDeath$lambda$_4_0, "Player$onDeath$lambda$_4_0", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Player$onDeath$lambda$_4_0_run(this); }],
it_Phases$lambda$null$40$lambda$_27_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$40$lambda$_27_0_run(this); }],
iaat_TypingListener, 0, jl_Object, [], 3, 3, 0, ["$end", function() { iaat_TypingListener_end(this); }, "$replaceVariable", function(var_1) { return iaat_TypingListener_replaceVariable(this, var_1); }, "$onChar", function(var_1) { iaat_TypingListener_onChar(this, var_1); }],
iaai_InputDevice, "InputDevice", 18, jl_Object, [], 1, 3, 0, 0,
jur_FSet, "FSet", 2, jur_AbstractSet, [], 0, 0, jur_FSet_$callClinit, ["$matches", function(var_1, var_2, var_3) { return jur_FSet_matches(this, var_1, var_2, var_3); }, "$getGroupIndex", function() { return jur_FSet_getGroupIndex(this); }, "$getName", function() { return jur_FSet_getName(this); }, "$hasConsumed", function(var_1) { return jur_FSet_hasConsumed(this, var_1); }],
jur_BehindFSet, "BehindFSet", 2, jur_FSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_BehindFSet_matches(this, var_1, var_2, var_3); }, "$getName", function() { return jur_BehindFSet_getName(this); }],
it_Phases$1$lambda$null$17$lambda$_7_2, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$1$lambda$null$17$lambda$_7_2_run(this); }],
it_Phases$3$lambda$null$11$lambda$_21_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$3$lambda$null$11$lambda$_21_0_get(this, var_1); }],
it_Phases$lambda$null$33$lambda$_34_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$33$lambda$_34_0_run(this); }],
it_Phases$1$lambda$null$17$lambda$_7_1, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$1$lambda$null$17$lambda$_7_1_get(this, var_1); }],
it_Phases$Phase, "Phases$Phase", 44, jl_Object, [], 1, 3, it_Phases$Phase_$callClinit, ["$begin", function() { it_Phases$Phase_begin(this); }, "$teleport", function() { it_Phases$Phase_teleport(this); }, "$reset", function() { it_Phases$Phase_reset(this); }],
it_Phases$1$lambda$null$17$lambda$_7_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$1$lambda$null$17$lambda$_7_0_run(this); }],
iaamg_QuadTree, 0, jl_Object, [], 0, 3, iaamg_QuadTree_$callClinit, ["$split0", function() { iaamg_QuadTree_split(this); }, "$insert0", function(var_1) { iaamg_QuadTree_insert(this, var_1); }, "$clear", function() { iaamg_QuadTree_clear(this); }, "$getFittingChild", function(var_1) { return iaamg_QuadTree_getFittingChild(this, var_1); }, "$getIntersect", function(var_1, var_2, var_3, var_4, var_5) { iaamg_QuadTree_getIntersect(this, var_1, var_2, var_3, var_4, var_5); }, "$getIntersect0", function(var_1, var_2)
{ iaamg_QuadTree_getIntersect0(this, var_1, var_2); }],
ji_Flushable, 0, jl_Object, [], 3, 3, 0, 0,
ji_OutputStream, 0, jl_Object, [ji_Closeable, ji_Flushable], 1, 3, 0, ["$write", function(var_1, var_2, var_3) { ji_OutputStream_write(this, var_1, var_2, var_3); }],
ji_ByteArrayOutputStream, 0, ji_OutputStream, [], 0, 3, 0, ["$write0", function(var_1) { ji_ByteArrayOutputStream_write(this, var_1); }, "$write", function(var_1, var_2, var_3) { ji_ByteArrayOutputStream_write0(this, var_1, var_2, var_3); }, "$ensureCapacity", function(var_1) { ji_ByteArrayOutputStream_ensureCapacity(this, var_1); }, "$toByteArray", function() { return ji_ByteArrayOutputStream_toByteArray(this); }],
jur_JointSet, "JointSet", 2, jur_AbstractSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_JointSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_JointSet_setNext(this, var_1); }, "$getName", function() { return jur_JointSet_getName(this); }, "$first", function(var_1) { return jur_JointSet_first(this, var_1); }, "$hasConsumed", function(var_1) { return jur_JointSet_hasConsumed(this, var_1); }, "$processSecondPass", function() { jur_JointSet_processSecondPass(this);
}],
jur_LowHighSurrogateRangeSet, "LowHighSurrogateRangeSet", 2, jur_JointSet, [], 0, 0, 0, ["$setNext", function(var_1) { jur_LowHighSurrogateRangeSet_setNext(this, var_1); }, "$matches", function(var_1, var_2, var_3) { return jur_LowHighSurrogateRangeSet_matches(this, var_1, var_2, var_3); }, "$getName", function() { return jur_LowHighSurrogateRangeSet_getName(this); }],
iaaf_Intc, 0, jl_Object, [], 3, 3, 0, 0,
it_Phases$4$lambda$null$6$lambda$_11_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$4$lambda$null$6$lambda$_11_0_get(this, var_1); }],
jlr_AnnotatedElement, 0, jl_Object, [], 3, 3, 0, 0,
jlr_AccessibleObject, 0, jl_Object, [jlr_AnnotatedElement], 0, 3, 0, 0,
jlr_Member, 0, jl_Object, [], 3, 3, 0, 0,
jlr_Constructor, "Constructor", 7, jlr_AccessibleObject, [jlr_Member], 0, 3, 0, ["$getModifiers0", function() { return jlr_Constructor_getModifiers(this); }, "$getParameterTypes", function() { return jlr_Constructor_getParameterTypes(this); }, "$toString", function() { return jlr_Constructor_toString(this); }, "$newInstance0", function(var_1) { return jlr_Constructor_newInstance(this, var_1); }],
iaagg_GLFrameBuffer$FrameBufferTextureAttachmentSpec, "GLFrameBuffer$FrameBufferTextureAttachmentSpec", 33, jl_Object, [], 0, 3, 0, ["$isColorTexture", function() { return iaagg_GLFrameBuffer$FrameBufferTextureAttachmentSpec_isColorTexture(this); }],
iaa_Settings, 0, jl_Object, [], 0, 3, 0, ["$setSerializer", function(var_1, var_2) { iaa_Settings_setSerializer(this, var_1, var_2); }, "$setAppName", function(var_1) { iaa_Settings_setAppName(this, var_1); }, "$load", function() { iaa_Settings_load(this); }, "$getInt", function(var_1, var_2) { return iaa_Settings_getInt(this, var_1, var_2); }, "$getBool", function(var_1, var_2) { return iaa_Settings_getBool(this, var_1, var_2); }],
iaabt_TeaSettings, 0, iaa_Settings, [], 0, 3, 0, ["$setAppName", function(var_1) { iaabt_TeaSettings_setAppName(this, var_1); }, "$loadValues", function() { iaabt_TeaSettings_loadValues(this); }, "$toObject", function(var_1, var_2) { return iaabt_TeaSettings_toObject(this, var_1, var_2); }],
jur_QuantifierSet, 0, jur_AbstractSet, [], 1, 0, 0, ["$getInnerSet", function() { return jur_QuantifierSet_getInnerSet(this); }, "$first", function(var_1) { return jur_QuantifierSet_first(this, var_1); }, "$hasConsumed", function(var_1) { return jur_QuantifierSet_hasConsumed(this, var_1); }, "$processSecondPass", function() { jur_QuantifierSet_processSecondPass(this); }],
jur_GroupQuantifierSet, "GroupQuantifierSet", 2, jur_QuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_GroupQuantifierSet_matches(this, var_1, var_2, var_3); }, "$getName", function() { return jur_GroupQuantifierSet_getName(this); }],
jur_PosPlusGroupQuantifierSet, "PosPlusGroupQuantifierSet", 2, jur_GroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PosPlusGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
iaaus_XmlReader, 0, jl_Object, [], 0, 3, iaaus_XmlReader_$callClinit, ["$parse0", function(var_1) { return iaaus_XmlReader_parse(this, var_1); }, "$parse1", function(var_1) { return iaaus_XmlReader_parse0(this, var_1); }, "$parse", function(var_1, var_2, var_3) { return iaaus_XmlReader_parse1(this, var_1, var_2, var_3); }, "$open", function(var_1) { iaaus_XmlReader_open(this, var_1); }, "$attribute", function(var_1, var_2) { iaaus_XmlReader_attribute(this, var_1, var_2); }, "$entity", function(var_1) { return iaaus_XmlReader_entity(this,
var_1); }, "$text", function(var_1) { iaaus_XmlReader_text(this, var_1); }, "$close", function() { iaaus_XmlReader_close(this); }],
it_Phases$2$lambda$null$11$lambda$_13_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$2$lambda$null$11$lambda$_13_0_get(this, var_1); }],
jl_AbstractStringBuilder, 0, jl_Object, [ji_Serializable, jl_CharSequence], 0, 0, 0, ["$append7", function(var_1) { return jl_AbstractStringBuilder_append(this, var_1); }, "$insert1", function(var_1, var_2) { return jl_AbstractStringBuilder_insert(this, var_1, var_2); }, "$append18", function(var_1) { return jl_AbstractStringBuilder_append0(this, var_1); }, "$append2", function(var_1, var_2) { return jl_AbstractStringBuilder_append1(this, var_1, var_2); }, "$insert2", function(var_1, var_2, var_3) { return jl_AbstractStringBuilder_insert0(this,
var_1, var_2, var_3); }, "$append19", function(var_1) { return jl_AbstractStringBuilder_append2(this, var_1); }, "$insert3", function(var_1, var_2) { return jl_AbstractStringBuilder_insert1(this, var_1, var_2); }, "$append8", function(var_1) { return jl_AbstractStringBuilder_append3(this, var_1); }, "$insert4", function(var_1, var_2) { return jl_AbstractStringBuilder_insert2(this, var_1, var_2); }, "$append20", function(var_1) { return jl_AbstractStringBuilder_append4(this, var_1); }, "$insert5", function(var_1,
var_2) { return jl_AbstractStringBuilder_insert3(this, var_1, var_2); }, "$ensureCapacity", function(var_1) { jl_AbstractStringBuilder_ensureCapacity(this, var_1); }, "$trimToSize", function() { jl_AbstractStringBuilder_trimToSize(this); }, "$toString", function() { return jl_AbstractStringBuilder_toString(this); }, "$length", function() { return jl_AbstractStringBuilder_length(this); }, "$charAt", function(var_1) { return jl_AbstractStringBuilder_charAt(this, var_1); }, "$append5", function(var_1, var_2, var_3)
{ return jl_AbstractStringBuilder_append5(this, var_1, var_2, var_3); }, "$insert6", function(var_1, var_2, var_3, var_4) { return jl_AbstractStringBuilder_insert4(this, var_1, var_2, var_3, var_4); }, "$append10", function(var_1) { return jl_AbstractStringBuilder_append6(this, var_1); }, "$insert14", function(var_1, var_2) { return jl_AbstractStringBuilder_insert5(this, var_1, var_2); }, "$append6", function(var_1, var_2, var_3) { return jl_AbstractStringBuilder_append7(this, var_1, var_2, var_3); }, "$insert7",
function(var_1, var_2, var_3, var_4) { return jl_AbstractStringBuilder_insert6(this, var_1, var_2, var_3, var_4); }, "$append9", function(var_1) { return jl_AbstractStringBuilder_append8(this, var_1); }, "$subSequence", function(var_1, var_2) { return jl_AbstractStringBuilder_subSequence(this, var_1, var_2); }, "$getChars", function(var_1, var_2, var_3, var_4) { jl_AbstractStringBuilder_getChars(this, var_1, var_2, var_3, var_4); }, "$setLength", function(var_1) { jl_AbstractStringBuilder_setLength(this, var_1);
}, "$deleteCharAt0", function(var_1) { return jl_AbstractStringBuilder_deleteCharAt(this, var_1); }, "$delete1", function(var_1, var_2) { return jl_AbstractStringBuilder_delete(this, var_1, var_2); }, "$insertSpace", function(var_1, var_2) { jl_AbstractStringBuilder_insertSpace(this, var_1, var_2); }, "$indexOf4", function(var_1) { return jl_AbstractStringBuilder_indexOf(this, var_1); }, "$indexOf0", function(var_1, var_2) { return jl_AbstractStringBuilder_indexOf0(this, var_1, var_2); }, "$substring0", function(var_1,
var_2) { return jl_AbstractStringBuilder_substring(this, var_1, var_2); }],
jl_Appendable, 0, jl_Object, [], 3, 3, 0, 0,
jl_StringBuffer, "StringBuffer", 6, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, ["$append23", function(var_1) { return jl_StringBuffer_append(this, var_1); }, "$append16", function(var_1) { return jl_StringBuffer_append0(this, var_1); }, "$append11", function(var_1, var_2, var_3) { return jl_StringBuffer_append1(this, var_1, var_2, var_3); }, "$append17", function(var_1) { return jl_StringBuffer_append2(this, var_1); }, "$append12", function(var_1, var_2, var_3) { return jl_StringBuffer_append3(this,
var_1, var_2, var_3); }, "$append22", function(var_1) { return jl_StringBuffer_append4(this, var_1); }, "$insert9", function(var_1, var_2, var_3, var_4) { return jl_StringBuffer_insert(this, var_1, var_2, var_3, var_4); }, "$insert8", function(var_1, var_2, var_3, var_4) { return jl_StringBuffer_insert0(this, var_1, var_2, var_3, var_4); }, "$insert10", function(var_1, var_2) { return jl_StringBuffer_insert1(this, var_1, var_2); }, "$insert11", function(var_1, var_2) { return jl_StringBuffer_insert2(this, var_1,
var_2); }, "$insert7", function(var_1, var_2, var_3, var_4) { return jl_StringBuffer_insert3(this, var_1, var_2, var_3, var_4); }, "$append6", function(var_1, var_2, var_3) { return jl_StringBuffer_append5(this, var_1, var_2, var_3); }, "$insert6", function(var_1, var_2, var_3, var_4) { return jl_StringBuffer_insert4(this, var_1, var_2, var_3, var_4); }, "$append5", function(var_1, var_2, var_3) { return jl_StringBuffer_append6(this, var_1, var_2, var_3); }, "$charAt", function(var_1) { return jl_StringBuffer_charAt(this,
var_1); }, "$length", function() { return jl_StringBuffer_length(this); }, "$toString", function() { return jl_StringBuffer_toString(this); }, "$ensureCapacity", function(var_1) { jl_StringBuffer_ensureCapacity(this, var_1); }, "$insert4", function(var_1, var_2) { return jl_StringBuffer_insert5(this, var_1, var_2); }, "$insert1", function(var_1, var_2) { return jl_StringBuffer_insert6(this, var_1, var_2); }],
jn_Buffer, 0, jl_Object, [], 1, 3, 0, ["$capacity2", function() { return jn_Buffer_capacity(this); }, "$position2", function() { return jn_Buffer_position(this); }, "$position", function(var_1) { return jn_Buffer_position0(this, var_1); }, "$limit", function() { return jn_Buffer_limit(this); }, "$limit0", function(var_1) { return jn_Buffer_limit0(this, var_1); }, "$clear2", function() { return jn_Buffer_clear(this); }, "$flip", function() { return jn_Buffer_flip(this); }, "$remaining", function() { return jn_Buffer_remaining(this);
}, "$hasRemaining", function() { return jn_Buffer_hasRemaining(this); }],
jur_SpecialToken, 0, jl_Object, [], 1, 0, 0, 0,
jur_AbstractCharClass, 0, jur_SpecialToken, [], 1, 0, jur_AbstractCharClass_$callClinit, ["$getBits", function() { return jur_AbstractCharClass_getBits(this); }, "$getLowHighSurrogates", function() { return jur_AbstractCharClass_getLowHighSurrogates(this); }, "$hasLowHighSurrogates", function() { return jur_AbstractCharClass_hasLowHighSurrogates(this); }, "$mayContainSupplCodepoints2", function() { return jur_AbstractCharClass_mayContainSupplCodepoints(this); }, "$getInstance", function() { return jur_AbstractCharClass_getInstance(this);
}, "$getSurrogates", function() { return jur_AbstractCharClass_getSurrogates(this); }, "$getWithoutSurrogates", function() { return jur_AbstractCharClass_getWithoutSurrogates(this); }, "$hasUCI0", function() { return jur_AbstractCharClass_hasUCI(this); }, "$setNegative", function(var_1) { return jur_AbstractCharClass_setNegative(this, var_1); }, "$isNegative", function() { return jur_AbstractCharClass_isNegative(this); }],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierPart$1", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains(this, var_1); }]]);
$rt_metadata([jur_AbstractCharClass$PredefinedCharacterClasses, 0, jl_Object, [], 4, 0, jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit, ["$getObject", function(var_1) { return jur_AbstractCharClass$PredefinedCharacterClasses_getObject(this, var_1); }],
it_Bullet$Mover, 0, jl_Object, [], 3, 3, 0, 0,
it_Phases$2$lambda$null$1$lambda$_23_0, 0, jl_Object, [it_Bullet$Mover], 0, 3, 0, ["$move2", function(var_1) { return it_Phases$2$lambda$null$1$lambda$_23_0_move(this, var_1); }],
jur_AbstractCharClass$LazyDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyDigit_computeValue(this); }],
jur_AbstractCharClass$LazyJavaLetter, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaLetter_computeValue(this); }],
iaaal_AssetLoader, 0, jl_Object, [], 1, 3, 0, ["$resolve", function(var_1) { return iaaal_AssetLoader_resolve(this, var_1); }],
it_Phases$5$lambda$$17$lambda$_5_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$5$lambda$$17$lambda$_5_0_run(this); }],
iaaui_Streams$OptimizedByteArrayOutputStream, 0, ji_ByteArrayOutputStream, [], 0, 3, 0, 0,
jl_Enum, "Enum", 6, jl_Object, [jl_Comparable, ji_Serializable], 1, 3, 0, ["$name3", function() { return jl_Enum_name(this); }, "$ordinal0", function() { return jl_Enum_ordinal(this); }, "$toString", function() { return jl_Enum_toString(this); }, "$equals", function(var_1) { return jl_Enum_equals(this, var_1); }, "$hashCode", function() { return jl_Enum_hashCode(this); }, "$getDeclaringClass", function() { return jl_Enum_getDeclaringClass(this); }, "$compareTo", function(var_1) { return jl_Enum_compareTo(this,
var_1); }, "$compareTo1", function(var_1) { return jl_Enum_compareTo0(this, var_1); }],
it_Direction, 0, jl_Enum, [], 12, 3, it_Direction_$callClinit, 0,
it_Phases$4$lambda$null$11$lambda$_6_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$4$lambda$null$11$lambda$_6_0_get(this, var_1); }],
iaas_Scene$touchDown$lambda$_20_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Scene$touchDown$lambda$_20_0_get(this); }, "$get7", function() { return iaas_Scene$touchDown$lambda$_20_0_get0(this); }],
iaagg_TextureAtlas$TextureAtlasData, 0, jl_Object, [], 0, 3, 0, 0,
jur_AheadFSet, "AheadFSet", 2, jur_FSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_AheadFSet_matches(this, var_1, var_2, var_3); }, "$getName", function() { return jur_AheadFSet_getName(this); }],
iaasu_Label$_init_$lambda$_0_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { iaasu_Label$_init_$lambda$_0_0_run(this); }],
iaac_IntMap$MapIterator, 0, jl_Object, [], 0, 0, 0, ["$reset", function() { iaac_IntMap$MapIterator_reset(this); }, "$findNextIndex", function() { iaac_IntMap$MapIterator_findNextIndex(this); }],
iaag_VertexAttribute, "VertexAttribute", 31, jl_Object, [], 4, 3, 0, ["$equals", function(var_1) { return iaag_VertexAttribute_equals(this, var_1); }, "$equals0", function(var_1) { return iaag_VertexAttribute_equals0(this, var_1); }, "$getSizeInBytes", function() { return iaag_VertexAttribute_getSizeInBytes(this); }],
iaag_Mesh$VertexDataType, 0, jl_Enum, [], 12, 3, iaag_Mesh$VertexDataType_$callClinit, 0,
jur_NonCapJointSet, "NonCapJointSet", 2, jur_JointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_NonCapJointSet_matches(this, var_1, var_2, var_3); }, "$getName", function() { return jur_NonCapJointSet_getName(this); }, "$hasConsumed", function(var_1) { return jur_NonCapJointSet_hasConsumed(this, var_1); }],
jur_AtomicJointSet, "AtomicJointSet", 2, jur_NonCapJointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_AtomicJointSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_AtomicJointSet_setNext(this, var_1); }, "$getName", function() { return jur_AtomicJointSet_getName(this); }],
jur_PositiveLookAhead, "PositiveLookAhead", 2, jur_AtomicJointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PositiveLookAhead_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_PositiveLookAhead_hasConsumed(this, var_1); }, "$getName", function() { return jur_PositiveLookAhead_getName(this); }],
jur_NegativeLookAhead, "NegativeLookAhead", 2, jur_AtomicJointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_NegativeLookAhead_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_NegativeLookAhead_hasConsumed(this, var_1); }, "$getName", function() { return jur_NegativeLookAhead_getName(this); }],
it_Phases$lambda$static$59$lambda$_8_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$lambda$static$59$lambda$_8_0_get(this, var_1); }],
it_Phases$5$update$lambda$_1_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$5$update$lambda$_1_0_run(this); }],
it_Phases$5$update$lambda$_1_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$5$update$lambda$_1_1_run(this); }],
jl_Exception, 0, jl_Throwable, [], 0, 3, 0, 0,
jl_RuntimeException, 0, jl_Exception, [], 0, 3, 0, 0,
jl_UnsupportedOperationException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
jn_ReadOnlyBufferException, 0, jl_UnsupportedOperationException, [], 0, 3, 0, 0,
iaaf_Cons, "Cons", 24, jl_Object, [], 3, 3, 0, 0,
it_Fx$_clinit_$lambda$_32_1, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_1_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_1_get0(this, var_1); }],
otcjl_TThrowable, 0, jl_RuntimeException, [], 0, 3, 0, ["$fillInStackTrace", function() { return otcjl_TThrowable_fillInStackTrace(this); }],
jl_Iterable, "Iterable", 6, jl_Object, [], 3, 3, 0, 0,
iaac_ObjectMap, "ObjectMap", 30, jl_Object, [jl_Iterable], 0, 3, 0, ["$put", function(var_1, var_2) { return iaac_ObjectMap_put(this, var_1, var_2); }, "$putResize", function(var_1, var_2) { iaac_ObjectMap_putResize(this, var_1, var_2); }, "$push", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { iaac_ObjectMap_push(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }, "$putStash", function(var_1, var_2) { iaac_ObjectMap_putStash(this, var_1, var_2); }, "$getThrow", function(var_1,
var_2) { return iaac_ObjectMap_getThrow(this, var_1, var_2); }, "$getOr", function(var_1, var_2) { return iaac_ObjectMap_getOr(this, var_1, var_2); }, "$getNull", function(var_1) { return iaac_ObjectMap_getNull(this, var_1); }, "$get9", function(var_1) { return iaac_ObjectMap_get(this, var_1); }, "$get6", function(var_1, var_2) { return iaac_ObjectMap_get0(this, var_1, var_2); }, "$getStash", function(var_1, var_2) { return iaac_ObjectMap_getStash(this, var_1, var_2); }, "$clear", function() { iaac_ObjectMap_clear(this);
}, "$containsKey", function(var_1) { return iaac_ObjectMap_containsKey(this, var_1); }, "$containsKeyStash", function(var_1) { return iaac_ObjectMap_containsKeyStash(this, var_1); }, "$resize", function(var_1) { iaac_ObjectMap_resize(this, var_1); }, "$hash2", function(var_1) { return iaac_ObjectMap_hash2(this, var_1); }, "$hash3", function(var_1) { return iaac_ObjectMap_hash3(this, var_1); }, "$entries", function() { return iaac_ObjectMap_entries(this); }, "$keys", function() { return iaac_ObjectMap_keys(this);
}],
iaac_StringMap, 0, iaac_ObjectMap, [], 0, 3, 0, 0,
it_Fx$_clinit_$lambda$_32_0, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_0_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_0_get0(this, var_1); }],
it_Fx$_clinit_$lambda$_32_3, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_3_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_3_get0(this, var_1); }],
jlr_Array, 0, jl_Object, [], 4, 3, 0, 0,
it_Fx$_clinit_$lambda$_32_2, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_2_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_2_get0(this, var_1); }],
cjj_InfCodes, 0, jl_Object, [], 4, 0, cjj_InfCodes_$callClinit, ["$init1", function(var_1, var_2, var_3, var_4, var_5, var_6) { cjj_InfCodes_init(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$proc", function(var_1) { return cjj_InfCodes_proc(this, var_1); }, "$free1", function(var_1) { cjj_InfCodes_free(this, var_1); }, "$inflate_fast", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { return cjj_InfCodes_inflate_fast(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }],
it_Fx$_clinit_$lambda$_32_5, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_5_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_5_get0(this, var_1); }],
it_Fx$_clinit_$lambda$_32_4, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_4_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_4_get0(this, var_1); }],
iaaus_Json, 0, jl_Object, [], 0, 3, 0, 0,
iaaup_Pools, 0, jl_Object, [], 0, 3, iaaup_Pools_$callClinit, 0,
otjt_ArrayBufferView, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0,
otjt_Float64Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0,
it_Fx$_clinit_$lambda$_32_7, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_7_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_7_get0(this, var_1); }],
it_Fx$_clinit_$lambda$_32_6, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_6_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_6_get0(this, var_1); }],
it_Fx$_clinit_$lambda$_32_9, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_9_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_9_get0(this, var_1); }],
it_Fx$_clinit_$lambda$_32_8, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_8_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_8_get0(this, var_1); }]]);
$rt_metadata([jl_IncompatibleClassChangeError, 0, jl_LinkageError, [], 0, 3, 0, 0,
jl_NoSuchFieldError, 0, jl_IncompatibleClassChangeError, [], 0, 3, 0, 0,
jur_AbstractCharClass$LazyJavaDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaDigit_computeValue(this); }],
otcjl_TIterable, 0, jl_Object, [], 3, 3, 0, 0,
iw_Blocks, 0, jl_Object, [], 0, 3, iw_Blocks_$callClinit, 0,
it_Phases$5$_init_$lambda$_0_0, "Phases$5$<init>$lambda$_0_0", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$5$_init_$lambda$_0_0_run(this); }],
it_Phases$5$_init_$lambda$_0_1, "Phases$5$<init>$lambda$_0_1", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$5$_init_$lambda$_0_1_run(this); }],
it_Phases$5$_init_$lambda$_0_2, "Phases$5$<init>$lambda$_0_2", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$5$_init_$lambda$_0_2_run(this); }],
iaac_FloatArray, 0, jl_Object, [], 0, 3, 0, ["$add12", function(var_1) { iaac_FloatArray_add(this, var_1); }, "$add11", function(var_1, var_2) { iaac_FloatArray_add0(this, var_1, var_2); }, "$addAll2", function(var_1) { iaac_FloatArray_addAll(this, var_1); }, "$addAll3", function(var_1, var_2, var_3) { iaac_FloatArray_addAll0(this, var_1, var_2, var_3); }, "$addAll0", function(var_1, var_2, var_3) { iaac_FloatArray_addAll1(this, var_1, var_2, var_3); }, "$get21", function(var_1) { return iaac_FloatArray_get(this,
var_1); }, "$set10", function(var_1, var_2) { iaac_FloatArray_set(this, var_1, var_2); }, "$removeRange", function(var_1, var_2) { iaac_FloatArray_removeRange(this, var_1, var_2); }, "$peek0", function() { return iaac_FloatArray_peek(this); }, "$clear", function() { iaac_FloatArray_clear(this); }, "$ensureCapacity1", function(var_1) { return iaac_FloatArray_ensureCapacity(this, var_1); }, "$setSize4", function(var_1) { return iaac_FloatArray_setSize(this, var_1); }, "$resize0", function(var_1) { return iaac_FloatArray_resize(this,
var_1); }, "$truncate0", function(var_1) { iaac_FloatArray_truncate(this, var_1); }],
iaam_Interpolation, 0, jl_Object, [], 1, 3, iaam_Interpolation_$callClinit, ["$apply0", function(var_1, var_2, var_3) { return iaam_Interpolation_apply(this, var_1, var_2, var_3); }],
iaam_Interpolation$5, 0, iaam_Interpolation, [], 4, 0, 0, 0,
iaam_Interpolation$4, 0, iaam_Interpolation, [], 4, 0, 0, 0,
iw_Block, "Block", 42, jl_Object, [], 0, 3, 0, ["$draw8", function(var_1, var_2) { iw_Block_draw(this, var_1, var_2); }, "$drawShadow", function(var_1, var_2) { iw_Block_drawShadow(this, var_1, var_2); }],
iw_Blocks$10, "Blocks$10", 42, iw_Block, [], 4, 0, 0, ["$draw8", function(var_1, var_2) { iw_Blocks$10_draw(this, var_1, var_2); }],
iaam_Interpolation$3, 0, iaam_Interpolation, [], 4, 0, 0, 0,
otji_JS, 0, jl_Object, [], 4, 0, 0, 0,
iaam_Interpolation$2, 0, iaam_Interpolation, [], 4, 0, 0, ["$apply", function(var_1) { return iaam_Interpolation$2_apply(this, var_1); }],
iaam_Interpolation$1, 0, iaam_Interpolation, [], 4, 0, 0, ["$apply", function(var_1) { return iaam_Interpolation$1_apply(this, var_1); }],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierStart$1", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains(this, var_1); }],
it_Phases$3$lambda$null$4$lambda$_28_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$3$lambda$null$4$lambda$_28_0_run(this); }],
iaat_Effect, 0, jl_Object, [], 1, 3, 0, ["$update3", function(var_1) { iaat_Effect_update(this, var_1); }, "$apply1", function(var_1, var_2, var_3) { iaat_Effect_apply(this, var_1, var_2, var_3); }, "$isFinished", function() { return iaat_Effect_isFinished(this); }, "$calculateFadeout", function() { return iaat_Effect_calculateFadeout(this); }, "$calculateProgress1", function(var_1) { return iaat_Effect_calculateProgress(this, var_1); }, "$calculateProgress0", function(var_1, var_2) { return iaat_Effect_calculateProgress0(this,
var_1, var_2); }, "$calculateProgress", function(var_1, var_2, var_3) { return iaat_Effect_calculateProgress1(this, var_1, var_2, var_3); }, "$getLineHeight", function() { return iaat_Effect_getLineHeight(this); }],
iaate_JumpEffect, "JumpEffect", 27, iaat_Effect, [], 0, 3, 0, ["$onApply", function(var_1, var_2, var_3) { iaate_JumpEffect_onApply(this, var_1, var_2, var_3); }],
iaa_Input, 0, jl_Object, [iaau_Disposable], 1, 3, 0, ["$mouseWorld", function() { return iaa_Input_mouseWorld(this); }, "$mouse", function() { return iaa_Input_mouse(this); }, "$keyTap0", function(var_1) { return iaa_Input_keyTap(this, var_1); }, "$keyDown0", function(var_1) { return iaa_Input_keyDown(this, var_1); }, "$keyTap", function(var_1) { return iaa_Input_keyTap0(this, var_1); }, "$axis0", function(var_1) { return iaa_Input_axis(this, var_1); }, "$addProcessor", function(var_1) { iaa_Input_addProcessor(this,
var_1); }, "$getDevices", function() { return iaa_Input_getDevices(this); }, "$getKeyboard", function() { return iaa_Input_getKeyboard(this); }, "$isCursorCatched", function() { return iaa_Input_isCursorCatched(this); }],
iaabt_TeaInput, 0, iaa_Input, [otjde_EventListener], 0, 3, 0, ["$prepareNext", function() { iaabt_TeaInput_prepareNext(this); }, "$mouseX", function() { return iaabt_TeaInput_mouseX(this); }, "$mouseY", function() { return iaabt_TeaInput_mouseY(this); }, "$getRelativeX", function(var_1, var_2) { return iaabt_TeaInput_getRelativeX(this, var_1, var_2); }, "$getRelativeY", function(var_1, var_2) { return iaabt_TeaInput_getRelativeY(this, var_1, var_2); }, "$hookEvents", function() { iaabt_TeaInput_hookEvents(this);
}, "$getMovementXJSNI", function(var_1) { return iaabt_TeaInput_getMovementXJSNI(this, var_1); }, "$getMovementYJSNI", function(var_1) { return iaabt_TeaInput_getMovementYJSNI(this, var_1); }, "$handleEvent", function(var_1) { iaabt_TeaInput_handleEvent(this, var_1); }, "$handleEvent$exported$0", function(var_1) { return iaabt_TeaInput_handleEvent$exported$0(this, var_1); }],
otciu_UnicodeHelper, 0, jl_Object, [], 4, 3, 0, 0,
otp_PlatformRunnable, 0, jl_Object, [], 3, 3, 0, 0,
jl_Object$monitorEnterWait$lambda$_6_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, ["$run", function() { jl_Object$monitorEnterWait$lambda$_6_0_run(this); }],
iaas_Scene$touchUp$lambda$_22_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Scene$touchUp$lambda$_22_0_get(this); }, "$get7", function() { return iaas_Scene$touchUp$lambda$_22_0_get0(this); }],
jur_AbstractCharClass$LazyAlnum, 0, jur_AbstractCharClass$LazyAlpha, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyAlnum_computeValue(this); }],
jur_AbstractCharClass$LazyGraph, 0, jur_AbstractCharClass$LazyAlnum, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyGraph_computeValue(this); }],
jur_AbstractCharClass$LazyPrint, 0, jur_AbstractCharClass$LazyGraph, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyPrint_computeValue(this); }],
jur_AbstractCharClass$LazyJavaSpaceChar, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaSpaceChar_computeValue(this); }],
jur_PositiveLookBehind, "PositiveLookBehind", 2, jur_AtomicJointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PositiveLookBehind_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_PositiveLookBehind_hasConsumed(this, var_1); }, "$getName", function() { return jur_PositiveLookBehind_getName(this); }],
jnc_CharsetEncoder, 0, jl_Object, [], 1, 3, 0, ["$checkReplacement", function(var_1) { jnc_CharsetEncoder_checkReplacement(this, var_1); }, "$onMalformedInput0", function(var_1) { return jnc_CharsetEncoder_onMalformedInput(this, var_1); }, "$implOnMalformedInput", function(var_1) { jnc_CharsetEncoder_implOnMalformedInput(this, var_1); }, "$onUnmappableCharacter0", function(var_1) { return jnc_CharsetEncoder_onUnmappableCharacter(this, var_1); }, "$implOnUnmappableCharacter", function(var_1) { jnc_CharsetEncoder_implOnUnmappableCharacter(this,
var_1); }, "$encode", function(var_1, var_2, var_3) { return jnc_CharsetEncoder_encode(this, var_1, var_2, var_3); }, "$flush", function(var_1) { return jnc_CharsetEncoder_flush(this, var_1); }, "$implFlush", function(var_1) { return jnc_CharsetEncoder_implFlush(this, var_1); }],
jl_ArrayStoreException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
iaagg_BatchShader, 0, jl_Object, [], 0, 3, iaagg_BatchShader_$callClinit, 0,
ji_DataInput, 0, jl_Object, [], 3, 3, 0, 0,
ji_DataInputStream, 0, ji_FilterInputStream, [ji_DataInput], 0, 3, 0, ["$read0", function(var_1) { return ji_DataInputStream_read(this, var_1); }, "$readToBuff", function(var_1) { return ji_DataInputStream_readToBuff(this, var_1); }, "$readInt", function() { return ji_DataInputStream_readInt(this); }],
iaam_Affine2, 0, jl_Object, [ji_Serializable], 4, 3, 0, ["$setToTrnRotScl", function(var_1, var_2, var_3, var_4, var_5) { return iaam_Affine2_setToTrnRotScl(this, var_1, var_2, var_3, var_4, var_5); }, "$preMul", function(var_1) { return iaam_Affine2_preMul(this, var_1); }, "$translate", function(var_1, var_2) { return iaam_Affine2_translate(this, var_1, var_2); }],
jur_MatchResult, 0, jl_Object, [], 3, 3, 0, 0,
jur_MatchResultImpl, 0, jl_Object, [jur_MatchResult], 0, 0, 0, ["$setConsumed", function(var_1, var_2) { jur_MatchResultImpl_setConsumed(this, var_1, var_2); }, "$getConsumed", function(var_1) { return jur_MatchResultImpl_getConsumed(this, var_1); }, "$end2", function() { return jur_MatchResultImpl_end(this); }, "$end1", function(var_1) { return jur_MatchResultImpl_end0(this, var_1); }, "$setStart", function(var_1, var_2) { jur_MatchResultImpl_setStart(this, var_1, var_2); }, "$setEnd", function(var_1, var_2)
{ jur_MatchResultImpl_setEnd(this, var_1, var_2); }, "$getStart", function(var_1) { return jur_MatchResultImpl_getStart(this, var_1); }, "$getEnd", function(var_1) { return jur_MatchResultImpl_getEnd(this, var_1); }, "$group", function(var_1) { return jur_MatchResultImpl_group(this, var_1); }, "$getGroupNoCheck", function(var_1) { return jur_MatchResultImpl_getGroupNoCheck(this, var_1); }, "$start9", function() { return jur_MatchResultImpl_start(this); }, "$start", function(var_1) { return jur_MatchResultImpl_start0(this,
var_1); }, "$finalizeMatch", function() { jur_MatchResultImpl_finalizeMatch(this); }, "$getEnterCounter", function(var_1) { return jur_MatchResultImpl_getEnterCounter(this, var_1); }, "$setEnterCounter", function(var_1, var_2) { jur_MatchResultImpl_setEnterCounter(this, var_1, var_2); }, "$checkGroup", function(var_1) { jur_MatchResultImpl_checkGroup(this, var_1); }, "$setValid", function() { jur_MatchResultImpl_setValid(this); }, "$isValid", function() { return jur_MatchResultImpl_isValid(this); }, "$reset1",
function(var_1, var_2, var_3) { jur_MatchResultImpl_reset(this, var_1, var_2, var_3); }, "$reset", function() { jur_MatchResultImpl_reset0(this); }, "$setBounds", function(var_1, var_2) { jur_MatchResultImpl_setBounds(this, var_1, var_2); }, "$setStartIndex", function(var_1) { jur_MatchResultImpl_setStartIndex(this, var_1); }, "$getLeftBound", function() { return jur_MatchResultImpl_getLeftBound(this); }, "$getRightBound", function() { return jur_MatchResultImpl_getRightBound(this); }, "$setMode", function(var_1)
{ jur_MatchResultImpl_setMode(this, var_1); }, "$mode2", function() { return jur_MatchResultImpl_mode(this); }, "$hasAnchoringBounds", function() { return jur_MatchResultImpl_hasAnchoringBounds(this); }, "$hasTransparentBounds", function() { return jur_MatchResultImpl_hasTransparentBounds(this); }, "$getPreviousMatchEnd", function() { return jur_MatchResultImpl_getPreviousMatchEnd(this); }],
iaaf_Intc2, 0, jl_Object, [], 3, 3, 0, 0,
i_Renderer$drawWorld$lambda$_9_1, 0, jl_Object, [iaaf_Intc2], 0, 3, 0, ["$get36", function(var_1, var_2) { i_Renderer$drawWorld$lambda$_9_1_get(this, var_1, var_2); }],
i_Renderer$drawWorld$lambda$_9_0, 0, jl_Object, [iaaf_Intc2], 0, 3, 0, ["$get36", function(var_1, var_2) { i_Renderer$drawWorld$lambda$_9_0_get(this, var_1, var_2); }],
iaaup_Pool$Poolable, 0, jl_Object, [], 3, 3, 0, 0,
it_Phases$2$lambda$null$3$lambda$_21_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$2$lambda$null$3$lambda$_21_0_run(this); }],
it_Phases$2$lambda$null$13$lambda$_11_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$2$lambda$null$13$lambda$_11_0_get(this, var_1); }],
iaa_Net, 0, jl_Object, [], 0, 3, 0, 0,
iaabt_TeaNet, 0, iaa_Net, [], 0, 3, 0, 0,
jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1, "AbstractCharClass$LazyJavaJavaIdentifierPart$1", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains(this, var_1); }]]);
$rt_metadata([ie_EntityCollisions$SolidChecker, 0, jl_Object, [], 3, 3, 0, 0,
ie_EntityCollisions$overlapsTile$lambda$_3_0, 0, jl_Object, [ie_EntityCollisions$SolidChecker], 0, 3, 0, ["$solid0", function(var_1, var_2) { return ie_EntityCollisions$overlapsTile$lambda$_3_0_solid(this, var_1, var_2); }],
cbgu_GdxRuntimeException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
iaam_Interpolation$Elastic, 0, iaam_Interpolation, [], 0, 3, 0, 0,
iaam_Interpolation$ElasticOut, 0, iaam_Interpolation$Elastic, [], 0, 3, 0, 0,
iaase_InputEvent$Type, 0, jl_Enum, [], 12, 3, iaase_InputEvent$Type_$callClinit, 0,
jnc_Charset, "Charset", 4, jl_Object, [jl_Comparable], 1, 3, 0, ["$decode0", function(var_1) { return jnc_Charset_decode(this, var_1); }],
jur_DecomposedCharSet, "DecomposedCharSet", 2, jur_JointSet, [], 0, 0, 0, ["$setNext", function(var_1) { jur_DecomposedCharSet_setNext(this, var_1); }, "$matches", function(var_1, var_2, var_3) { return jur_DecomposedCharSet_matches(this, var_1, var_2, var_3); }, "$getDecomposedChar", function() { return jur_DecomposedCharSet_getDecomposedChar(this); }, "$getName", function() { return jur_DecomposedCharSet_getName(this); }, "$codePointAt", function(var_1, var_2, var_3) { return jur_DecomposedCharSet_codePointAt(this,
var_1, var_2, var_3); }, "$first", function(var_1) { return jur_DecomposedCharSet_first(this, var_1); }, "$hasConsumed", function(var_1) { return jur_DecomposedCharSet_hasConsumed(this, var_1); }],
jl_IllegalArgumentException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
jnc_IllegalCharsetNameException, 0, jl_IllegalArgumentException, [], 0, 3, 0, 0,
it_Phases$4$lambda$null$0$lambda$_17_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$4$lambda$null$0$lambda$_17_0_get(this, var_1); }],
iaam_Interpolation$9, 0, iaam_Interpolation, [], 4, 0, 0, ["$apply", function(var_1) { return iaam_Interpolation$9_apply(this, var_1); }],
iaam_Interpolation$8, 0, iaam_Interpolation, [], 4, 0, 0, 0,
otja_ReadyStateChangeHandler, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0,
iaam_Interpolation$7, 0, iaam_Interpolation, [], 4, 0, 0, 0,
iaam_Interpolation$6, 0, iaam_Interpolation, [], 4, 0, 0, 0,
ji_FilterOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0,
ji_PrintStream, 0, ji_FilterOutputStream, [], 0, 3, 0, ["$write", function(var_1, var_2, var_3) { ji_PrintStream_write(this, var_1, var_2, var_3); }, "$check", function() { return ji_PrintStream_check(this); }, "$print", function(var_1, var_2, var_3) { ji_PrintStream_print(this, var_1, var_2, var_3); }, "$println", function(var_1) { ji_PrintStream_println(this, var_1); }, "$printSB", function() { ji_PrintStream_printSB(this); }],
jur_NegativeLookBehind, "NegativeLookBehind", 2, jur_AtomicJointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_NegativeLookBehind_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_NegativeLookBehind_hasConsumed(this, var_1); }, "$getName", function() { return jur_NegativeLookBehind_getName(this); }],
iaa_Core, 0, jl_Object, [], 0, 3, iaa_Core_$callClinit, 0,
jn_IntBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, ["$clear3", function() { return jn_IntBuffer_clear(this); }, "$flip1", function() { return jn_IntBuffer_flip(this); }, "$position3", function(var_1) { return jn_IntBuffer_position(this, var_1); }, "$flip", function() { return jn_IntBuffer_flip0(this); }, "$clear2", function() { return jn_IntBuffer_clear0(this); }, "$position", function(var_1) { return jn_IntBuffer_position0(this, var_1); }],
jn_IntBufferImpl, 0, jn_IntBuffer, [], 1, 0, 0, ["$get71", function() { return jn_IntBufferImpl_get(this); }, "$put10", function(var_1) { return jn_IntBufferImpl_put(this, var_1); }, "$get29", function(var_1) { return jn_IntBufferImpl_get0(this, var_1); }, "$put6", function(var_1, var_2) { return jn_IntBufferImpl_put0(this, var_1, var_2); }, "$isReadOnly", function() { return jn_IntBufferImpl_isReadOnly(this); }],
jn_IntBufferOverByteBuffer, 0, jn_IntBufferImpl, [], 1, 0, 0, ["$readOnly", function() { return jn_IntBufferOverByteBuffer_readOnly(this); }],
jn_IntBufferOverByteBufferLittleEndian, 0, jn_IntBufferOverByteBuffer, [], 0, 0, 0, ["$getElement", function(var_1) { return jn_IntBufferOverByteBufferLittleEndian_getElement(this, var_1); }, "$putElement", function(var_1, var_2) { jn_IntBufferOverByteBufferLittleEndian_putElement(this, var_1, var_2); }],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue(this); }],
iaagg_NinePatch, 0, jl_Object, [], 0, 3, iaagg_NinePatch_$callClinit, ["$load0", function(var_1) { iaagg_NinePatch_load(this, var_1); }, "$add3", function(var_1, var_2, var_3, var_4) { return iaagg_NinePatch_add(this, var_1, var_2, var_3, var_4); }, "$set6", function(var_1, var_2, var_3, var_4, var_5, var_6) { iaagg_NinePatch_set(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$prepareVertices", function(var_1, var_2, var_3, var_4) { iaagg_NinePatch_prepareVertices(this, var_1, var_2, var_3, var_4); },
"$draw10", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { iaagg_NinePatch_draw(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$getLeftWidth", function() { return iaagg_NinePatch_getLeftWidth(this); }, "$getRightWidth", function() { return iaagg_NinePatch_getRightWidth(this); }, "$getTopHeight", function() { return iaagg_NinePatch_getTopHeight(this); }, "$getBottomHeight", function() { return iaagg_NinePatch_getBottomHeight(this); }, "$getTotalWidth", function()
{ return iaagg_NinePatch_getTotalWidth(this); }, "$getTotalHeight", function() { return iaagg_NinePatch_getTotalHeight(this); }, "$setPadding", function(var_1, var_2, var_3, var_4) { iaagg_NinePatch_setPadding(this, var_1, var_2, var_3, var_4); }, "$getPadLeft", function() { return iaagg_NinePatch_getPadLeft(this); }, "$getPadRight", function() { return iaagg_NinePatch_getPadRight(this); }, "$getPadTop", function() { return iaagg_NinePatch_getPadTop(this); }, "$getPadBottom", function() { return iaagg_NinePatch_getPadBottom(this);
}],
iaabt_TeaFileLoader$TeaVMFilePreloadListener, 0, jl_Object, [], 3, 3, 0, 0,
jur_LeafQuantifierSet, "LeafQuantifierSet", 2, jur_QuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_LeafQuantifierSet_matches(this, var_1, var_2, var_3); }, "$getName", function() { return jur_LeafQuantifierSet_getName(this); }],
jur_UnifiedQuantifierSet, "UnifiedQuantifierSet", 2, jur_LeafQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_UnifiedQuantifierSet_matches(this, var_1, var_2, var_3); }, "$find0", function(var_1, var_2, var_3) { return jur_UnifiedQuantifierSet_find(this, var_1, var_2, var_3); }],
jl_Class, "Class", 6, jl_Object, [jlr_AnnotatedElement], 0, 3, 0, ["$getPlatformClass", function() { return jl_Class_getPlatformClass(this); }, "$isInstance", function(var_1) { return jl_Class_isInstance(this, var_1); }, "$isAssignableFrom", function(var_1) { return jl_Class_isAssignableFrom(this, var_1); }, "$getName", function() { return jl_Class_getName(this); }, "$getSimpleName", function() { return jl_Class_getSimpleName(this); }, "$getSimpleNameCache", function() { return jl_Class_getSimpleNameCache(this);
}, "$setSimpleNameCache", function(var_1) { jl_Class_setSimpleNameCache(this, var_1); }, "$isPrimitive", function() { return jl_Class_isPrimitive(this); }, "$isArray", function() { return jl_Class_isArray(this); }, "$isEnum0", function() { return jl_Class_isEnum(this); }, "$isInterface", function() { return jl_Class_isInterface(this); }, "$getComponentType", function() { return jl_Class_getComponentType(this); }, "$getDeclaredConstructors", function() { return jl_Class_getDeclaredConstructors(this); }, "$getConstructor",
function(var_1) { return jl_Class_getConstructor(this, var_1); }, "$getDeclaredMethods", function() { return jl_Class_getDeclaredMethods(this); }, "$getMethod", function(var_1, var_2) { return jl_Class_getMethod(this, var_1, var_2); }, "$getSuperclass", function() { return jl_Class_getSuperclass(this); }, "$getInterfaces", function() { return jl_Class_getInterfaces(this); }, "$getEnumConstants", function() { return jl_Class_getEnumConstants(this); }, "$initialize", function() { jl_Class_initialize(this); }],
otjt_Int16Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0,
iaau_ColorCodes, 0, jl_Object, [], 0, 3, iaau_ColorCodes_$callClinit, 0,
otjb_AnimationFrameCallback, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0,
iaabt_TeaApplication$delayedStep$lambda$_3_0, 0, jl_Object, [otjb_AnimationFrameCallback], 0, 3, 0, ["$onAnimationFrame", function(var_1) { iaabt_TeaApplication$delayedStep$lambda$_3_0_onAnimationFrame(this, var_1); }, "$onAnimationFrame$exported$0", function(var_1) { return iaabt_TeaApplication$delayedStep$lambda$_3_0_onAnimationFrame$exported$0(this, var_1); }],
jl_Cloneable, 0, jl_Object, [], 3, 3, 0, 0,
ju_BitSet, 0, jl_Object, [jl_Cloneable, ji_Serializable], 0, 3, 0, ["$set11", function(var_1) { ju_BitSet_set(this, var_1); }, "$set4", function(var_1, var_2) { ju_BitSet_set0(this, var_1, var_2); }, "$trailingZeroBits", function(var_1) { return ju_BitSet_trailingZeroBits(this, var_1); }, "$trailingOneBits", function(var_1) { return ju_BitSet_trailingOneBits(this, var_1); }, "$clear7", function(var_1) { ju_BitSet_clear(this, var_1); }, "$clear8", function(var_1, var_2) { ju_BitSet_clear0(this, var_1, var_2);
}, "$get30", function(var_1) { return ju_BitSet_get(this, var_1); }, "$nextSetBit", function(var_1) { return ju_BitSet_nextSetBit(this, var_1); }, "$nextClearBit", function(var_1) { return ju_BitSet_nextClearBit(this, var_1); }, "$ensureCapacity", function(var_1) { ju_BitSet_ensureCapacity(this, var_1); }, "$recalculateLength", function() { ju_BitSet_recalculateLength(this); }, "$intersects", function(var_1) { return ju_BitSet_intersects(this, var_1); }, "$and", function(var_1) { ju_BitSet_and(this, var_1);
}, "$andNot", function(var_1) { ju_BitSet_andNot(this, var_1); }, "$or", function(var_1) { ju_BitSet_or(this, var_1); }, "$xor", function(var_1) { ju_BitSet_xor(this, var_1); }, "$isEmpty", function() { return ju_BitSet_isEmpty(this); }],
jl_Float, 0, jl_Number, [jl_Comparable], 0, 3, jl_Float_$callClinit, 0,
juz_InflaterInputStream, 0, ji_FilterInputStream, [], 0, 3, 0, ["$read4", function() { return juz_InflaterInputStream_read(this); }, "$read", function(var_1, var_2, var_3) { return juz_InflaterInputStream_read0(this, var_1, var_2, var_3); }, "$fill1", function() { juz_InflaterInputStream_fill(this); }, "$available", function() { return juz_InflaterInputStream_available(this); }],
juz_GZIPInputStream, 0, juz_InflaterInputStream, [], 0, 3, 0, ["$getLong", function(var_1, var_2) { return juz_GZIPInputStream_getLong(this, var_1, var_2); }, "$getShort", function(var_1, var_2) { return juz_GZIPInputStream_getShort(this, var_1, var_2); }, "$read", function(var_1, var_2, var_3) { return juz_GZIPInputStream_read(this, var_1, var_2, var_3); }, "$verifyCrc", function() { juz_GZIPInputStream_verifyCrc(this); }, "$readFully", function(var_1, var_2, var_3) { juz_GZIPInputStream_readFully(this, var_1,
var_2, var_3); }, "$readZeroTerminated", function(var_1) { juz_GZIPInputStream_readZeroTerminated(this, var_1); }],
jur_CharSet, "CharSet", 2, jur_LeafSet, [], 0, 0, 0, ["$charCount0", function() { return jur_CharSet_charCount(this); }, "$accepts", function(var_1, var_2) { return jur_CharSet_accepts(this, var_1, var_2); }, "$find0", function(var_1, var_2, var_3) { return jur_CharSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_CharSet_findBack(this, var_1, var_2, var_3, var_4); }, "$getName", function() { return jur_CharSet_getName(this); }, "$getChar", function() { return jur_CharSet_getChar(this);
}, "$first", function(var_1) { return jur_CharSet_first(this, var_1); }],
it_Phases$3$lambda$null$13$lambda$_19_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$3$lambda$null$13$lambda$_19_0_get(this, var_1); }],
ig_LayerBatch$draw$lambda$_3_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return ig_LayerBatch$draw$lambda$_3_0_get(this); }, "$get14", function() { return ig_LayerBatch$draw$lambda$_3_0_get0(this); }],
it_Phases$3$lambda$null$17$lambda$_15_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$3$lambda$null$17$lambda$_15_0_get(this, var_1); }],
it_Phases$2$lambda$null$9$lambda$_15_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$2$lambda$null$9$lambda$_15_0_run(this); }],
it_Phases$2$lambda$null$7$lambda$_17_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$2$lambda$null$7$lambda$_17_0_run(this); }],
jur_AbstractCharClass$LazyCategoryScope, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyCategoryScope_computeValue(this); }],
iaam_Interpolation$Pow, 0, iaam_Interpolation, [], 0, 3, 0, 0,
iaam_Interpolation$PowOut, 0, iaam_Interpolation$Pow, [], 0, 3, 0, ["$apply", function(var_1) { return iaam_Interpolation$PowOut_apply(this, var_1); }],
iaas_Scene$TouchFocus, "Scene$TouchFocus", 36, jl_Object, [iaaup_Pool$Poolable], 4, 0, 0, ["$reset", function() { iaas_Scene$TouchFocus_reset(this); }],
iaass_Style, "Style", 39, jl_Object, [], 1, 3, 0, 0]);
$rt_metadata([iaasu_Label$LabelStyle, "Label$LabelStyle", 37, iaass_Style, [], 0, 3, 0, 0,
iu_Styles$1, 0, iaasu_Label$LabelStyle, [], 4, 0, 0, 0,
iaaf_Func, "Func", 24, jl_Object, [], 3, 3, 0, 0,
jl_Readable, 0, jl_Object, [], 3, 3, 0, 0,
jn_CharBuffer, 0, jn_Buffer, [jl_Comparable, jl_Appendable, jl_CharSequence, jl_Readable], 1, 3, 0, ["$get15", function(var_1, var_2, var_3) { return jn_CharBuffer_get(this, var_1, var_2, var_3); }, "$get18", function(var_1) { return jn_CharBuffer_get0(this, var_1); }, "$put8", function(var_1, var_2, var_3) { return jn_CharBuffer_put(this, var_1, var_2, var_3); }, "$put1", function(var_1, var_2, var_3) { return jn_CharBuffer_put0(this, var_1, var_2, var_3); }, "$put7", function(var_1) { return jn_CharBuffer_put1(this,
var_1); }, "$hasArray", function() { return jn_CharBuffer_hasArray(this); }, "$array1", function() { return jn_CharBuffer_array(this); }, "$flip5", function() { return jn_CharBuffer_flip(this); }, "$position1", function(var_1) { return jn_CharBuffer_position(this, var_1); }],
jn_CharBufferImpl, 0, jn_CharBuffer, [], 1, 0, 0, ["$compact", function() { return jn_CharBufferImpl_compact(this); }, "$isReadOnly", function() { return jn_CharBufferImpl_isReadOnly(this); }],
jn_CharBufferOverArray, 0, jn_CharBufferImpl, [], 0, 0, 0, ["$getChar0", function(var_1) { return jn_CharBufferOverArray_getChar(this, var_1); }, "$putChar", function(var_1, var_2) { jn_CharBufferOverArray_putChar(this, var_1, var_2); }, "$isArrayPresent", function() { return jn_CharBufferOverArray_isArrayPresent(this); }, "$getArray", function() { return jn_CharBufferOverArray_getArray(this); }, "$readOnly", function() { return jn_CharBufferOverArray_readOnly(this); }],
iaaal_AsynchronousAssetLoader, 0, iaaal_AssetLoader, [], 1, 3, 0, 0,
iaaml_BaseTmxMapLoader, 0, iaaal_AsynchronousAssetLoader, [], 1, 3, 0, ["$loadTileLayer", function(var_1, var_2, var_3) { iaaml_BaseTmxMapLoader_loadTileLayer(this, var_1, var_2, var_3); }, "$loadObjectGroup", function(var_1, var_2, var_3) { iaaml_BaseTmxMapLoader_loadObjectGroup(this, var_1, var_2, var_3); }, "$loadBasicLayerInfo", function(var_1, var_2) { iaaml_BaseTmxMapLoader_loadBasicLayerInfo(this, var_1, var_2); }, "$loadObject", function(var_1, var_2, var_3) { iaaml_BaseTmxMapLoader_loadObject(this,
var_1, var_2, var_3); }, "$loadObject1", function(var_1, var_2, var_3) { iaaml_BaseTmxMapLoader_loadObject0(this, var_1, var_2, var_3); }, "$loadObject0", function(var_1, var_2, var_3, var_4) { iaaml_BaseTmxMapLoader_loadObject1(this, var_1, var_2, var_3, var_4); }, "$loadProperties", function(var_1, var_2) { iaaml_BaseTmxMapLoader_loadProperties(this, var_1, var_2); }, "$castProperty", function(var_1, var_2, var_3) { return iaaml_BaseTmxMapLoader_castProperty(this, var_1, var_2, var_3); }, "$createTileLayerCell",
function(var_1, var_2, var_3) { return iaaml_BaseTmxMapLoader_createTileLayerCell(this, var_1, var_2, var_3); }],
iaaml_TmxMapLoader, 0, iaaml_BaseTmxMapLoader, [], 0, 3, 0, ["$load3", function(var_1) { return iaaml_TmxMapLoader_load(this, var_1); }],
jur_AbstractCharClass$LazyJavaTitleCase$1, "AbstractCharClass$LazyJavaTitleCase$1", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$LazyJavaTitleCase$1_contains(this, var_1); }],
it_Phases$3$lambda$$23$lambda$_9_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$3$lambda$$23$lambda$_9_0_run(this); }],
iaau_ArcRuntimeException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
iaabte_PixmapEmulator$1, 0, jl_Object, [], 32, 0, iaabte_PixmapEmulator$1_$callClinit, 0,
iaasul_Scl, 0, jl_Object, [], 0, 3, iaasul_Scl_$callClinit, 0,
iaau_Scaling, 0, jl_Enum, [], 12, 3, iaau_Scaling_$callClinit, ["$apply4", function(var_1, var_2, var_3, var_4) { return iaau_Scaling_apply(this, var_1, var_2, var_3, var_4); }],
jnc_UnsupportedCharsetException, 0, jl_IllegalArgumentException, [], 0, 3, 0, 0,
it_Phases$1$lambda$$22$lambda$_2_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$1$lambda$$22$lambda$_2_0_run(this); }],
jur_AbstractCharClass$LazyJavaISOControl$1, "AbstractCharClass$LazyJavaISOControl$1", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$LazyJavaISOControl$1_contains(this, var_1); }],
jn_FloatBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, ["$get17", function(var_1, var_2, var_3) { return jn_FloatBuffer_get(this, var_1, var_2, var_3); }, "$get61", function(var_1) { return jn_FloatBuffer_get0(this, var_1); }, "$put13", function(var_1, var_2, var_3) { return jn_FloatBuffer_put(this, var_1, var_2, var_3); }, "$hasArray", function() { return jn_FloatBuffer_hasArray(this); }, "$array6", function() { return jn_FloatBuffer_array(this); }, "$clear4", function() { return jn_FloatBuffer_clear(this);
}, "$flip2", function() { return jn_FloatBuffer_flip(this); }, "$limit2", function(var_1) { return jn_FloatBuffer_limit(this, var_1); }, "$position4", function(var_1) { return jn_FloatBuffer_position(this, var_1); }, "$flip", function() { return jn_FloatBuffer_flip0(this); }, "$clear2", function() { return jn_FloatBuffer_clear0(this); }, "$limit0", function(var_1) { return jn_FloatBuffer_limit0(this, var_1); }, "$position", function(var_1) { return jn_FloatBuffer_position0(this, var_1); }],
jn_FloatBufferImpl, 0, jn_FloatBuffer, [], 1, 0, 0, ["$duplicate1", function() { return jn_FloatBufferImpl_duplicate(this); }, "$isReadOnly", function() { return jn_FloatBufferImpl_isReadOnly(this); }],
jn_FloatBufferOverByteBuffer, 0, jn_FloatBufferImpl, [], 1, 0, 0, ["$isArrayPresent", function() { return jn_FloatBufferOverByteBuffer_isArrayPresent(this); }, "$getArray0", function() { return jn_FloatBufferOverByteBuffer_getArray(this); }, "$readOnly", function() { return jn_FloatBufferOverByteBuffer_readOnly(this); }],
iaabt_TeaFi$FSEntry, 0, jl_Object, [], 0, 3, 0, 0,
iaagg_GLFrameBuffer$FrameBufferRenderBufferAttachmentSpec, 0, jl_Object, [], 0, 3, 0, 0,
cbgu_Array, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0,
cjj_GZIPHeader, 0, jl_Object, [jl_Cloneable], 0, 3, 0, 0,
jur_AtomicFSet, "AtomicFSet", 2, jur_FSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_AtomicFSet_matches(this, var_1, var_2, var_3); }, "$getIndex", function() { return jur_AtomicFSet_getIndex(this); }, "$getName", function() { return jur_AtomicFSet_getName(this); }, "$hasConsumed", function(var_1) { return jur_AtomicFSet_hasConsumed(this, var_1); }],
jur_LowSurrogateCharSet, "LowSurrogateCharSet", 2, jur_JointSet, [], 0, 0, 0, ["$setNext", function(var_1) { jur_LowSurrogateCharSet_setNext(this, var_1); }, "$matches", function(var_1, var_2, var_3) { return jur_LowSurrogateCharSet_matches(this, var_1, var_2, var_3); }, "$find0", function(var_1, var_2, var_3) { return jur_LowSurrogateCharSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_LowSurrogateCharSet_findBack(this, var_1, var_2, var_3, var_4); }, "$getName",
function() { return jur_LowSurrogateCharSet_getName(this); }, "$first", function(var_1) { return jur_LowSurrogateCharSet_first(this, var_1); }, "$hasConsumed", function(var_1) { return jur_LowSurrogateCharSet_hasConsumed(this, var_1); }],
iaaui_Streams, 0, jl_Object, [], 4, 3, iaaui_Streams_$callClinit, 0,
jl_AssertionError, 0, jl_Error, [], 0, 3, 0, 0,
it_Phases$2$lambda$null$21$lambda$_3_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$2$lambda$null$21$lambda$_3_0_get(this, var_1); }],
iaate_EaseEffect, "EaseEffect", 27, iaat_Effect, [], 0, 3, 0, ["$onApply", function(var_1, var_2, var_3) { iaate_EaseEffect_onApply(this, var_1, var_2, var_3); }],
iaasul_Table, "Table", 38, iaasul_WidgetGroup, [], 0, 3, iaasul_Table_$callClinit, ["$obtainCell", function() { return iaasul_Table_obtainCell(this); }, "$draw", function() { iaasul_Table_draw(this); }, "$drawBackground", function(var_1, var_2) { iaasul_Table_drawBackground(this, var_1, var_2); }, "$background1", function(var_1) { return iaasul_Table_background(this, var_1); }, "$setBackground", function(var_1) { iaasul_Table_setBackground(this, var_1); }, "$hit", function(var_1, var_2, var_3) { return iaasul_Table_hit(this,
var_1, var_2, var_3); }, "$invalidate", function() { iaasul_Table_invalidate(this); }, "$add4", function(var_1) { return iaasul_Table_add(this, var_1); }, "$table3", function(var_1) { return iaasul_Table_table(this, var_1); }, "$table2", function(var_1, var_2) { return iaasul_Table_table0(this, var_1, var_2); }, "$table", function(var_1, var_2, var_3) { return iaasul_Table_table1(this, var_1, var_2, var_3); }, "$label1", function(var_1) { return iaasul_Table_label(this, var_1); }, "$removeChild", function(var_1,
var_2) { return iaasul_Table_removeChild(this, var_1, var_2); }, "$row0", function() { return iaasul_Table_row(this); }, "$endRow0", function() { iaasul_Table_endRow(this); }, "$getCell", function(var_1) { return iaasul_Table_getCell(this, var_1); }, "$getPrefWidth", function() { return iaasul_Table_getPrefWidth(this); }, "$getPrefHeight", function() { return iaasul_Table_getPrefHeight(this); }, "$getMinWidth", function() { return iaasul_Table_getMinWidth(this); }, "$getMinHeight", function() { return iaasul_Table_getMinHeight(this);
}, "$defaults1", function() { return iaasul_Table_defaults(this); }, "$margin0", function(var_1) { return iaasul_Table_margin(this, var_1); }, "$margin", function(var_1, var_2, var_3, var_4) { return iaasul_Table_margin0(this, var_1, var_2, var_3, var_4); }, "$align0", function(var_1) { return iaasul_Table_align(this, var_1); }, "$top0", function() { return iaasul_Table_top(this); }, "$left1", function() { return iaasul_Table_left(this); }, "$bottom", function() { return iaasul_Table_bottom(this); }, "$right",
function() { return iaasul_Table_right(this); }, "$getMarginTop", function() { return iaasul_Table_getMarginTop(this); }, "$getMarginLeft", function() { return iaasul_Table_getMarginLeft(this); }, "$getMarginBottom", function() { return iaasul_Table_getMarginBottom(this); }, "$getMarginRight", function() { return iaasul_Table_getMarginRight(this); }, "$ensureSize", function(var_1, var_2) { return iaasul_Table_ensureSize(this, var_1, var_2); }, "$layout", function() { iaasul_Table_layout(this); }, "$computeSize",
function() { iaasul_Table_computeSize(this); }, "$layout0", function(var_1, var_2, var_3, var_4) { iaasul_Table_layout0(this, var_1, var_2, var_3, var_4); }],
iaasu_Disableable, 0, jl_Object, [], 3, 3, 0, 0,
iaasu_Button, 0, iaasul_Table, [iaasu_Disableable], 0, 3, 0, 0,
iaasu_TextButton, 0, iaasu_Button, [], 0, 3, 0, 0,
ju_Iterator, "Iterator", 1, jl_Object, [], 3, 3, 0, 0,
iaac_Array$ArrayIterable$ArrayIterator, 0, jl_Object, [ju_Iterator], 0, 0, 0, ["$hasNext", function() { return iaac_Array$ArrayIterable$ArrayIterator_hasNext(this); }, "$next0", function() { return iaac_Array$ArrayIterable$ArrayIterator_next(this); }, "$remove0", function() { iaac_Array$ArrayIterable$ArrayIterator_remove(this); }],
it_BulletType, 0, jl_Object, [], 0, 3, 0, ["$draw11", function(var_1) { it_BulletType_draw(this, var_1); }, "$draw12", function(var_1) { it_BulletType_draw0(this, var_1); }, "$update5", function(var_1) { it_BulletType_update(this, var_1); }, "$init", function(var_1) { it_BulletType_init(this, var_1); }, "$solid0", function(var_1, var_2) { return it_BulletType_solid(this, var_1, var_2); }, "$drawLight", function(var_1) { it_BulletType_drawLight(this, var_1); }, "$despawn", function(var_1) { it_BulletType_despawn(this,
var_1); }, "$hit3", function(var_1) { it_BulletType_hit(this, var_1); }],
iw_Tile, 0, jl_Object, [], 0, 3, 0, ["$solid1", function() { return iw_Tile_solid(this); }],
jur_CompositeQuantifierSet, "CompositeQuantifierSet", 2, jur_LeafQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_CompositeQuantifierSet_matches(this, var_1, var_2, var_3); }, "$getName", function() { return jur_CompositeQuantifierSet_getName(this); }],
jur_SupplRangeSet, "SupplRangeSet", 2, jur_JointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_SupplRangeSet_matches(this, var_1, var_2, var_3); }, "$getName", function() { return jur_SupplRangeSet_getName(this); }, "$contains", function(var_1) { return jur_SupplRangeSet_contains(this, var_1); }, "$first", function(var_1) { return jur_SupplRangeSet_first(this, var_1); }, "$getChars0", function() { return jur_SupplRangeSet_getChars(this); }, "$setNext", function(var_1) { jur_SupplRangeSet_setNext(this,
var_1); }, "$hasConsumed", function(var_1) { return jur_SupplRangeSet_hasConsumed(this, var_1); }],
otcjl_TException, 0, otcjl_TThrowable, [], 0, 3, 0, 0,
otcjl_TRuntimeException, 0, otcjl_TException, [], 0, 3, 0, 0,
otcjl_TIllegalArgumentException, 0, otcjl_TRuntimeException, [], 0, 3, 0, 0,
it_Bullets$9$lambda$null$6$lambda$_8_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Bullets$9$lambda$null$6$lambda$_8_0_get(this, var_1); }],
jl_String, "String", 6, jl_Object, [ji_Serializable, jl_Comparable, jl_CharSequence], 0, 3, jl_String_$callClinit, ["$initWithBytes", function(var_1, var_2, var_3, var_4) { jl_String_initWithBytes(this, var_1, var_2, var_3, var_4); }, "$charAt", function(var_1) { return jl_String_charAt(this, var_1); }, "$length", function() { return jl_String_length(this); }, "$isEmpty", function() { return jl_String_isEmpty(this); }, "$compareTo0", function(var_1) { return jl_String_compareTo(this, var_1); }, "$startsWith0",
function(var_1, var_2) { return jl_String_startsWith(this, var_1, var_2); }, "$startsWith", function(var_1) { return jl_String_startsWith0(this, var_1); }, "$endsWith", function(var_1) { return jl_String_endsWith(this, var_1); }, "$indexOf1", function(var_1, var_2) { return jl_String_indexOf(this, var_1, var_2); }, "$indexOf3", function(var_1) { return jl_String_indexOf0(this, var_1); }, "$lastIndexOf0", function(var_1, var_2) { return jl_String_lastIndexOf(this, var_1, var_2); }, "$lastIndexOf", function(var_1)
{ return jl_String_lastIndexOf0(this, var_1); }, "$indexOf0", function(var_1, var_2) { return jl_String_indexOf1(this, var_1, var_2); }, "$indexOf4", function(var_1) { return jl_String_indexOf2(this, var_1); }, "$lastIndexOf1", function(var_1, var_2) { return jl_String_lastIndexOf1(this, var_1, var_2); }, "$lastIndexOf2", function(var_1) { return jl_String_lastIndexOf2(this, var_1); }, "$substring0", function(var_1, var_2) { return jl_String_substring(this, var_1, var_2); }, "$substring", function(var_1) { return jl_String_substring0(this,
var_1); }, "$subSequence", function(var_1, var_2) { return jl_String_subSequence(this, var_1, var_2); }, "$replace0", function(var_1, var_2) { return jl_String_replace(this, var_1, var_2); }, "$contains0", function(var_1) { return jl_String_contains(this, var_1); }, "$replace", function(var_1, var_2) { return jl_String_replace0(this, var_1, var_2); }, "$trim", function() { return jl_String_trim(this); }, "$toString", function() { return jl_String_toString(this); }, "$toCharArray", function() { return jl_String_toCharArray(this);
}, "$equals", function(var_1) { return jl_String_equals(this, var_1); }, "$equalsIgnoreCase", function(var_1) { return jl_String_equalsIgnoreCase(this, var_1); }, "$hashCode", function() { return jl_String_hashCode(this); }, "$toLowerCase1", function() { return jl_String_toLowerCase(this); }, "$toUpperCase", function() { return jl_String_toUpperCase(this); }, "$split", function(var_1) { return jl_String_split(this, var_1); }, "$split4", function(var_1, var_2) { return jl_String_split0(this, var_1, var_2); },
"$replaceAll0", function(var_1, var_2) { return jl_String_replaceAll(this, var_1, var_2); }, "$compareTo1", function(var_1) { return jl_String_compareTo0(this, var_1); }],
it_Phases$1$lambda$null$3$lambda$_21_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$1$lambda$null$3$lambda$_21_0_run(this); }],
jnci_BufferedEncoder, 0, jnc_CharsetEncoder, [], 1, 3, 0, ["$encodeLoop", function(var_1, var_2) { return jnci_BufferedEncoder_encodeLoop(this, var_1, var_2); }],
jnci_UTF8Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, ["$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF8Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }]]);
$rt_metadata([ju_Dictionary, 0, jl_Object, [], 1, 3, 0, 0,
ju_Map, 0, jl_Object, [], 3, 3, 0, 0,
ju_Hashtable, 0, ju_Dictionary, [ju_Map, jl_Cloneable, ji_Serializable], 0, 3, ju_Hashtable_$callClinit, ["$newElementArray", function(var_1) { return ju_Hashtable_newElementArray(this, var_1); }, "$computeMaxSize", function() { ju_Hashtable_computeMaxSize(this); }, "$get9", function(var_1) { return ju_Hashtable_get(this, var_1); }, "$put", function(var_1, var_2) { return ju_Hashtable_put(this, var_1, var_2); }, "$rehash", function() { ju_Hashtable_rehash(this); }],
ju_Properties, 0, ju_Hashtable, [], 0, 3, 0, ["$getProperty", function(var_1) { return ju_Properties_getProperty(this, var_1); }],
cjj_ZStream, 0, jl_Object, [], 128, 3, 0, ["$setOutput", function(var_1, var_2, var_3) { cjj_ZStream_setOutput(this, var_1, var_2, var_3); }, "$setInput0", function(var_1, var_2, var_3, var_4) { cjj_ZStream_setInput(this, var_1, var_2, var_3, var_4); }, "$getTotalOut0", function() { return cjj_ZStream_getTotalOut(this); }],
iaa_ApplicationListener, "ApplicationListener", 17, jl_Object, [], 3, 3, 0, ["$init0", function() { iaa_ApplicationListener_init(this); }, "$resize1", function(var_1, var_2) { iaa_ApplicationListener_resize(this, var_1, var_2); }, "$update1", function() { iaa_ApplicationListener_update(this); }],
it_Phases$lambda$null$8$lambda$_59_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$lambda$null$8$lambda$_59_0_get(this, var_1); }],
jnci_UTF8Charset, 0, jnc_Charset, [], 0, 3, 0, ["$newDecoder", function() { return jnci_UTF8Charset_newDecoder(this); }, "$newEncoder", function() { return jnci_UTF8Charset_newEncoder(this); }],
otjde_EventTarget, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0,
otjde_KeyboardEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0,
iaaus_BaseJsonReader, 0, jl_Object, [], 3, 3, 0, 0,
jur_MultiLineEOLSet, "MultiLineEOLSet", 2, jur_AbstractSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_MultiLineEOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_MultiLineEOLSet_hasConsumed(this, var_1); }, "$getName", function() { return jur_MultiLineEOLSet_getName(this); }],
iaat_Parser$1, 0, jl_Object, [], 32, 0, iaat_Parser$1_$callClinit, 0,
ji_Reader, 0, jl_Object, [ji_Closeable], 1, 3, 0, 0,
ji_BufferedReader, 0, ji_Reader, [], 0, 3, 0, ["$readLine", function() { return ji_BufferedReader_readLine(this); }, "$fillBuffer", function(var_1) { return ji_BufferedReader_fillBuffer(this, var_1); }, "$requireOpened", function() { ji_BufferedReader_requireOpened(this); }],
ie_ScaleTrait, 0, jl_Object, [], 3, 3, 0, ["$fout", function() { return ie_ScaleTrait_fout(this); }, "$fout0", function(var_1) { return ie_ScaleTrait_fout0(this, var_1); }, "$fin0", function(var_1) { return ie_ScaleTrait_fin(this, var_1); }, "$finpow", function() { return ie_ScaleTrait_finpow(this); }, "$fslope", function() { return ie_ScaleTrait_fslope(this); }],
ju_Collection, 0, jl_Object, [jl_Iterable], 3, 3, 0, 0,
ju_AbstractCollection, 0, jl_Object, [ju_Collection], 1, 3, 0, ["$toArray", function(var_1) { return ju_AbstractCollection_toArray(this, var_1); }],
ju_Queue, 0, jl_Object, [ju_Collection], 3, 3, 0, 0,
ju_Deque, 0, jl_Object, [ju_Queue], 3, 3, 0, 0,
ju_ArrayDeque, 0, ju_AbstractCollection, [ju_Deque], 0, 3, 0, ["$addLast", function(var_1) { ju_ArrayDeque_addLast(this, var_1); }, "$pollFirst", function() { return ju_ArrayDeque_pollFirst(this); }, "$add7", function(var_1) { return ju_ArrayDeque_add(this, var_1); }, "$poll", function() { return ju_ArrayDeque_poll(this); }, "$size0", function() { return ju_ArrayDeque_size(this); }, "$ensureCapacity", function(var_1) { ju_ArrayDeque_ensureCapacity(this, var_1); }],
it_Phases$1$lambda$null$12$lambda$_12_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$1$lambda$null$12$lambda$_12_0_get(this, var_1); }],
juz_Inflater, 0, jl_Object, [], 0, 3, 0, ["$finished", function() { return juz_Inflater_finished(this); }, "$getBytesWritten", function() { return juz_Inflater_getBytesWritten(this); }, "$getRemaining", function() { return juz_Inflater_getRemaining(this); }, "$getTotalOut", function() { return juz_Inflater_getTotalOut(this); }, "$inflate", function(var_1, var_2, var_3) { return juz_Inflater_inflate(this, var_1, var_2, var_3); }, "$needsDictionary", function() { return juz_Inflater_needsDictionary(this); }, "$needsInput",
function() { return juz_Inflater_needsInput(this); }, "$setInput", function(var_1, var_2, var_3) { juz_Inflater_setInput(this, var_1, var_2, var_3); }],
iaaf_Cons2, "Cons2", 24, jl_Object, [], 3, 3, 0, 0,
ju_HashMap$AbstractMapIterator, 0, jl_Object, [], 0, 0, 0, ["$hasNext", function() { return ju_HashMap$AbstractMapIterator_hasNext(this); }, "$checkConcurrentMod", function() { ju_HashMap$AbstractMapIterator_checkConcurrentMod(this); }, "$makeNext", function() { ju_HashMap$AbstractMapIterator_makeNext(this); }],
otcir_Converter, 0, jl_Object, [], 4, 3, 0, 0,
iaam_Interpolation$BounceOut, 0, iaam_Interpolation, [], 0, 3, 0, ["$apply", function(var_1) { return iaam_Interpolation$BounceOut_apply(this, var_1); }],
iaam_Interpolation$Bounce, 0, iaam_Interpolation$BounceOut, [], 0, 3, 0, 0,
i_UI$1, 0, jl_Object, [iaat_TypingListener], 0, 0, 0, ["$event", function(var_1) { i_UI$1_event(this, var_1); }, "$end", function() { iaat_TypingListener_end(this); }, "$replaceVariable", function(var_1) { return iaat_TypingListener_replaceVariable(this, var_1); }, "$onChar", function(var_1) { iaat_TypingListener_onChar(this, var_1); }],
iaa_Application, 0, jl_Object, [iaau_Disposable], 3, 3, 0, 0,
iaabt_TeaApplication, "TeaApplication", 35, jl_Object, [iaa_Application], 0, 3, 0, ["$start3", function() { iaabt_TeaApplication_start(this); }, "$startArc", function() { iaabt_TeaApplication_startArc(this); }, "$delayedStep", function() { iaabt_TeaApplication_delayedStep(this); }, "$step", function() { iaabt_TeaApplication_step(this); }, "$listen", function(var_1) { iaabt_TeaApplication_listen(this, var_1); }, "$post", function(var_1) { iaabt_TeaApplication_post(this, var_1); }, "$getType0", function() { return iaabt_TeaApplication_getType(this);
}, "$exit", function() { iaabt_TeaApplication_exit(this); }, "$lambda$step$2", function(var_1) { iaabt_TeaApplication_lambda$step$2(this, var_1); }, "$lambda$delayedStep$1", function(var_1) { iaabt_TeaApplication_lambda$delayedStep$1(this, var_1); }, "$lambda$startArc$0", function(var_1) { iaabt_TeaApplication_lambda$startArc$0(this, var_1); }],
jl_Object$Monitor, 0, jl_Object, [], 0, 0, 0, 0,
it_Fx$_clinit_$lambda$_32_10, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_10_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_10_get0(this, var_1); }],
it_Phases$lambda$null$7$lambda$_60_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$lambda$null$7$lambda$_60_0_get(this, var_1); }],
iaa_Application$ApplicationType, 0, jl_Enum, [], 12, 3, iaa_Application$ApplicationType_$callClinit, 0,
it_TeaVMLauncher, 0, jl_Object, [], 0, 3, 0, 0,
iaai_InputProcessor, "InputProcessor", 18, jl_Object, [], 3, 3, 0, ["$keyTyped", function(var_1) { return iaai_InputProcessor_keyTyped(this, var_1); }, "$touchDragged", function(var_1, var_2, var_3) { return iaai_InputProcessor_touchDragged(this, var_1, var_2, var_3); }, "$mouseMoved", function(var_1, var_2) { return iaai_InputProcessor_mouseMoved(this, var_1, var_2); }],
iaai_KeyboardDevice, "KeyboardDevice", 18, iaai_InputDevice, [iaai_InputProcessor], 0, 3, 0, ["$update1", function() { iaai_KeyboardDevice_update(this); }, "$isKeyPressed", function(var_1) { return iaai_KeyboardDevice_isKeyPressed(this, var_1); }, "$isKeyTapped", function(var_1) { return iaai_KeyboardDevice_isKeyTapped(this, var_1); }, "$getAxis", function(var_1) { return iaai_KeyboardDevice_getAxis(this, var_1); }, "$keyDown", function(var_1) { return iaai_KeyboardDevice_keyDown(this, var_1); }, "$keyUp", function(var_1)
{ return iaai_KeyboardDevice_keyUp(this, var_1); }, "$touchDown", function(var_1, var_2, var_3, var_4) { return iaai_KeyboardDevice_touchDown(this, var_1, var_2, var_3, var_4); }, "$touchUp", function(var_1, var_2, var_3, var_4) { return iaai_KeyboardDevice_touchUp(this, var_1, var_2, var_3, var_4); }, "$scrolled", function(var_1, var_2) { return iaai_KeyboardDevice_scrolled(this, var_1, var_2); }, "$type3", function() { return iaai_KeyboardDevice_type(this); }, "$keyTyped", function(var_1) { return iaai_InputProcessor_keyTyped(this,
var_1); }, "$touchDragged", function(var_1, var_2, var_3) { return iaai_InputProcessor_touchDragged(this, var_1, var_2, var_3); }, "$mouseMoved", function(var_1, var_2) { return iaai_InputProcessor_mouseMoved(this, var_1, var_2); }],
ju_List, 0, jl_Object, [ju_Collection], 3, 3, 0, 0,
it_Bullets$12$draw$lambda$_2_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Bullets$12$draw$lambda$_2_0_run(this); }],
ju_Comparator, "Comparator", 1, jl_Object, [], 3, 3, 0, 0,
jl_String$_clinit_$lambda$_81_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0,
iaagg_Draw, 0, jl_Object, [], 0, 3, iaagg_Draw_$callClinit, 0,
it_Phases$2, "Phases$2", 44, it_Phases$Phase, [], 4, 0, 0, ["$update1", function() { it_Phases$2_update(this); }],
it_Phases$1, "Phases$1", 44, it_Phases$Phase, [], 4, 0, 0, ["$update1", function() { it_Phases$1_update(this); }],
it_Phases$4, "Phases$4", 44, it_Phases$Phase, [], 4, 0, 0, ["$update1", function() { it_Phases$4_update(this); }, "$begin", function() { it_Phases$4_begin(this); }, "$reset", function() { it_Phases$4_reset(this); }],
it_Phases$3, "Phases$3", 44, it_Phases$Phase, [], 4, 0, 0, ["$update1", function() { it_Phases$3_update(this); }, "$reset", function() { it_Phases$3_reset(this); }, "$lambda$update$25", function() { it_Phases$3_lambda$update$25(this); }, "$lambda$null$24", function() { it_Phases$3_lambda$null$24(this); }],
it_Phases$6, "Phases$6", 44, it_Phases$Phase, [], 4, 0, 0, ["$update1", function() { it_Phases$6_update(this); }, "$begin", function() { it_Phases$6_begin(this); }, "$reset", function() { it_Phases$6_reset(this); }],
it_Phases$5, "Phases$5", 44, it_Phases$Phase, [], 4, 0, 0, ["$update1", function() { it_Phases$5_update(this); }],
otcju_TCollection, 0, jl_Object, [otcjl_TIterable], 3, 3, 0, 0]);
$rt_metadata([it_Fx$_clinit_$lambda$_32_22, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_22_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_22_get0(this, var_1); }],
jn_BufferOverflowException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
iaagg_GlyphLayout, "GlyphLayout", 32, jl_Object, [iaaup_Pool$Poolable], 0, 3, 0, ["$setText2", function(var_1, var_2, var_3, var_4, var_5, var_6) { iaagg_GlyphLayout_setText(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$setText0", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { iaagg_GlyphLayout_setText0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$truncate", function(var_1, var_2, var_3, var_4, var_5, var_6) { iaagg_GlyphLayout_truncate(this, var_1,
var_2, var_3, var_4, var_5, var_6); }, "$wrap3", function(var_1, var_2, var_3, var_4, var_5) { return iaagg_GlyphLayout_wrap(this, var_1, var_2, var_3, var_4, var_5); }, "$adjustLastGlyph", function(var_1, var_2) { iaagg_GlyphLayout_adjustLastGlyph(this, var_1, var_2); }, "$parseColorMarkup", function(var_1, var_2, var_3, var_4) { return iaagg_GlyphLayout_parseColorMarkup(this, var_1, var_2, var_3, var_4); }, "$reset", function() { iaagg_GlyphLayout_reset(this); }, "$toString", function() { return iaagg_GlyphLayout_toString(this);
}],
jn_ShortBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, ["$get23", function(var_1, var_2, var_3) { return jn_ShortBuffer_get(this, var_1, var_2, var_3); }, "$get63", function(var_1) { return jn_ShortBuffer_get0(this, var_1); }, "$put9", function(var_1, var_2, var_3) { return jn_ShortBuffer_put(this, var_1, var_2, var_3); }, "$hasArray", function() { return jn_ShortBuffer_hasArray(this); }, "$array8", function() { return jn_ShortBuffer_array(this); }, "$clear5", function() { return jn_ShortBuffer_clear(this);
}, "$flip3", function() { return jn_ShortBuffer_flip(this); }, "$limit3", function(var_1) { return jn_ShortBuffer_limit(this, var_1); }, "$position7", function(var_1) { return jn_ShortBuffer_position(this, var_1); }, "$flip", function() { return jn_ShortBuffer_flip0(this); }, "$clear2", function() { return jn_ShortBuffer_clear0(this); }, "$limit0", function(var_1) { return jn_ShortBuffer_limit0(this, var_1); }, "$position", function(var_1) { return jn_ShortBuffer_position0(this, var_1); }],
iaas_Action, 0, jl_Object, [iaaup_Pool$Poolable], 1, 3, 0, 0,
it_Phases$4$lambda$null$4$lambda$_13_0, 0, jl_Object, [it_Bullet$Mover], 0, 3, 0, ["$move2", function(var_1) { return it_Phases$4$lambda$null$4$lambda$_13_0_move(this, var_1); }],
iaa_KeyBinds, 0, jl_Object, [], 0, 3, 0, ["$setDefaults", function(var_1, var_2) { iaa_KeyBinds_setDefaults(this, var_1, var_2); }, "$load", function() { iaa_KeyBinds_load(this); }, "$load2", function(var_1) { return iaa_KeyBinds_load0(this, var_1); }, "$get13", function(var_1) { return iaa_KeyBinds_get(this, var_1); }, "$get24", function(var_1, var_2) { return iaa_KeyBinds_get0(this, var_1, var_2); }, "$get25", function(var_1, var_2, var_3) { return iaa_KeyBinds_get1(this, var_1, var_2, var_3); }],
jur_AbstractCharClass$LazyJavaLetterOrDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue(this); }],
otciu_UnicodeHelper$Range, "UnicodeHelper$Range", 13, jl_Object, [], 0, 3, 0, 0,
iaagg_HdpiUtils, 0, jl_Object, [], 0, 3, iaagg_HdpiUtils_$callClinit, 0,
iaau_NetJavaImpl, 0, jl_Object, [], 0, 3, 0, 0,
jur_AbstractLineTerminator, 0, jl_Object, [], 1, 0, 0, 0,
jur_AbstractLineTerminator$2, 0, jur_AbstractLineTerminator, [], 4, 0, 0, ["$isLineTerminator", function(var_1) { return jur_AbstractLineTerminator$2_isLineTerminator(this, var_1); }, "$isAfterLineTerminator", function(var_1, var_2) { return jur_AbstractLineTerminator$2_isAfterLineTerminator(this, var_1, var_2); }],
iaas_Element$fire$lambda$_9_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Element$fire$lambda$_9_0_get(this); }, "$get26", function() { return iaas_Element$fire$lambda$_9_0_get0(this); }],
jur_AbstractLineTerminator$1, 0, jur_AbstractLineTerminator, [], 4, 0, 0, ["$isLineTerminator", function(var_1) { return jur_AbstractLineTerminator$1_isLineTerminator(this, var_1); }, "$isAfterLineTerminator", function(var_1, var_2) { return jur_AbstractLineTerminator$1_isAfterLineTerminator(this, var_1, var_2); }],
jl_NoClassDefFoundError, 0, jl_LinkageError, [], 0, 3, 0, 0,
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue(this); }],
it_Phases$3$lambda$$19$lambda$_13_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$3$lambda$$19$lambda$_13_0_run(this); }],
iaau_Time$run$lambda$_1_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaau_Time$run$lambda$_1_0_get(this); }, "$get27", function() { return iaau_Time$run$lambda$_1_0_get0(this); }],
it_Phases$1$lambda$null$21$lambda$_3_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$1$lambda$null$21$lambda$_3_0_get(this, var_1); }],
it_Fx$_clinit_$lambda$_32_15, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_15_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_15_get0(this, var_1); }],
it_Fx$_clinit_$lambda$_32_16, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_16_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_16_get0(this, var_1); }],
it_Fx$_clinit_$lambda$_32_17, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_17_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_17_get0(this, var_1); }],
otci_CharFlow, 0, jl_Object, [], 0, 3, 0, 0,
it_Fx$_clinit_$lambda$_32_18, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_18_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_18_get0(this, var_1); }],
jur_RangeSet, "RangeSet", 2, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_RangeSet_accepts(this, var_1, var_2); }, "$getName", function() { return jur_RangeSet_getName(this); }, "$first", function(var_1) { return jur_RangeSet_first(this, var_1); }, "$getChars0", function() { return jur_RangeSet_getChars(this); }],
i_World, "World", 41, jl_Object, [iaa_ApplicationListener], 0, 3, 0, ["$each", function(var_1) { i_World_each(this, var_1); }, "$updateShadowed", function() { i_World_updateShadowed(this); }, "$wallDetonate", function() { i_World_wallDetonate(this); }, "$wallExtinguish", function() { i_World_wallExtinguish(this); }, "$wallUndetonate", function() { i_World_wallUndetonate(this); }, "$statue", function() { return i_World_statue(this); }, "$candles", function() { return i_World_candles(this); }, "$getObjects", function()
{ return i_World_getObjects(this); }, "$width4", function() { return i_World_width(this); }, "$height4", function() { return i_World_height(this); }, "$world", function(var_1) { return i_World_world(this, var_1); }, "$solid0", function(var_1, var_2) { return i_World_solid(this, var_1, var_2); }, "$tile", function(var_1, var_2) { return i_World_tile(this, var_1, var_2); }, "$tileOpt", function(var_1, var_2) { return i_World_tileOpt(this, var_1, var_2); }, "$init0", function() { iaa_ApplicationListener_init(this);
}, "$resize1", function(var_1, var_2) { iaa_ApplicationListener_resize(this, var_1, var_2); }, "$update1", function() { iaa_ApplicationListener_update(this); }],
it_Fx$_clinit_$lambda$_32_11, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_11_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_11_get0(this, var_1); }],
it_Bullets$12, 0, it_BulletType, [], 4, 0, 0, ["$init", function(var_1) { it_Bullets$12_init(this, var_1); }, "$draw12", function(var_1) { it_Bullets$12_draw(this, var_1); }],
iaac_ObjectIntMap$MapIterator, 0, jl_Object, [], 0, 0, 0, 0,
iaac_ObjectIntMap$Keys, "ObjectIntMap$Keys", 30, iaac_ObjectIntMap$MapIterator, [jl_Iterable, ju_Iterator], 0, 3, 0, 0,
it_Fx$_clinit_$lambda$_32_12, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_12_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_12_get0(this, var_1); }],
it_Bullets$11, 0, it_BulletType, [], 4, 0, 0, ["$init", function(var_1) { it_Bullets$11_init(this, var_1); }, "$draw11", function(var_1) { it_Bullets$11_draw(this, var_1); }],
it_Fx$_clinit_$lambda$_32_13, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_13_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_13_get0(this, var_1); }],
it_Fx$_clinit_$lambda$_32_14, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_14_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_14_get0(this, var_1); }],
otcjl_TObject, 0, jl_Object, [], 0, 3, 0, 0,
otcju_TMap, 0, jl_Object, [], 3, 3, 0, 0,
otcju_TAbstractMap, 0, otcjl_TObject, [otcju_TMap], 1, 3, 0, 0,
otjt_Float32Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0,
iaam_Interpolation$SwingIn, 0, iaam_Interpolation, [], 0, 3, 0, 0,
iaac_Array, "Array", 30, jl_Object, [jl_Iterable], 0, 3, iaac_Array_$callClinit, ["$each", function(var_1) { iaac_Array_each(this, var_1); }, "$replace1", function(var_1) { iaac_Array_replace(this, var_1); }, "$find1", function(var_1) { return iaac_Array_find(this, var_1); }, "$add1", function(var_1) { iaac_Array_add(this, var_1); }, "$addAll", function(var_1) { iaac_Array_addAll(this, var_1); }, "$addAll4", function(var_1, var_2, var_3) { iaac_Array_addAll0(this, var_1, var_2, var_3); }, "$addAll6", function(var_1)
{ iaac_Array_addAll1(this, var_1); }, "$addAll5", function(var_1, var_2, var_3) { iaac_Array_addAll2(this, var_1, var_2, var_3); }, "$get", function(var_1) { return iaac_Array_get(this, var_1); }, "$set20", function(var_1, var_2) { iaac_Array_set(this, var_1, var_2); }, "$contains1", function(var_1, var_2) { return iaac_Array_contains(this, var_1, var_2); }, "$indexOf2", function(var_1) { return iaac_Array_indexOf(this, var_1); }, "$indexOf", function(var_1, var_2) { return iaac_Array_indexOf0(this, var_1, var_2);
}, "$removeValue", function(var_1, var_2) { return iaac_Array_removeValue(this, var_1, var_2); }, "$remove", function(var_1) { return iaac_Array_remove(this, var_1); }, "$removeRange", function(var_1, var_2) { iaac_Array_removeRange(this, var_1, var_2); }, "$removeAll0", function(var_1) { return iaac_Array_removeAll(this, var_1); }, "$removeAll", function(var_1, var_2) { return iaac_Array_removeAll0(this, var_1, var_2); }, "$pop", function() { return iaac_Array_pop(this); }, "$peek", function() { return iaac_Array_peek(this);
}, "$first0", function() { return iaac_Array_first(this); }, "$isEmpty", function() { return iaac_Array_isEmpty(this); }, "$clear", function() { iaac_Array_clear(this); }, "$ensureCapacity0", function(var_1) { return iaac_Array_ensureCapacity(this, var_1); }, "$setSize3", function(var_1) { return iaac_Array_setSize(this, var_1); }, "$resize3", function(var_1) { return iaac_Array_resize(this, var_1); }, "$sort3", function() { iaac_Array_sort(this); }, "$sort", function(var_1) { iaac_Array_sort0(this, var_1);
}, "$reverse", function() { iaac_Array_reverse(this); }, "$truncate0", function(var_1) { iaac_Array_truncate(this, var_1); }, "$random1", function() { return iaac_Array_random(this); }, "$random2", function(var_1) { return iaac_Array_random0(this, var_1); }, "$toArray1", function(var_1) { return iaac_Array_toArray(this, var_1); }, "$equals", function(var_1) { return iaac_Array_equals(this, var_1); }, "$toString", function() { return iaac_Array_toString(this); }, "$iterator", function() { return iaac_Array_iterator(this);
}],
iaac_DelayedRemovalArray, 0, iaac_Array, [], 0, 3, 0, ["$begin", function() { iaac_DelayedRemovalArray_begin(this); }, "$end", function() { iaac_DelayedRemovalArray_end(this); }, "$removeIntern", function(var_1) { iaac_DelayedRemovalArray_removeIntern(this, var_1); }, "$remove", function(var_1) { return iaac_DelayedRemovalArray_remove(this, var_1); }, "$clear", function() { iaac_DelayedRemovalArray_clear(this); }],
it_Bullets$10, 0, it_BulletType, [], 4, 0, 0, ["$draw11", function(var_1) { it_Bullets$10_draw(this, var_1); }],
jur_CharClass, "CharClass", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$add", function(var_1) { return jur_CharClass_add(this, var_1); }, "$add18", function(var_1) { return jur_CharClass_add0(this, var_1); }, "$add0", function(var_1, var_2) { return jur_CharClass_add1(this, var_1, var_2); }, "$union", function(var_1) { jur_CharClass_union(this, var_1); }, "$intersection", function(var_1) { jur_CharClass_intersection(this, var_1); }, "$contains", function(var_1) { return jur_CharClass_contains(this, var_1); },
"$getBits", function() { return jur_CharClass_getBits(this); }, "$getLowHighSurrogates", function() { return jur_CharClass_getLowHighSurrogates(this); }, "$getInstance", function() { return jur_CharClass_getInstance(this); }, "$toString", function() { return jur_CharClass_toString(this); }, "$hasUCI0", function() { return jur_CharClass_hasUCI(this); }],
it_Fx$_clinit_$lambda$_32_19, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_19_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_19_get0(this, var_1); }],
jn_BufferUnderflowException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
iaagg_HdpiMode, 0, jl_Enum, [], 12, 3, iaagg_HdpiMode_$callClinit, 0,
iaagg_Fill, 0, jl_Object, [], 0, 3, iaagg_Fill_$callClinit, 0,
iaac_ObjectIntMap$Entries, "ObjectIntMap$Entries", 30, iaac_ObjectIntMap$MapIterator, [jl_Iterable, ju_Iterator], 0, 3, 0, 0,
iaaa_AssetLoaderParameters, 0, jl_Object, [], 0, 3, 0, 0]);
$rt_metadata([iaac_ObjectIntMap, "ObjectIntMap", 30, jl_Object, [jl_Iterable], 0, 3, 0, ["$put5", function(var_1, var_2) { iaac_ObjectIntMap_put(this, var_1, var_2); }, "$putResize0", function(var_1, var_2) { iaac_ObjectIntMap_putResize(this, var_1, var_2); }, "$push0", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { iaac_ObjectIntMap_push(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }, "$putStash0", function(var_1, var_2) { iaac_ObjectIntMap_putStash(this, var_1, var_2);
}, "$get37", function(var_1, var_2) { return iaac_ObjectIntMap_get(this, var_1, var_2); }, "$getStash0", function(var_1, var_2) { return iaac_ObjectIntMap_getStash(this, var_1, var_2); }, "$resize", function(var_1) { iaac_ObjectIntMap_resize(this, var_1); }, "$hash2", function(var_1) { return iaac_ObjectIntMap_hash2(this, var_1); }, "$hash3", function(var_1) { return iaac_ObjectIntMap_hash3(this, var_1); }],
jn_FloatBufferOverByteBufferLittleEndian, "FloatBufferOverByteBufferLittleEndian", 3, jn_FloatBufferOverByteBuffer, [], 0, 0, 0, ["$duplicate", function(var_1, var_2, var_3, var_4, var_5) { return jn_FloatBufferOverByteBufferLittleEndian_duplicate(this, var_1, var_2, var_3, var_4, var_5); }, "$getElement0", function(var_1) { return jn_FloatBufferOverByteBufferLittleEndian_getElement(this, var_1); }, "$putElement0", function(var_1, var_2) { jn_FloatBufferOverByteBufferLittleEndian_putElement(this, var_1, var_2);
}],
it_Fx$_clinit_$lambda$_32_20, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_20_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_20_get0(this, var_1); }],
it_Fx$_clinit_$lambda$_32_21, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Fx$_clinit_$lambda$_32_21_get(this, var_1); }, "$get8", function(var_1) { it_Fx$_clinit_$lambda$_32_21_get0(this, var_1); }],
ji_IOException, 0, jl_Exception, [], 0, 3, 0, 0,
jnc_CharacterCodingException, 0, ji_IOException, [], 0, 3, 0, 0,
jnc_MalformedInputException, 0, jnc_CharacterCodingException, [], 0, 3, 0, ["$getMessage", function() { return jnc_MalformedInputException_getMessage(this); }],
iaas_Scene$setKeyboardFocus$lambda$_43_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Scene$setKeyboardFocus$lambda$_43_0_get(this); }, "$get31", function() { return iaas_Scene$setKeyboardFocus$lambda$_43_0_get0(this); }],
iaau_ScreenRecorder, 0, jl_Object, [], 0, 3, iaau_ScreenRecorder_$callClinit, 0,
iaam_MapObject, 0, jl_Object, [], 0, 3, 0, 0,
iaamo_TextureMapObject, 0, iaam_MapObject, [], 0, 3, 0, 0,
iaamo_TileMapObject, "TileMapObject", 23, iaamo_TextureMapObject, [], 0, 3, 0, 0,
ig_Effects$Effect, 0, jl_Object, [], 0, 3, ig_Effects$Effect_$callClinit, ["$at", function(var_1, var_2) { ig_Effects$Effect_at(this, var_1, var_2); }, "$at0", function(var_1, var_2, var_3) { ig_Effects$Effect_at0(this, var_1, var_2, var_3); }, "$at1", function(var_1, var_2, var_3) { ig_Effects$Effect_at1(this, var_1, var_2, var_3); }, "$at2", function(var_1, var_2, var_3) { ig_Effects$Effect_at2(this, var_1, var_2, var_3); }, "$at3", function(var_1, var_2, var_3, var_4) { ig_Effects$Effect_at3(this, var_1,
var_2, var_3, var_4); }],
jl_CloneNotSupportedException, 0, jl_Exception, [], 0, 3, 0, 0,
jn_ShortBufferImpl, 0, jn_ShortBuffer, [], 1, 0, 0, ["$duplicate3", function() { return jn_ShortBufferImpl_duplicate(this); }, "$isReadOnly", function() { return jn_ShortBufferImpl_isReadOnly(this); }],
jn_ShortBufferOverByteBuffer, 0, jn_ShortBufferImpl, [], 1, 0, 0, ["$isArrayPresent", function() { return jn_ShortBufferOverByteBuffer_isArrayPresent(this); }, "$getArray1", function() { return jn_ShortBufferOverByteBuffer_getArray(this); }, "$readOnly", function() { return jn_ShortBufferOverByteBuffer_readOnly(this); }],
iaaus_Base64Coder, 0, jl_Object, [], 0, 3, iaaus_Base64Coder_$callClinit, 0,
iaabt_TeaFileLoader$QueuedTaskExecutor, 0, jl_Object, [iaabt_TeaFileLoader$TaskHandler], 0, 0, 0, ["$complete0", function() { iaabt_TeaFileLoader$QueuedTaskExecutor_complete(this); }, "$error0", function() { iaabt_TeaFileLoader$QueuedTaskExecutor_error(this); }],
it_Bullets$9$lambda$hit$8$lambda$_6_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Bullets$9$lambda$hit$8$lambda$_6_0_get(this, var_1); }],
jur_AbstractCharClass$LazyNonDigit, 0, jur_AbstractCharClass$LazyDigit, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyNonDigit_computeValue(this); }],
it_Fx$lambda$static$20$lambda$_11_0, 0, jl_Object, [iaaf_Floatc2], 0, 3, 0, ["$get56", function(var_1, var_2) { it_Fx$lambda$static$20$lambda$_11_0_get(this, var_1, var_2); }],
jur_CIBackReferenceSet, "CIBackReferenceSet", 2, jur_JointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_CIBackReferenceSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_CIBackReferenceSet_setNext(this, var_1); }, "$getString", function(var_1) { return jur_CIBackReferenceSet_getString(this, var_1); }, "$getName", function() { return jur_CIBackReferenceSet_getName(this); }, "$hasConsumed", function(var_1) { return jur_CIBackReferenceSet_hasConsumed(this, var_1);
}],
jur_AbstractCharClass$1, "AbstractCharClass$1", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$1_contains(this, var_1); }],
jur_AbstractCharClass$2, "AbstractCharClass$2", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$2_contains(this, var_1); }],
iaag_VertexAttributes, 0, jl_Object, [jl_Iterable, jl_Comparable], 4, 3, 0, ["$calculateOffsets", function() { return iaag_VertexAttributes_calculateOffsets(this); }, "$size0", function() { return iaag_VertexAttributes_size(this); }, "$get2", function(var_1) { return iaag_VertexAttributes_get(this, var_1); }],
otcjl_TCloneable, 0, jl_Object, [], 3, 3, 0, 0,
jur_PossessiveCompositeQuantifierSet, "PossessiveCompositeQuantifierSet", 2, jur_CompositeQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PossessiveCompositeQuantifierSet_matches(this, var_1, var_2, var_3); }],
it_Phases$5$lambda$null$10$lambda$_12_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$5$lambda$null$10$lambda$_12_1_run(this); }],
it_Phases$5$lambda$null$10$lambda$_12_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$5$lambda$null$10$lambda$_12_0_get(this, var_1); }],
otjde_LoadEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0,
iaabt_TeaFileLoader$1, 0, jl_Object, [iaabt_TeaFileLoader$TaskHandler], 4, 0, 0, ["$complete0", function() { iaabt_TeaFileLoader$1_complete(this); }, "$error0", function() { iaabt_TeaFileLoader$1_error(this); }],
iaamg_Position, 0, jl_Object, [], 3, 3, 0, ["$angleTo0", function(var_1) { return iaamg_Position_angleTo(this, var_1); }, "$angleTo", function(var_1, var_2) { return iaamg_Position_angleTo0(this, var_1, var_2); }, "$dst", function(var_1) { return iaamg_Position_dst(this, var_1); }, "$dst0", function(var_1, var_2) { return iaamg_Position_dst0(this, var_1, var_2); }, "$withinDst", function(var_1, var_2, var_3) { return iaamg_Position_withinDst(this, var_1, var_2, var_3); }],
iaa_Graphics, 0, jl_Object, [iaau_Disposable], 1, 3, 0, ["$clear9", function(var_1, var_2, var_3, var_4) { iaa_Graphics_clear(this, var_1, var_2, var_3, var_4); }, "$clear10", function(var_1) { iaa_Graphics_clear0(this, var_1); }],
iaabt_TeaGraphics, 0, iaa_Graphics, [], 0, 3, 0, ["$getBackBufferWidth", function() { return iaabt_TeaGraphics_getBackBufferWidth(this); }, "$getBackBufferHeight", function() { return iaabt_TeaGraphics_getBackBufferHeight(this); }, "$isGL30Available", function() { return iaabt_TeaGraphics_isGL30Available(this); }, "$getGL20", function() { return iaabt_TeaGraphics_getGL20(this); }, "$getWidth0", function() { return iaabt_TeaGraphics_getWidth(this); }, "$getHeight0", function() { return iaabt_TeaGraphics_getHeight(this);
}, "$getDeltaTime", function() { return iaabt_TeaGraphics_getDeltaTime(this); }, "$getFramesPerSecond", function() { return iaabt_TeaGraphics_getFramesPerSecond(this); }, "$getDensity", function() { return iaabt_TeaGraphics_getDensity(this); }, "$supportsExtension", function(var_1) { return iaabt_TeaGraphics_supportsExtension(this, var_1); }, "$requestRendering", function() { iaabt_TeaGraphics_requestRendering(this); }, "$update1", function() { iaabt_TeaGraphics_update(this); }],
iaam_Mathf, 0, jl_Object, [], 4, 3, iaam_Mathf_$callClinit, 0,
otci_Base46, 0, jl_Object, [], 4, 3, 0, 0,
cbgu_Disposable, 0, jl_Object, [], 3, 3, 0, 0,
jur_UCISequenceSet, "UCISequenceSet", 2, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_UCISequenceSet_accepts(this, var_1, var_2); }, "$getName", function() { return jur_UCISequenceSet_getName(this); }],
jur_AbstractCharClass$LazyJavaDefined$1, "AbstractCharClass$LazyJavaDefined$1", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$LazyJavaDefined$1_contains(this, var_1); }],
otjt_Int8Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0,
i_Renderer$update$lambda$_2_2, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { i_Renderer$update$lambda$_2_2_get(this, var_1); }, "$get32", function(var_1) { i_Renderer$update$lambda$_2_2_get0(this, var_1); }],
i_Renderer$update$lambda$_2_1, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { i_Renderer$update$lambda$_2_1_get(this, var_1); }, "$get33", function(var_1) { i_Renderer$update$lambda$_2_1_get0(this, var_1); }],
i_Renderer$update$lambda$_2_0, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { i_Renderer$update$lambda$_2_0_get(this, var_1); }, "$get34", function(var_1) { i_Renderer$update$lambda$_2_0_get0(this, var_1); }],
iaac_ObjectMap$MapIterator, 0, jl_Object, [jl_Iterable, ju_Iterator], 1, 0, 0, ["$reset", function() { iaac_ObjectMap$MapIterator_reset(this); }, "$findNextIndex", function() { iaac_ObjectMap$MapIterator_findNextIndex(this); }],
iaac_ObjectMap$Values, "ObjectMap$Values", 30, iaac_ObjectMap$MapIterator, [], 0, 3, 0, 0,
jur_CompositeRangeSet, "CompositeRangeSet", 2, jur_JointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_CompositeRangeSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_CompositeRangeSet_setNext(this, var_1); }, "$getName", function() { return jur_CompositeRangeSet_getName(this); }, "$hasConsumed", function(var_1) { return jur_CompositeRangeSet_hasConsumed(this, var_1); }, "$first", function(var_1) { return jur_CompositeRangeSet_first(this, var_1); }],
it_Fx$lambda$static$26$lambda$_5_0, 0, jl_Object, [iaaf_Floatc2], 0, 3, 0, ["$get56", function(var_1, var_2) { it_Fx$lambda$static$26$lambda$_5_0_get(this, var_1, var_2); }],
ju_Map$Entry, 0, jl_Object, [], 3, 3, 0, 0,
ju_MapEntry, 0, jl_Object, [ju_Map$Entry, jl_Cloneable], 0, 0, 0, 0,
ju_Hashtable$Entry, 0, ju_MapEntry, [], 0, 0, 0, ["$getKeyHash", function() { return ju_Hashtable$Entry_getKeyHash(this); }, "$equalsKey", function(var_1, var_2) { return ju_Hashtable$Entry_equalsKey(this, var_1, var_2); }]]);
$rt_metadata([iaabt_TeaApplication$startArc$lambda$_2_1, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { iaabt_TeaApplication$startArc$lambda$_2_1_get(this, var_1); }, "$get35", function(var_1) { iaabt_TeaApplication$startArc$lambda$_2_1_get0(this, var_1); }],
iaabt_TeaApplication$startArc$lambda$_2_0, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { iaabt_TeaApplication$startArc$lambda$_2_0_get(this, var_1); }, "$get35", function(var_1) { iaabt_TeaApplication$startArc$lambda$_2_0_get0(this, var_1); }],
it_Phases$5$lambda$$4$lambda$_18_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$5$lambda$$4$lambda$_18_0_run(this); }],
iaas_Scene$keyTyped$lambda$_27_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Scene$keyTyped$lambda$_27_0_get(this); }, "$get7", function() { return iaas_Scene$keyTyped$lambda$_27_0_get0(this); }],
iaag_GLTexture, 0, jl_Object, [iaau_Disposable], 1, 3, 0, ["$bind", function() { iaag_GLTexture_bind(this); }, "$bind0", function(var_1) { iaag_GLTexture_bind0(this, var_1); }, "$getMinFilter", function() { return iaag_GLTexture_getMinFilter(this); }, "$getMagFilter", function() { return iaag_GLTexture_getMagFilter(this); }, "$getTextureObjectHandle", function() { return iaag_GLTexture_getTextureObjectHandle(this); }, "$unsafeSetWrap", function(var_1, var_2, var_3) { iaag_GLTexture_unsafeSetWrap(this, var_1,
var_2, var_3); }, "$setWrap0", function(var_1, var_2) { iaag_GLTexture_setWrap(this, var_1, var_2); }, "$unsafeSetFilter", function(var_1, var_2, var_3) { iaag_GLTexture_unsafeSetFilter(this, var_1, var_2, var_3); }, "$setFilter0", function(var_1) { iaag_GLTexture_setFilter(this, var_1); }, "$setFilter", function(var_1, var_2) { iaag_GLTexture_setFilter0(this, var_1, var_2); }, "$delete", function() { iaag_GLTexture_delete(this); }],
iaag_Texture, "Texture", 31, iaag_GLTexture, [], 0, 3, iaag_Texture_$callClinit, ["$load4", function(var_1) { iaag_Texture_load(this, var_1); }, "$getWidth0", function() { return iaag_Texture_getWidth(this); }, "$getHeight0", function() { return iaag_Texture_getHeight(this); }, "$dispose", function() { iaag_Texture_dispose(this); }, "$isDisposed", function() { return iaag_Texture_isDisposed(this); }, "$toString", function() { return iaag_Texture_toString(this); }],
iaagg_GLVersion, 0, jl_Object, [], 0, 3, 0, ["$extractVersion", function(var_1, var_2) { iaagg_GLVersion_extractVersion(this, var_1, var_2); }, "$parseInt", function(var_1, var_2) { return iaagg_GLVersion_parseInt(this, var_1, var_2); }],
jur_FinalSet, "FinalSet", 2, jur_FSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_FinalSet_matches(this, var_1, var_2, var_3); }, "$getName", function() { return jur_FinalSet_getName(this); }],
it_Phases$2$lambda$null$16$lambda$_8_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$2$lambda$null$16$lambda$_8_0_run(this); }],
iaat_Parser$TokenHandler, 0, jl_Object, [], 3, 0, 0, 0,
it_Phases$4$_init_$lambda$_0_2, "Phases$4$<init>$lambda$_0_2", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$4$_init_$lambda$_0_2_run(this); }],
iaat_TokenCategory, 0, jl_Enum, [], 12, 3, iaat_TokenCategory_$callClinit, 0,
jur_EmptySet, "EmptySet", 2, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_EmptySet_accepts(this, var_1, var_2); }, "$find0", function(var_1, var_2, var_3) { return jur_EmptySet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_EmptySet_findBack(this, var_1, var_2, var_3, var_4); }, "$getName", function() { return jur_EmptySet_getName(this); }, "$hasConsumed", function(var_1) { return jur_EmptySet_hasConsumed(this, var_1); }],
it_Phases$4$_init_$lambda$_0_0, "Phases$4$<init>$lambda$_0_0", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$4$_init_$lambda$_0_0_run(this); }],
it_Phases$4$_init_$lambda$_0_1, "Phases$4$<init>$lambda$_0_1", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$4$_init_$lambda$_0_1_run(this); }],
ju_Enumeration, 0, jl_Object, [], 3, 3, 0, 0,
ju_StringTokenizer, 0, jl_Object, [ju_Enumeration], 0, 3, 0, ["$hasMoreElements", function() { return ju_StringTokenizer_hasMoreElements(this); }, "$hasMoreTokens", function() { return ju_StringTokenizer_hasMoreTokens(this); }, "$nextToken", function() { return ju_StringTokenizer_nextToken(this); }],
jn_FloatBufferOverByteBufferBigEndian, "FloatBufferOverByteBufferBigEndian", 3, jn_FloatBufferOverByteBuffer, [], 0, 0, 0, ["$duplicate", function(var_1, var_2, var_3, var_4, var_5) { return jn_FloatBufferOverByteBufferBigEndian_duplicate(this, var_1, var_2, var_3, var_4, var_5); }, "$getElement0", function(var_1) { return jn_FloatBufferOverByteBufferBigEndian_getElement(this, var_1); }, "$putElement0", function(var_1, var_2) { jn_FloatBufferOverByteBufferBigEndian_putElement(this, var_1, var_2); }],
it_Phases$3$update$lambda$_1_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$3$update$lambda$_1_0_run(this); }],
it_Phases$3$update$lambda$_1_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$3$update$lambda$_1_1_run(this); }],
iaaf_Floatf, "Floatf", 24, jl_Object, [], 3, 3, 0, 0,
iaaf_Fi, "Fi", 25, jl_Object, [], 0, 3, 0, ["$reader", function(var_1) { return iaaf_Fi_reader(this, var_1); }],
iaabt_TeaFi, "TeaFi", 35, iaaf_Fi, [], 0, 3, iaabt_TeaFi_$callClinit, ["$path0", function() { return iaabt_TeaFi_path(this); }, "$name3", function() { return iaabt_TeaFi_name(this); }, "$extension", function() { return iaabt_TeaFi_extension(this); }, "$type11", function() { return iaabt_TeaFi_type(this); }, "$read2", function() { return iaabt_TeaFi_read(this); }, "$entry0", function() { return iaabt_TeaFi_entry(this); }, "$split3", function() { return iaabt_TeaFi_split(this); }, "$addPart", function(var_1, var_2,
var_3) { iaabt_TeaFi_addPart(this, var_1, var_2, var_3); }, "$readString0", function() { return iaabt_TeaFi_readString(this); }, "$readBytes1", function() { return iaabt_TeaFi_readBytes(this); }, "$child", function(var_1) { return iaabt_TeaFi_child(this, var_1); }, "$parent0", function() { return iaabt_TeaFi_parent(this); }, "$toString", function() { return iaabt_TeaFi_toString(this); }],
jl_NoSuchMethodError, 0, jl_IncompatibleClassChangeError, [], 0, 3, 0, 0,
iaag_Camera, 0, jl_Object, [], 0, 3, iaag_Camera_$callClinit, ["$update1", function() { iaag_Camera_update(this); }, "$resize4", function(var_1, var_2) { iaag_Camera_resize(this, var_1, var_2); }, "$projection", function() { return iaag_Camera_projection(this); }, "$unproject0", function(var_1, var_2, var_3, var_4, var_5) { return iaag_Camera_unproject(this, var_1, var_2, var_3, var_4, var_5); }, "$unproject", function(var_1) { return iaag_Camera_unproject0(this, var_1); }, "$project0", function(var_1, var_2)
{ return iaag_Camera_project(this, var_1, var_2); }, "$project", function(var_1, var_2, var_3, var_4, var_5) { return iaag_Camera_project0(this, var_1, var_2, var_3, var_4, var_5); }],
it_Phases$5$lambda$null$15$lambda$_7_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$5$lambda$null$15$lambda$_7_0_get(this, var_1); }],
i_Renderer, "Renderer", 41, jl_Object, [iaa_ApplicationListener], 0, 3, 0, ["$init0", function() { i_Renderer_init(this); }, "$update1", function() { i_Renderer_update(this); }, "$resize1", function(var_1, var_2) { i_Renderer_resize(this, var_1, var_2); }, "$shake1", function(var_1) { i_Renderer_shake(this, var_1); }, "$shake", function(var_1, var_2) { i_Renderer_shake0(this, var_1, var_2); }, "$jump", function(var_1, var_2) { i_Renderer_jump(this, var_1, var_2); }, "$updateShake", function(var_1) { i_Renderer_updateShake(this,
var_1); }, "$drawShadows", function() { i_Renderer_drawShadows(this); }, "$drawWorld", function() { i_Renderer_drawWorld(this); }, "$cull", function(var_1) { i_Renderer_cull(this, var_1); }, "$makeFloor", function() { i_Renderer_makeFloor(this); }, "$updateShadows", function() { i_Renderer_updateShadows(this); }, "$circle", function(var_1, var_2, var_3) { i_Renderer_circle(this, var_1, var_2, var_3); }, "$makeShadow", function() { i_Renderer_makeShadow(this); }, "$draw5", function(var_1) { i_Renderer_draw(this,
var_1); }],
ig_Bloom, 0, jl_Object, [], 0, 3, ig_Bloom_$callClinit, ["$initialize0", function(var_1, var_2, var_3, var_4, var_5, var_6) { ig_Bloom_initialize(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$capture0", function() { ig_Bloom_capture(this); }, "$render", function() { ig_Bloom_render(this); }, "$gaussianBlur", function() { ig_Bloom_gaussianBlur(this); }, "$setBloomIntesity", function(var_1) { ig_Bloom_setBloomIntesity(this, var_1); }, "$setOriginalIntesity", function(var_1) { ig_Bloom_setOriginalIntesity(this,
var_1); }, "$setThreshold", function(var_1) { ig_Bloom_setThreshold(this, var_1); }, "$setSize0", function(var_1, var_2) { ig_Bloom_setSize(this, var_1, var_2); }, "$dispose", function() { ig_Bloom_dispose(this); }],
jl_IndexOutOfBoundsException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
jl_ArrayIndexOutOfBoundsException, 0, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0,
ji_InputStreamReader, 0, ji_Reader, [], 0, 3, 0, ["$read1", function(var_1, var_2, var_3) { return ji_InputStreamReader_read(this, var_1, var_2, var_3); }, "$fillBuffer0", function() { return ji_InputStreamReader_fillBuffer(this); }, "$fillReadBuffer", function() { return ji_InputStreamReader_fillReadBuffer(this); }],
iaaf_Floatp, 0, jl_Object, [], 3, 3, 0, 0,
iw_Blocks$2, "Blocks$2", 42, iw_Block, [], 4, 0, 0, ["$draw8", function(var_1, var_2) { iw_Blocks$2_draw(this, var_1, var_2); }],
it_Phases$3$lambda$update$25$lambda$_7_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$3$lambda$update$25$lambda$_7_0_run(this); }],
iw_Blocks$1, "Blocks$1", 42, iw_Block, [], 4, 0, 0, ["$draw8", function(var_1, var_2) { iw_Blocks$1_draw(this, var_1, var_2); }],
iw_Blocks$4, "Blocks$4", 42, iw_Block, [], 4, 0, 0, ["$draw8", function(var_1, var_2) { iw_Blocks$4_draw(this, var_1, var_2); }],
iw_Blocks$3, "Blocks$3", 42, iw_Block, [], 4, 0, 0, ["$draw8", function(var_1, var_2) { iw_Blocks$3_draw(this, var_1, var_2); }],
iaagg_Shader, "Shader", 33, jl_Object, [iaau_Disposable], 0, 3, iaagg_Shader_$callClinit, ["$apply3", function() { iaagg_Shader_apply(this); }, "$compileShaders", function(var_1, var_2) { iaagg_Shader_compileShaders(this, var_1, var_2); }, "$loadShader", function(var_1, var_2) { return iaagg_Shader_loadShader(this, var_1, var_2); }, "$createProgram", function() { return iaagg_Shader_createProgram(this); }, "$linkProgram", function(var_1) { return iaagg_Shader_linkProgram(this, var_1); }, "$isCompiled0", function()
{ return iaagg_Shader_isCompiled(this); }, "$fetchAttributeLocation", function(var_1) { return iaagg_Shader_fetchAttributeLocation(this, var_1); }, "$fetchUniformLocation0", function(var_1) { return iaagg_Shader_fetchUniformLocation(this, var_1); }, "$fetchUniformLocation", function(var_1, var_2) { return iaagg_Shader_fetchUniformLocation0(this, var_1, var_2); }, "$setUniformi", function(var_1, var_2) { iaagg_Shader_setUniformi(this, var_1, var_2); }, "$setUniformf0", function(var_1, var_2) { iaagg_Shader_setUniformf(this,
var_1, var_2); }, "$setUniformf", function(var_1, var_2, var_3) { iaagg_Shader_setUniformf0(this, var_1, var_2, var_3); }, "$setUniformf1", function(var_1, var_2, var_3, var_4, var_5) { iaagg_Shader_setUniformf1(this, var_1, var_2, var_3, var_4, var_5); }, "$setUniformMatrix4", function(var_1, var_2) { iaagg_Shader_setUniformMatrix4(this, var_1, var_2); }, "$setUniformf2", function(var_1, var_2) { iaagg_Shader_setUniformf2(this, var_1, var_2); }, "$setVertexAttribute", function(var_1, var_2, var_3, var_4, var_5,
var_6) { iaagg_Shader_setVertexAttribute(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$begin", function() { iaagg_Shader_begin(this); }, "$end", function() { iaagg_Shader_end(this); }, "$dispose", function() { iaagg_Shader_dispose(this); }, "$disableVertexAttribute", function(var_1) { iaagg_Shader_disableVertexAttribute(this, var_1); }, "$disableVertexAttribute0", function(var_1) { iaagg_Shader_disableVertexAttribute0(this, var_1); }, "$enableVertexAttribute", function(var_1) { iaagg_Shader_enableVertexAttribute(this,
var_1); }, "$checkManaged", function() { iaagg_Shader_checkManaged(this); }, "$addManagedShader", function(var_1, var_2) { iaagg_Shader_addManagedShader(this, var_1, var_2); }, "$fetchUniforms", function() { iaagg_Shader_fetchUniforms(this); }, "$fetchAttributes", function() { iaagg_Shader_fetchAttributes(this); }, "$getAttributeLocation", function(var_1) { return iaagg_Shader_getAttributeLocation(this, var_1); }],
iw_Blocks$6, "Blocks$6", 42, iw_Block, [], 4, 0, 0, ["$draw8", function(var_1, var_2) { iw_Blocks$6_draw(this, var_1, var_2); }],
iw_Blocks$5, "Blocks$5", 42, iw_Block, [], 4, 0, 0, ["$drawShadow", function(var_1, var_2) { iw_Blocks$5_drawShadow(this, var_1, var_2); }, "$draw8", function(var_1, var_2) { iw_Blocks$5_draw(this, var_1, var_2); }],
iw_Blocks$8, "Blocks$8", 42, iw_Block, [], 4, 0, 0, ["$draw8", function(var_1, var_2) { iw_Blocks$8_draw(this, var_1, var_2); }],
ju_AbstractList$1, 0, jl_Object, [ju_Iterator], 0, 0, 0, ["$hasNext", function() { return ju_AbstractList$1_hasNext(this); }, "$next0", function() { return ju_AbstractList$1_next(this); }, "$checkConcurrentModification", function() { ju_AbstractList$1_checkConcurrentModification(this); }],
iw_Blocks$7, "Blocks$7", 42, iw_Block, [], 4, 0, 0, ["$draw8", function(var_1, var_2) { iw_Blocks$7_draw(this, var_1, var_2); }, "$drawBook", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { iw_Blocks$7_drawBook(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
otcju_TAbstractCollection, 0, otcjl_TObject, [otcju_TCollection], 1, 3, 0, 0,
iw_Blocks$9, "Blocks$9", 42, iw_Block, [], 4, 0, 0, ["$draw8", function(var_1, var_2) { iw_Blocks$9_draw(this, var_1, var_2); }],
it_Bullets$9$lambda$null$1$lambda$_13_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Bullets$9$lambda$null$1$lambda$_13_0_get(this, var_1); }],
juz_Checksum, 0, jl_Object, [], 3, 3, 0, 0,
juz_CRC32, 0, jl_Object, [juz_Checksum], 0, 3, 0, ["$getValue", function() { return juz_CRC32_getValue(this); }, "$reset", function() { juz_CRC32_reset(this); }, "$update2", function(var_1) { juz_CRC32_update(this, var_1); }, "$update0", function(var_1, var_2, var_3) { juz_CRC32_update0(this, var_1, var_2, var_3); }],
cjj_InfBlocks, 0, jl_Object, [], 4, 0, cjj_InfBlocks_$callClinit, ["$reset", function() { cjj_InfBlocks_reset(this); }, "$proc", function(var_1) { return cjj_InfBlocks_proc(this, var_1); }, "$free0", function() { cjj_InfBlocks_free(this); }, "$inflate_flush", function(var_1) { return cjj_InfBlocks_inflate_flush(this, var_1); }],
it_Phases$lambda$null$58$lambda$_9_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$58$lambda$_9_0_run(this); }]]);
$rt_metadata([it_Fx$lambda$static$24$lambda$_7_0, 0, jl_Object, [iaaf_Floatc2], 0, 3, 0, ["$get56", function(var_1, var_2) { it_Fx$lambda$static$24$lambda$_7_0_get(this, var_1, var_2); }],
iaagg_TextureRegion, "TextureRegion", 32, jl_Object, [], 0, 3, 0, ["$asAtlas", function() { return iaagg_TextureRegion_asAtlas(this); }, "$set8", function(var_1) { iaagg_TextureRegion_set(this, var_1); }, "$set12", function(var_1, var_2, var_3, var_4) { iaagg_TextureRegion_set0(this, var_1, var_2, var_3, var_4); }, "$set9", function(var_1, var_2, var_3, var_4) { iaagg_TextureRegion_set1(this, var_1, var_2, var_3, var_4); }, "$set13", function(var_1) { iaagg_TextureRegion_set2(this, var_1); }, "$set14", function(var_1,
var_2, var_3, var_4, var_5) { iaagg_TextureRegion_set3(this, var_1, var_2, var_3, var_4, var_5); }, "$getTexture", function() { return iaagg_TextureRegion_getTexture(this); }, "$getU", function() { return iaagg_TextureRegion_getU(this); }, "$getV", function() { return iaagg_TextureRegion_getV(this); }, "$getX0", function() { return iaagg_TextureRegion_getX(this); }, "$getY0", function() { return iaagg_TextureRegion_getY(this); }, "$getWidth0", function() { return iaagg_TextureRegion_getWidth(this); }, "$getHeight0",
function() { return iaagg_TextureRegion_getHeight(this); }, "$flip4", function(var_1, var_2) { iaagg_TextureRegion_flip(this, var_1, var_2); }, "$split5", function(var_1, var_2) { return iaagg_TextureRegion_split(this, var_1, var_2); }],
iaagg_TextureAtlas$AtlasRegion, "TextureAtlas$AtlasRegion", 32, iaagg_TextureRegion, [], 0, 3, 0, ["$flip4", function(var_1, var_2) { iaagg_TextureAtlas$AtlasRegion_flip(this, var_1, var_2); }, "$getRotatedPackedWidth", function() { return iaagg_TextureAtlas$AtlasRegion_getRotatedPackedWidth(this); }, "$getRotatedPackedHeight", function() { return iaagg_TextureAtlas$AtlasRegion_getRotatedPackedHeight(this); }, "$toString", function() { return iaagg_TextureAtlas$AtlasRegion_toString(this); }],
iw_MapLoader$1, 0, iaagg_TextureAtlas$AtlasRegion, [], 0, 0, 0, 0,
ju_Random, 0, jl_Object, [ji_Serializable], 0, 3, 0, ["$next3", function(var_1) { return ju_Random_next(this, var_1); }, "$nextInt0", function() { return ju_Random_nextInt(this); }, "$nextInt", function(var_1) { return ju_Random_nextInt0(this, var_1); }, "$nextLong", function() { return ju_Random_nextLong(this); }, "$nextDouble", function() { return ju_Random_nextDouble(this); }],
it_Phases$lambda$null$1$lambda$_66_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$lambda$null$1$lambda$_66_0_get(this, var_1); }],
it_Phases$lambda$null$3$lambda$_64_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$lambda$null$3$lambda$_64_0_get(this, var_1); }],
iaau_Eachable, 0, jl_Object, [], 3, 3, 0, 0,
jnc_CharsetDecoder, 0, jl_Object, [], 1, 3, 0, ["$onMalformedInput", function(var_1) { return jnc_CharsetDecoder_onMalformedInput(this, var_1); }, "$implOnMalformedInput", function(var_1) { jnc_CharsetDecoder_implOnMalformedInput(this, var_1); }, "$onUnmappableCharacter", function(var_1) { return jnc_CharsetDecoder_onUnmappableCharacter(this, var_1); }, "$implOnUnmappableCharacter", function(var_1) { jnc_CharsetDecoder_implOnUnmappableCharacter(this, var_1); }, "$decode4", function(var_1, var_2, var_3) { return jnc_CharsetDecoder_decode0(this,
var_1, var_2, var_3); }, "$flush1", function(var_1) { return jnc_CharsetDecoder_flush(this, var_1); }, "$reset2", function() { return jnc_CharsetDecoder_reset(this); }, "$decode0", function(var_1) { return jnc_CharsetDecoder_decode(this, var_1); }, "$expand", function(var_1) { return jnc_CharsetDecoder_expand(this, var_1); }, "$implFlush0", function(var_1) { return jnc_CharsetDecoder_implFlush(this, var_1); }, "$implReset", function() { jnc_CharsetDecoder_implReset(this); }],
jnci_BufferedDecoder, 0, jnc_CharsetDecoder, [], 1, 3, 0, ["$decodeLoop", function(var_1, var_2) { return jnci_BufferedDecoder_decodeLoop(this, var_1, var_2); }],
jnci_UTF8Decoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, ["$arrayDecode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF8Decoder_arrayDecode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$checkMidByte", function(var_1) { return jnci_UTF8Decoder_checkMidByte(this, var_1); }],
otjb_Storage, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0,
jur_PossessiveQuantifierSet, "PossessiveQuantifierSet", 2, jur_LeafQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PossessiveQuantifierSet_matches(this, var_1, var_2, var_3); }],
jnci_BufferedDecoder$Controller, 0, jl_Object, [], 0, 3, 0, ["$hasMoreInput", function() { return jnci_BufferedDecoder$Controller_hasMoreInput(this); }, "$hasMoreOutput", function(var_1) { return jnci_BufferedDecoder$Controller_hasMoreOutput(this, var_1); }, "$setInPosition", function(var_1) { jnci_BufferedDecoder$Controller_setInPosition(this, var_1); }, "$setOutPosition", function(var_1) { jnci_BufferedDecoder$Controller_setOutPosition(this, var_1); }],
iaac_ComparableTimSort, 0, jl_Object, [], 0, 0, 0, ["$doSort", function(var_1, var_2, var_3) { iaac_ComparableTimSort_doSort(this, var_1, var_2, var_3); }, "$pushRun", function(var_1, var_2) { iaac_ComparableTimSort_pushRun(this, var_1, var_2); }, "$mergeCollapse", function() { iaac_ComparableTimSort_mergeCollapse(this); }, "$mergeForceCollapse", function() { iaac_ComparableTimSort_mergeForceCollapse(this); }, "$mergeAt", function(var_1) { iaac_ComparableTimSort_mergeAt(this, var_1); }, "$mergeLo", function(var_1,
var_2, var_3, var_4) { iaac_ComparableTimSort_mergeLo(this, var_1, var_2, var_3, var_4); }, "$mergeHi", function(var_1, var_2, var_3, var_4) { iaac_ComparableTimSort_mergeHi(this, var_1, var_2, var_3, var_4); }, "$ensureCapacity0", function(var_1) { return iaac_ComparableTimSort_ensureCapacity(this, var_1); }],
ju_Locale, "Locale", 1, jl_Object, [jl_Cloneable, ji_Serializable], 4, 3, ju_Locale_$callClinit, 0,
jl_ReflectiveOperationException, 0, jl_Exception, [], 0, 3, 0, 0,
jl_InstantiationException, 0, jl_ReflectiveOperationException, [], 0, 3, 0, 0,
jur_AbstractCharClass$LazyJavaLetter$1, "AbstractCharClass$LazyJavaLetter$1", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$LazyJavaLetter$1_contains(this, var_1); }],
ig_QueueBatch$draw$lambda$_3_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return ig_QueueBatch$draw$lambda$_3_0_get(this); }, "$get14", function() { return ig_QueueBatch$draw$lambda$_3_0_get0(this); }],
iaag_Blending, 0, jl_Enum, [], 12, 3, iaag_Blending_$callClinit, 0,
iaate_WindEffect, "WindEffect", 27, iaat_Effect, [], 0, 3, 0, ["$update3", function(var_1) { iaate_WindEffect_update(this, var_1); }, "$onApply", function(var_1, var_2, var_3) { iaate_WindEffect_onApply(this, var_1, var_2, var_3); }],
iaat_Parser$getResetReplacement$lambda$_7_0, 0, jl_Object, [iaaf_Func], 0, 3, 0, ["$get9", function(var_1) { return iaat_Parser$getResetReplacement$lambda$_7_0_get(this, var_1); }, "$get39", function(var_1) { return iaat_Parser$getResetReplacement$lambda$_7_0_get0(this, var_1); }],
ju_HashMap$HashEntry, 0, ju_MapEntry, [], 0, 0, 0, 0,
iaa_KeyBinds$load$lambda$_3_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaa_KeyBinds$load$lambda$_3_0_get(this); }, "$get40", function() { return iaa_KeyBinds$load$lambda$_3_0_get0(this); }],
jur_AbstractCharClass$LazyUpper, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyUpper_computeValue(this); }],
iaa_KeyBinds$KeybindValue, 0, jl_Object, [], 3, 3, 0, 0,
iaai_KeyCode, "KeyCode", 18, jl_Enum, [iaa_KeyBinds$KeybindValue], 12, 3, iaai_KeyCode_$callClinit, 0,
iaagg_IndexData, 0, jl_Object, [iaau_Disposable], 3, 3, 0, 0,
iaagg_IndexBufferObjectSubData, 0, jl_Object, [iaagg_IndexData], 0, 3, 0, ["$createBufferObject", function() { return iaagg_IndexBufferObjectSubData_createBufferObject(this); }, "$getNumIndices", function() { return iaagg_IndexBufferObjectSubData_getNumIndices(this); }, "$getNumMaxIndices", function() { return iaagg_IndexBufferObjectSubData_getNumMaxIndices(this); }, "$setIndices0", function(var_1, var_2, var_3) { iaagg_IndexBufferObjectSubData_setIndices(this, var_1, var_2, var_3); }, "$getBuffer", function()
{ return iaagg_IndexBufferObjectSubData_getBuffer(this); }, "$bind", function() { iaagg_IndexBufferObjectSubData_bind(this); }, "$unbind", function() { iaagg_IndexBufferObjectSubData_unbind(this); }, "$dispose", function() { iaagg_IndexBufferObjectSubData_dispose(this); }],
it_Phases$lambda$null$39$lambda$_28_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$lambda$null$39$lambda$_28_0_get(this, var_1); }],
it_Fx$lambda$static$6$lambda$_25_0, 0, jl_Object, [iaaf_Floatc2], 0, 3, 0, ["$get56", function(var_1, var_2) { it_Fx$lambda$static$6$lambda$_25_0_get(this, var_1, var_2); }],
it_Boss$dash$lambda$_16_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Boss$dash$lambda$_16_0_run(this); }],
it_Phases$5$lambda$$11$lambda$_11_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$5$lambda$$11$lambda$_11_0_run(this); }],
jur_MultiLineSOLSet, "MultiLineSOLSet", 2, jur_AbstractSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_MultiLineSOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_MultiLineSOLSet_hasConsumed(this, var_1); }, "$getName", function() { return jur_MultiLineSOLSet_getName(this); }],
otcji_TSerializable, 0, jl_Object, [], 3, 3, 0, 0,
iaagg_SpriteCache$Cache, "SpriteCache$Cache", 32, jl_Object, [], 0, 0, 0, 0,
iaar_GifRecorder, "GifRecorder", 19, jl_Object, [], 0, 3, 0, 0,
jur_AbstractCharClass$LazyLower, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyLower_computeValue(this); }],
iaag_Mesh$1, 0, jl_Object, [], 32, 0, iaag_Mesh$1_$callClinit, 0,
it_Player$update$lambda$_8_0, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Player$update$lambda$_8_0_get(this, var_1); }, "$get33", function(var_1) { it_Player$update$lambda$_8_0_get0(this, var_1); }],
it_Phases$4$lambda$null$9$lambda$_8_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$4$lambda$null$9$lambda$_8_0_get(this, var_1); }],
ie_EntityGroup, "EntityGroup", 45, jl_Object, [], 0, 3, 0, ["$update1", function() { ie_EntityGroup_update(this); }, "$collide", function(var_1) { ie_EntityGroup_collide(this, var_1); }, "$draw6", function(var_1) { ie_EntityGroup_draw(this, var_1); }, "$draw9", function(var_1, var_2) { ie_EntityGroup_draw0(this, var_1, var_2); }, "$useTree0", function() { return ie_EntityGroup_useTree(this); }, "$updateEvents", function() { ie_EntityGroup_updateEvents(this); }, "$intersect", function(var_1, var_2, var_3, var_4,
var_5) { ie_EntityGroup_intersect(this, var_1, var_2, var_3, var_4, var_5); }, "$tree1", function() { return ie_EntityGroup_tree(this); }, "$resize2", function(var_1, var_2, var_3, var_4) { ie_EntityGroup_resize(this, var_1, var_2, var_3, var_4); }, "$isEmpty", function() { return ie_EntityGroup_isEmpty(this); }, "$add10", function(var_1) { ie_EntityGroup_add(this, var_1); }, "$remove3", function(var_1) { ie_EntityGroup_remove(this, var_1); }, "$clear", function() { ie_EntityGroup_clear(this); }, "$all", function()
{ return ie_EntityGroup_all(this); }],
it_Phases$lambda$null$29$lambda$_38_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$lambda$null$29$lambda$_38_0_get(this, var_1); }],
jur_AbstractCharClass$LazyJavaTitleCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaTitleCase_computeValue(this); }],
iaam_Interpolation$Swing, 0, iaam_Interpolation, [], 0, 3, 0, 0,
jur_PreviousMatch, "PreviousMatch", 2, jur_AbstractSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PreviousMatch_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_PreviousMatch_hasConsumed(this, var_1); }, "$getName", function() { return jur_PreviousMatch_getName(this); }],
ie_Entity, "Entity", 45, jl_Object, [iaamg_Position], 1, 3, ie_Entity_$callClinit, ["$removed", function() { ie_Entity_removed(this); }, "$added", function() { ie_Entity_added(this); }, "$drawSize", function() { return ie_Entity_drawSize(this); }, "$add15", function() { ie_Entity_add(this); }, "$remove0", function() { ie_Entity_remove(this); }, "$isAdded", function() { return ie_Entity_isAdded(this); }, "$set5", function(var_1, var_2) { ie_Entity_set(this, var_1, var_2); }, "$getX", function() { return ie_Entity_getX(this);
}, "$getY", function() { return ie_Entity_getY(this); }, "$angleTo0", function(var_1) { return iaamg_Position_angleTo(this, var_1); }, "$angleTo", function(var_1, var_2) { return iaamg_Position_angleTo0(this, var_1, var_2); }, "$dst", function(var_1) { return iaamg_Position_dst(this, var_1); }, "$dst0", function(var_1, var_2) { return iaamg_Position_dst0(this, var_1, var_2); }, "$withinDst", function(var_1, var_2, var_3) { return iaamg_Position_withinDst(this, var_1, var_2, var_3); }],
iaamg_QuadTree$QuadTreeObject, 0, jl_Object, [], 3, 3, 0, 0,
ie_SolidEntity, 0, ie_Entity, [iaamg_QuadTree$QuadTreeObject], 1, 3, 0, ["$toward", function(var_1, var_2) { ie_SolidEntity_toward(this, var_1, var_2); }, "$move", function(var_1) { ie_SolidEntity_move(this, var_1); }, "$move0", function(var_1, var_2) { ie_SolidEntity_move0(this, var_1, var_2); }]]);
$rt_metadata([it_Char, 0, ie_SolidEntity, [], 1, 3, 0, ["$isPlayer", function() { return it_Char_isPlayer(this); }, "$shoot3", function(var_1, var_2) { it_Char_shoot(this, var_1, var_2); }, "$shoot5", function(var_1, var_2, var_3) { it_Char_shoot0(this, var_1, var_2, var_3); }, "$shoot1", function(var_1, var_2, var_3, var_4) { it_Char_shoot1(this, var_1, var_2, var_3, var_4); }, "$shoot2", function(var_1, var_2, var_3, var_4, var_5) { it_Char_shoot2(this, var_1, var_2, var_3, var_4, var_5); }, "$heal", function()
{ it_Char_heal(this); }, "$height8", function() { return it_Char_height(this); }, "$damage1", function(var_1) { it_Char_damage(this, var_1); }, "$collision", function(var_1, var_2, var_3) { it_Char_collision(this, var_1, var_2, var_3); }, "$hitboxTile", function(var_1) { it_Char_hitboxTile(this, var_1); }, "$targetGroup", function() { return it_Char_targetGroup(this); }],
it_Player, "Player", 44, it_Char, [], 0, 3, it_Player_$callClinit, ["$draw", function() { it_Player_draw(this); }, "$mouseAngle0", function() { return it_Player_mouseAngle(this); }, "$addSlashPoint", function(var_1) { it_Player_addSlashPoint(this, var_1); }, "$onDeath", function() { it_Player_onDeath(this); }, "$maxHealth", function() { return it_Player_maxHealth(this); }, "$drawShadow0", function() { it_Player_drawShadow(this); }, "$collides", function(var_1) { return it_Player_collides(this, var_1); }, "$update1",
function() { it_Player_update(this); }, "$shoot3", function(var_1, var_2) { it_Player_shoot(this, var_1, var_2); }, "$hitbox", function(var_1) { it_Player_hitbox(this, var_1); }, "$angleOffset", function() { return it_Player_angleOffset(this); }, "$lambda$update$2", function(var_1, var_2, var_3) { it_Player_lambda$update$2(this, var_1, var_2, var_3); }],
iaamg_Shape2D, 0, jl_Object, [], 3, 3, 0, 0,
i_Text, 0, jl_Object, [], 0, 3, i_Text_$callClinit, 0,
jur_NonCapFSet, "NonCapFSet", 2, jur_FSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_NonCapFSet_matches(this, var_1, var_2, var_3); }, "$getName", function() { return jur_NonCapFSet_getName(this); }, "$hasConsumed", function(var_1) { return jur_NonCapFSet_hasConsumed(this, var_1); }],
cjj_Checksum, 0, jl_Object, [], 3, 0, 0, 0,
cjj_Adler32, 0, jl_Object, [cjj_Checksum], 4, 3, 0, ["$reset0", function(var_1) { cjj_Adler32_reset(this, var_1); }, "$reset", function() { cjj_Adler32_reset0(this); }, "$getValue", function() { return cjj_Adler32_getValue(this); }, "$update0", function(var_1, var_2, var_3) { cjj_Adler32_update(this, var_1, var_2, var_3); }],
iaau_Log$LogHandler, 0, jl_Object, [], 3, 3, 0, 0,
iaau_Log$DefaultLogHandler, 0, jl_Object, [iaau_Log$LogHandler], 0, 3, 0, ["$log1", function(var_1, var_2, var_3) { iaau_Log$DefaultLogHandler_log(this, var_1, var_2, var_3); }],
ig_DrawRequest, "DrawRequest", 43, jl_Object, [jl_Comparable, iaaup_Pool$Poolable], 0, 0, 0, ["$compareTo2", function(var_1) { return ig_DrawRequest_compareTo(this, var_1); }, "$reset", function() { ig_DrawRequest_reset(this); }, "$compareTo1", function(var_1) { return ig_DrawRequest_compareTo0(this, var_1); }],
iaaml_BaseTmxMapLoader$Parameters, 0, iaaa_AssetLoaderParameters, [], 0, 3, 0, 0,
jur_UCISupplCharSet, "UCISupplCharSet", 2, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_UCISupplCharSet_accepts(this, var_1, var_2); }, "$getName", function() { return jur_UCISupplCharSet_getName(this); }],
iaat_Parser$parseRegularTokens$lambda$_4_0, 0, jl_Object, [iaat_Parser$TokenHandler], 0, 3, 0, ["$handle1", function(var_1, var_2) { return iaat_Parser$parseRegularTokens$lambda$_4_0_handle(this, var_1, var_2); }],
ie_EntityCollisions, 0, jl_Object, [], 0, 3, ie_EntityCollisions_$callClinit, 0,
jur_AbstractCharClass$LazyRange, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyRange_computeValue(this); }],
it_Fx$lambda$static$17$lambda$_14_0, 0, jl_Object, [iaaf_Floatc2], 0, 3, 0, ["$get56", function(var_1, var_2) { it_Fx$lambda$static$17$lambda$_14_0_get(this, var_1, var_2); }],
ig_Effects$effect$lambda$_7_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return ig_Effects$effect$lambda$_7_0_get(this); }, "$get41", function() { return ig_Effects$effect$lambda$_7_0_get0(this); }],
jur_AltQuantifierSet, "AltQuantifierSet", 2, jur_LeafQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_AltQuantifierSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_AltQuantifierSet_setNext(this, var_1); }],
cbggg_Gdx2DPixmap, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0,
ji_DataOutput, 0, jl_Object, [], 3, 3, 0, 0,
ji_DataOutputStream, 0, ji_FilterOutputStream, [ji_DataOutput], 0, 3, 0, 0,
iaas_Scene$scrolled$lambda$_24_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Scene$scrolled$lambda$_24_0_get(this); }, "$get7", function() { return iaas_Scene$scrolled$lambda$_24_0_get0(this); }],
jur_AbstractCharClass$LazyJavaLowerCase$1, "AbstractCharClass$LazyJavaLowerCase$1", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$LazyJavaLowerCase$1_contains(this, var_1); }],
iaac_Array$ArrayIterable, 0, jl_Object, [jl_Iterable], 0, 3, 0, ["$iterator", function() { return iaac_Array$ArrayIterable_iterator(this); }],
iaam_Matrix3, 0, jl_Object, [ji_Serializable], 0, 3, 0, ["$setOrtho", function(var_1, var_2, var_3, var_4) { return iaam_Matrix3_setOrtho(this, var_1, var_2, var_3, var_4); }, "$idt", function() { return iaam_Matrix3_idt(this); }, "$mul3", function(var_1) { return iaam_Matrix3_mul(this, var_1); }, "$det", function() { return iaam_Matrix3_det(this); }, "$inv", function() { return iaam_Matrix3_inv(this); }, "$set1", function(var_1) { return iaam_Matrix3_set(this, var_1); }, "$set0", function(var_1) { return iaam_Matrix3_set0(this,
var_1); }],
jl_Object$monitorExit$lambda$_8_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, ["$run", function() { jl_Object$monitorExit$lambda$_8_0_run(this); }],
jur_UCISupplRangeSet, "UCISupplRangeSet", 2, jur_SupplRangeSet, [], 0, 0, 0, ["$contains", function(var_1) { return jur_UCISupplRangeSet_contains(this, var_1); }, "$getName", function() { return jur_UCISupplRangeSet_getName(this); }],
iaagg_Lines, 0, jl_Object, [], 0, 3, iaagg_Lines_$callClinit, 0,
iaabt_TeaApplication$TeaApplicationConfig, 0, jl_Object, [], 0, 3, 0, 0,
iaag_Texture$TextureWrap, 0, jl_Enum, [], 12, 3, iaag_Texture$TextureWrap_$callClinit, ["$getGLEnum", function() { return iaag_Texture$TextureWrap_getGLEnum(this); }],
jur_AbstractCharClass$LazyPunct, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyPunct_computeValue(this); }],
it_Phases$lambda$null$19$lambda$_48_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$lambda$null$19$lambda$_48_0_get(this, var_1); }],
iaagg_VertexBufferObject, 0, jl_Object, [iaagg_VertexData], 0, 3, 0, ["$getNumVertices", function() { return iaagg_VertexBufferObject_getNumVertices(this); }, "$getBuffer0", function() { return iaagg_VertexBufferObject_getBuffer(this); }, "$bufferChanged", function() { iaagg_VertexBufferObject_bufferChanged(this); }, "$setVertices1", function(var_1, var_2, var_3) { iaagg_VertexBufferObject_setVertices(this, var_1, var_2, var_3); }, "$bind2", function(var_1, var_2) { iaagg_VertexBufferObject_bind(this, var_1,
var_2); }, "$unbind1", function(var_1, var_2) { iaagg_VertexBufferObject_unbind(this, var_1, var_2); }, "$dispose", function() { iaagg_VertexBufferObject_dispose(this); }],
iaas_Scene$getStyle$lambda$_2_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Scene$getStyle$lambda$_2_0_get(this); }, "$get42", function() { return iaas_Scene$getStyle$lambda$_2_0_get0(this); }],
iaac_Sort, 0, jl_Object, [], 0, 3, 0, ["$sort0", function(var_1, var_2, var_3) { iaac_Sort_sort(this, var_1, var_2, var_3); }, "$sort1", function(var_1, var_2, var_3, var_4) { iaac_Sort_sort0(this, var_1, var_2, var_3, var_4); }],
it_Phases$3$lambda$$7$lambda$_25_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$3$lambda$$7$lambda$_25_0_run(this); }],
it_Phases$6$begin$lambda$_2_1, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Phases$6$begin$lambda$_2_1_get(this, var_1); }, "$get43", function(var_1) { it_Phases$6$begin$lambda$_2_1_get0(this, var_1); }],
iaaf_Boolf, "Boolf", 24, jl_Object, [], 3, 3, 0, 0,
it_Phases$6$begin$lambda$_2_0, 0, jl_Object, [iaaf_Boolf], 0, 3, 0, ["$get28", function(var_1) { return it_Phases$6$begin$lambda$_2_0_get(this, var_1); }, "$get44", function(var_1) { return it_Phases$6$begin$lambda$_2_0_get0(this, var_1); }],
iaass_Drawable, 0, jl_Object, [], 3, 3, 0, 0,
iaass_BaseDrawable, 0, jl_Object, [iaass_Drawable], 0, 3, 0, ["$getLeftWidth", function() { return iaass_BaseDrawable_getLeftWidth(this); }, "$setLeftWidth", function(var_1) { iaass_BaseDrawable_setLeftWidth(this, var_1); }, "$getRightWidth", function() { return iaass_BaseDrawable_getRightWidth(this); }, "$setRightWidth", function(var_1) { iaass_BaseDrawable_setRightWidth(this, var_1); }, "$getTopHeight", function() { return iaass_BaseDrawable_getTopHeight(this); }, "$setTopHeight", function(var_1) { iaass_BaseDrawable_setTopHeight(this,
var_1); }, "$getBottomHeight", function() { return iaass_BaseDrawable_getBottomHeight(this); }, "$setBottomHeight", function(var_1) { iaass_BaseDrawable_setBottomHeight(this, var_1); }, "$getMinWidth", function() { return iaass_BaseDrawable_getMinWidth(this); }, "$setMinWidth", function(var_1) { iaass_BaseDrawable_setMinWidth(this, var_1); }, "$getMinHeight", function() { return iaass_BaseDrawable_getMinHeight(this); }, "$setMinHeight", function(var_1) { iaass_BaseDrawable_setMinHeight(this, var_1); }],
iaass_TransformDrawable, 0, jl_Object, [iaass_Drawable], 3, 3, 0, 0,
iaass_NinePatchDrawable, 0, iaass_BaseDrawable, [iaass_TransformDrawable], 0, 3, 0, ["$draw10", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { iaass_NinePatchDrawable_draw(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$getPatch", function() { return iaass_NinePatchDrawable_getPatch(this); }, "$setPatch", function(var_1) { iaass_NinePatchDrawable_setPatch(this, var_1); }],
iaass_ScaledNinePatchDrawable, 0, iaass_NinePatchDrawable, [], 0, 3, 0, ["$draw0", function(var_1, var_2, var_3, var_4) { iaass_ScaledNinePatchDrawable_draw(this, var_1, var_2, var_3, var_4); }, "$setPatch", function(var_1) { iaass_ScaledNinePatchDrawable_setPatch(this, var_1); }],
jur_AbstractCharClass$LazySpace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazySpace_computeValue(this); }],
ju_HashMap$2, 0, ju_AbstractCollection, [], 0, 0, 0, ["$iterator", function() { return ju_HashMap$2_iterator(this); }],
it_Boss$nextPhase$lambda$_3_0, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Boss$nextPhase$lambda$_3_0_get(this, var_1); }, "$get33", function(var_1) { it_Boss$nextPhase$lambda$_3_0_get0(this, var_1); }],
otjde_FocusEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0,
otjde_MouseEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0,
otjb_WindowEventTarget, 0, jl_Object, [otjde_EventTarget, otjde_FocusEventTarget, otjde_MouseEventTarget, otjde_KeyboardEventTarget, otjde_LoadEventTarget], 3, 3, 0, 0]);
$rt_metadata([iaat_Parser, 0, jl_Object, [], 0, 0, 0, 0,
it_Fx$lambda$static$4$lambda$_27_0, 0, jl_Object, [iaaf_Floatc2], 0, 3, 0, ["$get56", function(var_1, var_2) { it_Fx$lambda$static$4$lambda$_27_0_get(this, var_1, var_2); }],
iaamg_Vector, 0, jl_Object, [], 3, 3, 0, 0,
ju_RandomAccess, 0, jl_Object, [], 3, 3, 0, 0,
it_Phases$3$lambda$null$1$lambda$_31_0, 0, jl_Object, [it_Bullet$Mover], 0, 3, 0, ["$move2", function(var_1) { return it_Phases$3$lambda$null$1$lambda$_31_0_move(this, var_1); }],
iaagg_GLFrameBuffer, 0, jl_Object, [iaau_Disposable], 1, 3, iaagg_GLFrameBuffer_$callClinit, ["$getTexture0", function() { return iaagg_GLFrameBuffer_getTexture(this); }, "$build", function() { iaagg_GLFrameBuffer_build(this); }, "$checkValidBuilder", function() { iaagg_GLFrameBuffer_checkValidBuilder(this); }, "$dispose", function() { iaagg_GLFrameBuffer_dispose(this); }, "$bind", function() { iaagg_GLFrameBuffer_bind(this); }, "$beginDraw", function(var_1) { iaagg_GLFrameBuffer_beginDraw(this, var_1); }, "$endDraw",
function() { iaagg_GLFrameBuffer_endDraw(this); }, "$begin", function() { iaagg_GLFrameBuffer_begin(this); }, "$setFrameBufferViewport", function() { iaagg_GLFrameBuffer_setFrameBufferViewport(this); }, "$end", function() { iaagg_GLFrameBuffer_end(this); }, "$end5", function(var_1, var_2, var_3, var_4) { iaagg_GLFrameBuffer_end0(this, var_1, var_2, var_3, var_4); }, "$getHeight0", function() { return iaagg_GLFrameBuffer_getHeight(this); }, "$getWidth0", function() { return iaagg_GLFrameBuffer_getWidth(this);
}],
it_Phases$lambda$null$28$lambda$_39_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$lambda$null$28$lambda$_39_0_get(this, var_1); }],
iaam_Interpolation$Exp, 0, iaam_Interpolation, [], 0, 3, 0, 0,
iaam_Interpolation$ExpIn, 0, iaam_Interpolation$Exp, [], 0, 3, 0, ["$apply", function(var_1) { return iaam_Interpolation$ExpIn_apply(this, var_1); }],
iaa_ApplicationCore, 0, jl_Object, [iaa_ApplicationListener], 1, 3, 0, ["$add14", function(var_1) { iaa_ApplicationCore_add(this, var_1); }, "$init0", function() { iaa_ApplicationCore_init(this); }, "$resize1", function(var_1, var_2) { iaa_ApplicationCore_resize(this, var_1, var_2); }, "$update1", function() { iaa_ApplicationCore_update(this); }],
jl_NegativeArraySizeException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
iaam_MapLayer, "MapLayer", 22, jl_Object, [], 0, 3, 0, ["$setOffsetX", function(var_1) { iaam_MapLayer_setOffsetX(this, var_1); }, "$setOffsetY", function(var_1) { iaam_MapLayer_setOffsetY(this, var_1); }, "$invalidateRenderOffset", function() { iaam_MapLayer_invalidateRenderOffset(this); }],
it_Phases$4$update$lambda$_1_0, 0, jl_Object, [iaaf_Floatc2], 0, 3, 0, ["$get56", function(var_1, var_2) { it_Phases$4$update$lambda$_1_0_get(this, var_1, var_2); }],
it_Bullets$9$lambda$hit$2$lambda$_12_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Bullets$9$lambda$hit$2$lambda$_12_0_run(this); }],
ji_File, "File", 5, jl_Object, [ji_Serializable, jl_Comparable], 0, 3, 0, 0,
iaaus_Base64Coder$CharMap, 0, jl_Object, [], 0, 3, 0, 0,
iaaun_Simplex, 0, jl_Object, [], 0, 3, iaaun_Simplex_$callClinit, ["$setSeed", function(var_1) { iaaun_Simplex_setSeed(this, var_1); }, "$octaveNoise2D", function(var_1, var_2, var_3, var_4, var_5) { return iaaun_Simplex_octaveNoise2D(this, var_1, var_2, var_3, var_4, var_5); }, "$raw_noise_2d", function(var_1, var_2) { return iaaun_Simplex_raw_noise_2d(this, var_1, var_2); }, "$fastfloor", function(var_1) { return iaaun_Simplex_fastfloor(this, var_1); }, "$dot", function(var_1, var_2, var_3) { return iaaun_Simplex_dot(this,
var_1, var_2, var_3); }],
ig_HealthBar, "HealthBar", 43, iaas_Element, [], 0, 3, 0, ["$draw", function() { ig_HealthBar_draw(this); }],
i_UI$lambda$setup$11$lambda$_8_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return i_UI$lambda$setup$11$lambda$_8_0_get(this); }, "$get45", function() { return i_UI$lambda$setup$11$lambda$_8_0_get0(this); }],
it_Phases$Phase$teleport$lambda$_3_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$Phase$teleport$lambda$_3_0_run(this); }],
jl_IllegalStateException, 0, jl_Exception, [], 0, 3, 0, 0,
iaaup_Pool, 0, jl_Object, [], 1, 3, 0, ["$obtain0", function() { return iaaup_Pool_obtain(this); }, "$free", function(var_1) { iaaup_Pool_free(this, var_1); }, "$reset3", function(var_1) { iaaup_Pool_reset(this, var_1); }, "$freeAll0", function(var_1) { iaaup_Pool_freeAll(this, var_1); }],
iaaup_Pools$1, 0, iaaup_Pool, [], 4, 0, 0, ["$newObject", function() { return iaaup_Pools$1_newObject(this); }],
iaabt_TeaFileLoader, 0, jl_Object, [], 0, 3, iaabt_TeaFileLoader_$callClinit, 0,
iaam_TileLayer$Cell, 0, jl_Object, [], 0, 3, 0, 0,
iaas_Scene$fireEnterAndExit$lambda$_19_1, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Scene$fireEnterAndExit$lambda$_19_1_get(this); }, "$get7", function() { return iaas_Scene$fireEnterAndExit$lambda$_19_1_get0(this); }],
iaas_Scene$fireEnterAndExit$lambda$_19_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Scene$fireEnterAndExit$lambda$_19_0_get(this); }, "$get7", function() { return iaas_Scene$fireEnterAndExit$lambda$_19_0_get0(this); }],
ju_AbstractList, 0, ju_AbstractCollection, [ju_List], 1, 3, 0, ["$iterator", function() { return ju_AbstractList_iterator(this); }],
jur_ReluctantCompositeQuantifierSet, "ReluctantCompositeQuantifierSet", 2, jur_CompositeQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_ReluctantCompositeQuantifierSet_matches(this, var_1, var_2, var_3); }],
it_Phases$2$lambda$null$17$lambda$_7_1, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$2$lambda$null$17$lambda$_7_1_get(this, var_1); }],
it_Phases$2$lambda$null$17$lambda$_7_2, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$2$lambda$null$17$lambda$_7_2_run(this); }],
jn_ByteBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, ["$get38", function(var_1, var_2, var_3) { return jn_ByteBuffer_get(this, var_1, var_2, var_3); }, "$get65", function(var_1) { return jn_ByteBuffer_get0(this, var_1); }, "$put3", function(var_1, var_2, var_3) { return jn_ByteBuffer_put0(this, var_1, var_2, var_3); }, "$put0", function(var_1) { return jn_ByteBuffer_put(this, var_1); }, "$hasArray", function() { return jn_ByteBuffer_hasArray(this); }, "$array3", function() { return jn_ByteBuffer_array(this);
}, "$toString", function() { return jn_ByteBuffer_toString(this); }, "$equals", function(var_1) { return jn_ByteBuffer_equals(this, var_1); }, "$compareTo3", function(var_1) { return jn_ByteBuffer_compareTo(this, var_1); }, "$order", function(var_1) { return jn_ByteBuffer_order(this, var_1); }, "$clear1", function() { return jn_ByteBuffer_clear(this); }, "$flip6", function() { return jn_ByteBuffer_flip(this); }, "$limit5", function(var_1) { return jn_ByteBuffer_limit(this, var_1); }, "$position9", function(var_1)
{ return jn_ByteBuffer_position(this, var_1); }, "$flip", function() { return jn_ByteBuffer_flip0(this); }, "$limit0", function(var_1) { return jn_ByteBuffer_limit0(this, var_1); }, "$position", function(var_1) { return jn_ByteBuffer_position0(this, var_1); }, "$compareTo1", function(var_1) { return jn_ByteBuffer_compareTo0(this, var_1); }],
iaam_RandomXS128, 0, ju_Random, [], 0, 3, 0, ["$nextLong", function() { return iaam_RandomXS128_nextLong(this); }, "$nextInt0", function() { return iaam_RandomXS128_nextInt(this); }, "$nextInt", function(var_1) { return iaam_RandomXS128_nextInt0(this, var_1); }, "$nextLong0", function(var_1) { return iaam_RandomXS128_nextLong0(this, var_1); }, "$nextFloat", function() { return iaam_RandomXS128_nextFloat(this); }, "$setSeed", function(var_1) { iaam_RandomXS128_setSeed(this, var_1); }, "$setState", function(var_1,
var_2) { iaam_RandomXS128_setState(this, var_1, var_2); }],
jur_SOLSet, "SOLSet", 2, jur_AbstractSet, [], 4, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_SOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_SOLSet_hasConsumed(this, var_1); }, "$getName", function() { return jur_SOLSet_getName(this); }],
it_Phases$2$lambda$null$17$lambda$_7_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$2$lambda$null$17$lambda$_7_0_run(this); }],
iaaal_FileHandleResolver, 0, jl_Object, [], 3, 3, 0, 0,
iaaalr_InternalFileHandleResolver, 0, jl_Object, [iaaal_FileHandleResolver], 0, 3, 0, ["$resolve", function(var_1) { return iaaalr_InternalFileHandleResolver_resolve(this, var_1); }],
iaagg_IndexBufferObject, 0, jl_Object, [iaagg_IndexData], 0, 3, 0, ["$getNumIndices", function() { return iaagg_IndexBufferObject_getNumIndices(this); }, "$getNumMaxIndices", function() { return iaagg_IndexBufferObject_getNumMaxIndices(this); }, "$setIndices0", function(var_1, var_2, var_3) { iaagg_IndexBufferObject_setIndices(this, var_1, var_2, var_3); }, "$getBuffer", function() { return iaagg_IndexBufferObject_getBuffer(this); }, "$bind", function() { iaagg_IndexBufferObject_bind(this); }, "$unbind", function()
{ iaagg_IndexBufferObject_unbind(this); }, "$dispose", function() { iaagg_IndexBufferObject_dispose(this); }],
iaamg_Polygon, 0, jl_Object, [iaamg_Shape2D], 0, 3, 0, ["$setPosition", function(var_1, var_2) { iaamg_Polygon_setPosition(this, var_1, var_2); }],
iaam_TiledMap$getLayer$lambda$_2_0, 0, jl_Object, [iaaf_Boolf], 0, 3, 0, ["$get28", function(var_1) { return iaam_TiledMap$getLayer$lambda$_2_0_get(this, var_1); }, "$get46", function(var_1) { return iaam_TiledMap$getLayer$lambda$_2_0_get0(this, var_1); }],
jl_Byte, 0, jl_Number, [jl_Comparable], 0, 3, jl_Byte_$callClinit, 0,
iaas_Element$clipBegin$lambda$_93_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Element$clipBegin$lambda$_93_0_get(this); }, "$get47", function() { return iaas_Element$clipBegin$lambda$_93_0_get0(this); }],
it_Phases$5$lambda$null$16$lambda$_6_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$5$lambda$null$16$lambda$_6_0_run(this); }],
iaate_SickEffect, "SickEffect", 27, iaat_Effect, [], 0, 3, 0, ["$onApply", function(var_1, var_2, var_3) { iaate_SickEffect_onApply(this, var_1, var_2, var_3); }],
iaabt_TeaApplication$TeaLogger, 0, jl_Object, [iaau_Log$LogHandler], 0, 3, 0, ["$log1", function(var_1, var_2, var_3) { iaabt_TeaApplication$TeaLogger_log(this, var_1, var_2, var_3); }],
ji_EOFException, 0, ji_IOException, [], 0, 3, 0, 0,
iaagg_BitmapFont$BitmapFontData, 0, jl_Object, [], 0, 3, 0, ["$load5", function(var_1, var_2) { iaagg_BitmapFont$BitmapFontData_load(this, var_1, var_2); }, "$setGlyphRegion", function(var_1, var_2) { iaagg_BitmapFont$BitmapFontData_setGlyphRegion(this, var_1, var_2); }, "$setGlyph", function(var_1, var_2) { iaagg_BitmapFont$BitmapFontData_setGlyph(this, var_1, var_2); }, "$getFirstGlyph", function() { return iaagg_BitmapFont$BitmapFontData_getFirstGlyph(this); }, "$getGlyph", function(var_1) { return iaagg_BitmapFont$BitmapFontData_getGlyph(this,
var_1); }, "$getGlyphs", function(var_1, var_2, var_3, var_4, var_5) { iaagg_BitmapFont$BitmapFontData_getGlyphs(this, var_1, var_2, var_3, var_4, var_5); }, "$getWrapIndex", function(var_1, var_2) { return iaagg_BitmapFont$BitmapFontData_getWrapIndex(this, var_1, var_2); }, "$isBreakChar", function(var_1) { return iaagg_BitmapFont$BitmapFontData_isBreakChar(this, var_1); }, "$isWhitespace", function(var_1) { return iaagg_BitmapFont$BitmapFontData_isWhitespace(this, var_1); }, "$setScale", function(var_1, var_2)
{ iaagg_BitmapFont$BitmapFontData_setScale(this, var_1, var_2); }],
iaag_TextureData$Factory, 0, jl_Object, [], 0, 3, 0, 0,
jlr_Modifier, 0, jl_Object, [], 0, 3, jlr_Modifier_$callClinit, 0,
iaamo_PolygonMapObject, "PolygonMapObject", 23, iaam_MapObject, [], 0, 3, 0, 0]);
$rt_metadata([iaam_TileSet, "TileSet", 22, jl_Object, [jl_Iterable], 0, 3, 0, ["$getProperties", function() { return iaam_TileSet_getProperties(this); }, "$get48", function(var_1) { return iaam_TileSet_get(this, var_1); }, "$iterator", function() { return iaam_TileSet_iterator(this); }, "$put12", function(var_1, var_2) { iaam_TileSet_put(this, var_1, var_2); }],
it_Phases$3$lambda$null$6$lambda$_26_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$3$lambda$null$6$lambda$_26_0_get(this, var_1); }],
iaam_TileSets, 0, jl_Object, [jl_Iterable], 0, 3, 0, ["$getTileSet", function(var_1) { return iaam_TileSets_getTileSet(this, var_1); }, "$addTileSet", function(var_1) { iaam_TileSets_addTileSet(this, var_1); }, "$getTile", function(var_1) { return iaam_TileSets_getTile(this, var_1); }],
iaa_KeyBinds$KeyBind, 0, jl_Object, [], 3, 3, 0, 0,
it_Phases$lambda$static$5$lambda$_62_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$lambda$static$5$lambda$_62_0_get(this, var_1); }],
jur_AbstractCharClass$LazyJavaIdentifierIgnorable, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue(this); }],
cjj_Inflater, 0, cjj_ZStream, [], 4, 3, 0, ["$init2", function(var_1, var_2) { return cjj_Inflater_init(this, var_1, var_2); }, "$inflate0", function(var_1) { return cjj_Inflater_inflate(this, var_1); }],
ju_AbstractMap, 0, jl_Object, [ju_Map], 1, 3, 0, 0,
ju_HashMap, 0, ju_AbstractMap, [jl_Cloneable, ji_Serializable], 0, 3, 0, ["$newElementArray0", function(var_1) { return ju_HashMap_newElementArray(this, var_1); }, "$computeThreshold", function() { ju_HashMap_computeThreshold(this); }, "$get9", function(var_1) { return ju_HashMap_get(this, var_1); }, "$getEntry", function(var_1) { return ju_HashMap_getEntry(this, var_1); }, "$findNonNullKeyEntry", function(var_1, var_2, var_3) { return ju_HashMap_findNonNullKeyEntry(this, var_1, var_2, var_3); }, "$findNullKeyEntry",
function() { return ju_HashMap_findNullKeyEntry(this); }, "$put", function(var_1, var_2) { return ju_HashMap_put(this, var_1, var_2); }, "$putImpl", function(var_1, var_2) { return ju_HashMap_putImpl(this, var_1, var_2); }, "$createHashedEntry", function(var_1, var_2, var_3) { return ju_HashMap_createHashedEntry(this, var_1, var_2, var_3); }, "$rehash0", function(var_1) { ju_HashMap_rehash(this, var_1); }, "$rehash", function() { ju_HashMap_rehash0(this); }, "$remove4", function(var_1) { return ju_HashMap_remove(this,
var_1); }, "$removeEntry", function(var_1) { return ju_HashMap_removeEntry(this, var_1); }, "$values6", function() { return ju_HashMap_values(this); }],
iaag_PixmapIO, 0, jl_Object, [], 0, 3, 0, 0,
it_Boss$laser$lambda$_19_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Boss$laser$lambda$_19_0_run(this); }],
it_Phases$3$lambda$null$2$lambda$_30_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$3$lambda$null$2$lambda$_30_0_get(this, var_1); }],
jnc_CoderResult, 0, jl_Object, [], 0, 3, jnc_CoderResult_$callClinit, ["$isUnderflow", function() { return jnc_CoderResult_isUnderflow(this); }, "$isOverflow", function() { return jnc_CoderResult_isOverflow(this); }, "$isError", function() { return jnc_CoderResult_isError(this); }, "$isMalformed", function() { return jnc_CoderResult_isMalformed(this); }, "$isUnmappable", function() { return jnc_CoderResult_isUnmappable(this); }, "$length", function() { return jnc_CoderResult_length(this); }, "$throwException",
function() { jnc_CoderResult_throwException(this); }],
oti_Structure, 0, jl_Object, [], 0, 3, 0, 0,
jur_EOLSet, "EOLSet", 2, jur_AbstractSet, [], 4, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_EOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_EOLSet_hasConsumed(this, var_1); }, "$getName", function() { return jur_EOLSet_getName(this); }],
iaag_TextureData, 0, jl_Object, [], 3, 3, 0, 0,
i_Renderer$1, "Renderer$1", 41, iaagg_Shader, [], 0, 0, 0, ["$apply3", function() { i_Renderer$1_apply(this); }],
jur_Lexer, 0, jl_Object, [], 0, 0, 0, ["$peek1", function() { return jur_Lexer_peek(this); }, "$setMode", function(var_1) { jur_Lexer_setMode(this, var_1); }, "$restoreFlags", function(var_1) { jur_Lexer_restoreFlags(this, var_1); }, "$peekSpecial", function() { return jur_Lexer_peekSpecial(this); }, "$isSpecial", function() { return jur_Lexer_isSpecial(this); }, "$isNextSpecial", function() { return jur_Lexer_isNextSpecial(this); }, "$next5", function() { return jur_Lexer_next(this); }, "$nextSpecial", function()
{ return jur_Lexer_nextSpecial(this); }, "$lookAhead0", function() { return jur_Lexer_lookAhead(this); }, "$back", function() { return jur_Lexer_back(this); }, "$reread", function() { jur_Lexer_reread(this); }, "$movePointer", function() { jur_Lexer_movePointer(this); }, "$parseCharClassName", function() { return jur_Lexer_parseCharClassName(this); }, "$processQuantifier", function(var_1) { return jur_Lexer_processQuantifier(this, var_1); }, "$toString", function() { return jur_Lexer_toString(this); }, "$isEmpty",
function() { return jur_Lexer_isEmpty(this); }, "$isLetter0", function() { return jur_Lexer_isLetter0(this); }, "$isHighSurrogate1", function() { return jur_Lexer_isHighSurrogate0(this); }, "$isLowSurrogate1", function() { return jur_Lexer_isLowSurrogate0(this); }, "$readHex", function(var_1) { return jur_Lexer_readHex(this, var_1); }, "$readOctals", function() { return jur_Lexer_readOctals(this); }, "$readFlags", function() { return jur_Lexer_readFlags(this); }, "$nextIndex1", function() { return jur_Lexer_nextIndex(this);
}, "$skipComments", function() { return jur_Lexer_skipComments(this); }, "$isLineSeparator", function(var_1) { return jur_Lexer_isLineSeparator(this, var_1); }, "$nextCodePoint", function() { return jur_Lexer_nextCodePoint(this); }, "$getIndex", function() { return jur_Lexer_getIndex(this); }],
it_Bullet$update$lambda$_5_0, 0, jl_Object, [ie_EntityCollisions$SolidChecker], 0, 3, 0, ["$solid0", function(var_1, var_2) { return it_Bullet$update$lambda$_5_0_solid(this, var_1, var_2); }],
iaagg_TextureAtlas$TextureAtlasData$Region, "TextureAtlas$TextureAtlasData$Region", 32, jl_Object, [], 0, 3, 0, 0,
jur_AbstractCharClass$LazyNonSpace, 0, jur_AbstractCharClass$LazySpace, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyNonSpace_computeValue(this); }],
otjt_Int32Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0,
it_Bullets$9$lambda$null$7$lambda$_7_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Bullets$9$lambda$null$7$lambda$_7_1_run(this); }],
iaat_Parser$baseParse$lambda$_2_0, 0, jl_Object, [iaaf_Intc2], 0, 3, 0, ["$get36", function(var_1, var_2) { iaat_Parser$baseParse$lambda$_2_0_get(this, var_1, var_2); }],
iaase_SceneEvent, "SceneEvent", 40, jl_Object, [iaaup_Pool$Poolable], 0, 3, 0, ["$handle0", function() { iaase_SceneEvent_handle(this); }, "$reset", function() { iaase_SceneEvent_reset(this); }],
iaase_InputEvent, "InputEvent", 40, iaase_SceneEvent, [], 0, 3, 0, ["$reset", function() { iaase_InputEvent_reset(this); }, "$toString", function() { return iaase_InputEvent_toString(this); }],
it_Bullets$9$lambda$null$7$lambda$_7_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Bullets$9$lambda$null$7$lambda$_7_0_run(this); }],
iaau_Structs, 0, jl_Object, [], 0, 3, 0, 0,
it_Phases$2$lambda$$5$lambda$_19_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$2$lambda$$5$lambda$_19_0_run(this); }],
jn_ShortBufferOverByteBufferBigEndian, 0, jn_ShortBufferOverByteBuffer, [], 0, 0, 0, ["$duplicate0", function(var_1, var_2, var_3, var_4, var_5) { return jn_ShortBufferOverByteBufferBigEndian_duplicate(this, var_1, var_2, var_3, var_4, var_5); }, "$getElement1", function(var_1) { return jn_ShortBufferOverByteBufferBigEndian_getElement(this, var_1); }, "$putElement1", function(var_1, var_2) { jn_ShortBufferOverByteBufferBigEndian_putElement(this, var_1, var_2); }],
iaabte_PixmapEmulator$DrawType, 0, jl_Enum, [], 12, 0, iaabte_PixmapEmulator$DrawType_$callClinit, 0,
it_Phases$lambda$null$23$lambda$_44_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$23$lambda$_44_0_run(this); }],
it_Phases$lambda$null$25$lambda$_42_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$lambda$null$25$lambda$_42_0_get(this, var_1); }],
iaat_Parser$parseReplacements$lambda$_3_0, 0, jl_Object, [iaat_Parser$TokenHandler], 0, 3, 0, ["$handle1", function(var_1, var_2) { return iaat_Parser$parseReplacements$lambda$_3_0_handle(this, var_1, var_2); }],
iaaml_TmxMapLoader$Parameters, 0, iaaml_BaseTmxMapLoader$Parameters, [], 0, 3, 0, 0,
it_Phases$lambda$null$30$lambda$_37_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$30$lambda$_37_0_run(this); }],
iaaun_Noise, 0, jl_Object, [], 4, 3, iaaun_Noise_$callClinit, 0,
it_Phases$lambda$null$34$lambda$_33_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$lambda$null$34$lambda$_33_0_get(this, var_1); }],
it_Phases$lambda$null$10$lambda$_57_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$10$lambda$_57_0_run(this); }],
it_Phases$lambda$null$36$lambda$_31_1, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$lambda$null$36$lambda$_31_1_get(this, var_1); }],
it_Phases$lambda$null$16$lambda$_51_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$lambda$null$16$lambda$_51_0_get(this, var_1); }],
iaau_I18NBundle, 0, jl_Object, [], 0, 3, iaau_I18NBundle_$callClinit, ["$get39", function(var_1) { return iaau_I18NBundle_get(this, var_1); }, "$get50", function(var_1, var_2) { return iaau_I18NBundle_get0(this, var_1, var_2); }, "$has", function(var_1) { return iaau_I18NBundle_has(this, var_1); }],
otcju_TSet, 0, jl_Object, [otcju_TCollection], 3, 3, 0, 0,
iaac_TimSort, 0, jl_Object, [], 0, 0, 0, ["$doSort0", function(var_1, var_2, var_3, var_4) { iaac_TimSort_doSort(this, var_1, var_2, var_3, var_4); }, "$pushRun", function(var_1, var_2) { iaac_TimSort_pushRun(this, var_1, var_2); }, "$mergeCollapse", function() { iaac_TimSort_mergeCollapse(this); }, "$mergeForceCollapse", function() { iaac_TimSort_mergeForceCollapse(this); }, "$mergeAt", function(var_1) { iaac_TimSort_mergeAt(this, var_1); }, "$mergeLo", function(var_1, var_2, var_3, var_4) { iaac_TimSort_mergeLo(this,
var_1, var_2, var_3, var_4); }, "$mergeHi", function(var_1, var_2, var_3, var_4) { iaac_TimSort_mergeHi(this, var_1, var_2, var_3, var_4); }, "$ensureCapacity0", function(var_1) { return iaac_TimSort_ensureCapacity(this, var_1); }],
it_Phases$lambda$null$10$lambda$_57_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$10$lambda$_57_1_run(this); }],
it_Phases$lambda$null$36$lambda$_31_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$36$lambda$_31_0_run(this); }],
jl_AbstractStringBuilder$Constants, 0, jl_Object, [], 0, 0, jl_AbstractStringBuilder$Constants_$callClinit, 0,
iaac_ObjectFloatMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, ["$put15", function(var_1, var_2) { iaac_ObjectFloatMap_put(this, var_1, var_2); }, "$putResize1", function(var_1, var_2) { iaac_ObjectFloatMap_putResize(this, var_1, var_2); }, "$push1", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { iaac_ObjectFloatMap_push(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }, "$putStash1", function(var_1, var_2) { iaac_ObjectFloatMap_putStash(this, var_1, var_2); }, "$get51", function(var_1,
var_2) { return iaac_ObjectFloatMap_get(this, var_1, var_2); }, "$getStash1", function(var_1, var_2) { return iaac_ObjectFloatMap_getStash(this, var_1, var_2); }, "$resize", function(var_1) { iaac_ObjectFloatMap_resize(this, var_1); }, "$hash2", function(var_1) { return iaac_ObjectFloatMap_hash2(this, var_1); }, "$hash3", function(var_1) { return iaac_ObjectFloatMap_hash3(this, var_1); }],
jur_SingleSet, "SingleSet", 2, jur_JointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_SingleSet_matches(this, var_1, var_2, var_3); }, "$find0", function(var_1, var_2, var_3) { return jur_SingleSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_SingleSet_findBack(this, var_1, var_2, var_3, var_4); }, "$first", function(var_1) { return jur_SingleSet_first(this, var_1); }, "$processBackRefReplacement", function() { return jur_SingleSet_processBackRefReplacement(this);
}, "$processSecondPass", function() { jur_SingleSet_processSecondPass(this); }],
it_Phases$4$lambda$$8$lambda$_9_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$4$lambda$$8$lambda$_9_0_run(this); }]]);
$rt_metadata([iaam_Interpolation$10, 0, iaam_Interpolation, [], 4, 0, 0, 0,
iaam_Interpolation$11, 0, iaam_Interpolation, [], 4, 0, 0, 0,
iaam_Interpolation$12, 0, iaam_Interpolation, [], 4, 0, 0, 0,
it_Phases$5$lambda$null$1$lambda$_21_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$5$lambda$null$1$lambda$_21_0_get(this, var_1); }],
jl_Thread, "Thread", 6, jl_Object, [jl_Runnable], 0, 3, jl_Thread_$callClinit, 0,
iaamg_Plane, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0,
jur_BackReferencedSingleSet, "BackReferencedSingleSet", 2, jur_SingleSet, [], 0, 0, 0, ["$find0", function(var_1, var_2, var_3) { return jur_BackReferencedSingleSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_BackReferencedSingleSet_findBack(this, var_1, var_2, var_3, var_4); }, "$processBackRefReplacement", function() { return jur_BackReferencedSingleSet_processBackRefReplacement(this); }],
jnc_BufferOverflowException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
iaam_Interpolation$13, 0, iaam_Interpolation, [], 4, 0, 0, 0,
otp_PlatformQueue, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0,
iaam_Interpolation$14, 0, iaam_Interpolation, [], 4, 0, 0, 0,
iaag_Colors, 0, jl_Object, [], 4, 3, iaag_Colors_$callClinit, 0,
otciu_CLDRHelper, 0, jl_Object, [], 4, 3, 0, 0,
iw_MapLoader, 0, iaaml_TmxMapLoader, [], 0, 3, 0, ["$load1", function(var_1, var_2) { return iw_MapLoader_load(this, var_1, var_2); }, "$loadTilemap", function(var_1, var_2, var_3) { return iw_MapLoader_loadTilemap(this, var_1, var_2, var_3); }, "$loadTileSet", function(var_1, var_2, var_3, var_4) { iw_MapLoader_loadTileSet(this, var_1, var_2, var_3, var_4); }],
jl_StringIndexOutOfBoundsException, 0, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0,
ju_MissingResourceException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
it_Phases$6$reset$lambda$_3_0, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Phases$6$reset$lambda$_3_0_get(this, var_1); }, "$get43", function(var_1) { it_Phases$6$reset$lambda$_3_0_get0(this, var_1); }],
ig_Drawf, 0, jl_Object, [], 0, 3, 0, 0,
iaagg_GLFrameBuffer$FrameBufferBuilder, 0, iaagg_GLFrameBuffer$GLFrameBufferBuilder, [], 0, 3, 0, ["$addBasicStencilRenderBuffer", function() { return iaagg_GLFrameBuffer$FrameBufferBuilder_addBasicStencilRenderBuffer(this); }, "$addBasicDepthRenderBuffer", function() { return iaagg_GLFrameBuffer$FrameBufferBuilder_addBasicDepthRenderBuffer(this); }, "$addStencilRenderBuffer", function(var_1) { return iaagg_GLFrameBuffer$FrameBufferBuilder_addStencilRenderBuffer(this, var_1); }, "$addDepthRenderBuffer", function(var_1)
{ return iaagg_GLFrameBuffer$FrameBufferBuilder_addDepthRenderBuffer(this, var_1); }, "$addBasicColorTextureAttachment", function(var_1) { return iaagg_GLFrameBuffer$FrameBufferBuilder_addBasicColorTextureAttachment(this, var_1); }, "$addColorTextureAttachment", function(var_1, var_2, var_3) { return iaagg_GLFrameBuffer$FrameBufferBuilder_addColorTextureAttachment(this, var_1, var_2, var_3); }],
jur_UCIBackReferenceSet, "UCIBackReferenceSet", 2, jur_CIBackReferenceSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_UCIBackReferenceSet_matches(this, var_1, var_2, var_3); }, "$getName", function() { return jur_UCIBackReferenceSet_getName(this); }],
jn_ByteOrder, 0, jl_Object, [], 4, 3, jn_ByteOrder_$callClinit, 0,
iaa_Audio, 0, jl_Object, [iaau_Disposable], 1, 3, 0, 0,
iaabt_TeaAudio, 0, iaa_Audio, [], 0, 3, 0, 0,
jur_DotAllQuantifierSet, "DotAllQuantifierSet", 2, jur_QuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_DotAllQuantifierSet_matches(this, var_1, var_2, var_3); }, "$find0", function(var_1, var_2, var_3) { return jur_DotAllQuantifierSet_find(this, var_1, var_2, var_3); }, "$getName", function() { return jur_DotAllQuantifierSet_getName(this); }],
iaasu_Label, "Label", 37, iaas_Element, [], 0, 3, iaasu_Label_$callClinit, ["$getStyle0", function() { return iaasu_Label_getStyle(this); }, "$setStyle", function(var_1) { iaasu_Label_setStyle(this, var_1); }, "$setTextInternal", function(var_1) { iaasu_Label_setTextInternal(this, var_1); }, "$textEquals", function(var_1) { return iaasu_Label_textEquals(this, var_1); }, "$getText0", function() { return iaasu_Label_getText(this); }, "$setText1", function(var_1) { iaasu_Label_setText(this, var_1); }, "$invalidate",
function() { iaasu_Label_invalidate(this); }, "$scaleAndComputePrefSize", function() { iaasu_Label_scaleAndComputePrefSize(this); }, "$computePrefSize", function() { iaasu_Label_computePrefSize(this); }, "$layout", function() { iaasu_Label_layout(this); }, "$draw", function() { iaasu_Label_draw(this); }, "$getPrefWidth", function() { return iaasu_Label_getPrefWidth(this); }, "$getPrefHeight", function() { return iaasu_Label_getPrefHeight(this); }, "$getGlyphLayout", function() { return iaasu_Label_getGlyphLayout(this);
}, "$setWrap", function(var_1) { iaasu_Label_setWrap(this, var_1); }, "$getLabelAlign", function() { return iaasu_Label_getLabelAlign(this); }, "$getLineAlign", function() { return iaasu_Label_getLineAlign(this); }, "$setAlignment0", function(var_1) { iaasu_Label_setAlignment(this, var_1); }, "$setAlignment", function(var_1, var_2) { iaasu_Label_setAlignment0(this, var_1, var_2); }, "$getFontScaleX", function() { return iaasu_Label_getFontScaleX(this); }, "$getFontScaleY", function() { return iaasu_Label_getFontScaleY(this);
}, "$getBitmapFontCache", function() { return iaasu_Label_getBitmapFontCache(this); }, "$toString", function() { return iaasu_Label_toString(this); }, "$lambda$new$0", function(var_1) { iaasu_Label_lambda$new$0(this, var_1); }],
iaat_TypeLabel, "TypeLabel", 26, iaasu_Label, [], 0, 3, 0, ["$setText1", function(var_1) { iaat_TypeLabel_setText(this, var_1); }, "$setText4", function(var_1, var_2) { iaat_TypeLabel_setText0(this, var_1, var_2); }, "$saveOriginalText", function() { iaat_TypeLabel_saveOriginalText(this); }, "$getTypingListener", function() { return iaat_TypeLabel_getTypingListener(this); }, "$setTypingListener", function(var_1) { iaat_TypeLabel_setTypingListener(this, var_1); }, "$getClearColor", function() { return iaat_TypeLabel_getClearColor(this);
}, "$getDefaultToken", function() { return iaat_TypeLabel_getDefaultToken(this); }, "$parseTokens0", function() { iaat_TypeLabel_parseTokens(this); }, "$skipToTheEnd0", function(var_1) { iaat_TypeLabel_skipToTheEnd(this, var_1); }, "$skipToTheEnd", function(var_1, var_2) { iaat_TypeLabel_skipToTheEnd0(this, var_1, var_2); }, "$hasEnded", function() { return iaat_TypeLabel_hasEnded(this); }, "$restart", function(var_1) { iaat_TypeLabel_restart(this, var_1); }, "$getVariables", function() { return iaat_TypeLabel_getVariables(this);
}, "$act0", function(var_1) { iaat_TypeLabel_act(this, var_1); }, "$processCharProgression", function() { iaat_TypeLabel_processCharProgression(this); }, "$getBitmapFontCache", function() { return iaat_TypeLabel_getBitmapFontCache(this); }, "$setWrap", function(var_1) { iaat_TypeLabel_setWrap(this, var_1); }, "$layout", function() { iaat_TypeLabel_layout(this); }, "$layoutCache", function() { iaat_TypeLabel_layoutCache(this); }, "$addMissingGlyphs", function() { iaat_TypeLabel_addMissingGlyphs(this); }, "$draw",
function() { iaat_TypeLabel_draw(this); }],
iaas_Scene$keyUp$lambda$_26_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Scene$keyUp$lambda$_26_0_get(this); }, "$get7", function() { return iaas_Scene$keyUp$lambda$_26_0_get0(this); }],
iaat_Parser$stripTokens$lambda$_6_0, 0, jl_Object, [iaat_Parser$TokenHandler], 0, 3, 0, ["$handle1", function(var_1, var_2) { return iaat_Parser$stripTokens$lambda$_6_0_handle(this, var_1, var_2); }],
iaat_Parser$stripTokens$lambda$_6_1, 0, jl_Object, [iaaf_Intc2], 0, 3, 0, ["$get36", function(var_1, var_2) { iaat_Parser$stripTokens$lambda$_6_1_get(this, var_1, var_2); }],
otcju_TMap$Entry, 0, jl_Object, [], 3, 3, 0, 0,
otcju_TMapEntry, 0, jl_Object, [otcju_TMap$Entry, jl_Cloneable], 0, 0, 0, 0,
jur_ReluctantGroupQuantifierSet, "ReluctantGroupQuantifierSet", 2, jur_GroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_ReluctantGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
iaaui_DefaultSerializers, 0, jl_Object, [], 0, 3, iaaui_DefaultSerializers_$callClinit, 0,
it_Bullets$8, 0, it_BulletType, [], 4, 0, 0, ["$draw11", function(var_1) { it_Bullets$8_draw(this, var_1); }],
it_Bullets$9, 0, it_BulletType, [], 4, 0, 0, ["$init", function(var_1) { it_Bullets$9_init(this, var_1); }, "$update5", function(var_1) { it_Bullets$9_update(this, var_1); }, "$hit3", function(var_1) { it_Bullets$9_hit(this, var_1); }, "$despawn", function(var_1) { it_Bullets$9_despawn(this, var_1); }, "$draw11", function(var_1) { it_Bullets$9_draw(this, var_1); }],
iaagg_VertexBufferObjectSubData, 0, jl_Object, [iaagg_VertexData], 0, 3, 0, ["$createBufferObject", function() { return iaagg_VertexBufferObjectSubData_createBufferObject(this); }, "$getNumVertices", function() { return iaagg_VertexBufferObjectSubData_getNumVertices(this); }, "$getBuffer0", function() { return iaagg_VertexBufferObjectSubData_getBuffer(this); }, "$bufferChanged", function() { iaagg_VertexBufferObjectSubData_bufferChanged(this); }, "$setVertices1", function(var_1, var_2, var_3) { iaagg_VertexBufferObjectSubData_setVertices(this,
var_1, var_2, var_3); }, "$bind2", function(var_1, var_2) { iaagg_VertexBufferObjectSubData_bind(this, var_1, var_2); }, "$unbind1", function(var_1, var_2) { iaagg_VertexBufferObjectSubData_unbind(this, var_1, var_2); }, "$dispose", function() { iaagg_VertexBufferObjectSubData_dispose(this); }],
it_Phases$2$lambda$null$12$lambda$_12_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$2$lambda$null$12$lambda$_12_0_get(this, var_1); }],
it_Phases$2$lambda$null$4$lambda$_20_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$2$lambda$null$4$lambda$_20_0_get(this, var_1); }],
it_Phases$4$lambda$null$5$lambda$_12_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$4$lambda$null$5$lambda$_12_0_run(this); }],
jnc_CoderMalfunctionError, 0, jl_Error, [], 0, 3, 0, 0,
iaas_Scene, "Scene", 36, jl_Object, [iaai_InputProcessor, iaau_Disposable], 0, 3, 0, ["$getStyle", function(var_1) { return iaas_Scene_getStyle(this, var_1); }, "$addStyle", function(var_1, var_2) { iaas_Scene_addStyle(this, var_1, var_2); }, "$draw", function() { iaas_Scene_draw(this); }, "$act1", function() { iaas_Scene_act(this); }, "$act0", function(var_1) { iaas_Scene_act0(this, var_1); }, "$table1", function(var_1) { return iaas_Scene_table(this, var_1); }, "$fireEnterAndExit", function(var_1, var_2, var_3,
var_4) { return iaas_Scene_fireEnterAndExit(this, var_1, var_2, var_3, var_4); }, "$touchDown", function(var_1, var_2, var_3, var_4) { return iaas_Scene_touchDown(this, var_1, var_2, var_3, var_4); }, "$touchDragged", function(var_1, var_2, var_3) { return iaas_Scene_touchDragged(this, var_1, var_2, var_3); }, "$touchUp", function(var_1, var_2, var_3, var_4) { return iaas_Scene_touchUp(this, var_1, var_2, var_3, var_4); }, "$mouseMoved", function(var_1, var_2) { return iaas_Scene_mouseMoved(this, var_1, var_2);
}, "$scrolled", function(var_1, var_2) { return iaas_Scene_scrolled(this, var_1, var_2); }, "$keyDown", function(var_1) { return iaas_Scene_keyDown(this, var_1); }, "$keyUp", function(var_1) { return iaas_Scene_keyUp(this, var_1); }, "$keyTyped", function(var_1) { return iaas_Scene_keyTyped(this, var_1); }, "$addTouchFocus", function(var_1, var_2, var_3, var_4, var_5) { iaas_Scene_addTouchFocus(this, var_1, var_2, var_3, var_4, var_5); }, "$cancelTouchFocus", function(var_1) { iaas_Scene_cancelTouchFocus(this,
var_1); }, "$add13", function(var_1) { iaas_Scene_add(this, var_1); }, "$unfocus", function(var_1) { iaas_Scene_unfocus(this, var_1); }, "$setKeyboardFocus", function(var_1) { return iaas_Scene_setKeyboardFocus(this, var_1); }, "$setScrollFocus", function(var_1) { return iaas_Scene_setScrollFocus(this, var_1); }, "$getWidth", function() { return iaas_Scene_getWidth(this); }, "$getHeight", function() { return iaas_Scene_getHeight(this); }, "$hit", function(var_1, var_2, var_3) { return iaas_Scene_hit(this, var_1,
var_2, var_3); }, "$screenToStageCoordinates", function(var_1) { return iaas_Scene_screenToStageCoordinates(this, var_1); }, "$calculateScissors", function(var_1, var_2) { iaas_Scene_calculateScissors(this, var_1, var_2); }, "$getActionsRequestRendering", function() { return iaas_Scene_getActionsRequestRendering(this); }, "$isInsideViewport", function(var_1, var_2) { return iaas_Scene_isInsideViewport(this, var_1, var_2); }, "$resize1", function(var_1, var_2) { iaas_Scene_resize(this, var_1, var_2); }],
it_Bullets$2, 0, it_BulletType, [], 4, 0, 0, ["$draw11", function(var_1) { it_Bullets$2_draw(this, var_1); }],
it_Bullets$3, 0, it_BulletType, [], 4, 0, 0, ["$draw11", function(var_1) { it_Bullets$3_draw(this, var_1); }, "$drawLight", function(var_1) { it_Bullets$3_drawLight(this, var_1); }],
it_Bullets$1, 0, it_BulletType, [], 4, 0, 0, ["$draw11", function(var_1) { it_Bullets$1_draw(this, var_1); }],
it_Phases$2$_init_$lambda$_0_0, "Phases$2$<init>$lambda$_0_0", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$2$_init_$lambda$_0_0_run(this); }],
it_Bullets$6, 0, it_BulletType, [], 4, 0, 0, ["$draw11", function(var_1) { it_Bullets$6_draw(this, var_1); }, "$solid0", function(var_1, var_2) { return it_Bullets$6_solid(this, var_1, var_2); }],
it_Phases$2$_init_$lambda$_0_1, "Phases$2$<init>$lambda$_0_1", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$2$_init_$lambda$_0_1_run(this); }],
it_Bullets$7, 0, it_BulletType, [], 4, 0, 0, ["$draw11", function(var_1) { it_Bullets$7_draw(this, var_1); }],
iaamo_PolylineMapObject, "PolylineMapObject", 23, iaam_MapObject, [], 0, 3, 0, 0,
it_Bullets$4, 0, it_BulletType, [], 4, 0, 0, ["$draw11", function(var_1) { it_Bullets$4_draw(this, var_1); }]]);
$rt_metadata([i_Inferno, "Inferno", 41, iaa_ApplicationCore, [], 0, 3, 0, ["$setup", function() { i_Inferno_setup(this); }],
it_Bullets$5, 0, it_BulletType, [], 4, 0, 0, ["$draw11", function(var_1) { it_Bullets$5_draw(this, var_1); }, "$update5", function(var_1) { it_Bullets$5_update(this, var_1); }],
it_Boss, "Boss", 44, it_Char, [], 0, 3, it_Boss_$callClinit, ["$onDeath", function() { it_Boss_onDeath(this); }, "$midPhase", function() { it_Boss_midPhase(this); }, "$nextPhase", function(var_1) { it_Boss_nextPhase(this, var_1); }, "$reset", function() { it_Boss_reset(this); }, "$anim", function(var_1, var_2) { it_Boss_anim(this, var_1, var_2); }, "$update1", function() { it_Boss_update(this); }, "$maxHealth", function() { return it_Boss_maxHealth(this); }, "$draw", function() { it_Boss_draw(this); }, "$isStatue",
function() { return it_Boss_isStatue(this); }, "$drawStatue", function() { it_Boss_drawStatue(this); }, "$move0", function(var_1, var_2) { it_Boss_move(this, var_1, var_2); }, "$hitbox", function(var_1) { it_Boss_hitbox(this, var_1); }, "$hitboxTile", function(var_1) { it_Boss_hitboxTile(this, var_1); }, "$collides", function(var_1) { return it_Boss_collides(this, var_1); }, "$drawShadow0", function() { it_Boss_drawShadow(this); }, "$dash", function(var_1, var_2) { return it_Boss_dash(this, var_1, var_2); },
"$shoot0", function(var_1, var_2) { it_Boss_shoot(this, var_1, var_2); }, "$shoot", function(var_1) { it_Boss_shoot0(this, var_1); }, "$laser", function(var_1, var_2) { it_Boss_laser(this, var_1, var_2); }, "$shootf", function(var_1) { it_Boss_shootf(this, var_1); }, "$aim", function() { return it_Boss_aim(this); }, "$seesPlayer", function() { return it_Boss_seesPlayer(this); }, "$lambda$laser$5", function(var_1, var_2) { it_Boss_lambda$laser$5(this, var_1, var_2); }, "$lambda$dash$4", function(var_1) { it_Boss_lambda$dash$4(this,
var_1); }, "$lambda$update$3", function() { it_Boss_lambda$update$3(this); }, "$lambda$onDeath$00", function(var_1) { it_Boss_lambda$onDeath$0(this, var_1); }],
it_Phases$2$_init_$lambda$_0_2, "Phases$2$<init>$lambda$_0_2", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$2$_init_$lambda$_0_2_run(this); }],
it_Phases$2$_init_$lambda$_0_3, "Phases$2$<init>$lambda$_0_3", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$2$_init_$lambda$_0_3_run(this); }],
jur_CIDecomposedCharSet, "CIDecomposedCharSet", 2, jur_DecomposedCharSet, [], 0, 0, 0, 0,
iaamg_Point2, "Point2", 29, jl_Object, [ji_Serializable], 0, 3, 0, ["$equals", function(var_1) { return iaamg_Point2_equals(this, var_1); }, "$toString", function() { return iaamg_Point2_toString(this); }],
it_Phases$4$lambda$null$1$lambda$_16_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$4$lambda$null$1$lambda$_16_0_get(this, var_1); }],
iaas_Scene$cancelTouchFocus$lambda$_30_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Scene$cancelTouchFocus$lambda$_30_0_get(this); }, "$get7", function() { return iaas_Scene$cancelTouchFocus$lambda$_30_0_get0(this); }],
otjw_WebGLContextAttributes, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0,
iaas_Scene$act$lambda$_12_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Scene$act$lambda$_12_0_get(this); }, "$get7", function() { return iaas_Scene$act$lambda$_12_0_get0(this); }],
iaagg_BitmapFontCache, 0, jl_Object, [], 0, 3, iaagg_BitmapFontCache_$callClinit, ["$setPosition", function(var_1, var_2) { iaagg_BitmapFontCache_setPosition(this, var_1, var_2); }, "$translate0", function(var_1, var_2) { iaagg_BitmapFontCache_translate(this, var_1, var_2); }, "$tint", function(var_1) { iaagg_BitmapFontCache_tint(this, var_1); }, "$setColors", function(var_1, var_2, var_3) { iaagg_BitmapFontCache_setColors(this, var_1, var_2, var_3); }, "$setColors0", function(var_1, var_2, var_3) { iaagg_BitmapFontCache_setColors0(this,
var_1, var_2, var_3); }, "$draw", function() { iaagg_BitmapFontCache_draw(this); }, "$clear", function() { iaagg_BitmapFontCache_clear(this); }, "$requireGlyphs", function(var_1) { iaagg_BitmapFontCache_requireGlyphs(this, var_1); }, "$requirePageGlyphs", function(var_1, var_2) { iaagg_BitmapFontCache_requirePageGlyphs(this, var_1, var_2); }, "$addToCache", function(var_1, var_2, var_3) { iaagg_BitmapFontCache_addToCache(this, var_1, var_2, var_3); }, "$addGlyph", function(var_1, var_2, var_3, var_4) { iaagg_BitmapFontCache_addGlyph(this,
var_1, var_2, var_3, var_4); }, "$setText3", function(var_1, var_2, var_3) { iaagg_BitmapFontCache_setText(this, var_1, var_2, var_3); }, "$addText", function(var_1, var_2, var_3) { iaagg_BitmapFontCache_addText(this, var_1, var_2, var_3); }, "$getFont", function() { return iaagg_BitmapFontCache_getFont(this); }],
it_Phases$lambda$null$54$lambda$_13_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$54$lambda$_13_0_run(this); }],
it_Phases$3$lambda$null$9$lambda$_23_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$3$lambda$null$9$lambda$_23_0_get(this, var_1); }],
iaag_Pixmap, 0, jl_Object, [iaau_Disposable], 0, 3, iaag_Pixmap_$callClinit, ["$create", function(var_1, var_2, var_3) { iaag_Pixmap_create(this, var_1, var_2, var_3); }, "$setBlending0", function(var_1) { iaag_Pixmap_setBlending(this, var_1); }, "$getFormat", function() { return iaag_Pixmap_getFormat(this); }, "$getGLInternalFormat", function() { return iaag_Pixmap_getGLInternalFormat(this); }, "$getGLFormat", function() { return iaag_Pixmap_getGLFormat(this); }, "$getGLType", function() { return iaag_Pixmap_getGLType(this);
}, "$getWidth0", function() { return iaag_Pixmap_getWidth(this); }, "$getHeight0", function() { return iaag_Pixmap_getHeight(this); }, "$dispose", function() { iaag_Pixmap_dispose(this); }, "$drawPixmap", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { iaag_Pixmap_drawPixmap(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$drawPixmap0", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { iaag_Pixmap_drawPixmap0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7,
var_8, var_9); }, "$getPixels", function() { return iaag_Pixmap_getPixels(this); }, "$bufferAsArray", function(var_1) { return iaag_Pixmap_bufferAsArray(this, var_1); }, "$image", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { iaag_Pixmap_image(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$fillOrStrokePath", function(var_1) { iaag_Pixmap_fillOrStrokePath(this, var_1); }],
it_Phases$1$lambda$null$16$lambda$_8_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$1$lambda$null$16$lambda$_8_0_run(this); }],
it_Phases$lambda$null$14$lambda$_53_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$14$lambda$_53_0_run(this); }],
it_Phases$lambda$null$50$lambda$_17_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$lambda$null$50$lambda$_17_0_get(this, var_1); }],
it_Phases$3$lambda$null$5$lambda$_27_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$3$lambda$null$5$lambda$_27_0_get(this, var_1); }],
it_Phases$lambda$null$41$lambda$_26_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$lambda$null$41$lambda$_26_0_get(this, var_1); }],
it_Phases$lambda$null$14$lambda$_53_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$14$lambda$_53_1_run(this); }],
it_Phases$lambda$null$32$lambda$_35_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$lambda$null$32$lambda$_35_0_get(this, var_1); }],
iaac_ObjectMap$Keys, "ObjectMap$Keys", 30, iaac_ObjectMap$MapIterator, [], 0, 3, 0, ["$hasNext", function() { return iaac_ObjectMap$Keys_hasNext(this); }, "$next0", function() { return iaac_ObjectMap$Keys_next(this); }, "$iterator0", function() { return iaac_ObjectMap$Keys_iterator(this); }, "$toArray0", function(var_1) { return iaac_ObjectMap$Keys_toArray(this, var_1); }, "$reset", function() { iaac_ObjectMap$Keys_reset(this); }, "$iterator", function() { return iaac_ObjectMap$Keys_iterator0(this); }],
iaat_TypeLabel$1, 0, jl_Object, [], 32, 0, iaat_TypeLabel$1_$callClinit, 0,
otcit_DoubleAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0,
i_UI, "UI", 41, jl_Object, [iaa_ApplicationListener], 0, 3, 0, ["$init0", function() { i_UI_init(this); }, "$resize1", function(var_1, var_2) { i_UI_resize(this, var_1, var_2); }, "$update1", function() { i_UI_update(this); }, "$getDialogueFace", function() { return i_UI_getDialogueFace(this); }, "$hasDialogue", function() { return i_UI_hasDialogue(this); }, "$setup", function() { i_UI_setup(this); }, "$lambda$setup$5", function(var_1) { i_UI_lambda$setup$5(this, var_1); }, "$lambda$null$44", function(var_1)
{ i_UI_lambda$null$4(this, var_1); }, "$lambda$null$31", function() { i_UI_lambda$null$3(this); }, "$lambda$null$212", function(var_1) { i_UI_lambda$null$2(this, var_1); }, "$lambda$null$117", function() { return i_UI_lambda$null$1(this); }, "$lambda$null$06", function() { return i_UI_lambda$null$0(this); }],
it_Phases$1$lambda$null$20$lambda$_4_0, 0, jl_Object, [it_Bullet$Mover], 0, 3, 0, ["$move2", function(var_1) { return it_Phases$1$lambda$null$20$lambda$_4_0_move(this, var_1); }],
ji_ByteArrayInputStream, 0, ji_InputStream, [], 0, 3, 0, ["$read4", function() { return ji_ByteArrayInputStream_read(this); }, "$read", function(var_1, var_2, var_3) { return ji_ByteArrayInputStream_read0(this, var_1, var_2, var_3); }, "$available", function() { return ji_ByteArrayInputStream_available(this); }],
otci_IntegerUtil, 0, jl_Object, [], 4, 3, 0, 0,
jur_PossessiveAltQuantifierSet, "PossessiveAltQuantifierSet", 2, jur_AltQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PossessiveAltQuantifierSet_matches(this, var_1, var_2, var_3); }],
iaam_Interpolation$ElasticIn, 0, iaam_Interpolation$Elastic, [], 0, 3, 0, 0,
jlr_Method, "Method", 7, jlr_AccessibleObject, [jlr_Member], 0, 3, 0, ["$getName", function() { return jlr_Method_getName(this); }, "$getModifiers0", function() { return jlr_Method_getModifiers(this); }, "$getReturnType", function() { return jlr_Method_getReturnType(this); }, "$getParameterTypes", function() { return jlr_Method_getParameterTypes(this); }, "$toString", function() { return jlr_Method_toString(this); }, "$invoke", function(var_1, var_2) { return jlr_Method_invoke(this, var_1, var_2); }],
it_Phases$4$lambda$null$10$lambda$_7_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$4$lambda$null$10$lambda$_7_0_get(this, var_1); }],
iaagg_SpriteBatch, 0, jl_Object, [iaau_Disposable], 0, 3, 0, ["$setColor", function(var_1) { iaagg_SpriteBatch_setColor(this, var_1); }, "$setColor0", function(var_1, var_2, var_3, var_4) { iaagg_SpriteBatch_setColor0(this, var_1, var_2, var_3, var_4); }, "$getColor", function() { return iaagg_SpriteBatch_getColor(this); }, "$setPackedColor", function(var_1) { iaagg_SpriteBatch_setPackedColor(this, var_1); }, "$getPackedColor", function() { return iaagg_SpriteBatch_getPackedColor(this); }, "$setMixColor", function(var_1,
var_2, var_3, var_4) { iaagg_SpriteBatch_setMixColor(this, var_1, var_2, var_3, var_4); }, "$setPackedMixColor", function(var_1) { iaagg_SpriteBatch_setPackedMixColor(this, var_1); }, "$getPackedMixColor", function() { return iaagg_SpriteBatch_getPackedMixColor(this); }, "$draw3", function(var_1, var_2, var_3, var_4) { iaagg_SpriteBatch_draw(this, var_1, var_2, var_3, var_4); }, "$draw1", function(var_1, var_2, var_3, var_4, var_5) { iaagg_SpriteBatch_draw0(this, var_1, var_2, var_3, var_4, var_5); }, "$draw2",
function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { iaagg_SpriteBatch_draw1(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }, "$flush0", function() { iaagg_SpriteBatch_flush(this); }, "$setBlending", function(var_1) { iaagg_SpriteBatch_setBlending(this, var_1); }, "$getProjection", function() { return iaagg_SpriteBatch_getProjection(this); }, "$getTransform", function() { return iaagg_SpriteBatch_getTransform(this); }, "$setProjection", function(var_1) { iaagg_SpriteBatch_setProjection(this,
var_1); }, "$setTransform0", function(var_1) { iaagg_SpriteBatch_setTransform(this, var_1); }, "$setupMatrices", function() { iaagg_SpriteBatch_setupMatrices(this); }, "$switchTexture", function(var_1) { iaagg_SpriteBatch_switchTexture(this, var_1); }, "$setShader0", function(var_1) { iaagg_SpriteBatch_setShader(this, var_1); }, "$setShader", function(var_1, var_2) { iaagg_SpriteBatch_setShader0(this, var_1, var_2); }, "$getShader", function() { return iaagg_SpriteBatch_getShader(this); }],
ig_QueueBatch, 0, iaagg_SpriteBatch, [], 0, 3, 0, ["$blend", function(var_1) { ig_QueueBatch_blend(this, var_1); }, "$draw3", function(var_1, var_2, var_3, var_4) { ig_QueueBatch_draw(this, var_1, var_2, var_3, var_4); }, "$draw2", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { ig_QueueBatch_draw0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }, "$flush0", function() { ig_QueueBatch_flush(this); }],
iaau_Interval, 0, jl_Object, [], 0, 3, 0, ["$get20", function(var_1) { return iaau_Interval_get(this, var_1); }, "$get4", function(var_1, var_2) { return iaau_Interval_get0(this, var_1, var_2); }, "$check1", function(var_1, var_2) { return iaau_Interval_check(this, var_1, var_2); }, "$clear", function() { iaau_Interval_clear(this); }, "$getTimes", function() { return iaau_Interval_getTimes(this); }],
ju_Objects, 0, jl_Object, [], 4, 3, 0, 0,
iaam_Quaternion, 0, jl_Object, [ji_Serializable], 0, 3, iaam_Quaternion_$callClinit, ["$set22", function(var_1, var_2, var_3, var_4) { return iaam_Quaternion_set(this, var_1, var_2, var_3, var_4); }, "$idt0", function() { return iaam_Quaternion_idt(this); }],
iaagg_GlyphLayout$setText$lambda$_6_1, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaagg_GlyphLayout$setText$lambda$_6_1_get(this); }, "$get52", function() { return iaagg_GlyphLayout$setText$lambda$_6_1_get0(this); }],
iaat_InternalToken, 0, jl_Enum, [], 12, 0, iaat_InternalToken_$callClinit, 0,
jur_SequenceSet, "SequenceSet", 2, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_SequenceSet_accepts(this, var_1, var_2); }, "$find0", function(var_1, var_2, var_3) { return jur_SequenceSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_SequenceSet_findBack(this, var_1, var_2, var_3, var_4); }, "$getName", function() { return jur_SequenceSet_getName(this); }, "$first", function(var_1) { return jur_SequenceSet_first(this, var_1);
}, "$indexOf5", function(var_1, var_2, var_3) { return jur_SequenceSet_indexOf(this, var_1, var_2, var_3); }, "$lastIndexOf3", function(var_1, var_2, var_3) { return jur_SequenceSet_lastIndexOf(this, var_1, var_2, var_3); }, "$startsWith1", function(var_1, var_2) { return jur_SequenceSet_startsWith(this, var_1, var_2); }],
iaagg_GlyphLayout$setText$lambda$_6_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaagg_GlyphLayout$setText$lambda$_6_0_get(this); }, "$get53", function() { return iaagg_GlyphLayout$setText$lambda$_6_0_get0(this); }],
it_Phases$1$lambda$null$13$lambda$_11_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$1$lambda$null$13$lambda$_11_0_get(this, var_1); }],
jur_AltGroupQuantifierSet, "AltGroupQuantifierSet", 2, jur_GroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_AltGroupQuantifierSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_AltGroupQuantifierSet_setNext(this, var_1); }],
iaaus_XmlReader$Element, "XmlReader$Element", 21, jl_Object, [], 0, 3, 0, ["$getName", function() { return iaaus_XmlReader$Element_getName(this); }, "$getAttribute0", function(var_1) { return iaaus_XmlReader$Element_getAttribute(this, var_1); }, "$getAttribute", function(var_1, var_2) { return iaaus_XmlReader$Element_getAttribute0(this, var_1, var_2); }, "$setAttribute", function(var_1, var_2) { iaaus_XmlReader$Element_setAttribute(this, var_1, var_2); }, "$getChildCount", function() { return iaaus_XmlReader$Element_getChildCount(this);
}, "$getChild", function(var_1) { return iaaus_XmlReader$Element_getChild(this, var_1); }, "$addChild", function(var_1) { iaaus_XmlReader$Element_addChild(this, var_1); }, "$getText", function() { return iaaus_XmlReader$Element_getText(this); }, "$setText", function(var_1) { iaaus_XmlReader$Element_setText(this, var_1); }, "$removeChild0", function(var_1) { iaaus_XmlReader$Element_removeChild(this, var_1); }, "$toString", function() { return iaaus_XmlReader$Element_toString(this); }, "$toString5", function(var_1)
{ return iaaus_XmlReader$Element_toString0(this, var_1); }, "$getChildByName", function(var_1) { return iaaus_XmlReader$Element_getChildByName(this, var_1); }, "$getChildrenByName", function(var_1) { return iaaus_XmlReader$Element_getChildrenByName(this, var_1); }, "$getFloatAttribute", function(var_1, var_2) { return iaaus_XmlReader$Element_getFloatAttribute(this, var_1, var_2); }, "$getIntAttribute0", function(var_1) { return iaaus_XmlReader$Element_getIntAttribute(this, var_1); }, "$getIntAttribute", function(var_1,
var_2) { return iaaus_XmlReader$Element_getIntAttribute0(this, var_1, var_2); }, "$get50", function(var_1, var_2) { return iaaus_XmlReader$Element_get(this, var_1, var_2); }],
iaasu_Image, "Image", 37, iaas_Element, [], 0, 3, 0, ["$layout", function() { iaasu_Image_layout(this); }, "$draw", function() { iaasu_Image_draw(this); }, "$getRegion", function() { return iaasu_Image_getRegion(this); }, "$setDrawable", function(var_1) { iaasu_Image_setDrawable(this, var_1); }, "$getMinWidth", function() { return iaasu_Image_getMinWidth(this); }, "$getMinHeight", function() { return iaasu_Image_getMinHeight(this); }, "$getPrefWidth", function() { return iaasu_Image_getPrefWidth(this); }, "$getPrefHeight",
function() { return iaasu_Image_getPrefHeight(this); }],
iaagg_CacheBatch, 0, iaagg_SpriteBatch, [], 0, 3, 0, ["$flush0", function() { iaagg_CacheBatch_flush(this); }, "$setColor", function(var_1) { iaagg_CacheBatch_setColor(this, var_1); }, "$setColor0", function(var_1, var_2, var_3, var_4) { iaagg_CacheBatch_setColor0(this, var_1, var_2, var_3, var_4); }, "$setPackedColor", function(var_1) { iaagg_CacheBatch_setPackedColor(this, var_1); }, "$getColor", function() { return iaagg_CacheBatch_getColor(this); }, "$getPackedColor", function() { return iaagg_CacheBatch_getPackedColor(this);
}, "$setProjection", function(var_1) { iaagg_CacheBatch_setProjection(this, var_1); }, "$beginCache", function() { iaagg_CacheBatch_beginCache(this); }, "$endCache", function() { return iaagg_CacheBatch_endCache(this); }, "$draw3", function(var_1, var_2, var_3, var_4) { iaagg_CacheBatch_draw(this, var_1, var_2, var_3, var_4); }, "$draw2", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { iaagg_CacheBatch_draw0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }, "$setShader0", function(var_1)
{ iaagg_CacheBatch_setShader(this, var_1); }, "$setShader", function(var_1, var_2) { iaagg_CacheBatch_setShader0(this, var_1, var_2); }],
iaam_Angles, 0, jl_Object, [], 0, 3, iaam_Angles_$callClinit, 0,
iaau_Timer, 0, jl_Object, [], 0, 3, iaau_Timer_$callClinit, 0,
jur_UCIRangeSet, "UCIRangeSet", 2, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_UCIRangeSet_accepts(this, var_1, var_2); }, "$getName", function() { return jur_UCIRangeSet_getName(this); }]]);
$rt_metadata([it_Phases$2$lambda$null$2$lambda$_22_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$2$lambda$null$2$lambda$_22_0_get(this, var_1); }],
i_UI$setup$lambda$_7_3, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { i_UI$setup$lambda$_7_3_get(this, var_1); }, "$get57", function(var_1) { i_UI$setup$lambda$_7_3_get0(this, var_1); }],
ig_LayerBatch, 0, iaagg_SpriteBatch, [], 0, 3, 0, ["$sort2", function(var_1) { ig_LayerBatch_sort(this, var_1); }, "$draw3", function(var_1, var_2, var_3, var_4) { ig_LayerBatch_draw(this, var_1, var_2, var_3, var_4); }, "$draw2", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { ig_LayerBatch_draw0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }, "$flush0", function() { ig_LayerBatch_flush(this); }],
i_UI$setup$lambda$_7_2, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { i_UI$setup$lambda$_7_2_get(this, var_1); }, "$get57", function(var_1) { i_UI$setup$lambda$_7_2_get0(this, var_1); }],
otcju_TTimer, 0, otcjl_TObject, [], 0, 3, 0, 0,
iaase_Touchable, "Touchable", 40, jl_Enum, [], 12, 3, iaase_Touchable_$callClinit, 0,
otp_Platform, 0, jl_Object, [], 4, 3, 0, 0,
i_UI$setup$lambda$_7_1, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { i_UI$setup$lambda$_7_1_get(this, var_1); }, "$get57", function(var_1) { i_UI$setup$lambda$_7_1_get0(this, var_1); }],
i_UI$setup$lambda$_7_0, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { i_UI$setup$lambda$_7_0_get(this, var_1); }, "$get57", function(var_1) { i_UI$setup$lambda$_7_0_get0(this, var_1); }],
jnc_CodingErrorAction, 0, jl_Object, [], 0, 3, jnc_CodingErrorAction_$callClinit, 0,
jl_Boolean, 0, jl_Object, [ji_Serializable, jl_Comparable], 0, 3, jl_Boolean_$callClinit, ["$booleanValue", function() { return jl_Boolean_booleanValue(this); }],
ju_NoSuchElementException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
iaaui_ReusableByteInStream, 0, ji_ByteArrayInputStream, [], 0, 3, 0, 0,
jur_BackReferenceSet, "BackReferenceSet", 2, jur_CIBackReferenceSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_BackReferenceSet_matches(this, var_1, var_2, var_3); }, "$find0", function(var_1, var_2, var_3) { return jur_BackReferenceSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_BackReferenceSet_findBack(this, var_1, var_2, var_3, var_4); }, "$first", function(var_1) { return jur_BackReferenceSet_first(this, var_1); }, "$getName",
function() { return jur_BackReferenceSet_getName(this); }],
jur_DotQuantifierSet, "DotQuantifierSet", 2, jur_QuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_DotQuantifierSet_matches(this, var_1, var_2, var_3); }, "$find0", function(var_1, var_2, var_3) { return jur_DotQuantifierSet_find(this, var_1, var_2, var_3); }, "$findLineTerminator", function(var_1, var_2, var_3) { return jur_DotQuantifierSet_findLineTerminator(this, var_1, var_2, var_3); }, "$findBackLineTerminator", function(var_1, var_2, var_3) { return jur_DotQuantifierSet_findBackLineTerminator(this,
var_1, var_2, var_3); }, "$getName", function() { return jur_DotQuantifierSet_getName(this); }],
jn_DoubleBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0,
iaau_ScreenRecorder$_clinit_$lambda$_3_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { iaau_ScreenRecorder$_clinit_$lambda$_3_0_run(this); }],
otcit_FloatAnalyzer, 0, jl_Object, [], 4, 3, otcit_FloatAnalyzer_$callClinit, 0,
it_Phases$3$lambda$null$3$lambda$_29_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$3$lambda$null$3$lambda$_29_0_get(this, var_1); }],
iaagg_GLOnlyTextureData, "GLOnlyTextureData", 33, jl_Object, [iaag_TextureData], 0, 3, 0, ["$getType1", function() { return iaagg_GLOnlyTextureData_getType(this); }, "$isPrepared", function() { return iaagg_GLOnlyTextureData_isPrepared(this); }, "$prepare", function() { iaagg_GLOnlyTextureData_prepare(this); }, "$consumeCustomData", function(var_1) { iaagg_GLOnlyTextureData_consumeCustomData(this, var_1); }, "$consumePixmap", function() { return iaagg_GLOnlyTextureData_consumePixmap(this); }, "$disposePixmap",
function() { return iaagg_GLOnlyTextureData_disposePixmap(this); }, "$getWidth0", function() { return iaagg_GLOnlyTextureData_getWidth(this); }, "$getHeight0", function() { return iaagg_GLOnlyTextureData_getHeight(this); }, "$getFormat", function() { return iaagg_GLOnlyTextureData_getFormat(this); }, "$useMipMaps", function() { return iaagg_GLOnlyTextureData_useMipMaps(this); }, "$isManaged", function() { return iaagg_GLOnlyTextureData_isManaged(this); }],
iaas_Scene$addTouchFocus$lambda$_28_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Scene$addTouchFocus$lambda$_28_0_get(this); }, "$get58", function() { return iaas_Scene$addTouchFocus$lambda$_28_0_get0(this); }],
ju_HashMap$ValueIterator, 0, ju_HashMap$AbstractMapIterator, [ju_Iterator], 0, 0, 0, ["$next0", function() { return ju_HashMap$ValueIterator_next(this); }],
it_Phases$4$lambda$null$7$lambda$_10_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$4$lambda$null$7$lambda$_10_0_get(this, var_1); }],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1, "AbstractCharClass$LazyJavaJavaIdentifierStart$1", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains(this, var_1); }],
it_Phases$2$lambda$null$20$lambda$_4_0, 0, jl_Object, [it_Bullet$Mover], 0, 3, 0, ["$move2", function(var_1) { return it_Phases$2$lambda$null$20$lambda$_4_0_move(this, var_1); }],
ju_Arrays, 0, jl_Object, [], 0, 3, 0, 0,
jl_ConsoleOutputStreamStdout, 0, ji_OutputStream, [], 0, 0, 0, ["$write0", function(var_1) { jl_ConsoleOutputStreamStdout_write(this, var_1); }],
it_Phases$3$lambda$null$16$lambda$_16_0, 0, jl_Object, [it_Bullet$Mover], 0, 3, 0, ["$move2", function(var_1) { return it_Phases$3$lambda$null$16$lambda$_16_0_move(this, var_1); }],
jur_CharClass$3, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$3_contains(this, var_1); }],
iaagg_CapStyle, 0, jl_Enum, [], 12, 3, iaagg_CapStyle_$callClinit, 0,
jur_CharClass$4, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$4_contains(this, var_1); }],
jur_CharClass$1, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$1_contains(this, var_1); }],
jur_CharClass$2, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$2_contains(this, var_1); }],
jur_CharClass$7, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$7_contains(this, var_1); }],
jur_CharClass$8, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$8_contains(this, var_1); }],
jur_CharClass$5, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$5_contains(this, var_1); }],
it_Phases$3$lambda$null$18$lambda$_14_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$3$lambda$null$18$lambda$_14_0_get(this, var_1); }],
jur_CharClass$6, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$6_contains(this, var_1); }],
it_Phases$3$_init_$lambda$_0_0, "Phases$3$<init>$lambda$_0_0", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$3$_init_$lambda$_0_0_run(this); }],
jur_DotSet, "DotSet", 2, jur_JointSet, [], 4, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_DotSet_matches(this, var_1, var_2, var_3); }, "$getName", function() { return jur_DotSet_getName(this); }, "$setNext", function(var_1) { jur_DotSet_setNext(this, var_1); }, "$getType", function() { return jur_DotSet_getType(this); }, "$hasConsumed", function(var_1) { return jur_DotSet_hasConsumed(this, var_1); }],
jur_CharClass$9, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$9_contains(this, var_1); }],
it_Phases$3$_init_$lambda$_0_1, "Phases$3$<init>$lambda$_0_1", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$3$_init_$lambda$_0_1_run(this); }],
it_Phases$3$_init_$lambda$_0_2, "Phases$3$<init>$lambda$_0_2", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$3$_init_$lambda$_0_2_run(this); }],
jl_Character, 0, jl_Object, [jl_Comparable], 0, 3, jl_Character_$callClinit, ["$equals", function(var_1) { return jl_Character_equals(this, var_1); }, "$hashCode", function() { return jl_Character_hashCode(this); }],
it_Phases$4$lambda$$12$lambda$_5_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$4$lambda$$12$lambda$_5_0_run(this); }],
jur_CICharSet, "CICharSet", 2, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_CICharSet_accepts(this, var_1, var_2); }, "$getName", function() { return jur_CICharSet_getName(this); }],
jur_SupplCharSet, "SupplCharSet", 2, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_SupplCharSet_accepts(this, var_1, var_2); }, "$find0", function(var_1, var_2, var_3) { return jur_SupplCharSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_SupplCharSet_findBack(this, var_1, var_2, var_3, var_4); }, "$getName", function() { return jur_SupplCharSet_getName(this); }, "$getCodePoint", function() { return jur_SupplCharSet_getCodePoint(this);
}, "$first", function(var_1) { return jur_SupplCharSet_first(this, var_1); }],
it_Phases$2$lambda$null$8$lambda$_16_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$2$lambda$null$8$lambda$_16_0_get(this, var_1); }],
i_UI$lambda$setup$5$lambda$_14_0, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { i_UI$lambda$setup$5$lambda$_14_0_get(this, var_1); }, "$get57", function(var_1) { i_UI$lambda$setup$5$lambda$_14_0_get0(this, var_1); }],
it_Phases$3$_init_$lambda$_0_3, "Phases$3$<init>$lambda$_0_3", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$3$_init_$lambda$_0_3_run(this); }]]);
$rt_metadata([iaau_StaticReset, 0, jl_Object, [], 0, 3, 0, ["$check", function() { return iaau_StaticReset_check(this); }],
iaamg_Vector3, "Vector3", 29, jl_Object, [ji_Serializable, iaamg_Vector], 0, 3, iaamg_Vector3_$callClinit, ["$set23", function(var_1, var_2, var_3) { return iaamg_Vector3_set(this, var_1, var_2, var_3); }, "$set19", function(var_1) { return iaamg_Vector3_set0(this, var_1); }, "$scl1", function(var_1) { return iaamg_Vector3_scl(this, var_1); }, "$len2", function() { return iaamg_Vector3_len2(this); }, "$nor0", function() { return iaamg_Vector3_nor(this); }, "$toString", function() { return iaamg_Vector3_toString(this);
}, "$equals", function(var_1) { return iaamg_Vector3_equals(this, var_1); }],
iaas_Scene$keyDown$lambda$_25_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Scene$keyDown$lambda$_25_0_get(this); }, "$get7", function() { return iaas_Scene$keyDown$lambda$_25_0_get0(this); }],
iaagg_ScissorStack, 0, jl_Object, [], 0, 3, iaagg_ScissorStack_$callClinit, 0,
iaamg_Vector2, "Vector2", 29, jl_Object, [ji_Serializable, iaamg_Vector, iaamg_Position], 0, 3, iaamg_Vector2_$callClinit, ["$trns", function(var_1, var_2) { return iaamg_Vector2_trns(this, var_1, var_2); }, "$snap", function() { return iaamg_Vector2_snap(this); }, "$len1", function() { return iaamg_Vector2_len(this); }, "$len2", function() { return iaamg_Vector2_len2(this); }, "$set17", function(var_1) { return iaamg_Vector2_set(this, var_1); }, "$set16", function(var_1) { return iaamg_Vector2_set0(this, var_1);
}, "$set2", function(var_1, var_2) { return iaamg_Vector2_set1(this, var_1, var_2); }, "$sub", function(var_1, var_2) { return iaamg_Vector2_sub(this, var_1, var_2); }, "$nor", function() { return iaamg_Vector2_nor(this); }, "$add8", function(var_1) { return iaamg_Vector2_add(this, var_1); }, "$add9", function(var_1, var_2) { return iaamg_Vector2_add0(this, var_1, var_2); }, "$scl0", function(var_1) { return iaamg_Vector2_scl(this, var_1); }, "$dst20", function(var_1, var_2) { return iaamg_Vector2_dst2(this,
var_1, var_2); }, "$limit4", function(var_1) { return iaamg_Vector2_limit(this, var_1); }, "$limit20", function(var_1) { return iaamg_Vector2_limit2(this, var_1); }, "$setLength0", function(var_1) { return iaamg_Vector2_setLength(this, var_1); }, "$setLength2", function(var_1) { return iaamg_Vector2_setLength2(this, var_1); }, "$clamp3", function(var_1, var_2, var_3, var_4) { return iaamg_Vector2_clamp(this, var_1, var_2, var_3, var_4); }, "$mul0", function(var_1) { return iaamg_Vector2_mul(this, var_1); },
"$angle2", function() { return iaamg_Vector2_angle(this); }, "$setAngle", function(var_1) { return iaamg_Vector2_setAngle(this, var_1); }, "$setAngleRad", function(var_1) { return iaamg_Vector2_setAngleRad(this, var_1); }, "$rotate1", function(var_1) { return iaamg_Vector2_rotate(this, var_1); }, "$rotateRad", function(var_1) { return iaamg_Vector2_rotateRad(this, var_1); }, "$lerpDelta", function(var_1, var_2, var_3) { return iaamg_Vector2_lerpDelta(this, var_1, var_2, var_3); }, "$isZero", function() { return iaamg_Vector2_isZero(this);
}, "$setZero", function() { return iaamg_Vector2_setZero(this); }, "$angleTo0", function(var_1) { return iaamg_Position_angleTo(this, var_1); }, "$angleTo", function(var_1, var_2) { return iaamg_Position_angleTo0(this, var_1, var_2); }, "$dst", function(var_1) { return iaamg_Position_dst(this, var_1); }, "$dst0", function(var_1, var_2) { return iaamg_Position_dst0(this, var_1, var_2); }, "$withinDst", function(var_1, var_2, var_3) { return iaamg_Position_withinDst(this, var_1, var_2, var_3); }],
ig_Anim, 0, jl_Object, [], 0, 3, 0, ["$frame", function(var_1) { return ig_Anim_frame(this, var_1); }],
iaac_IntSet$IntSetIterator, 0, jl_Object, [], 0, 3, 0, ["$reset", function() { iaac_IntSet$IntSetIterator_reset(this); }, "$findNextIndex", function() { iaac_IntSet$IntSetIterator_findNextIndex(this); }, "$next5", function() { return iaac_IntSet$IntSetIterator_next(this); }],
it_Bullet, "Bullet", 44, ie_SolidEntity, [ie_ScaleTrait], 0, 3, 0, ["$angle2", function() { return it_Bullet_angle(this); }, "$collision", function(var_1, var_2, var_3) { it_Bullet_collision(this, var_1, var_2, var_3); }, "$collides", function(var_1) { return it_Bullet_collides(this, var_1); }, "$update1", function() { it_Bullet_update(this); }, "$draw", function() { it_Bullet_draw(this); }, "$hitbox", function(var_1) { it_Bullet_hitbox(this, var_1); }, "$hitboxTile", function(var_1) { it_Bullet_hitboxTile(this,
var_1); }, "$targetGroup", function() { return it_Bullet_targetGroup(this); }, "$fin", function() { return it_Bullet_fin(this); }, "$fout", function() { return ie_ScaleTrait_fout(this); }, "$fout0", function(var_1) { return ie_ScaleTrait_fout0(this, var_1); }, "$fin0", function(var_1) { return ie_ScaleTrait_fin(this, var_1); }, "$finpow", function() { return ie_ScaleTrait_finpow(this); }, "$fslope", function() { return ie_ScaleTrait_fslope(this); }],
it_Laser, "Laser", 44, it_Bullet, [ie_ScaleTrait], 0, 3, 0, ["$collides", function(var_1) { return it_Laser_collides(this, var_1); }, "$update1", function() { it_Laser_update(this); }, "$draw", function() { it_Laser_draw(this); }, "$targetGroup", function() { return it_Laser_targetGroup(this); }, "$fout", function() { return ie_ScaleTrait_fout(this); }, "$fout0", function(var_1) { return ie_ScaleTrait_fout0(this, var_1); }, "$fin0", function(var_1) { return ie_ScaleTrait_fin(this, var_1); }, "$finpow", function()
{ return ie_ScaleTrait_finpow(this); }, "$fslope", function() { return ie_ScaleTrait_fslope(this); }],
it_Phases$2$lambda$$18$lambda$_6_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$2$lambda$$18$lambda$_6_0_run(this); }],
jur_AbstractCharClass$LazyJavaMirrored$1, "AbstractCharClass$LazyJavaMirrored$1", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$LazyJavaMirrored$1_contains(this, var_1); }],
otr_RuntimeObject, "RuntimeObject", 14, oti_Structure, [], 0, 3, 0, 0,
iaac_ObjectMap$Entries, "ObjectMap$Entries", 30, iaac_ObjectMap$MapIterator, [], 0, 3, 0, ["$next4", function() { return iaac_ObjectMap$Entries_next(this); }, "$hasNext", function() { return iaac_ObjectMap$Entries_hasNext(this); }, "$iterator3", function() { return iaac_ObjectMap$Entries_iterator(this); }, "$reset", function() { iaac_ObjectMap$Entries_reset(this); }, "$next0", function() { return iaac_ObjectMap$Entries_next0(this); }],
iaau_Scaling$1, 0, jl_Object, [], 32, 0, iaau_Scaling$1_$callClinit, 0,
iaaf_Func2, "Func2", 24, jl_Object, [], 3, 3, 0, 0,
jn_ShortBufferOverByteBufferLittleEndian, 0, jn_ShortBufferOverByteBuffer, [], 0, 0, 0, ["$duplicate0", function(var_1, var_2, var_3, var_4, var_5) { return jn_ShortBufferOverByteBufferLittleEndian_duplicate(this, var_1, var_2, var_3, var_4, var_5); }, "$getElement1", function(var_1) { return jn_ShortBufferOverByteBufferLittleEndian_getElement(this, var_1); }, "$putElement1", function(var_1, var_2) { jn_ShortBufferOverByteBufferLittleEndian_putElement(this, var_1, var_2); }],
jur_UEOLSet, "UEOLSet", 2, jur_AbstractSet, [], 4, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_UEOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_UEOLSet_hasConsumed(this, var_1); }, "$getName", function() { return jur_UEOLSet_getName(this); }],
otcju_THashMap, 0, otcju_TAbstractMap, [otcjl_TCloneable, otcji_TSerializable], 0, 3, 0, ["$newElementArray1", function(var_1) { return otcju_THashMap_newElementArray(this, var_1); }, "$computeThreshold", function() { otcju_THashMap_computeThreshold(this); }],
jur_UCICharSet, "UCICharSet", 2, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_UCICharSet_accepts(this, var_1, var_2); }, "$getName", function() { return jur_UCICharSet_getName(this); }],
ig_LayerBatch$draw$lambda$_2_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return ig_LayerBatch$draw$lambda$_2_0_get(this); }, "$get14", function() { return ig_LayerBatch$draw$lambda$_2_0_get0(this); }],
it_Phases$2$lambda$$10$lambda$_14_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$2$lambda$$10$lambda$_14_0_run(this); }],
jur_CompositeGroupQuantifierSet, "CompositeGroupQuantifierSet", 2, jur_GroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_CompositeGroupQuantifierSet_matches(this, var_1, var_2, var_3); }, "$getName", function() { return jur_CompositeGroupQuantifierSet_getName(this); }],
jur_RelCompositeGroupQuantifierSet, "RelCompositeGroupQuantifierSet", 2, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_RelCompositeGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
ju_ArrayList, 0, ju_AbstractList, [jl_Cloneable, ji_Serializable, ju_RandomAccess], 0, 3, 0, ["$ensureCapacity", function(var_1) { ju_ArrayList_ensureCapacity(this, var_1); }, "$get", function(var_1) { return ju_ArrayList_get(this, var_1); }, "$size0", function() { return ju_ArrayList_size(this); }, "$add7", function(var_1) { return ju_ArrayList_add(this, var_1); }, "$add2", function(var_1, var_2) { ju_ArrayList_add0(this, var_1, var_2); }, "$remove", function(var_1) { return ju_ArrayList_remove(this, var_1);
}, "$checkIndex", function(var_1) { ju_ArrayList_checkIndex(this, var_1); }, "$checkIndexForAdd", function(var_1) { ju_ArrayList_checkIndexForAdd(this, var_1); }],
jl_IllegalMonitorStateException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
iaauv_Viewport, 0, jl_Object, [], 1, 3, 0, ["$apply5", function(var_1) { iaauv_Viewport_apply(this, var_1); }, "$unproject", function(var_1) { return iaauv_Viewport_unproject(this, var_1); }, "$getCamera", function() { return iaauv_Viewport_getCamera(this); }, "$setCamera", function(var_1) { iaauv_Viewport_setCamera(this, var_1); }, "$getWorldWidth", function() { return iaauv_Viewport_getWorldWidth(this); }, "$getWorldHeight", function() { return iaauv_Viewport_getWorldHeight(this); }, "$setWorldSize", function(var_1,
var_2) { iaauv_Viewport_setWorldSize(this, var_1, var_2); }, "$getScreenX", function() { return iaauv_Viewport_getScreenX(this); }, "$getScreenY", function() { return iaauv_Viewport_getScreenY(this); }, "$getScreenWidth", function() { return iaauv_Viewport_getScreenWidth(this); }, "$getScreenHeight", function() { return iaauv_Viewport_getScreenHeight(this); }, "$setScreenBounds", function(var_1, var_2, var_3, var_4) { iaauv_Viewport_setScreenBounds(this, var_1, var_2, var_3, var_4); }],
iaauv_ScreenViewport, 0, iaauv_Viewport, [], 0, 3, 0, ["$update6", function(var_1, var_2, var_3) { iaauv_ScreenViewport_update(this, var_1, var_2, var_3); }],
jur_RelAltGroupQuantifierSet, "RelAltGroupQuantifierSet", 2, jur_AltGroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_RelAltGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
iaam_MapProperties, 0, jl_Object, [], 0, 3, 0, ["$containsKey0", function(var_1) { return iaam_MapProperties_containsKey(this, var_1); }, "$get16", function(var_1) { return iaam_MapProperties_get(this, var_1); }, "$put2", function(var_1, var_2) { iaam_MapProperties_put(this, var_1, var_2); }],
it_Phases$1$lambda$null$4$lambda$_20_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$1$lambda$null$4$lambda$_20_0_get(this, var_1); }],
otcir_Flags, 0, jl_Object, [], 4, 3, 0, 0,
i_Renderer$drawShadows$lambda$_8_1, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { i_Renderer$drawShadows$lambda$_8_1_get(this, var_1); }, "$get34", function(var_1) { i_Renderer$drawShadows$lambda$_8_1_get0(this, var_1); }],
jnc_Charset$Charsets, 0, jl_Object, [], 0, 0, jnc_Charset$Charsets_$callClinit, 0,
i_Renderer$drawShadows$lambda$_8_0, 0, jl_Object, [iaaf_Intc2], 0, 3, 0, ["$get36", function(var_1, var_2) { i_Renderer$drawShadows$lambda$_8_0_get(this, var_1, var_2); }],
iaate_ShakeEffect, "ShakeEffect", 27, iaat_Effect, [], 0, 3, 0, ["$onApply", function(var_1, var_2, var_3) { iaate_ShakeEffect_onApply(this, var_1, var_2, var_3); }],
iaas_Scene$touchDragged$lambda$_21_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Scene$touchDragged$lambda$_21_0_get(this); }, "$get7", function() { return iaas_Scene$touchDragged$lambda$_21_0_get0(this); }],
iaa_KeyBinds$Axis, 0, jl_Object, [iaa_KeyBinds$KeybindValue], 0, 3, 0, 0,
jur_FSet$PossessiveFSet, "FSet$PossessiveFSet", 2, jur_AbstractSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_FSet$PossessiveFSet_matches(this, var_1, var_2, var_3); }, "$getName", function() { return jur_FSet$PossessiveFSet_getName(this); }, "$hasConsumed", function(var_1) { return jur_FSet$PossessiveFSet_hasConsumed(this, var_1); }],
iaate_BlinkEffect, "BlinkEffect", 27, iaat_Effect, [], 0, 3, 0, ["$onApply", function(var_1, var_2, var_3) { iaate_BlinkEffect_onApply(this, var_1, var_2, var_3); }],
i_UI$lambda$setup$9$lambda$_10_0, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { i_UI$lambda$setup$9$lambda$_10_0_get(this, var_1); }, "$get57", function(var_1) { i_UI$lambda$setup$9$lambda$_10_0_get0(this, var_1); }],
jur_PosCompositeGroupQuantifierSet, "PosCompositeGroupQuantifierSet", 2, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PosCompositeGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
iu_Styles, 0, jl_Object, [], 0, 3, iu_Styles_$callClinit, 0,
iaabt_TeaKeymap, 0, jl_Object, [], 0, 3, 0, 0,
it_Fx$lambda$static$13$lambda$_18_0, 0, jl_Object, [iaaf_Floatc2], 0, 3, 0, ["$get56", function(var_1, var_2) { it_Fx$lambda$static$13$lambda$_18_0_get(this, var_1, var_2); }],
jur_AbstractCharClass$LazyJavaDigit$1, "AbstractCharClass$LazyJavaDigit$1", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$LazyJavaDigit$1_contains(this, var_1); }],
iaam_Interpolation$BounceIn, 0, iaam_Interpolation$BounceOut, [], 0, 3, 0, 0,
jl_NoSuchMethodException, 0, jl_ReflectiveOperationException, [], 0, 3, 0, 0,
it_Phases$lambda$null$4$lambda$_63_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$4$lambda$_63_0_run(this); }],
jn_IntBufferOverByteBufferBigEndian, 0, jn_IntBufferOverByteBuffer, [], 0, 0, 0, ["$getElement", function(var_1) { return jn_IntBufferOverByteBufferBigEndian_getElement(this, var_1); }, "$putElement", function(var_1, var_2) { jn_IntBufferOverByteBufferBigEndian_putElement(this, var_1, var_2); }],
it_Phases$lambda$null$4$lambda$_63_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$null$4$lambda$_63_1_run(this); }]]);
$rt_metadata([iaagg_FrameBuffer, "FrameBuffer", 33, iaagg_GLFrameBuffer, [], 0, 3, 0, ["$resize1", function(var_1, var_2) { iaagg_FrameBuffer_resize(this, var_1, var_2); }, "$createTexture0", function(var_1) { return iaagg_FrameBuffer_createTexture(this, var_1); }, "$disposeColorTexture0", function(var_1) { iaagg_FrameBuffer_disposeColorTexture(this, var_1); }, "$attachFrameBufferColorTexture0", function(var_1) { iaagg_FrameBuffer_attachFrameBufferColorTexture(this, var_1); }, "$attachFrameBufferColorTexture",
function(var_1) { iaagg_FrameBuffer_attachFrameBufferColorTexture0(this, var_1); }, "$disposeColorTexture", function(var_1) { iaagg_FrameBuffer_disposeColorTexture0(this, var_1); }, "$createTexture", function(var_1) { return iaagg_FrameBuffer_createTexture0(this, var_1); }],
jl_NullPointerException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
jur_AbstractCharClass$LazyJavaSpaceChar$1, "AbstractCharClass$LazyJavaSpaceChar$1", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$LazyJavaSpaceChar$1_contains(this, var_1); }],
iaa_Files, 0, jl_Object, [], 3, 3, 0, ["$internal", function(var_1) { return iaa_Files_internal(this, var_1); }, "$local", function(var_1) { return iaa_Files_local(this, var_1); }],
iaabt_TeaFiles, 0, jl_Object, [iaa_Files], 0, 3, iaabt_TeaFiles_$callClinit, ["$get59", function(var_1, var_2) { return iaabt_TeaFiles_get(this, var_1, var_2); }, "$internal", function(var_1) { return iaa_Files_internal(this, var_1); }, "$local", function(var_1) { return iaa_Files_local(this, var_1); }],
iaac_ObjectIntMap$Values, "ObjectIntMap$Values", 30, iaac_ObjectIntMap$MapIterator, [], 0, 3, 0, 0,
jl_Math, 0, jl_Object, [], 4, 3, 0, 0,
iaau_Tmp, 0, jl_Object, [], 0, 3, iaau_Tmp_$callClinit, 0,
it_Phases$lambda$null$6$lambda$_61_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$lambda$null$6$lambda$_61_0_get(this, var_1); }],
iaamg_Geometry$Raycaster, 0, jl_Object, [], 3, 3, 0, 0,
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue(this); }],
jur_PatternSyntaxException, 0, jl_IllegalArgumentException, [], 0, 3, 0, 0,
it_Phases$1$lambda$null$9$lambda$_15_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$1$lambda$null$9$lambda$_15_0_run(this); }],
iaa_KeyBinds$Section, "KeyBinds$Section", 17, jl_Object, [], 0, 3, 0, 0,
jur_AbstractCharClass$LazyJavaDefined, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaDefined_computeValue(this); }],
it_Bullets$9$lambda$null$4$lambda$_10_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Bullets$9$lambda$null$4$lambda$_10_0_get(this, var_1); }],
it_Phases$1$lambda$null$11$lambda$_13_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$1$lambda$null$11$lambda$_13_0_get(this, var_1); }],
jur_Pattern, 0, jl_Object, [ji_Serializable], 4, 3, 0, ["$matcher", function(var_1) { return jur_Pattern_matcher(this, var_1); }, "$split2", function(var_1, var_2) { return jur_Pattern_split0(this, var_1, var_2); }, "$split1", function(var_1) { return jur_Pattern_split(this, var_1); }, "$pattern1", function() { return jur_Pattern_pattern(this); }, "$compileImpl", function(var_1, var_2) { return jur_Pattern_compileImpl(this, var_1, var_2); }, "$processAlternations", function(var_1) { return jur_Pattern_processAlternations(this,
var_1); }, "$processExpression", function(var_1, var_2, var_3) { return jur_Pattern_processExpression(this, var_1, var_2, var_3); }, "$processSequence", function() { return jur_Pattern_processSequence(this); }, "$processDecomposedChar", function() { return jur_Pattern_processDecomposedChar(this); }, "$processSubExpression", function(var_1) { return jur_Pattern_processSubExpression(this, var_1); }, "$processQuantifier0", function(var_1, var_2) { return jur_Pattern_processQuantifier(this, var_1, var_2); }, "$processTerminal",
function(var_1) { return jur_Pattern_processTerminal(this, var_1); }, "$processRange", function(var_1, var_2) { return jur_Pattern_processRange(this, var_1, var_2); }, "$processRangeExpression", function(var_1) { return jur_Pattern_processRangeExpression(this, var_1); }, "$processCharSet", function(var_1) { return jur_Pattern_processCharSet(this, var_1); }, "$processRangeSet", function(var_1) { return jur_Pattern_processRangeSet(this, var_1); }, "$finalizeCompile", function() { jur_Pattern_finalizeCompile(this);
}, "$groupCount0", function() { return jur_Pattern_groupCount(this); }, "$compCount0", function() { return jur_Pattern_compCount(this); }, "$consCount0", function() { return jur_Pattern_consCount(this); }, "$hasFlag", function(var_1) { return jur_Pattern_hasFlag(this, var_1); }],
ji_UnsupportedEncodingException, 0, ji_IOException, [], 0, 3, 0, 0,
it_Phases$lambda$null$9$lambda$_58_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$lambda$null$9$lambda$_58_0_get(this, var_1); }],
jur_PosAltGroupQuantifierSet, "PosAltGroupQuantifierSet", 2, jur_AltGroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PosAltGroupQuantifierSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_PosAltGroupQuantifierSet_setNext(this, var_1); }],
iaau_OS, 0, jl_Object, [], 0, 3, iaau_OS_$callClinit, 0,
iaaf_Intf, "Intf", 24, jl_Object, [], 3, 3, 0, 0,
it_Phases$_clinit_$lambda$_75_9, "Phases$<clinit>$lambda$_75_9", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$_clinit_$lambda$_75_9_run(this); }],
it_Phases$_clinit_$lambda$_75_8, "Phases$<clinit>$lambda$_75_8", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$_clinit_$lambda$_75_8_run(this); }],
it_Phases$_clinit_$lambda$_75_7, "Phases$<clinit>$lambda$_75_7", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$_clinit_$lambda$_75_7_run(this); }],
it_Phases$_clinit_$lambda$_75_6, "Phases$<clinit>$lambda$_75_6", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$_clinit_$lambda$_75_6_run(this); }],
it_Phases$_clinit_$lambda$_75_5, "Phases$<clinit>$lambda$_75_5", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$_clinit_$lambda$_75_5_run(this); }],
cjj_Inflate$Return, 0, jl_Exception, [], 0, 0, 0, 0,
it_Phases$_clinit_$lambda$_75_4, "Phases$<clinit>$lambda$_75_4", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$_clinit_$lambda$_75_4_run(this); }],
it_Phases$_clinit_$lambda$_75_3, "Phases$<clinit>$lambda$_75_3", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$_clinit_$lambda$_75_3_run(this); }],
it_Phases$_clinit_$lambda$_75_2, "Phases$<clinit>$lambda$_75_2", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$_clinit_$lambda$_75_2_run(this); }],
iaaf_Boolp, "Boolp", 24, jl_Object, [], 3, 3, 0, 0,
it_Phases$_clinit_$lambda$_75_1, "Phases$<clinit>$lambda$_75_1", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$_clinit_$lambda$_75_1_run(this); }],
it_Phases$_clinit_$lambda$_75_0, "Phases$<clinit>$lambda$_75_0", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$_clinit_$lambda$_75_0_run(this); }],
iaag_TextureData$TextureDataType, 0, jl_Enum, [], 12, 3, iaag_TextureData$TextureDataType_$callClinit, 0,
it_Phases$3$lambda$null$21$lambda$_11_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$3$lambda$null$21$lambda$_11_0_get(this, var_1); }],
jur_UnicodeCategory, "UnicodeCategory", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_UnicodeCategory_contains(this, var_1); }],
jur_UnicodeCategoryScope, "UnicodeCategoryScope", 2, jur_UnicodeCategory, [], 0, 0, 0, ["$contains", function(var_1) { return jur_UnicodeCategoryScope_contains(this, var_1); }],
i_Binding, "Binding", 41, jl_Enum, [iaa_KeyBinds$KeyBind], 12, 3, i_Binding_$callClinit, ["$defaultValue", function(var_1) { return i_Binding_defaultValue(this, var_1); }],
iaam_TiledMap, 0, jl_Object, [iaau_Disposable], 0, 3, 0, ["$getLayer", function(var_1) { return iaam_TiledMap_getLayer(this, var_1); }],
iaasul_Cell, "Cell", 38, jl_Object, [iaaup_Pool$Poolable], 0, 3, iaasul_Cell_$callClinit, ["$setLayout", function(var_1) { iaasul_Cell_setLayout(this, var_1); }, "$get60", function() { return iaasul_Cell_get(this); }, "$prefWidth", function() { return iaasul_Cell_prefWidth(this); }, "$prefHeight", function() { return iaasul_Cell_prefHeight(this); }, "$maxWidth", function() { return iaasul_Cell_maxWidth(this); }, "$maxHeight", function() { return iaasul_Cell_maxHeight(this); }, "$minWidth", function() { return iaasul_Cell_minWidth(this);
}, "$minHeight", function() { return iaasul_Cell_minHeight(this); }, "$size11", function(var_1) { return iaasul_Cell_size(this, var_1); }, "$size10", function(var_1, var_2) { return iaasul_Cell_size0(this, var_1, var_2); }, "$wrap8", function() { return iaasul_Cell_wrap(this); }, "$color14", function(var_1) { return iaasul_Cell_color(this, var_1); }, "$width12", function(var_1) { return iaasul_Cell_width(this, var_1); }, "$padBottom2", function(var_1) { return iaasul_Cell_padBottom(this, var_1); }, "$padRight2",
function(var_1) { return iaasul_Cell_padRight(this, var_1); }, "$top1", function() { return iaasul_Cell_top(this); }, "$left2", function() { return iaasul_Cell_left(this); }, "$growX", function() { return iaasul_Cell_growX(this); }, "$setBounds0", function(var_1, var_2, var_3, var_4) { iaasul_Cell_setBounds(this, var_1, var_2, var_3, var_4); }, "$clear", function() { iaasul_Cell_clear(this); }, "$scl", function(var_1) { return iaasul_Cell_scl(this, var_1); }, "$reset", function() { iaasul_Cell_reset0(this);
}, "$set7", function(var_1) { return iaasul_Cell_set(this, var_1); }, "$toString", function() { return iaasul_Cell_toString(this); }],
jnc_UnmappableCharacterException, 0, jnc_CharacterCodingException, [], 0, 3, 0, ["$getMessage", function() { return jnc_UnmappableCharacterException_getMessage(this); }],
cjj_InfTree, 0, jl_Object, [], 4, 0, cjj_InfTree_$callClinit, ["$huft_build", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11) { return cjj_InfTree_huft_build(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11); }, "$inflate_trees_bits", function(var_1, var_2, var_3, var_4, var_5) { return cjj_InfTree_inflate_trees_bits(this, var_1, var_2, var_3, var_4, var_5); }, "$inflate_trees_dynamic", function(var_1, var_2, var_3, var_4, var_5, var_6,
var_7, var_8, var_9) { return cjj_InfTree_inflate_trees_dynamic(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$initWorkArea", function(var_1) { cjj_InfTree_initWorkArea(this, var_1); }],
i_UI$lambda$setup$7$lambda$_12_0, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { i_UI$lambda$setup$7$lambda$_12_0_get(this, var_1); }, "$get57", function(var_1) { i_UI$lambda$setup$7$lambda$_12_0_get0(this, var_1); }],
otcit_FloatAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0,
jur_UCIDecomposedCharSet, "UCIDecomposedCharSet", 2, jur_DecomposedCharSet, [], 0, 0, 0, 0,
iaamg_Intersector, 0, jl_Object, [], 4, 3, iaamg_Intersector_$callClinit, 0,
iaagg_TextureAtlas$_clinit_$lambda$_33_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, ["$compare2", function(var_1, var_2) { return iaagg_TextureAtlas$_clinit_$lambda$_33_0_compare(this, var_1, var_2); }, "$compare3", function(var_1, var_2) { return iaagg_TextureAtlas$_clinit_$lambda$_33_0_compare0(this, var_1, var_2); }],
otjj_JSON, 0, jl_Object, [], 4, 3, 0, 0]);
$rt_metadata([it_Phases$3$lambda$null$12$lambda$_20_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$3$lambda$null$12$lambda$_20_1_run(this); }],
it_Phases$3$lambda$null$12$lambda$_20_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$3$lambda$null$12$lambda$_20_0_run(this); }],
jur_AbstractCharClass$LazyJavaWhitespace$1, "AbstractCharClass$LazyJavaWhitespace$1", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$LazyJavaWhitespace$1_contains(this, var_1); }],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue(this); }],
it_Phases$lambda$static$11$lambda$_56_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$lambda$static$11$lambda$_56_0_get(this, var_1); }],
it_Phases$lambda$static$27$lambda$_40_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$lambda$static$27$lambda$_40_0_get(this, var_1); }],
otjt_Uint8Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0,
jl_Long, 0, jl_Number, [jl_Comparable], 0, 3, jl_Long_$callClinit, 0,
jur_SequenceSet$IntHash, 0, jl_Object, [], 0, 0, 0, ["$put14", function(var_1, var_2) { jur_SequenceSet$IntHash_put(this, var_1, var_2); }, "$get29", function(var_1) { return jur_SequenceSet$IntHash_get(this, var_1); }],
ig_Effects, 0, jl_Object, [], 0, 3, ig_Effects_$callClinit, 0,
jur_AbstractCharClass$LazyJavaLowerCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaLowerCase_computeValue(this); }],
it_Phases$5$lambda$null$14$lambda$_8_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$5$lambda$null$14$lambda$_8_0_run(this); }],
iaagg_IndexArray, 0, jl_Object, [iaagg_IndexData], 0, 3, 0, ["$getNumIndices", function() { return iaagg_IndexArray_getNumIndices(this); }, "$getNumMaxIndices", function() { return iaagg_IndexArray_getNumMaxIndices(this); }, "$setIndices0", function(var_1, var_2, var_3) { iaagg_IndexArray_setIndices(this, var_1, var_2, var_3); }, "$getBuffer", function() { return iaagg_IndexArray_getBuffer(this); }, "$bind", function() { iaagg_IndexArray_bind(this); }, "$unbind", function() { iaagg_IndexArray_unbind(this); },
"$dispose", function() { iaagg_IndexArray_dispose(this); }],
iaag_GL20, 0, jl_Object, [], 3, 3, 0, 0,
iaabt_TeaGL20, 0, jl_Object, [iaag_GL20], 0, 3, iaabt_TeaGL20_$callClinit, ["$copy2", function(var_1) { return iaabt_TeaGL20_copy(this, var_1); }, "$copy3", function(var_1) { return iaabt_TeaGL20_copy0(this, var_1); }, "$copy0", function(var_1) { return iaabt_TeaGL20_copy1(this, var_1); }, "$copy1", function(var_1) { return iaabt_TeaGL20_copy2(this, var_1); }, "$copy4", function(var_1) { return iaabt_TeaGL20_copy3(this, var_1); }, "$copyU", function(var_1) { return iaabt_TeaGL20_copyU(this, var_1); }, "$allocateUniformLocationId",
function(var_1, var_2) { return iaabt_TeaGL20_allocateUniformLocationId(this, var_1, var_2); }, "$getUniformLocation", function(var_1) { return iaabt_TeaGL20_getUniformLocation(this, var_1); }, "$allocateShaderId", function(var_1) { return iaabt_TeaGL20_allocateShaderId(this, var_1); }, "$deallocateShaderId", function(var_1) { iaabt_TeaGL20_deallocateShaderId(this, var_1); }, "$allocateProgramId", function(var_1) { return iaabt_TeaGL20_allocateProgramId(this, var_1); }, "$deallocateProgramId", function(var_1)
{ iaabt_TeaGL20_deallocateProgramId(this, var_1); }, "$allocateBufferId", function(var_1) { return iaabt_TeaGL20_allocateBufferId(this, var_1); }, "$deallocateBufferId", function(var_1) { iaabt_TeaGL20_deallocateBufferId(this, var_1); }, "$allocateFrameBufferId", function(var_1) { return iaabt_TeaGL20_allocateFrameBufferId(this, var_1); }, "$deallocateFrameBufferId", function(var_1) { iaabt_TeaGL20_deallocateFrameBufferId(this, var_1); }, "$allocateRenderBufferId", function(var_1) { return iaabt_TeaGL20_allocateRenderBufferId(this,
var_1); }, "$deallocateRenderBufferId", function(var_1) { iaabt_TeaGL20_deallocateRenderBufferId(this, var_1); }, "$allocateTextureId", function(var_1) { return iaabt_TeaGL20_allocateTextureId(this, var_1); }, "$deallocateTextureId", function(var_1) { iaabt_TeaGL20_deallocateTextureId(this, var_1); }, "$glActiveTexture", function(var_1) { iaabt_TeaGL20_glActiveTexture(this, var_1); }, "$glBindTexture", function(var_1, var_2) { iaabt_TeaGL20_glBindTexture(this, var_1, var_2); }, "$glBlendFunc", function(var_1,
var_2) { iaabt_TeaGL20_glBlendFunc(this, var_1, var_2); }, "$glClear", function(var_1) { iaabt_TeaGL20_glClear(this, var_1); }, "$glClearColor", function(var_1, var_2, var_3, var_4) { iaabt_TeaGL20_glClearColor(this, var_1, var_2, var_3, var_4); }, "$glDeleteTexture", function(var_1) { iaabt_TeaGL20_glDeleteTexture(this, var_1); }, "$glDepthMask", function(var_1) { iaabt_TeaGL20_glDepthMask(this, var_1); }, "$glDisable", function(var_1) { iaabt_TeaGL20_glDisable(this, var_1); }, "$glDrawArrays", function(var_1,
var_2, var_3) { iaabt_TeaGL20_glDrawArrays(this, var_1, var_2, var_3); }, "$glDrawElements", function(var_1, var_2, var_3, var_4) { iaabt_TeaGL20_glDrawElements(this, var_1, var_2, var_3, var_4); }, "$glEnable", function(var_1) { iaabt_TeaGL20_glEnable(this, var_1); }, "$glGenTexture", function() { return iaabt_TeaGL20_glGenTexture(this); }, "$glGetIntegerv", function(var_1, var_2) { iaabt_TeaGL20_glGetIntegerv(this, var_1, var_2); }, "$glGetString", function(var_1) { return iaabt_TeaGL20_glGetString(this, var_1);
}, "$glPixelStorei", function(var_1, var_2) { iaabt_TeaGL20_glPixelStorei(this, var_1, var_2); }, "$glScissor", function(var_1, var_2, var_3, var_4) { iaabt_TeaGL20_glScissor(this, var_1, var_2, var_3, var_4); }, "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { iaabt_TeaGL20_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glViewport", function(var_1, var_2, var_3, var_4) { iaabt_TeaGL20_glViewport(this, var_1, var_2, var_3, var_4);
}, "$glAttachShader", function(var_1, var_2) { iaabt_TeaGL20_glAttachShader(this, var_1, var_2); }, "$glBindBuffer", function(var_1, var_2) { iaabt_TeaGL20_glBindBuffer(this, var_1, var_2); }, "$glBindFramebuffer", function(var_1, var_2) { iaabt_TeaGL20_glBindFramebuffer(this, var_1, var_2); }, "$glBindRenderbuffer", function(var_1, var_2) { iaabt_TeaGL20_glBindRenderbuffer(this, var_1, var_2); }, "$glBlendFuncSeparate", function(var_1, var_2, var_3, var_4) { iaabt_TeaGL20_glBlendFuncSeparate(this, var_1, var_2,
var_3, var_4); }, "$glBufferData", function(var_1, var_2, var_3, var_4) { iaabt_TeaGL20_glBufferData(this, var_1, var_2, var_3, var_4); }, "$glBufferSubData", function(var_1, var_2, var_3, var_4) { iaabt_TeaGL20_glBufferSubData(this, var_1, var_2, var_3, var_4); }, "$glCheckFramebufferStatus", function(var_1) { return iaabt_TeaGL20_glCheckFramebufferStatus(this, var_1); }, "$glCompileShader", function(var_1) { iaabt_TeaGL20_glCompileShader(this, var_1); }, "$glCreateProgram", function() { return iaabt_TeaGL20_glCreateProgram(this);
}, "$glCreateShader", function(var_1) { return iaabt_TeaGL20_glCreateShader(this, var_1); }, "$glDeleteBuffer", function(var_1) { iaabt_TeaGL20_glDeleteBuffer(this, var_1); }, "$glDeleteFramebuffer", function(var_1) { iaabt_TeaGL20_glDeleteFramebuffer(this, var_1); }, "$glDeleteProgram", function(var_1) { iaabt_TeaGL20_glDeleteProgram(this, var_1); }, "$glDeleteRenderbuffer", function(var_1) { iaabt_TeaGL20_glDeleteRenderbuffer(this, var_1); }, "$glDeleteShader", function(var_1) { iaabt_TeaGL20_glDeleteShader(this,
var_1); }, "$glDisableVertexAttribArray", function(var_1) { iaabt_TeaGL20_glDisableVertexAttribArray(this, var_1); }, "$glDrawElements0", function(var_1, var_2, var_3, var_4) { iaabt_TeaGL20_glDrawElements0(this, var_1, var_2, var_3, var_4); }, "$glEnableVertexAttribArray", function(var_1) { iaabt_TeaGL20_glEnableVertexAttribArray(this, var_1); }, "$glFramebufferRenderbuffer", function(var_1, var_2, var_3, var_4) { iaabt_TeaGL20_glFramebufferRenderbuffer(this, var_1, var_2, var_3, var_4); }, "$glFramebufferTexture2D",
function(var_1, var_2, var_3, var_4, var_5) { iaabt_TeaGL20_glFramebufferTexture2D(this, var_1, var_2, var_3, var_4, var_5); }, "$glGenBuffer", function() { return iaabt_TeaGL20_glGenBuffer(this); }, "$glGenerateMipmap", function(var_1) { iaabt_TeaGL20_glGenerateMipmap(this, var_1); }, "$glGenFramebuffer", function() { return iaabt_TeaGL20_glGenFramebuffer(this); }, "$glGenRenderbuffer", function() { return iaabt_TeaGL20_glGenRenderbuffer(this); }, "$glGetActiveAttrib", function(var_1, var_2, var_3, var_4) {
return iaabt_TeaGL20_glGetActiveAttrib(this, var_1, var_2, var_3, var_4); }, "$glGetActiveUniform", function(var_1, var_2, var_3, var_4) { return iaabt_TeaGL20_glGetActiveUniform(this, var_1, var_2, var_3, var_4); }, "$glGetAttribLocation", function(var_1, var_2) { return iaabt_TeaGL20_glGetAttribLocation(this, var_1, var_2); }, "$glGetProgramiv", function(var_1, var_2, var_3) { iaabt_TeaGL20_glGetProgramiv(this, var_1, var_2, var_3); }, "$glGetProgramInfoLog", function(var_1) { return iaabt_TeaGL20_glGetProgramInfoLog(this,
var_1); }, "$glGetShaderiv", function(var_1, var_2, var_3) { iaabt_TeaGL20_glGetShaderiv(this, var_1, var_2, var_3); }, "$glGetShaderInfoLog", function(var_1) { return iaabt_TeaGL20_glGetShaderInfoLog(this, var_1); }, "$glGetUniformLocation", function(var_1, var_2) { return iaabt_TeaGL20_glGetUniformLocation(this, var_1, var_2); }, "$glLinkProgram", function(var_1) { iaabt_TeaGL20_glLinkProgram(this, var_1); }, "$glRenderbufferStorage", function(var_1, var_2, var_3, var_4) { iaabt_TeaGL20_glRenderbufferStorage(this,
var_1, var_2, var_3, var_4); }, "$glShaderSource", function(var_1, var_2) { iaabt_TeaGL20_glShaderSource(this, var_1, var_2); }, "$glTexParameteri", function(var_1, var_2, var_3) { iaabt_TeaGL20_glTexParameteri(this, var_1, var_2, var_3); }, "$glUniform1f", function(var_1, var_2) { iaabt_TeaGL20_glUniform1f(this, var_1, var_2); }, "$glUniform1i", function(var_1, var_2) { iaabt_TeaGL20_glUniform1i(this, var_1, var_2); }, "$glUniform2f", function(var_1, var_2, var_3) { iaabt_TeaGL20_glUniform2f(this, var_1, var_2,
var_3); }, "$glUniform4f", function(var_1, var_2, var_3, var_4, var_5) { iaabt_TeaGL20_glUniform4f(this, var_1, var_2, var_3, var_4, var_5); }, "$glUniformMatrix4fv", function(var_1, var_2, var_3, var_4, var_5) { iaabt_TeaGL20_glUniformMatrix4fv(this, var_1, var_2, var_3, var_4, var_5); }, "$glUseProgram", function(var_1) { iaabt_TeaGL20_glUseProgram(this, var_1); }, "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { iaabt_TeaGL20_glVertexAttribPointer(this, var_1, var_2, var_3, var_4,
var_5, var_6); }],
jur_AbstractCharClass$LazyJavaLetterOrDigit$1, "AbstractCharClass$LazyJavaLetterOrDigit$1", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains(this, var_1); }],
iaagg_MipMapGenerator, 0, jl_Object, [], 0, 3, iaagg_MipMapGenerator_$callClinit, 0,
jur_CharClass$18, "CharClass$18", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$18_contains(this, var_1); }, "$toString", function() { return jur_CharClass$18_toString(this); }],
jur_PossessiveGroupQuantifierSet, "PossessiveGroupQuantifierSet", 2, jur_GroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PossessiveGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
ig_Effects$EffectContainer, 0, jl_Object, [ie_ScaleTrait], 0, 3, 0, ["$set25", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { ig_Effects$EffectContainer_set(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }, "$fin", function() { return ig_Effects$EffectContainer_fin(this); }, "$fout", function() { return ie_ScaleTrait_fout(this); }, "$fout0", function(var_1) { return ie_ScaleTrait_fout0(this, var_1); }, "$fin0", function(var_1) { return ie_ScaleTrait_fin(this, var_1); }, "$finpow",
function() { return ie_ScaleTrait_finpow(this); }, "$fslope", function() { return ie_ScaleTrait_fslope(this); }],
iaamo_EllipseMapObject, "EllipseMapObject", 23, iaam_MapObject, [], 0, 3, 0, 0,
jur_CharClass$13, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$13_contains(this, var_1); }],
iaai_InputMultiplexer, 0, jl_Object, [iaai_InputProcessor], 0, 3, 0, ["$addProcessor", function(var_1) { iaai_InputMultiplexer_addProcessor(this, var_1); }, "$keyDown", function(var_1) { return iaai_InputMultiplexer_keyDown(this, var_1); }, "$keyUp", function(var_1) { return iaai_InputMultiplexer_keyUp(this, var_1); }, "$keyTyped", function(var_1) { return iaai_InputMultiplexer_keyTyped(this, var_1); }, "$touchDown", function(var_1, var_2, var_3, var_4) { return iaai_InputMultiplexer_touchDown(this, var_1, var_2,
var_3, var_4); }, "$touchUp", function(var_1, var_2, var_3, var_4) { return iaai_InputMultiplexer_touchUp(this, var_1, var_2, var_3, var_4); }, "$touchDragged", function(var_1, var_2, var_3) { return iaai_InputMultiplexer_touchDragged(this, var_1, var_2, var_3); }, "$mouseMoved", function(var_1, var_2) { return iaai_InputMultiplexer_mouseMoved(this, var_1, var_2); }, "$scrolled", function(var_1, var_2) { return iaai_InputMultiplexer_scrolled(this, var_1, var_2); }],
jur_CharClass$12, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$12_contains(this, var_1); }],
jur_CharClass$11, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$11_contains(this, var_1); }],
jur_CharClass$10, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$10_contains(this, var_1); }],
jur_CharClass$17, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$17_contains(this, var_1); }],
jur_CharClass$16, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$16_contains(this, var_1); }],
iaa_Settings$TypeSerializer, 0, jl_Object, [], 3, 3, 0, 0,
jur_CharClass$15, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$15_contains(this, var_1); }],
jur_CharClass$14, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_CharClass$14_contains(this, var_1); }],
it_Phases$lambda$static$21$lambda$_46_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$lambda$static$21$lambda$_46_0_get(this, var_1); }],
iaac_IntSet, 0, jl_Object, [], 0, 3, 0, ["$add5", function(var_1) { return iaac_IntSet_add(this, var_1); }, "$addAll1", function(var_1) { iaac_IntSet_addAll(this, var_1); }, "$addResize", function(var_1) { iaac_IntSet_addResize(this, var_1); }, "$push2", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { iaac_IntSet_push(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$addStash", function(var_1) { iaac_IntSet_addStash(this, var_1); }, "$remove1", function(var_1) { return iaac_IntSet_remove(this,
var_1); }, "$removeStash", function(var_1) { return iaac_IntSet_removeStash(this, var_1); }, "$removeStashIndex", function(var_1) { iaac_IntSet_removeStashIndex(this, var_1); }, "$clear", function() { iaac_IntSet_clear(this); }, "$contains", function(var_1) { return iaac_IntSet_contains(this, var_1); }, "$containsKeyStash0", function(var_1) { return iaac_IntSet_containsKeyStash(this, var_1); }, "$ensureCapacity", function(var_1) { iaac_IntSet_ensureCapacity(this, var_1); }, "$resize", function(var_1) { iaac_IntSet_resize(this,
var_1); }, "$hash2", function(var_1) { return iaac_IntSet_hash2(this, var_1); }, "$hash3", function(var_1) { return iaac_IntSet_hash3(this, var_1); }, "$iterator4", function() { return iaac_IntSet_iterator(this); }],
iaac_IntMap$Values, 0, iaac_IntMap$MapIterator, [jl_Iterable, ju_Iterator], 0, 3, 0, ["$hasNext", function() { return iaac_IntMap$Values_hasNext(this); }, "$next0", function() { return iaac_IntMap$Values_next(this); }, "$iterator", function() { return iaac_IntMap$Values_iterator(this); }, "$reset", function() { iaac_IntMap$Values_reset(this); }],
jl_StringBuilder, "StringBuilder", 6, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, ["$append", function(var_1) { return jl_StringBuilder_append(this, var_1); }, "$append3", function(var_1) { return jl_StringBuilder_append0(this, var_1); }, "$append13", function(var_1) { return jl_StringBuilder_append1(this, var_1); }, "$append0", function(var_1) { return jl_StringBuilder_append2(this, var_1); }, "$append4", function(var_1, var_2, var_3) { return jl_StringBuilder_append3(this, var_1, var_2, var_3); },
"$append14", function(var_1) { return jl_StringBuilder_append4(this, var_1); }, "$append21", function(var_1, var_2, var_3) { return jl_StringBuilder_append5(this, var_1, var_2, var_3); }, "$append15", function(var_1) { return jl_StringBuilder_append6(this, var_1); }, "$append1", function(var_1) { return jl_StringBuilder_append7(this, var_1); }, "$insert19", function(var_1, var_2) { return jl_StringBuilder_insert(this, var_1, var_2); }, "$insert16", function(var_1, var_2, var_3, var_4) { return jl_StringBuilder_insert0(this,
var_1, var_2, var_3, var_4); }, "$insert13", function(var_1, var_2) { return jl_StringBuilder_insert1(this, var_1, var_2); }, "$insert15", function(var_1, var_2, var_3, var_4) { return jl_StringBuilder_insert2(this, var_1, var_2, var_3, var_4); }, "$insert17", function(var_1, var_2) { return jl_StringBuilder_insert3(this, var_1, var_2); }, "$insert18", function(var_1, var_2) { return jl_StringBuilder_insert4(this, var_1, var_2); }, "$delete0", function(var_1, var_2) { return jl_StringBuilder_delete(this, var_1,
var_2); }, "$deleteCharAt", function(var_1) { return jl_StringBuilder_deleteCharAt(this, var_1); }, "$insert", function(var_1, var_2) { return jl_StringBuilder_insert5(this, var_1, var_2); }, "$substring0", function(var_1, var_2) { return jl_StringBuilder_substring(this, var_1, var_2); }, "$indexOf0", function(var_1, var_2) { return jl_StringBuilder_indexOf(this, var_1, var_2); }, "$indexOf4", function(var_1) { return jl_StringBuilder_indexOf0(this, var_1); }, "$setLength", function(var_1) { jl_StringBuilder_setLength(this,
var_1); }, "$getChars", function(var_1, var_2, var_3, var_4) { jl_StringBuilder_getChars(this, var_1, var_2, var_3, var_4); }, "$subSequence", function(var_1, var_2) { return jl_StringBuilder_subSequence(this, var_1, var_2); }, "$insert7", function(var_1, var_2, var_3, var_4) { return jl_StringBuilder_insert6(this, var_1, var_2, var_3, var_4); }, "$append6", function(var_1, var_2, var_3) { return jl_StringBuilder_append8(this, var_1, var_2, var_3); }, "$insert6", function(var_1, var_2, var_3, var_4) { return jl_StringBuilder_insert7(this,
var_1, var_2, var_3, var_4); }, "$append5", function(var_1, var_2, var_3) { return jl_StringBuilder_append9(this, var_1, var_2, var_3); }, "$charAt", function(var_1) { return jl_StringBuilder_charAt(this, var_1); }, "$length", function() { return jl_StringBuilder_length(this); }, "$toString", function() { return jl_StringBuilder_toString(this); }, "$trimToSize", function() { jl_StringBuilder_trimToSize(this); }, "$ensureCapacity", function(var_1) { jl_StringBuilder_ensureCapacity(this, var_1); }, "$insert5",
function(var_1, var_2) { return jl_StringBuilder_insert8(this, var_1, var_2); }, "$insert4", function(var_1, var_2) { return jl_StringBuilder_insert9(this, var_1, var_2); }, "$insert3", function(var_1, var_2) { return jl_StringBuilder_insert10(this, var_1, var_2); }, "$insert1", function(var_1, var_2) { return jl_StringBuilder_insert11(this, var_1, var_2); }],
ju_ConcurrentModificationException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
ju_Hashtable$1, 0, jl_Object, [ju_Enumeration], 4, 0, 0, 0,
ju_Hashtable$2, 0, jl_Object, [ju_Iterator], 4, 0, 0, 0,
iaasu_TextField$TextFieldValidator, "TextField$TextFieldValidator", 37, jl_Object, [], 3, 3, 0, 0,
iaat_TypingConfig, 0, jl_Object, [], 0, 3, iaat_TypingConfig_$callClinit, 0,
iaamg_Rectangle, "Rectangle", 29, jl_Object, [ji_Serializable, iaamg_Shape2D], 0, 3, iaamg_Rectangle_$callClinit, ["$set15", function(var_1, var_2, var_3, var_4) { return iaamg_Rectangle_set(this, var_1, var_2, var_3, var_4); }, "$setPosition0", function(var_1, var_2) { return iaamg_Rectangle_setPosition(this, var_1, var_2); }, "$setSize1", function(var_1) { return iaamg_Rectangle_setSize(this, var_1); }, "$contains2", function(var_1, var_2) { return iaamg_Rectangle_contains(this, var_1, var_2); }, "$overlaps",
function(var_1) { return iaamg_Rectangle_overlaps(this, var_1); }, "$overlaps0", function(var_1, var_2, var_3, var_4) { return iaamg_Rectangle_overlaps0(this, var_1, var_2, var_3, var_4); }, "$merge", function(var_1) { return iaamg_Rectangle_merge(this, var_1); }, "$getCenter", function(var_1) { return iaamg_Rectangle_getCenter(this, var_1); }, "$setCenter", function(var_1, var_2) { return iaamg_Rectangle_setCenter(this, var_1, var_2); }, "$toString", function() { return iaamg_Rectangle_toString(this); }, "$equals",
function(var_1) { return iaamg_Rectangle_equals(this, var_1); }],
iaagg_TextureAtlas$TextureAtlasData$Page, "TextureAtlas$TextureAtlasData$Page", 32, jl_Object, [], 0, 3, 0, 0,
otcju_TAbstractSet, 0, otcju_TAbstractCollection, [otcju_TSet], 1, 3, 0, 0,
otcju_THashSet, 0, otcju_TAbstractSet, [otcjl_TCloneable, otcji_TSerializable], 0, 3, 0, 0,
ie_EntityGroup$draw$lambda$_5_0, 0, jl_Object, [iaaf_Boolf], 0, 3, 0, ["$get28", function(var_1) { return ie_EntityGroup$draw$lambda$_5_0_get(this, var_1); }, "$get66", function(var_1) { return ie_EntityGroup$draw$lambda$_5_0_get0(this, var_1); }],
it_Phases$lambda$static$44$lambda$_23_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$static$44$lambda$_23_0_run(this); }],
it_Phases$1$lambda$null$8$lambda$_16_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$1$lambda$null$8$lambda$_16_0_get(this, var_1); }],
iaac_IntArray, "IntArray", 30, jl_Object, [], 0, 3, 0, ["$add6", function(var_1) { iaac_IntArray_add(this, var_1); }, "$get29", function(var_1) { return iaac_IntArray_get(this, var_1); }, "$set4", function(var_1, var_2) { iaac_IntArray_set(this, var_1, var_2); }, "$incr", function(var_1, var_2) { iaac_IntArray_incr(this, var_1, var_2); }, "$insert12", function(var_1, var_2) { iaac_IntArray_insert(this, var_1, var_2); }, "$contains", function(var_1) { return iaac_IntArray_contains(this, var_1); }, "$removeValue0",
function(var_1) { return iaac_IntArray_removeValue(this, var_1); }, "$removeIndex0", function(var_1) { return iaac_IntArray_removeIndex(this, var_1); }, "$pop0", function() { return iaac_IntArray_pop(this); }, "$clear", function() { iaac_IntArray_clear(this); }, "$ensureCapacity2", function(var_1) { return iaac_IntArray_ensureCapacity(this, var_1); }, "$setSize2", function(var_1) { return iaac_IntArray_setSize(this, var_1); }, "$resize5", function(var_1) { return iaac_IntArray_resize(this, var_1); }, "$equals",
function(var_1) { return iaac_IntArray_equals(this, var_1); }, "$toString", function() { return iaac_IntArray_toString(this); }],
it_Phases$3$lambda$$14$lambda$_18_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$3$lambda$$14$lambda$_18_0_run(this); }],
jur_AbstractCharClass$LazyASCII, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyASCII_computeValue(this); }]]);
$rt_metadata([iaac_ObjectSet, "ObjectSet", 30, jl_Object, [jl_Iterable, iaau_Eachable], 0, 3, 0, ["$add7", function(var_1) { return iaac_ObjectSet_add(this, var_1); }, "$addResize0", function(var_1) { iaac_ObjectSet_addResize(this, var_1); }, "$push3", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { iaac_ObjectSet_push(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$addStash0", function(var_1) { iaac_ObjectSet_addStash(this, var_1); }, "$resize", function(var_1) { iaac_ObjectSet_resize(this,
var_1); }, "$hash2", function(var_1) { return iaac_ObjectSet_hash2(this, var_1); }, "$hash3", function(var_1) { return iaac_ObjectSet_hash3(this, var_1); }],
iaag_Pixmap$Blending, 0, jl_Enum, [], 12, 3, iaag_Pixmap$Blending_$callClinit, 0,
iaase_FocusListener$FocusEvent$Type, 0, jl_Enum, [], 12, 3, iaase_FocusListener$FocusEvent$Type_$callClinit, 0,
it_Phases$lambda$static$31$lambda$_36_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$lambda$static$31$lambda$_36_0_get(this, var_1); }],
iaam_Interpolation$PowIn, 0, iaam_Interpolation$Pow, [], 0, 3, 0, ["$apply", function(var_1) { return iaam_Interpolation$PowIn_apply(this, var_1); }],
i_Control$_init_$lambda$_0_0, 0, jl_Object, [iaaf_Floatp], 0, 3, 0, ["$get69", function() { return i_Control$_init_$lambda$_0_0_get(this); }],
jur_Quantifier, "Quantifier", 2, jur_SpecialToken, [jl_Cloneable], 0, 0, 0, ["$min3", function() { return jur_Quantifier_min(this); }, "$max3", function() { return jur_Quantifier_max(this); }, "$toString", function() { return jur_Quantifier_toString(this); }],
iaaua_AsyncExecutor, 0, jl_Object, [iaau_Disposable], 0, 3, 0, 0,
jur_AbstractCharClass$LazyJavaUpperCase$1, "AbstractCharClass$LazyJavaUpperCase$1", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$LazyJavaUpperCase$1_contains(this, var_1); }],
iaat_TypingConfig$_clinit_$lambda$_3_2, 0, jl_Object, [iaaf_Func], 0, 3, 0, ["$get9", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_2_get(this, var_1); }, "$get67", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_2_get0(this, var_1); }],
iaat_TypingConfig$_clinit_$lambda$_3_3, 0, jl_Object, [iaaf_Func], 0, 3, 0, ["$get9", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_3_get(this, var_1); }, "$get67", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_3_get0(this, var_1); }],
iaat_TypingConfig$_clinit_$lambda$_3_4, 0, jl_Object, [iaaf_Func], 0, 3, 0, ["$get9", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_4_get(this, var_1); }, "$get67", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_4_get0(this, var_1); }],
iaat_TypingConfig$_clinit_$lambda$_3_5, 0, jl_Object, [iaaf_Func], 0, 3, 0, ["$get9", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_5_get(this, var_1); }, "$get67", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_5_get0(this, var_1); }],
iaat_TypingConfig$_clinit_$lambda$_3_6, 0, jl_Object, [iaaf_Func], 0, 3, 0, ["$get9", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_6_get(this, var_1); }, "$get67", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_6_get0(this, var_1); }],
iaat_TypingConfig$_clinit_$lambda$_3_7, 0, jl_Object, [iaaf_Func], 0, 3, 0, ["$get9", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_7_get(this, var_1); }, "$get67", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_7_get0(this, var_1); }],
otpp_ResourceAccessor, 0, jl_Object, [], 4, 0, 0, 0,
iaat_TypingConfig$_clinit_$lambda$_3_8, 0, jl_Object, [iaaf_Func], 0, 3, 0, ["$get9", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_8_get(this, var_1); }, "$get67", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_8_get0(this, var_1); }],
iaat_TypingConfig$_clinit_$lambda$_3_9, 0, jl_Object, [iaaf_Func], 0, 3, 0, ["$get9", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_9_get(this, var_1); }, "$get67", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_9_get0(this, var_1); }],
ig_Pal, 0, jl_Object, [], 0, 3, ig_Pal_$callClinit, 0,
iaabt_TeaApplication$1, 0, jl_Object, [iaabt_TeaFileLoader$TeaVMFilePreloadListener], 0, 0, 0, ["$error0", function() { iaabt_TeaApplication$1_error(this); }, "$complete0", function() { iaabt_TeaApplication$1_complete(this); }],
iaat_TypingConfig$_clinit_$lambda$_3_0, 0, jl_Object, [iaaf_Func], 0, 3, 0, ["$get9", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_0_get(this, var_1); }, "$get67", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_0_get0(this, var_1); }],
iaate_GradientEffect, "GradientEffect", 27, iaat_Effect, [], 0, 3, 0, ["$onApply", function(var_1, var_2, var_3) { iaate_GradientEffect_onApply(this, var_1, var_2, var_3); }],
jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1, "AbstractCharClass$LazyJavaIdentifierIgnorable$1", 2, jur_AbstractCharClass, [], 0, 0, 0, ["$contains", function(var_1) { return jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains(this, var_1); }],
iaat_TypingConfig$_clinit_$lambda$_3_1, 0, jl_Object, [iaaf_Func], 0, 3, 0, ["$get9", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_1_get(this, var_1); }, "$get67", function(var_1) { return iaat_TypingConfig$_clinit_$lambda$_3_1_get0(this, var_1); }],
it_Phases$1$_init_$lambda$_0_0, "Phases$1$<init>$lambda$_0_0", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$1$_init_$lambda$_0_0_run(this); }],
it_Phases$1$_init_$lambda$_0_1, "Phases$1$<init>$lambda$_0_1", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$1$_init_$lambda$_0_1_run(this); }],
iaam_Mathf$Sin, 0, jl_Object, [], 0, 0, iaam_Mathf$Sin_$callClinit, 0,
it_Phases$1$_init_$lambda$_0_2, "Phases$1$<init>$lambda$_0_2", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$1$_init_$lambda$_0_2_run(this); }],
iaat_TypeLabel$layoutCache$lambda$_39_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaat_TypeLabel$layoutCache$lambda$_39_0_get(this); }, "$get68", function() { return iaat_TypeLabel$layoutCache$lambda$_39_0_get0(this); }],
it_Phases$1$_init_$lambda$_0_3, "Phases$1$<init>$lambda$_0_3", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$1$_init_$lambda$_0_3_run(this); }],
iaabt_TeaApplication$step$lambda$_4_0, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { iaabt_TeaApplication$step$lambda$_4_0_get(this, var_1); }, "$get35", function(var_1) { iaabt_TeaApplication$step$lambda$_4_0_get0(this, var_1); }],
it_Boss$onDeath$lambda$_1_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Boss$onDeath$lambda$_1_0_get(this, var_1); }],
jur_ReluctantQuantifierSet, "ReluctantQuantifierSet", 2, jur_LeafQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_ReluctantQuantifierSet_matches(this, var_1, var_2, var_3); }],
iaabt_TeaApplication$step$lambda$_4_1, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { iaabt_TeaApplication$step$lambda$_4_1_get(this, var_1); }, "$get35", function(var_1) { iaabt_TeaApplication$step$lambda$_4_1_get0(this, var_1); }],
iaasu_ButtonGroup, "ButtonGroup", 37, jl_Object, [], 0, 3, 0, 0,
iaagg_BitmapFont$Glyph, "BitmapFont$Glyph", 32, jl_Object, [], 0, 3, 0, ["$getKerning", function(var_1) { return iaagg_BitmapFont$Glyph_getKerning(this, var_1); }, "$setKerning", function(var_1, var_2) { iaagg_BitmapFont$Glyph_setKerning(this, var_1, var_2); }, "$toString", function() { return iaagg_BitmapFont$Glyph_toString(this); }],
iaam_Interpolation$ExpOut, 0, iaam_Interpolation$Exp, [], 0, 3, 0, ["$apply", function(var_1) { return iaam_Interpolation$ExpOut_apply(this, var_1); }],
iaabt_TeaFileLoader$LoadFileTask, 0, jl_Object, [iaabt_TeaFileLoader$Task, otja_ReadyStateChangeHandler], 0, 0, 0, ["$run1", function(var_1) { iaabt_TeaFileLoader$LoadFileTask_run(this, var_1); }, "$stateChanged", function() { iaabt_TeaFileLoader$LoadFileTask_stateChanged(this); }, "$stateChanged$exported$0", function() { return iaabt_TeaFileLoader$LoadFileTask_stateChanged$exported$0(this); }],
iaat_TokenEntry, "TokenEntry", 26, jl_Object, [jl_Comparable], 0, 0, 0, ["$compareTo4", function(var_1) { return iaat_TokenEntry_compareTo(this, var_1); }, "$compareTo1", function(var_1) { return iaat_TokenEntry_compareTo0(this, var_1); }],
jur_EOISet, "EOISet", 2, jur_AbstractSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_EOISet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_EOISet_hasConsumed(this, var_1); }, "$getName", function() { return jur_EOISet_getName(this); }],
iaau_BufferUtils, 0, jl_Object, [], 4, 3, iaau_BufferUtils_$callClinit, 0,
it_Phases$1$lambda$null$7$lambda$_17_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$1$lambda$null$7$lambda$_17_0_run(this); }],
jn_ByteBufferImpl, "ByteBufferImpl", 3, jn_ByteBuffer, [], 0, 0, 0, ["$duplicate5", function() { return jn_ByteBufferImpl_duplicate(this); }, "$compact0", function() { return jn_ByteBufferImpl_compact(this); }, "$isReadOnly", function() { return jn_ByteBufferImpl_isReadOnly(this); }, "$asShortBuffer", function() { return jn_ByteBufferImpl_asShortBuffer(this); }, "$asIntBuffer", function() { return jn_ByteBufferImpl_asIntBuffer(this); }, "$asFloatBuffer", function() { return jn_ByteBufferImpl_asFloatBuffer(this);
}],
it_Phases$seq$lambda$_2_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$seq$lambda$_2_0_get(this, var_1); }],
iaai_KeyCode$KeyType, 0, jl_Enum, [], 12, 3, iaai_KeyCode$KeyType_$callClinit, 0,
iaate_WaveEffect, "WaveEffect", 27, iaat_Effect, [], 0, 3, 0, ["$onApply", function(var_1, var_2, var_3) { iaate_WaveEffect_onApply(this, var_1, var_2, var_3); }],
iaac_OrderedMap, 0, iaac_ObjectMap, [], 0, 3, 0, ["$put", function(var_1, var_2) { return iaac_OrderedMap_put(this, var_1, var_2); }, "$clear", function() { iaac_OrderedMap_clear(this); }],
it_Phases$1$lambda$null$1$lambda$_23_0, 0, jl_Object, [it_Bullet$Mover], 0, 3, 0, ["$move2", function(var_1) { return it_Phases$1$lambda$null$1$lambda$_23_0_move(this, var_1); }],
it_Phases$1$lambda$$5$lambda$_19_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$1$lambda$$5$lambda$_19_0_run(this); }],
jnc_BufferUnderflowException, 0, jl_RuntimeException, [], 0, 3, 0, 0]);
$rt_metadata([it_Phases$1$lambda$null$2$lambda$_22_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$1$lambda$null$2$lambda$_22_0_get(this, var_1); }],
juz_DataFormatException, 0, jl_Exception, [], 0, 3, 0, 0,
iaac_IntFloatMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, ["$put4", function(var_1, var_2) { iaac_IntFloatMap_put(this, var_1, var_2); }, "$putResize2", function(var_1, var_2) { iaac_IntFloatMap_putResize(this, var_1, var_2); }, "$push4", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { iaac_IntFloatMap_push(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }, "$putStash2", function(var_1, var_2) { iaac_IntFloatMap_putStash(this, var_1, var_2); }, "$get19", function(var_1, var_2)
{ return iaac_IntFloatMap_get(this, var_1, var_2); }, "$getStash2", function(var_1, var_2) { return iaac_IntFloatMap_getStash(this, var_1, var_2); }, "$getAndIncrement", function(var_1, var_2, var_3) { return iaac_IntFloatMap_getAndIncrement(this, var_1, var_2, var_3); }, "$getAndIncrementStash", function(var_1, var_2, var_3) { return iaac_IntFloatMap_getAndIncrementStash(this, var_1, var_2, var_3); }, "$clear", function() { iaac_IntFloatMap_clear(this); }, "$resize", function(var_1) { iaac_IntFloatMap_resize(this,
var_1); }, "$hash2", function(var_1) { return iaac_IntFloatMap_hash2(this, var_1); }, "$hash3", function(var_1) { return iaac_IntFloatMap_hash3(this, var_1); }],
otjc_JSString, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0,
it_Bullets, 0, jl_Object, [], 0, 3, it_Bullets_$callClinit, 0,
oti_AsyncCallback, "AsyncCallback", 10, jl_Object, [], 3, 3, 0, 0,
iaaus_JsonWriter$OutputType, 0, jl_Enum, [], 12, 3, iaaus_JsonWriter$OutputType_$callClinit, 0,
iaau_Time, 0, jl_Object, [], 0, 3, iaau_Time_$callClinit, 0,
it_EffectEntity, "EffectEntity", 44, ie_Entity, [iaaup_Pool$Poolable, ie_ScaleTrait], 0, 3, 0, ["$targetGroup", function() { return it_EffectEntity_targetGroup(this); }, "$lifetime3", function() { return it_EffectEntity_lifetime(this); }, "$drawSize", function() { return it_EffectEntity_drawSize(this); }, "$update1", function() { it_EffectEntity_update(this); }, "$reset", function() { it_EffectEntity_reset(this); }, "$draw", function() { it_EffectEntity_draw(this); }, "$removed", function() { it_EffectEntity_removed(this);
}, "$fout", function() { return ie_ScaleTrait_fout(this); }, "$fout0", function(var_1) { return ie_ScaleTrait_fout0(this, var_1); }, "$fin0", function(var_1) { return ie_ScaleTrait_fin(this, var_1); }, "$finpow", function() { return ie_ScaleTrait_finpow(this); }, "$fslope", function() { return ie_ScaleTrait_fslope(this); }],
otja_XMLHttpRequest, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0,
it_Phases$5$lambda$null$3$lambda$_19_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$5$lambda$null$3$lambda$_19_0_get(this, var_1); }],
it_Phases$lambda$static$55$lambda$_12_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$lambda$static$55$lambda$_12_0_get(this, var_1); }],
iaamo_RectangleMapObject, "RectangleMapObject", 23, iaam_MapObject, [], 0, 3, 0, 0,
iaagg_GlyphLayout$GlyphRun, "GlyphLayout$GlyphRun", 32, jl_Object, [iaaup_Pool$Poolable], 0, 3, 0, ["$reset", function() { iaagg_GlyphLayout$GlyphRun_reset(this); }, "$toString", function() { return iaagg_GlyphLayout$GlyphRun_toString(this); }],
iaaui_DefaultSerializers$3, 0, jl_Object, [iaa_Settings$TypeSerializer], 4, 0, 0, 0,
iaaui_DefaultSerializers$2, 0, jl_Object, [iaa_Settings$TypeSerializer], 4, 0, 0, 0,
iaaui_DefaultSerializers$1, 0, jl_Object, [iaa_Settings$TypeSerializer], 4, 0, 0, 0,
it_Phases$_clinit_$lambda$_75_10, "Phases$<clinit>$lambda$_75_10", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$_clinit_$lambda$_75_10_run(this); }],
it_Phases$_clinit_$lambda$_75_11, "Phases$<clinit>$lambda$_75_11", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$_clinit_$lambda$_75_11_run(this); }],
it_Phases$_clinit_$lambda$_75_12, "Phases$<clinit>$lambda$_75_12", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$_clinit_$lambda$_75_12_run(this); }],
iaaui_DefaultSerializers$6, 0, jl_Object, [iaa_Settings$TypeSerializer], 4, 0, 0, 0,
it_Phases$_clinit_$lambda$_75_13, "Phases$<clinit>$lambda$_75_13", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$_clinit_$lambda$_75_13_run(this); }],
it_Phases$1$lambda$null$6$lambda$_18_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$1$lambda$null$6$lambda$_18_0_get(this, var_1); }],
iaaui_DefaultSerializers$5, 0, jl_Object, [iaa_Settings$TypeSerializer], 4, 0, 0, 0,
it_Phases$_clinit_$lambda$_75_14, "Phases$<clinit>$lambda$_75_14", 44, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$_clinit_$lambda$_75_14_run(this); }],
iaaui_DefaultSerializers$4, 0, jl_Object, [iaa_Settings$TypeSerializer], 4, 0, 0, 0,
it_Phases$_clinit_$lambda$_75_15, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$_clinit_$lambda$_75_15_run(this); }],
iaagg_FileTextureData, "FileTextureData", 33, jl_Object, [iaag_TextureData], 0, 3, 0, ["$isPrepared", function() { return iaagg_FileTextureData_isPrepared(this); }, "$prepare", function() { iaagg_FileTextureData_prepare(this); }, "$consumePixmap", function() { return iaagg_FileTextureData_consumePixmap(this); }, "$disposePixmap", function() { return iaagg_FileTextureData_disposePixmap(this); }, "$getWidth0", function() { return iaagg_FileTextureData_getWidth(this); }, "$getHeight0", function() { return iaagg_FileTextureData_getHeight(this);
}, "$getFormat", function() { return iaagg_FileTextureData_getFormat(this); }, "$useMipMaps", function() { return iaagg_FileTextureData_useMipMaps(this); }, "$isManaged", function() { return iaagg_FileTextureData_isManaged(this); }, "$getType1", function() { return iaagg_FileTextureData_getType(this); }, "$consumeCustomData", function(var_1) { iaagg_FileTextureData_consumeCustomData(this, var_1); }, "$toString", function() { return iaagg_FileTextureData_toString(this); }],
iaabt_TeaFileLoader$loadFiles$lambda$_1_0, 0, jl_Object, [otja_ReadyStateChangeHandler], 0, 3, 0, ["$stateChanged", function() { iaabt_TeaFileLoader$loadFiles$lambda$_1_0_stateChanged(this); }, "$stateChanged$exported$0", function() { return iaabt_TeaFileLoader$loadFiles$lambda$_1_0_stateChanged$exported$0(this); }],
it_Boss$midPhase$lambda$_2_0, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { it_Boss$midPhase$lambda$_2_0_get(this, var_1); }, "$get33", function(var_1) { it_Boss$midPhase$lambda$_2_0_get0(this, var_1); }],
jl_System, 0, jl_Object, [], 4, 3, 0, 0,
iaagg_GlyphLayout$reset$lambda$_11_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaagg_GlyphLayout$reset$lambda$_11_0_get(this); }, "$get53", function() { return iaagg_GlyphLayout$reset$lambda$_11_0_get0(this); }],
iaaus_UBJsonReader, 0, jl_Object, [iaaus_BaseJsonReader], 0, 3, 0, 0,
iaagg_SpriteCache, 0, jl_Object, [iaau_Disposable], 0, 3, iaagg_SpriteCache_$callClinit, ["$setColor0", function(var_1, var_2, var_3, var_4) { iaagg_SpriteCache_setColor(this, var_1, var_2, var_3, var_4); }, "$getColor", function() { return iaagg_SpriteCache_getColor(this); }, "$setColor", function(var_1) { iaagg_SpriteCache_setColor0(this, var_1); }, "$setPackedColor", function(var_1) { iaagg_SpriteCache_setPackedColor(this, var_1); }, "$beginCache", function() { iaagg_SpriteCache_beginCache(this); }, "$endCache",
function() { return iaagg_SpriteCache_endCache(this); }, "$add16", function(var_1, var_2, var_3, var_4) { iaagg_SpriteCache_add(this, var_1, var_2, var_3, var_4); }, "$add17", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10) { iaagg_SpriteCache_add0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10); }, "$begin", function() { iaagg_SpriteCache_begin(this); }, "$end", function() { iaagg_SpriteCache_end(this); }, "$draw7", function(var_1) { iaagg_SpriteCache_draw(this,
var_1); }, "$setProjectionMatrix", function(var_1) { iaagg_SpriteCache_setProjectionMatrix(this, var_1); }, "$setShader0", function(var_1) { iaagg_SpriteCache_setShader(this, var_1); }, "$isDrawing", function() { return iaagg_SpriteCache_isDrawing(this); }],
jur_AbstractCharClass$LazyXDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyXDigit_computeValue(this); }],
iaamg_Circle, "Circle", 29, jl_Object, [ji_Serializable, iaamg_Shape2D], 0, 3, 0, ["$set18", function(var_1, var_2, var_3) { return iaamg_Circle_set(this, var_1, var_2, var_3); }],
jur_Matcher, 0, jl_Object, [jur_MatchResult], 4, 3, 0, ["$appendReplacement", function(var_1, var_2) { return jur_Matcher_appendReplacement(this, var_1, var_2); }, "$processReplacement", function(var_1) { return jur_Matcher_processReplacement(this, var_1); }, "$reset4", function() { return jur_Matcher_reset(this); }, "$appendTail", function(var_1) { return jur_Matcher_appendTail(this, var_1); }, "$replaceAll", function(var_1) { return jur_Matcher_replaceAll(this, var_1); }, "$group", function(var_1) { return jur_Matcher_group(this,
var_1); }, "$find3", function(var_1) { return jur_Matcher_find0(this, var_1); }, "$findAt", function(var_1) { return jur_Matcher_findAt(this, var_1); }, "$find2", function() { return jur_Matcher_find(this); }, "$start", function(var_1) { return jur_Matcher_start0(this, var_1); }, "$end1", function(var_1) { return jur_Matcher_end0(this, var_1); }, "$start9", function() { return jur_Matcher_start(this); }, "$end2", function() { return jur_Matcher_end(this); }, "$hasTransparentBounds", function() { return jur_Matcher_hasTransparentBounds(this);
}],
jur_DotAllSet, "DotAllSet", 2, jur_JointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_DotAllSet_matches(this, var_1, var_2, var_3); }, "$getName", function() { return jur_DotAllSet_getName(this); }, "$setNext", function(var_1) { jur_DotAllSet_setNext(this, var_1); }, "$getType", function() { return jur_DotAllSet_getType(this); }, "$hasConsumed", function(var_1) { return jur_DotAllSet_hasConsumed(this, var_1); }],
jur_AbstractCharClass$LazyJavaUpperCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaUpperCase_computeValue(this); }],
jur_HangulDecomposedCharSet, "HangulDecomposedCharSet", 2, jur_JointSet, [], 0, 0, 0, ["$setNext", function(var_1) { jur_HangulDecomposedCharSet_setNext(this, var_1); }, "$getDecomposedChar", function() { return jur_HangulDecomposedCharSet_getDecomposedChar(this); }, "$getName", function() { return jur_HangulDecomposedCharSet_getName(this); }, "$matches", function(var_1, var_2, var_3) { return jur_HangulDecomposedCharSet_matches(this, var_1, var_2, var_3); }, "$first", function(var_1) { return jur_HangulDecomposedCharSet_first(this,
var_1); }, "$hasConsumed", function(var_1) { return jur_HangulDecomposedCharSet_hasConsumed(this, var_1); }],
iaai_InputDevice$DeviceType, "InputDevice$DeviceType", 18, jl_Enum, [], 12, 3, iaai_InputDevice$DeviceType_$callClinit, 0,
iaac_IntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, ["$put11", function(var_1, var_2) { return iaac_IntMap_put(this, var_1, var_2); }, "$putResize3", function(var_1, var_2) { iaac_IntMap_putResize(this, var_1, var_2); }, "$push5", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { iaac_IntMap_push(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }, "$putStash3", function(var_1, var_2) { iaac_IntMap_putStash(this, var_1, var_2); }, "$get", function(var_1) { return iaac_IntMap_get(this,
var_1); }, "$getStash3", function(var_1, var_2) { return iaac_IntMap_getStash(this, var_1, var_2); }, "$remove", function(var_1) { return iaac_IntMap_remove(this, var_1); }, "$removeStash0", function(var_1) { return iaac_IntMap_removeStash(this, var_1); }, "$removeStashIndex", function(var_1) { iaac_IntMap_removeStashIndex(this, var_1); }, "$resize", function(var_1) { iaac_IntMap_resize(this, var_1); }, "$hash2", function(var_1) { return iaac_IntMap_hash2(this, var_1); }, "$hash3", function(var_1) { return iaac_IntMap_hash3(this,
var_1); }, "$values5", function() { return iaac_IntMap_values(this); }],
it_Phases$5$lambda$null$8$lambda$_14_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$5$lambda$null$8$lambda$_14_0_get(this, var_1); }],
iaam_TileLayer, "TileLayer", 22, iaam_MapLayer, [], 0, 3, 0, ["$getCell0", function(var_1, var_2) { return iaam_TileLayer_getCell(this, var_1, var_2); }, "$setCell", function(var_1, var_2, var_3) { iaam_TileLayer_setCell(this, var_1, var_2, var_3); }, "$getTile0", function(var_1, var_2) { return iaam_TileLayer_getTile(this, var_1, var_2); }],
it_Phases$2$lambda$null$6$lambda$_18_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$2$lambda$null$6$lambda$_18_0_get(this, var_1); }],
iaa_Files$FileType, "Files$FileType", 17, jl_Enum, [], 12, 3, iaa_Files$FileType_$callClinit, 0,
iaac_ObjectSet$ObjectSetIterator, "ObjectSet$ObjectSetIterator", 30, jl_Object, [jl_Iterable, ju_Iterator], 0, 3, 0, 0,
jur_WordBoundary, "WordBoundary", 2, jur_AbstractSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_WordBoundary_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_WordBoundary_hasConsumed(this, var_1); }, "$getName", function() { return jur_WordBoundary_getName(this); }, "$isSpace", function(var_1, var_2, var_3, var_4) { return jur_WordBoundary_isSpace(this, var_1, var_2, var_3, var_4); }],
it_Phases$5$lambda$null$6$lambda$_16_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$5$lambda$null$6$lambda$_16_0_get(this, var_1); }],
iaas_Scene$1, "Scene$1", 36, iaauv_ScreenViewport, [], 0, 0, 0, ["$calculateScissors0", function(var_1, var_2, var_3) { iaas_Scene$1_calculateScissors(this, var_1, var_2, var_3); }]]);
$rt_metadata([cbgu_BufferUtils, 0, jl_Object, [], 4, 3, cbgu_BufferUtils_$callClinit, 0,
jl_Double, 0, jl_Number, [jl_Comparable], 0, 3, jl_Double_$callClinit, 0,
iaate_FadeEffect, "FadeEffect", 27, iaat_Effect, [], 0, 3, 0, ["$onApply", function(var_1, var_2, var_3) { iaate_FadeEffect_onApply(this, var_1, var_2, var_3); }],
it_Phases$lambda$static$48$lambda$_19_0, 0, jl_Object, [iaaf_Floatc2], 0, 3, 0, ["$get56", function(var_1, var_2) { it_Phases$lambda$static$48$lambda$_19_0_get(this, var_1, var_2); }],
iaate_RainbowEffect, "RainbowEffect", 27, iaat_Effect, [], 0, 3, 0, ["$onApply", function(var_1, var_2, var_3) { iaate_RainbowEffect_onApply(this, var_1, var_2, var_3); }],
iaag_Texture$TextureFilter, "Texture$TextureFilter", 31, jl_Enum, [], 12, 3, iaag_Texture$TextureFilter_$callClinit, ["$isMipMap", function() { return iaag_Texture$TextureFilter_isMipMap(this); }, "$getGLEnum", function() { return iaag_Texture$TextureFilter_getGLEnum(this); }],
iaas_Scene$2, "Scene$2", 36, iaas_Group, [], 0, 0, 0, 0,
it_Bullets$9$hit$lambda$_3_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Bullets$9$hit$lambda$_3_1_run(this); }],
it_Phases$lambda$static$48$lambda$_19_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$static$48$lambda$_19_1_run(this); }],
it_Bullets$9$hit$lambda$_3_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Bullets$9$hit$lambda$_3_0_get(this, var_1); }],
iaas_Scene$setScrollFocus$lambda$_45_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Scene$setScrollFocus$lambda$_45_0_get(this); }, "$get31", function() { return iaas_Scene$setScrollFocus$lambda$_45_0_get0(this); }],
otjb_StorageProvider, 0, jl_Object, [], 3, 3, 0, 0,
otjc_JSArrayReader, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0,
otjb_Window, 0, jl_Object, [otj_JSObject, otjb_WindowEventTarget, otjb_StorageProvider, otjc_JSArrayReader], 1, 3, 0, ["$addEventListener$exported$0", function(var_1, var_2) { return otjb_Window_addEventListener$exported$0(this, var_1, var_2); }, "$removeEventListener$exported$1", function(var_1, var_2) { return otjb_Window_removeEventListener$exported$1(this, var_1, var_2); }, "$get$exported$2", function(var_1) { return otjb_Window_get$exported$2(this, var_1); }, "$removeEventListener$exported$3", function(var_1,
var_2, var_3) { return otjb_Window_removeEventListener$exported$3(this, var_1, var_2, var_3); }, "$dispatchEvent$exported$4", function(var_1) { return otjb_Window_dispatchEvent$exported$4(this, var_1); }, "$getLength$exported$5", function() { return otjb_Window_getLength$exported$5(this); }, "$addEventListener$exported$6", function(var_1, var_2, var_3) { return otjb_Window_addEventListener$exported$6(this, var_1, var_2, var_3); }],
it_Bullet$_init_$lambda$_1_0, 0, jl_Object, [it_Bullet$Mover], 0, 3, 0, ["$move2", function(var_1) { return it_Bullet$_init_$lambda$_1_0_move(this, var_1); }],
jur_IntHash, 0, jl_Object, [], 0, 0, 0, 0,
it_Phases$lambda$static$18$lambda$_49_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$lambda$static$18$lambda$_49_0_get(this, var_1); }],
jur_ReluctantAltQuantifierSet, "ReluctantAltQuantifierSet", 2, jur_AltQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_ReluctantAltQuantifierSet_matches(this, var_1, var_2, var_3); }],
cjj_GZIPException, 0, ji_IOException, [], 0, 3, 0, 0,
jur_AbstractCharClass$LazyJavaWhitespace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaWhitespace_computeValue(this); }],
jur_Matcher$1, "Matcher$1", 2, jl_Object, [], 0, 0, 0, ["$toString", function() { return jur_Matcher$1_toString(this); }],
cjj_CRC32, 0, jl_Object, [cjj_Checksum], 4, 3, cjj_CRC32_$callClinit, ["$update0", function(var_1, var_2, var_3) { cjj_CRC32_update(this, var_1, var_2, var_3); }, "$reset", function() { cjj_CRC32_reset(this); }, "$reset0", function(var_1) { cjj_CRC32_reset0(this, var_1); }, "$getValue", function() { return cjj_CRC32_getValue(this); }],
it_Phases$lambda$seq$61$lambda$_6_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$seq$61$lambda$_6_0_run(this); }],
iaac_ObjectMap$Entry, 0, jl_Object, [], 0, 3, 0, 0,
jl_NumberFormatException, 0, jl_IllegalArgumentException, [], 0, 3, 0, 0,
i_UI$lambda$null$4$lambda$_15_0, 0, jl_Object, [iaaf_Boolp], 0, 3, 0, ["$get1", function() { return i_UI$lambda$null$4$lambda$_15_0_get(this); }],
i_UI$lambda$null$4$lambda$_15_1, 0, jl_Object, [iaaf_Cons], 0, 3, 0, ["$get5", function(var_1) { i_UI$lambda$null$4$lambda$_15_1_get(this, var_1); }, "$get57", function(var_1) { i_UI$lambda$null$4$lambda$_15_1_get0(this, var_1); }],
i_UI$lambda$null$4$lambda$_15_2, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { i_UI$lambda$null$4$lambda$_15_2_run(this); }],
iaas_Scene$mouseMoved$lambda$_23_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return iaas_Scene$mouseMoved$lambda$_23_0_get(this); }, "$get7", function() { return iaas_Scene$mouseMoved$lambda$_23_0_get0(this); }],
jur_IntArrHash, 0, jl_Object, [], 0, 0, 0, 0,
it_Phases$3$lambda$update$29$lambda$_3_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0,
jur_AbstractCharClass$LazyJavaMirrored, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaMirrored_computeValue(this); }],
iaagg_GLVersion$Type, 0, jl_Enum, [], 12, 3, iaagg_GLVersion$Type_$callClinit, 0,
it_Boss$update$lambda$_6_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Boss$update$lambda$_6_0_run(this); }],
jur_AbstractCharClass$LazyJavaISOControl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaISOControl_computeValue(this); }],
iaau_TaskQueue, 0, jl_Object, [], 0, 3, 0, ["$run", function() { iaau_TaskQueue_run(this); }, "$post", function(var_1) { iaau_TaskQueue_post(this, var_1); }],
it_Fx, 0, jl_Object, [], 0, 3, it_Fx_$callClinit, 0,
jur_HighSurrogateCharSet, "HighSurrogateCharSet", 2, jur_JointSet, [], 0, 0, 0, ["$setNext", function(var_1) { jur_HighSurrogateCharSet_setNext(this, var_1); }, "$matches", function(var_1, var_2, var_3) { return jur_HighSurrogateCharSet_matches(this, var_1, var_2, var_3); }, "$find0", function(var_1, var_2, var_3) { return jur_HighSurrogateCharSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_HighSurrogateCharSet_findBack(this, var_1, var_2, var_3, var_4);
}, "$getName", function() { return jur_HighSurrogateCharSet_getName(this); }, "$first", function(var_1) { return jur_HighSurrogateCharSet_first(this, var_1); }, "$hasConsumed", function(var_1) { return jur_HighSurrogateCharSet_hasConsumed(this, var_1); }],
iaagg_VertexBufferObjectWithVAO, 0, jl_Object, [iaagg_VertexData], 0, 3, iaagg_VertexBufferObjectWithVAO_$callClinit, ["$getNumVertices", function() { return iaagg_VertexBufferObjectWithVAO_getNumVertices(this); }, "$getBuffer0", function() { return iaagg_VertexBufferObjectWithVAO_getBuffer(this); }, "$bufferChanged", function() { iaagg_VertexBufferObjectWithVAO_bufferChanged(this); }, "$setVertices1", function(var_1, var_2, var_3) { iaagg_VertexBufferObjectWithVAO_setVertices(this, var_1, var_2, var_3); },
"$bind2", function(var_1, var_2) { iaagg_VertexBufferObjectWithVAO_bind(this, var_1, var_2); }, "$bindAttributes", function(var_1, var_2) { iaagg_VertexBufferObjectWithVAO_bindAttributes(this, var_1, var_2); }, "$unbindAttributes", function(var_1) { iaagg_VertexBufferObjectWithVAO_unbindAttributes(this, var_1); }, "$bindData", function(var_1) { iaagg_VertexBufferObjectWithVAO_bindData(this, var_1); }, "$unbind1", function(var_1, var_2) { iaagg_VertexBufferObjectWithVAO_unbind(this, var_1, var_2); }, "$dispose",
function() { iaagg_VertexBufferObjectWithVAO_dispose(this); }, "$createVAO", function() { iaagg_VertexBufferObjectWithVAO_createVAO(this); }, "$deleteVAO", function() { iaagg_VertexBufferObjectWithVAO_deleteVAO(this); }],
iaac_SnapshotArray, 0, iaac_Array, [], 0, 3, 0, ["$begin0", function() { return iaac_SnapshotArray_begin(this); }, "$end", function() { iaac_SnapshotArray_end(this); }, "$modified", function() { iaac_SnapshotArray_modified(this); }, "$removeValue", function(var_1, var_2) { return iaac_SnapshotArray_removeValue(this, var_1, var_2); }, "$remove", function(var_1) { return iaac_SnapshotArray_remove(this, var_1); }],
otpp_AsyncCallbackWrapper, 0, jl_Object, [oti_AsyncCallback], 0, 0, 0, ["$complete", function(var_1) { otpp_AsyncCallbackWrapper_complete(this, var_1); }, "$error", function(var_1) { otpp_AsyncCallbackWrapper_error(this, var_1); }],
it_Phases$5$lambda$update$20$lambda$_2_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$5$lambda$update$20$lambda$_2_0_get(this, var_1); }],
iaam_Interpolation$SwingOut, 0, iaam_Interpolation, [], 0, 3, 0, ["$apply", function(var_1) { return iaam_Interpolation$SwingOut_apply(this, var_1); }],
it_Phases$1$lambda$$10$lambda$_14_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$1$lambda$$10$lambda$_14_0_run(this); }],
it_Phases$4$lambda$$2$lambda$_15_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$4$lambda$$2$lambda$_15_0_run(this); }],
jl_IllegalAccessException, 0, jl_ReflectiveOperationException, [], 0, 3, 0, 0,
iaagg_TextureAtlas, 0, jl_Object, [iaau_Disposable], 0, 3, iaagg_TextureAtlas_$callClinit, ["$load6", function(var_1) { iaagg_TextureAtlas_load(this, var_1); }, "$white", function() { return iaagg_TextureAtlas_white(this); }, "$find", function(var_1) { return iaagg_TextureAtlas_find(this, var_1); }, "$has", function(var_1) { return iaagg_TextureAtlas_has(this, var_1); }, "$drawable", function(var_1) { return iaagg_TextureAtlas_drawable(this, var_1); }],
it_Boss$seesPlayer$lambda$_23_0, 0, jl_Object, [iaamg_Geometry$Raycaster], 0, 3, 0, ["$accept", function(var_1, var_2) { return it_Boss$seesPlayer$lambda$_23_0_accept(this, var_1, var_2); }],
iaagg_BitmapFont, "BitmapFont", 32, jl_Object, [iaau_Disposable], 0, 3, 0, ["$load7", function(var_1) { iaagg_BitmapFont_load(this, var_1); }, "$getScaleX", function() { return iaagg_BitmapFont_getScaleX(this); }, "$getScaleY", function() { return iaagg_BitmapFont_getScaleY(this); }, "$getRegions", function() { return iaagg_BitmapFont_getRegions(this); }, "$getLineHeight", function() { return iaagg_BitmapFont_getLineHeight(this); }, "$getDescent", function() { return iaagg_BitmapFont_getDescent(this); }, "$isFlipped",
function() { return iaagg_BitmapFont_isFlipped(this); }, "$getData", function() { return iaagg_BitmapFont_getData(this); }, "$newFontCache", function() { return iaagg_BitmapFont_newFontCache(this); }],
it_Phases, 0, jl_Object, [], 0, 3, it_Phases_$callClinit, 0]);
$rt_metadata([otcju_THashMap$HashEntry, 0, otcju_TMapEntry, [], 0, 0, 0, 0,
it_Phases$lambda$static$38$lambda$_29_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$lambda$static$38$lambda$_29_0_get(this, var_1); }],
iaau_Log, 0, jl_Object, [], 0, 3, iaau_Log_$callClinit, 0,
iaamg_Polyline, 0, jl_Object, [iaamg_Shape2D], 0, 3, 0, ["$setPosition", function(var_1, var_2) { iaamg_Polyline_setPosition(this, var_1, var_2); }],
jur_UMultiLineEOLSet, "UMultiLineEOLSet", 2, jur_AbstractSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_UMultiLineEOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_UMultiLineEOLSet_hasConsumed(this, var_1); }, "$getName", function() { return jur_UMultiLineEOLSet_getName(this); }],
i_Control, "Control", 41, jl_Object, [iaa_ApplicationListener], 0, 3, 0, ["$init0", function() { i_Control_init(this); }, "$slowmo", function(var_1) { i_Control_slowmo(this, var_1); }, "$reset", function() { i_Control_reset(this); }, "$update1", function() { i_Control_update(this); }, "$isPaused", function() { return i_Control_isPaused(this); }, "$setPaused", function(var_1) { i_Control_setPaused(this, var_1); }, "$lambda$new$00", function() { return i_Control_lambda$new$0(this); }, "$resize1", function(var_1,
var_2) { iaa_ApplicationListener_resize(this, var_1, var_2); }],
iaam_MapTile, "MapTile", 22, jl_Object, [], 0, 3, 0, ["$getProperties", function() { return iaam_MapTile_getProperties(this); }, "$getObjects", function() { return iaam_MapTile_getObjects(this); }],
iaag_Pixmap$Format, "Pixmap$Format", 31, jl_Enum, [], 12, 3, iaag_Pixmap$Format_$callClinit, 0,
iaau_Log$LogLevel, 0, jl_Enum, [], 12, 3, iaau_Log$LogLevel_$callClinit, 0,
iaag_Mesh, "Mesh", 31, jl_Object, [iaau_Disposable], 0, 3, iaag_Mesh_$callClinit, ["$makeVertexBuffer", function(var_1, var_2, var_3) { return iaag_Mesh_makeVertexBuffer(this, var_1, var_2, var_3); }, "$setVertices", function(var_1) { return iaag_Mesh_setVertices(this, var_1); }, "$setVertices0", function(var_1, var_2, var_3) { return iaag_Mesh_setVertices0(this, var_1, var_2, var_3); }, "$setIndices", function(var_1) { return iaag_Mesh_setIndices(this, var_1); }, "$getNumIndices", function() { return iaag_Mesh_getNumIndices(this);
}, "$getNumVertices", function() { return iaag_Mesh_getNumVertices(this); }, "$setAutoBind", function(var_1) { iaag_Mesh_setAutoBind(this, var_1); }, "$bind1", function(var_1) { iaag_Mesh_bind(this, var_1); }, "$bind2", function(var_1, var_2) { iaag_Mesh_bind0(this, var_1, var_2); }, "$unbind0", function(var_1) { iaag_Mesh_unbind(this, var_1); }, "$unbind1", function(var_1, var_2) { iaag_Mesh_unbind0(this, var_1, var_2); }, "$render0", function(var_1, var_2) { iaag_Mesh_render(this, var_1, var_2); }, "$render1",
function(var_1, var_2, var_3, var_4) { iaag_Mesh_render0(this, var_1, var_2, var_3, var_4); }, "$render2", function(var_1, var_2, var_3, var_4, var_5) { iaag_Mesh_render1(this, var_1, var_2, var_3, var_4, var_5); }, "$dispose", function() { iaag_Mesh_dispose(this); }, "$getVerticesBuffer", function() { return iaag_Mesh_getVerticesBuffer(this); }, "$getIndicesBuffer", function() { return iaag_Mesh_getIndicesBuffer(this); }],
iaau_Time$DelayRun, "Time$DelayRun", 20, jl_Object, [iaaup_Pool$Poolable], 0, 3, 0, ["$reset", function() { iaau_Time$DelayRun_reset(this); }],
it_Player$lambda$update$2$lambda$_12_0, 0, jl_Object, [it_Bullet$Mover], 0, 3, 0, ["$move2", function(var_1) { return it_Player$lambda$update$2$lambda$_12_0_move(this, var_1); }],
it_Phases$2$lambda$$22$lambda$_2_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$2$lambda$$22$lambda$_2_0_run(this); }],
i_World$_init_$lambda$_0_0, 0, jl_Object, [iaaf_Boolf], 0, 3, 0, ["$get28", function(var_1) { return i_World$_init_$lambda$_0_0_get(this, var_1); }, "$get44", function(var_1) { return i_World$_init_$lambda$_0_0_get0(this, var_1); }],
iaag_PixmapIO$CIM, 0, jl_Object, [], 0, 0, iaag_PixmapIO$CIM_$callClinit, 0,
jur_AbstractCharClass$LazySpecialsBlock, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazySpecialsBlock_computeValue(this); }],
i_UI$lambda$null$2$lambda$_17_0, 0, jl_Object, [iaaf_Prov], 0, 3, 0, ["$get0", function() { return i_UI$lambda$null$2$lambda$_17_0_get(this); }, "$get45", function() { return i_UI$lambda$null$2$lambda$_17_0_get0(this); }],
iaau_Time$_clinit_$lambda$_20_0, 0, jl_Object, [iaaf_Floatp], 0, 3, 0, ["$get69", function() { return iaau_Time$_clinit_$lambda$_20_0_get(this); }],
iaaus_SerializationException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
it_Phases$5$lambda$null$13$lambda$_9_0, 0, jl_Object, [iaaf_Floatc], 0, 3, 0, ["$get55", function(var_1) { it_Phases$5$lambda$null$13$lambda$_9_0_get(this, var_1); }],
iaase_FocusListener$FocusEvent, "FocusListener$FocusEvent", 40, iaase_SceneEvent, [], 0, 3, 0, ["$reset", function() { iaase_FocusListener$FocusEvent_reset(this); }],
iaat_TypingGlyph, "TypingGlyph", 26, iaagg_BitmapFont$Glyph, [iaaup_Pool$Poolable], 0, 3, 0, ["$set21", function(var_1) { iaat_TypingGlyph_set(this, var_1); }, "$reset", function() { iaat_TypingGlyph_reset(this); }],
it_Phases$lambda$static$24$lambda$_43_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$lambda$static$24$lambda$_43_0_get(this, var_1); }],
it_Phases$lambda$static$15$lambda$_52_0, 0, jl_Object, [iaaf_Intc], 0, 3, 0, ["$get54", function(var_1) { it_Phases$lambda$static$15$lambda$_52_0_get(this, var_1); }],
iaass_TextureRegionDrawable, 0, iaass_BaseDrawable, [iaass_TransformDrawable], 0, 3, 0, ["$draw0", function(var_1, var_2, var_3, var_4) { iaass_TextureRegionDrawable_draw(this, var_1, var_2, var_3, var_4); }, "$draw10", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { iaass_TextureRegionDrawable_draw0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$getRegion", function() { return iaass_TextureRegionDrawable_getRegion(this); }, "$setRegion", function(var_1)
{ iaass_TextureRegionDrawable_setRegion(this, var_1); }, "$tint0", function(var_1, var_2, var_3, var_4) { return iaass_TextureRegionDrawable_tint(this, var_1, var_2, var_3, var_4); }, "$tint2", function(var_1) { return iaass_TextureRegionDrawable_tint0(this, var_1); }],
it_Phases$5$lambda$null$7$lambda$_15_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$5$lambda$null$7$lambda$_15_0_run(this); }],
iaamg_Ellipse, 0, jl_Object, [ji_Serializable, iaamg_Shape2D], 0, 3, 0, 0,
it_Phases$lambda$static$42$lambda$_25_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$static$42$lambda$_25_0_run(this); }],
it_Phases$lambda$static$51$lambda$_16_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$run", function() { it_Phases$lambda$static$51$lambda$_16_0_run(this); }]]);
function $rt_array(cls, data) {
    this.$monitor = null;
    this.$id$ = 0;
    this.type = cls;
    this.data = data;
    this.constructor = $rt_arraycls(cls);
}
$rt_array.prototype = Object.create(($rt_objcls()).prototype);
$rt_array.prototype.toString = function() {
    var str = "[";
    for (var i = 0;i < this.data.length;++i) {
        if (i > 0) {
            str += ", ";
        }
        str += this.data[i].toString();
    }
    str += "]";
    return str;
};
$rt_setCloneMethod($rt_array.prototype, function() {
    var dataCopy;
    if ('slice' in this.data) {
        dataCopy = this.data.slice();
    } else {
        dataCopy = new this.data.constructor(this.data.length);
        for (var i = 0;i < dataCopy.length;++i) {
            dataCopy[i] = this.data[i];
        }
    }
    return new $rt_array(this.type, dataCopy);
});
$rt_stringPool(["Can\'t enter monitor from another thread synchronously", "@", "The event target cannot be null.", "|  ", "Stream is closed", "need dictionary", "unknown compression method", "unknown header flags set", "incorrect data check", "incorrect length check", "incorrect header check", "invalid window size", "bad extra field length", "header crc mismatch", "String contains invalid digits: ", "String contains digits out of radix ", ": ", "The value is too big for int type: ", "String is null or empty",
"Illegal radix: ", "<", ":", ">", "CI sequence: ", "0", "{", "}", "UTF-8", "fSet", "BehindFSet", "JointSet", "range:", " ", "^ ", "b", "i", "l", "f", "<GroupQuant>", "Error parsing file: ", "Error parsing XML, unclosed element: ", "Error parsing XML on line ", " near: ", "lt", "gt", "amp", "&", "apos", "\'", "quot", "\"", "#x", "null", "Index out of bounds", "New position ", " is outside of range [0;", "]", "New limit ", "", "Lower", "Upper", "ASCII", "Alpha", "Digit", "Alnum", "Punct", "Graph", "Print", "Blank",
"Cntrl", "XDigit", "javaLowerCase", "javaUpperCase", "javaWhitespace", "javaMirrored", "javaDefined", "javaDigit", "javaIdentifierIgnorable", "javaISOControl", "javaJavaIdentifierPart", "javaJavaIdentifierStart", "javaLetter", "javaLetterOrDigit", "javaSpaceChar", "javaTitleCase", "javaUnicodeIdentifierPart", "javaUnicodeIdentifierStart", "Space", "w", "W", "s", "S", "d", "D", "BasicLatin", "Latin-1Supplement", "LatinExtended-A", "LatinExtended-B", "IPAExtensions", "SpacingModifierLetters", "CombiningDiacriticalMarks",
"Greek", "Cyrillic", "CyrillicSupplement", "Armenian", "Hebrew", "Arabic", "Syriac", "ArabicSupplement", "Thaana", "Devanagari", "Bengali", "Gurmukhi", "Gujarati", "Oriya", "Tamil", "Telugu", "Kannada", "Malayalam", "Sinhala", "Thai", "Lao", "Tibetan", "Myanmar", "Georgian", "HangulJamo", "Ethiopic", "EthiopicSupplement", "Cherokee", "UnifiedCanadianAboriginalSyllabics", "Ogham", "Runic", "Tagalog", "Hanunoo", "Buhid", "Tagbanwa", "Khmer", "Mongolian", "Limbu", "TaiLe", "NewTaiLue", "KhmerSymbols", "Buginese",
"PhoneticExtensions", "PhoneticExtensionsSupplement", "CombiningDiacriticalMarksSupplement", "LatinExtendedAdditional", "GreekExtended", "GeneralPunctuation", "SuperscriptsandSubscripts", "CurrencySymbols", "CombiningMarksforSymbols", "LetterlikeSymbols", "NumberForms", "Arrows", "MathematicalOperators", "MiscellaneousTechnical", "ControlPictures", "OpticalCharacterRecognition", "EnclosedAlphanumerics", "BoxDrawing", "BlockElements", "GeometricShapes", "MiscellaneousSymbols", "Dingbats", "MiscellaneousMathematicalSymbols-A",
"SupplementalArrows-A", "BraillePatterns", "SupplementalArrows-B", "MiscellaneousMathematicalSymbols-B", "SupplementalMathematicalOperators", "MiscellaneousSymbolsandArrows", "Glagolitic", "Coptic", "GeorgianSupplement", "Tifinagh", "EthiopicExtended", "SupplementalPunctuation", "CJKRadicalsSupplement", "KangxiRadicals", "IdeographicDescriptionCharacters", "CJKSymbolsandPunctuation", "Hiragana", "Katakana", "Bopomofo", "HangulCompatibilityJamo", "Kanbun", "BopomofoExtended", "CJKStrokes", "KatakanaPhoneticExtensions",
"EnclosedCJKLettersandMonths", "CJKCompatibility", "CJKUnifiedIdeographsExtensionA", "YijingHexagramSymbols", "CJKUnifiedIdeographs", "YiSyllables", "YiRadicals", "ModifierToneLetters", "SylotiNagri", "HangulSyllables", "HighSurrogates", "HighPrivateUseSurrogates", "LowSurrogates", "PrivateUseArea", "CJKCompatibilityIdeographs", "AlphabeticPresentationForms", "ArabicPresentationForms-A", "VariationSelectors", "VerticalForms", "CombiningHalfMarks", "CJKCompatibilityForms", "SmallFormVariants", "ArabicPresentationForms-B",
"HalfwidthandFullwidthForms", "all", "Specials", "Cn", "IsL", "Lu", "Ll", "Lt", "Lm", "Lo", "IsM", "Mn", "Me", "Mc", "N", "Nd", "Nl", "No", "IsZ", "Zs", "Zl", "Zp", "IsC", "Cc", "Cf", "Co", "Cs", "IsP", "Pd", "Ps", "Pe", "Pc", "Po", "IsS", "Sm", "Sc", "Sk", "So", "Pi", "Pf", "Can\'t compare ", " to ", "Class does not represent enum: ", "Enum ", " does not have the ", "constant", "prince-", "-", "left", "side", "up", "back", "right", "down", "front", "x", "y", "xy", "Error reading pack file: ", "AheadFSet", "VertexArray",
"VertexBufferObject", "VertexBufferObjectSubData", "VertexBufferObjectWithVAO", "NonCapJointSet", "PosLookaheadJointSet", "NegLookaheadJointSet", "initialCapacity must be >= 0: ", "initialCapacity is too large: ", "loadFactor must be > 0: ", "key cannot be null.", "invalid distance code", "invalid literal/length code", "class", "Object cannot be null.", "Objects cannot be null.", "candle", "barrier", "statue", "shelfrubble", "fire", "ashrubble", "book", "carpet", "carpet-trim", "rubble", "offset + length must be <= size: ",
" + ", " <= ", "index can\'t be >= size: ", " >= ", "end can\'t be >= size: ", "start can\'t be > end: ", " > ", "additionalCapacity must be >= 0: ", "newSize must be >= 0: ", "-edge", "shadow", "circle", "mousedown", "mousemove", "mouseup", "wheel", "keydown", "keypress", "keyup", "PosBehindJointSet", "Replacement preconditions do not hold", "Action must be non-null", "attribute vec4 a_position;", "attribute vec4 a_color;", "attribute vec2 a_texCoord0;", "attribute vec4 a_mix_color;", "uniform mat4 u_projTrans;",
"varying vec4 v_color;", "varying vec4 v_mix_color;", "varying vec2 v_texCoords;", "void main(){", "   v_color = a_color;", "   v_color.a = v_color.a * (255.0/254.0);", "   v_mix_color = a_mix_color;", "   v_mix_color.a *= (255.0/254.0);", "   v_texCoords = a_texCoord0;", "   gl_Position = u_projTrans * a_position;", "\n", "#ifdef GL_ES", "#define LOWP lowp", "precision mediump float;", "#else", "#define LOWP ", "#endif", "varying LOWP vec4 v_color;", "varying LOWP vec4 v_mix_color;", "uniform sampler2D u_texture;",
"  vec4 c = texture2D(u_texture, v_texCoords);", "  gl_FragColor = v_color * mix(c, vec4(v_mix_color.rgb, c.a), v_mix_color.a);", "touchDown", "touchUp", "touchDragged", "mouseMoved", "enter", "exit", "scrolled", "keyDown", "keyUp", "keyTyped", "charsetName is null", "Should never been thrown", "decomposed char:", "NegBehindJointSet", "Index ", ")", "region cannot be null.", "All regions must be from the same texture.", "<Quant>", "[]", "<init>", "<clinit>", "\u001b[H\u001b[2J", "\u001b[0m", "\u001b[1m", "\u001b[3m",
"\u001b[4m", "\u001b[30m", "\u001b[31m", "\u001b[32m", "\u001b[33m", "\u001b[34m", "\u001b[35m", "\u001b[36m", "\u001b[91m", "\u001b[92m", "\u001b[93m", "\u001b[94m", "\u001b[95m", "\u001b[96m", "\u001b[37m", "\u001b[49m", "\u001b[41m", "\u001b[42m", "\u001b[43m", "\u001b[44m", "ff", "fr", "fb", "fi", "fu", "bk", "r", "g", "p", "c", "lr", "lg", "ly", "lm", "lb", "lc", "bd", "br", "bg", "by", "bb", "Capacity is negative: ", "The last char in dst ", " is outside of array of size ", "Length ", " must be non-negative",
"Offset ", "The last char in src ", " is outside of string of size ", "Start ", " must be before end ", "data", "encoding", "Unsupported encoding (XML) for TMX Layer Data", "csv", ",", "base64", "Unrecognised encoding (", ") for TMX Layer Data", "compression", "gzip", "zlib", "Unrecognised compression (", "Error Reading TMX Layer Data: Premature end of tile data", "Error Reading TMX Layer Data - IOException: ", "\\/", "..", "layer", "width", "height", "tilewidth", "tileheight", "properties", "objectgroup", "object",
"name", "opacity", "1.0", "visible", "offsetx", "offsety", "polygon", "points", "polyline", "ellipse", "gid", "rotation", "type", "id", "property", "value", "int", "float", "bool", "color", "Wrong type given for property ", ", given : ", ", supported : string, bool, int, float, color", "fit", "fill", "fillX", "fillY", "stretch", "stretchX", "stretchY", "none", "The last float in dst ", "The last float in src ", "AtomicFSet", "Remove not allowed.", "<MultiLine $>", "Error occurred: ", "bounces cannot be < 2 or > 5: ",
"face:", "Android", "Desktop", "HeadlessDesktop", "WebGL", "iOS", "statue-eyes", "The last short in dst ", "The last short in src ", "default", "keybind-", "-last-device-type", "-single", "-key", "-min", "-max", "No keybinds defined! Did you forget to call setDefaults(...)?", "maps/map.tmx", "floor", "walls", "overlay", "images", "1", "solid", "clear", "shelf", "start + count must be <= size: ", "Array is empty.", ", ", "begin must be called before end.", "Logical", "Pixels", "Malformed input of length ", "setExportDirectory",
"../../desktop/gifexport", "update", "Length of Base64 encoded input string is not a multiple of 4.", "Illegal character in Base64 encoded data.", "CI back reference: ", "attributes must be >= 1", "UCI sequence: ", "CompositeRangeSet:  <nonsurrogate> ", " <surrogate> ", "New data must have the same managed status as the old data", "GLVersion", "OpenGL ES (\\d(\\.\\d){0,2})", "WebGL (\\d(\\.\\d){0,2})", "(\\d(\\.\\d){0,2})", "[Arc GL] Invalid version string: ", "\\.", "[Arc GL] Error parsing number: ", ", assuming: ",
"FinalSet", "WAIT", "SPEED", "COLOR", "VARIABLE", "EVENT", "RESET", "SKIP", "EFFECT_START", "EFFECT_END", "<Empty set>", "FileType \'", "\' Not supported in GWT backend", " does not exist", ".", "File does not exist: ", "/", "dshaders/default.vertex.glsl", "dshaders/fog.fragment.glsl", "dshaders/light.fragment.glsl", "sprites/sprites.atlas", "screenshake", "alpha_", "screenspace", "bloom", "maskedtreshold", "threshold", "blurspace", "gaussian", "u_texture0", "u_texture1", "dir", "BloomIntensity", "OriginalIntensity",
"size", "a_position", "a_texCoord0", "bloomshaders/", ".vertex.glsl", ".fragment.glsl", "vertex shader must not be null", "fragment shader must not be null", "Failed to compile shader: ", "Fragment shader:\n", "Vertex shader\n", "no uniform with name \'", "\' in shader", "4c5f3e", "7b6844", "445e6d", "704533", "8f875f", "invalid stored block lengths", "invalid block type", "too many length or distance symbols", "invalid bit length repeat", "texture cannot be null.", "�", "averageCharsPerByte must be positive. Actual value is ",
"maxCharsPerByte must be positive. Actual value is ", "newAction must be non-null", "fromIndex(", ") > toIndex(", "Comparison method violates its general contract!", "en", "CA", "zh", "CN", "FR", "de", "DE", "it", "IT", "ja", "JP", "ko", "KR", "TW", "GB", "US", "normal", "additive", "disabled", "Invalid key code: ", "CONTROLLER_A", "A", "CONTROLLER_B", "B", "CONTROLLER_X", "X", "CONTROLLER_Y", "Y", "CONTROLLER_GUIDE", "Guide", "CONTROLLER_L_BUMPER", "L Bumper", "CONTROLLER_R_BUMPER", "R Bumper", "CONTROLLER_BACK",
"Back", "CONTROLLER_START", "Start", "CONTROLLER_L_STICK", "L Stick", "CONTROLLER_R_STICK", "R Stick", "CONTROLLER_DPAD_UP", "D-Pad Up", "CONTROLLER_DPAD_DOWN", "D-Pad Down", "CONTROLLER_DPAD_LEFT", "D-Pad Left", "CONTROLLER_DPAD_RIGHT", "D-Pad Right", "CONTROLLER_L_TRIGGER", "L Trigger", "CONTROLLER_R_TRIGGER", "R Trigger", "CONTROLLER_L_STICK_VERTICAL_AXIS", "L Stick Y Axis", "CONTROLLER_L_STICK_HORIZONTAL_AXIS", "L Stick X Axis", "CONTROLLER_R_STICK_VERTICAL_AXIS", "R Stick Y Axis", "CONTROLLER_R_STICK_HORIZONTAL_AXIS",
"R Stick X Axis", "MOUSE_LEFT", "Mouse Left", "MOUSE_RIGHT", "Mouse Right", "MOUSE_MIDDLE", "Mouse Middle", "MOUSE_BACK", "Mouse Back", "MOUSE_FORWARD", "Mouse Forward", "SCROLL", "Scrollwheel", "ANY_KEY", "Any Key", "NUM_0", "NUM_1", "NUM_2", "2", "NUM_3", "3", "NUM_4", "4", "NUM_5", "5", "NUM_6", "6", "NUM_7", "7", "NUM_8", "8", "NUM_9", "9", "ALT_LEFT", "L-Alt", "ALT_RIGHT", "R-Alt", "APOSTROPHE", "AT", "BACK", "BACKSLASH", "\\", "C", "CALL", "Call", "CAMERA", "Camera", "CLEAR", "Clear", "COMMA", "DEL", "Delete",
"BACKSPACE", "FORWARD_DEL", "Forward Delete", "DPAD_CENTER", "Center", "DPAD_DOWN", "Down", "DPAD_LEFT", "Left", "DPAD_RIGHT", "Right", "DPAD_UP", "Up", "CENTER", "DOWN", "LEFT", "RIGHT", "UP", "E", "ENDCALL", "End Call", "ENTER", "Enter", "ENVELOPE", "Envelope", "EQUALS", "=", "EXPLORER", "Explorer", "F", "FOCUS", "Focus", "G", "BACKTICK", "`", "H", "HEADSETHOOK", "Headset Hook", "HOME", "Home", "I", "J", "K", "L", "LEFT_BRACKET", "[", "M", "MEDIA_FAST_FORWARD", "Fast Forward", "MEDIA_NEXT", "Next Media", "MEDIA_PLAY_PAUSE",
"Play/Pause", "MEDIA_PREVIOUS", "Prev Media", "MEDIA_REWIND", "Rewind", "MEDIA_STOP", "Stop Media", "MENU", "Menu", "MINUS", "MUTE", "Mute", "NOTIFICATION", "Notification", "NUM", "Num", "O", "P", "PERIOD", "PLUS", "Plus", "POUND", "#", "POWER", "Power", "Q", "R", "RIGHT_BRACKET", "SEARCH", "Search", "SEMICOLON", ";", "SHIFT_LEFT", "L-Shift", "SHIFT_RIGHT", "R-Shift", "SLASH", "SOFT_LEFT", "Soft Left", "SOFT_RIGHT", "Soft Right", "SPACE", "STAR", "*", "SYM", "T", "TAB", "Tab", "U", "UNKNOWN", "Unknown", "V",
"VOLUME_DOWN", "Volume Down", "VOLUME_UP", "Volume Up", "Z", "META_ALT_LEFT_ON", "META_ALT_ON", "META_ALT_RIGHT_ON", "META_SHIFT_LEFT_ON", "META_SHIFT_ON", "META_SHIFT_RIGHT_ON", "META_SYM_ON", "CONTROL_LEFT", "L-Ctrl", "CONTROL_RIGHT", "R-Ctrl", "ESCAPE", "Escape", "END", "End", "INSERT", "Insert", "PAGE_UP", "Page Up", "PAGE_DOWN", "Page Down", "PICTSYMBOLS", "SWITCH_CHARSET", "BUTTON_CIRCLE", "F12", "BUTTON_A", "A Button", "BUTTON_B", "B Button", "BUTTON_C", "C Button", "BUTTON_X", "X Button", "BUTTON_Y",
"Y Button", "BUTTON_Z", "Z Button", "BUTTON_L1", "L1 Button", "BUTTON_R1", "R1 Button", "BUTTON_L2", "L2 Button", "BUTTON_R2", "R2 Button", "BUTTON_THUMBL", "Left Thumb", "BUTTON_THUMBR", "Right Thumb", "BUTTON_START", "BUTTON_SELECT", "Select", "BUTTON_MODE", "Button Mode", "NUMPAD_0", "Numpad 0", "NUMPAD_1", "Numpad 1", "NUMPAD_2", "Numpad 2", "NUMPAD_3", "Numpad 3", "NUMPAD_4", "Numpad 4", "NUMPAD_5", "Numpad 5", "NUMPAD_6", "Numpad 6", "NUMPAD_7", "Numpad 7", "NUMPAD_8", "Numpad 8", "NUMPAD_9", "Numpad 9",
"COLON", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "UNSET", "Unset", "APPLICATION", "Application", "ASTERISK", "CAPS_LOCK", "Caps Lock", "PAUSE", "Pause", "PRINT_SCREEN", "Print Screen", "SCROLL_LOCK", "Scroll Lock", "IndexBufferObject cannot be used after it has been disposed.", "^", "This group does not support quadtrees! Enable quadtrees when creating it.", "Cannot add a null entity!", "Cannot remove a null entity!", "PreviousMatch", "scythe", "scytheglow", "202334", "{Lucine}{face:lucine frown}You\'re late.",
"{Asmus}{face:asmus lookdown}Haven\'t you had enough?", "{Lucine}{face:lucine frown}Not while I\'m still breathing.", "{Lucine}{face:lucine frown}This is what you wanted, right?", "{Asmus}{face:asmus lookleft}You\'re delusional.", "{Lucine}{face:lucine annoyed}Good one.", "{Lucine}{face:lucine smug}Hey, I\'m not the one with a mask.", "{Asmus}{face:asmus lookahead}Do I have to remind you that you tried to have me killed?", "{Lucine}{face:lucine smug}I\'m still trying.", "{Asmus}{face:asmus lookleft}Go figure.",
"{Asmus}{face:asmus lookahead}I\'m just saying you might benefit from having some perspective.", "{Lucine}{face:lucine annoyed}Yeah?", "{Lucine}{face:lucine frustrated}Well, how\'s this for some perspective?", "{Asmus}{face:asmus lookdown}He\'s not coming back, Lucine.", "{Lucine}{face:lucine upset}Because you killed him.", "{Asmus}{face:asmus lookleft}Because you had him attack me. What were you expecting?", "{Asmus}{face:asmus lookahead}It\'s that kind of attitude that got you where you are now.", "{Lucine}{face:lucine frown}And what about your attitude?",
"{Lucine}{face:lucine concerned}All your life, you\'ve wanted to become someone you\'re not.", "{Lucine}{face:lucine concerned}You\'ve been chasing after a crown that\'s too big for your head.", "{Lucine}{face:lucine concerned}You crave the throne your father sits on.", "{Asmus}{face:asmus lookblank}...", "{Lucine}{face:lucine smug}But we both know that already.", "{Lucine}{face:lucine sad}You\'ve come to kill me, haven\'t you?", "{Lucine}{face:lucine frustrated}You want perspective? Fine.", "{Lucine}{face:lucine frown}You\'re a selfish, ignorant egoist.",
"{Lucine}{face:lucine frown}Trust me, I know what that\'s like.", "{Lucine}{face:lucine upset}And if you think for a second I\'ll forgive you for what you\'ve done, you\'re even worse than I am.", "{Lucine}{face:lucine anger}Go now, pray to whatever cursed God spawned you.", "{Asmus}{face:asmus lookdown}I\'m sorry.", "{Lucine}{face:lucine concerned}No... you\'re not.", "{Lucine}{face:lucine concerned}Hey...", "{Lucine}{face:lucine sad}Please...", "{Lucine}{face:lucine sad}Don\'t miss.", "{Asmus}{face:asmus lookblank}Would you say a final prayer to your God?",
"{Lucine}{face:lucine smug}Which one?", "NonCapFSet", "&lc&fb", "&lg&fb", "&ly&fb", "&lr&fb", "&fr", "UCI ", "unknown format: ", "Can\'t invert a singular matrix", "UCI range:", "hcircle", "MirroredRepeat", "ClampToEdge", "Repeat", "faster", "slower", "fast", "slow", "/color", "[#", "reset", "GL_OES_packed_depth_stencil", "GL_EXT_packed_depth_stencil", "Frame buffer couldn\'t be constructed: incomplete attachment", "Frame buffer couldn\'t be constructed: incomplete dimensions", "Frame buffer couldn\'t be constructed: missing attachment",
"Frame buffer couldn\'t be constructed: unsupported combination of formats", "Frame buffer couldn\'t be constructed: unknown error ", "Packed Stencil/Render render buffers are not available on GLES 2.0", "Multiple render targets not available on GLES 2.0", "Depth texture FrameBuffer Attachment not available on GLES 2.0", "Stencil texture FrameBuffer Attachment not available on GLES 2.0", "OES_texture_float", "Float texture FrameBuffer Attachment not available on GLES 2.0", "object cannot be null.", "objects cannot be null.",
"assets", "Loading: {0}", ".png", "jpeg", "jpg", "gif", "bmp", "The last byte in dst ", "The last byte in src ", "[ByteBuffer position=", ", limit=", ", capacity=", ", mark ", " is not set", " at ", "n must be positive", "<SOL>", "No buffer allocated!", "polygons must contain at least 3 points.", "]: ", "Already loaded.", "File is empty.", "padding=", "Invalid padding.", "Missing common header.", "Invalid common header.", "lineHeight=", "Missing: lineHeight", "base=", "Missing: base", "pages=", "Missing additional page definitions.",
".*id=(\\d+)", ".*file=\"?([^\"]+)\"?", "\\\\", "Missing: file", "Page IDs must be indices starting at 0: ", "Invalid page id: ", "kernings ", "char ", " =", "kerning ", "Error loading font file: ", "No glyphs found.", "scaleX cannot be 0.", "scaleY cannot be 0.", "public", "protected", "private", "abstract", "static", "final", "transient", "volatile", "synchronized", "native", "strictfp", "interface", "<EOL>", "u_ambient", "Is", "In", "FILL", "STROKE", "???", "main", "BLACK", "WHITE", "LIGHT_GRAY", "GRAY",
"DARK_GRAY", "BLUE", "NAVY", "ROYAL", "SLATE", "SKY", "CYAN", "TEAL", "GREEN", "ACID", "LIME", "FOREST", "OLIVE", "YELLOW", "GOLD", "GOLDENROD", "ORANGE", "BROWN", "TAN", "BRICK", "RED", "SCARLET", "CORAL", "SALMON", "PINK", "MAGENTA", "PURPLE", "VIOLET", "MAROON", "black", "white", "lightgray", "gray", "darkgray", "blue", "navy", "royal", "slate", "sky", "cyan", "teal", "green", "acid", "lime", "forest", "olive", "yellow", "gold", "goldenrod", "orange", "brown", "tan", "brick", "red", "scarlet", "coral", "salmon",
"pink", "magenta", "purple", "violet", "maroon", "crimson", "orientation", "hexsidelength", "staggeraxis", "staggerindex", "backgroundcolor", "staggered", "tileset", "firstgid", "spacing", "margin", "source", "tileoffset", "image", "Error parsing external tileset.", "tile", "error", "terrain", "probability", "runes", "light", "UCI back reference: ", "BIG_ENDIAN", "LITTLE_ENDIAN", "<DotAllQuant>", "style cannot be null.", "Missing LabelStyle font.", "SKIP at ", " from ", "No default style for type: ", "lucine-side",
"statue-enraged", "lucine-sprint", "lucine-wave-1", "lucine-wave-2", "(", "The specified font must contain at least one texture page.", "Couldn\'t load image \'", "\', file does not exist", "rgba(", "#iterator() cannot be used nested.", "lucine", "asmus", " FPS", "Can\'t have more than 8191 sprites per batch: ", "a_color", "a_mix_color", "u_projTrans", "u_texture", "Out of bounds! Max timer size is ", "!", "SLOWER", "SLOW", "NORMAL", "FAST", "FASTER", "CLEARCOLOR", "ENDCOLOR", "VAR", "sequence: ", "Element ",
" doesn\'t have attribute: ", "Element has no children: ", "=\"", "/>", ">\n", "</", "enabled", "childrenOnly", "IGNORE", "REPLACE", "REPORT", "true", "back reference: ", "<DotQuant>", "Already prepared", "This TextureData implementation does not return a Pixmap", "round", "square", "CI ", "posFSet", "sprites/default.fnt", "\' not supported in TeaVM backend", "Patter is null", "\\Q", "\\E", "\\\\E\\Q", "os.name", "Windows", "Linux", "Mac", "os.arch", "arm", "aarch64", "64", "armv8", "moe.platform.name", "java.runtime.name",
"Android Runtime", "Pixmap", "Custom", "move_x", "move_y", "shoot", "alt", "Unmappable characters of length ", "oversubscribed dynamic bit lengths tree", "incomplete dynamic bit lengths tree", "oversubscribed distance tree", "incomplete distance tree", "empty distance tree with lengths", "oversubscribed literal/length tree", "incomplete literal/length tree", "glGetFloat not supported by GWT WebGL backend", "Can\'t copy pixels to texture", "Can only cope with FloatBuffer and ShortBuffer at the moment", "GL_ARB_framebuffer_object",
"GL_EXT_framebuffer_object", "texture width and height must be square when using mipmapping.", "processor cannot be null", "ease", "jump", "shake", "sick", "wave", "wind", "rainbow", "gradient", "fade", "blink", "index can\'t be > size: ", "None", "SourceOver", "keyboard", "scroll", "c0f4f9", "e75947", "EOI", "buffer not allocated with newUnsafeByteBuffer or already disposed", "key", "mouse", "controller", "json", "javascript", "minimal", "^[a-zA-Z_$][a-zA-Z_$0-9]*$", "^[^\":,}/ ][^:]*$", "^[^\":,{\\[\\]/ ][^}\\],]*$",
"Method not found: io.anuke.arc.util.Timer.schedule(Ljava/lang/Runnable;F)Lio/anuke/arc/util/Timer$Task;", ", #", "cim", "Call prepare() before calling getPixmap()", "This TextureData implementation does not upload data itself", "Either src or dest is null", "java.version", "1.8", "TeaVM", "file.separator", "path.separator", "line.separator", "java.io.tmpdir", "java.vm.version", "user.home", "/tmp", "attribute vec4 a_position;\nattribute vec4 a_color;\nattribute vec2 a_texCoord0;\nuniform mat4 u_projectionViewMatrix;\nvarying vec4 v_color;\nvarying vec2 v_texCoords;\n\nvoid main()\n{\n   v_color = a_color;\n   v_color.a = v_color.a * (255.0/254.0);\n   v_texCoords = a_texCoord0;\n   gl_Position =  u_projectionViewMatrix * a_position;\n}\n",
"#ifdef GL_ES\nprecision mediump float;\n#endif\nvarying vec4 v_color;\nvarying vec2 v_texCoords;\nuniform sampler2D u_texture;\nvoid main(){\n  gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n}", "end must be called before beginCache", "endCache must be called before begin.", "beginCache must be called before endCache.", "If a cache is not the last created, it cannot be redefined with more entries than when it was first created: ", " (", " max)", "beginCache must be called before add.", "Out of vertex space! Size: ",
" Required: ", "end must be called before begin.", "endCache must be called before begin", "u_projectionViewMatrix", "SpriteCache.begin must be called before draw.", "Can\'t set the matrix within begin/end.", "DotAll", "decomposed Hangul syllable:", "classpath", "internal", "external", "absolute", "local", "WordBoundary", "Target buffer of type ", " is not supported", "Nearest", "Linear", "MipMap", "MipMapNearestNearest", "MipMapLinearNearest", "MipMapNearestLinear", "MipMapLinearLinear", "OpenGL", "GLES", "NONE",
"lucine-", "Invalid line: ", "The region \"", "\" does not exist!", "No drawable \'", "\' found.", "If no regions are specified, the font data must have an images path.", "polylines must contain at least 2 points.", "<Unix MultiLine $>", "Inferno", "Unknown Format: ", "Unknown Gdx2DPixmap Format: ", "Intensity", "LuminanceAlpha", "RGB565", "RGBA4444", "RGB888", "RGBA8888", "debug", "info", "warn", "err", "Mesh attempting to access memory outside of the index buffer (count: ", ", offset: ", ", max: ", "Couldn\'t read Pixmap from file \'"]);
jl_String.prototype.toString = function() {
    return $rt_ustr(this);
};
jl_String.prototype.valueOf = jl_String.prototype.toString;
jl_Object.prototype.toString = function() {
    return $rt_ustr(jl_Object_toString(this));
};
jl_Object.prototype.__teavm_class__ = function() {
    return $dbg_class(this);
};
function Long_eq(a, b) {
    return a.hi === b.hi && a.lo === b.lo;
}
function Long_ne(a, b) {
    return a.hi !== b.hi || a.lo !== b.lo;
}
function Long_gt(a, b) {
    if (a.hi < b.hi) {
        return false;
    }
    if (a.hi > b.hi) {
        return true;
    }
    var x = a.lo >>> 1;
    var y = b.lo >>> 1;
    if (x !== y) {
        return x > y;
    }
    return (a.lo & 1) > (b.lo & 1);
}
function Long_ge(a, b) {
    if (a.hi < b.hi) {
        return false;
    }
    if (a.hi > b.hi) {
        return true;
    }
    var x = a.lo >>> 1;
    var y = b.lo >>> 1;
    if (x !== y) {
        return x >= y;
    }
    return (a.lo & 1) >= (b.lo & 1);
}
function Long_lt(a, b) {
    if (a.hi > b.hi) {
        return false;
    }
    if (a.hi < b.hi) {
        return true;
    }
    var x = a.lo >>> 1;
    var y = b.lo >>> 1;
    if (x !== y) {
        return x < y;
    }
    return (a.lo & 1) < (b.lo & 1);
}
function Long_le(a, b) {
    if (a.hi > b.hi) {
        return false;
    }
    if (a.hi < b.hi) {
        return true;
    }
    var x = a.lo >>> 1;
    var y = b.lo >>> 1;
    if (x !== y) {
        return x <= y;
    }
    return (a.lo & 1) <= (b.lo & 1);
}
function Long_add(a, b) {
    if (a.hi === a.lo >> 31 && b.hi === b.lo >> 31) {
        return Long_fromNumber(a.lo + b.lo);
    } else if (Math.abs(a.hi) < Long_MAX_NORMAL && Math.abs(b.hi) < Long_MAX_NORMAL) {
        return Long_fromNumber(Long_toNumber(a) + Long_toNumber(b));
    }
    var a_lolo = a.lo & 0xFFFF;
    var a_lohi = a.lo >>> 16;
    var a_hilo = a.hi & 0xFFFF;
    var a_hihi = a.hi >>> 16;
    var b_lolo = b.lo & 0xFFFF;
    var b_lohi = b.lo >>> 16;
    var b_hilo = b.hi & 0xFFFF;
    var b_hihi = b.hi >>> 16;
    var lolo = a_lolo + b_lolo | 0;
    var lohi = a_lohi + b_lohi + (lolo >> 16) | 0;
    var hilo = a_hilo + b_hilo + (lohi >> 16) | 0;
    var hihi = a_hihi + b_hihi + (hilo >> 16) | 0;
    return new Long(lolo & 0xFFFF | (lohi & 0xFFFF) << 16, hilo & 0xFFFF | (hihi & 0xFFFF) << 16);
}
function Long_inc(a) {
    var lo = a.lo + 1 | 0;
    var hi = a.hi;
    if (lo === 0) {
        hi = hi + 1 | 0;
    }
    return new Long(lo, hi);
}
function Long_dec(a) {
    var lo = a.lo - 1 | 0;
    var hi = a.hi;
    if (lo ===  -1) {
        hi = hi - 1 | 0;
    }
    return new Long(lo, hi);
}
function Long_neg(a) {
    return Long_inc(new Long(a.lo ^ 0xFFFFFFFF, a.hi ^ 0xFFFFFFFF));
}
function Long_sub(a, b) {
    if (a.hi === a.lo >> 31 && b.hi === b.lo >> 31) {
        return Long_fromNumber(a.lo - b.lo);
    }
    var a_lolo = a.lo & 0xFFFF;
    var a_lohi = a.lo >>> 16;
    var a_hilo = a.hi & 0xFFFF;
    var a_hihi = a.hi >>> 16;
    var b_lolo = b.lo & 0xFFFF;
    var b_lohi = b.lo >>> 16;
    var b_hilo = b.hi & 0xFFFF;
    var b_hihi = b.hi >>> 16;
    var lolo = a_lolo - b_lolo | 0;
    var lohi = a_lohi - b_lohi + (lolo >> 16) | 0;
    var hilo = a_hilo - b_hilo + (lohi >> 16) | 0;
    var hihi = a_hihi - b_hihi + (hilo >> 16) | 0;
    return new Long(lolo & 0xFFFF | (lohi & 0xFFFF) << 16, hilo & 0xFFFF | (hihi & 0xFFFF) << 16);
}
function Long_compare(a, b) {
    var r = a.hi - b.hi;
    if (r !== 0) {
        return r;
    }
    r = (a.lo >>> 1) - (b.lo >>> 1);
    if (r !== 0) {
        return r;
    }
    return (a.lo & 1) - (b.lo & 1);
}
function Long_isPositive(a) {
    return (a.hi & 0x80000000) === 0;
}
function Long_isNegative(a) {
    return (a.hi & 0x80000000) !== 0;
}
function Long_mul(a, b) {
    var positive = Long_isNegative(a) === Long_isNegative(b);
    if (Long_isNegative(a)) {
        a = Long_neg(a);
    }
    if (Long_isNegative(b)) {
        b = Long_neg(b);
    }
    var a_lolo = a.lo & 0xFFFF;
    var a_lohi = a.lo >>> 16;
    var a_hilo = a.hi & 0xFFFF;
    var a_hihi = a.hi >>> 16;
    var b_lolo = b.lo & 0xFFFF;
    var b_lohi = b.lo >>> 16;
    var b_hilo = b.hi & 0xFFFF;
    var b_hihi = b.hi >>> 16;
    var lolo = 0;
    var lohi = 0;
    var hilo = 0;
    var hihi = 0;
    lolo = a_lolo * b_lolo | 0;
    lohi = lolo >>> 16;
    lohi = (lohi & 0xFFFF) + a_lohi * b_lolo | 0;
    hilo = hilo + (lohi >>> 16) | 0;
    lohi = (lohi & 0xFFFF) + a_lolo * b_lohi | 0;
    hilo = hilo + (lohi >>> 16) | 0;
    hihi = hilo >>> 16;
    hilo = (hilo & 0xFFFF) + a_hilo * b_lolo | 0;
    hihi = hihi + (hilo >>> 16) | 0;
    hilo = (hilo & 0xFFFF) + a_lohi * b_lohi | 0;
    hihi = hihi + (hilo >>> 16) | 0;
    hilo = (hilo & 0xFFFF) + a_lolo * b_hilo | 0;
    hihi = hihi + (hilo >>> 16) | 0;
    hihi = hihi + a_hihi * b_lolo + a_hilo * b_lohi + a_lohi * b_hilo + a_lolo * b_hihi | 0;
    var result = new Long(lolo & 0xFFFF | lohi << 16, hilo & 0xFFFF | hihi << 16);
    return positive ? result : Long_neg(result);
}
function Long_div(a, b) {
    if (Math.abs(a.hi) < Long_MAX_NORMAL && Math.abs(b.hi) < Long_MAX_NORMAL) {
        return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
    }
    return (Long_divRem(a, b))[0];
}
function Long_udiv(a, b) {
    if (a.hi >= 0 && a.hi < Long_MAX_NORMAL && b.hi >= 0 && b.hi < Long_MAX_NORMAL) {
        return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
    }
    return (Long_udivRem(a, b))[0];
}
function Long_rem(a, b) {
    if (Math.abs(a.hi) < Long_MAX_NORMAL && Math.abs(b.hi) < Long_MAX_NORMAL) {
        return Long_fromNumber(Long_toNumber(a) % Long_toNumber(b));
    }
    return (Long_divRem(a, b))[1];
}
function Long_urem(a, b) {
    if (a.hi >= 0 && a.hi < Long_MAX_NORMAL && b.hi >= 0 && b.hi < Long_MAX_NORMAL) {
        return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
    }
    return (Long_udivRem(a, b))[1];
}
function Long_divRem(a, b) {
    if (b.lo === 0 && b.hi === 0) {
        throw new Error("Division by zero");
    }
    var positive = Long_isNegative(a) === Long_isNegative(b);
    if (Long_isNegative(a)) {
        a = Long_neg(a);
    }
    if (Long_isNegative(b)) {
        b = Long_neg(b);
    }
    a = new LongInt(a.lo, a.hi, 0);
    b = new LongInt(b.lo, b.hi, 0);
    var q = LongInt_div(a, b);
    a = new Long(a.lo, a.hi);
    q = new Long(q.lo, q.hi);
    return positive ? [q, a] : [Long_neg(q), Long_neg(a)];
}
function Long_udivRem(a, b) {
    if (b.lo === 0 && b.hi === 0) {
        throw new Error("Division by zero");
    }
    a = new LongInt(a.lo, a.hi, 0);
    b = new LongInt(b.lo, b.hi, 0);
    var q = LongInt_div(a, b);
    a = new Long(a.lo, a.hi);
    q = new Long(q.lo, q.hi);
    return [q, a];
}
function Long_shiftLeft16(a) {
    return new Long(a.lo << 16, a.lo >>> 16 | a.hi << 16);
}
function Long_shiftRight16(a) {
    return new Long(a.lo >>> 16 | a.hi << 16, a.hi >>> 16);
}
function Long_and(a, b) {
    return new Long(a.lo & b.lo, a.hi & b.hi);
}
function Long_or(a, b) {
    return new Long(a.lo | b.lo, a.hi | b.hi);
}
function Long_xor(a, b) {
    return new Long(a.lo ^ b.lo, a.hi ^ b.hi);
}
function Long_shl(a, b) {
    b &= 63;
    if (b === 0) {
        return a;
    } else if (b < 32) {
        return new Long(a.lo << b, a.lo >>> 32 - b | a.hi << b);
    } else if (b === 32) {
        return new Long(0, a.lo);
    } else {
        return new Long(0, a.lo << b - 32);
    }
}
function Long_shr(a, b) {
    b &= 63;
    if (b === 0) {
        return a;
    } else if (b < 32) {
        return new Long(a.lo >>> b | a.hi << 32 - b, a.hi >> b);
    } else if (b === 32) {
        return new Long(a.hi, a.hi >> 31);
    } else {
        return new Long(a.hi >> b - 32, a.hi >> 31);
    }
}
function Long_shru(a, b) {
    b &= 63;
    if (b === 0) {
        return a;
    } else if (b < 32) {
        return new Long(a.lo >>> b | a.hi << 32 - b, a.hi >>> b);
    } else if (b === 32) {
        return new Long(a.hi, 0);
    } else {
        return new Long(a.hi >>> b - 32, 0);
    }
}
function LongInt(lo, hi, sup) {
    this.lo = lo;
    this.hi = hi;
    this.sup = sup;
}
function LongInt_mul(a, b) {
    var a_lolo = (a.lo & 0xFFFF) * b | 0;
    var a_lohi = (a.lo >>> 16) * b | 0;
    var a_hilo = (a.hi & 0xFFFF) * b | 0;
    var a_hihi = (a.hi >>> 16) * b | 0;
    var sup = a.sup * b | 0;
    a_lohi = a_lohi + (a_lolo >>> 16) | 0;
    a_hilo = a_hilo + (a_lohi >>> 16) | 0;
    a_hihi = a_hihi + (a_hilo >>> 16) | 0;
    sup = sup + (a_hihi >>> 16) | 0;
    a.lo = a_lolo & 0xFFFF | a_lohi << 16;
    a.hi = a_hilo & 0xFFFF | a_hihi << 16;
    a.sup = sup & 0xFFFF;
}
function LongInt_sub(a, b) {
    var a_lolo = a.lo & 0xFFFF;
    var a_lohi = a.lo >>> 16;
    var a_hilo = a.hi & 0xFFFF;
    var a_hihi = a.hi >>> 16;
    var b_lolo = b.lo & 0xFFFF;
    var b_lohi = b.lo >>> 16;
    var b_hilo = b.hi & 0xFFFF;
    var b_hihi = b.hi >>> 16;
    a_lolo = a_lolo - b_lolo | 0;
    a_lohi = a_lohi - b_lohi + (a_lolo >> 16) | 0;
    a_hilo = a_hilo - b_hilo + (a_lohi >> 16) | 0;
    a_hihi = a_hihi - b_hihi + (a_hilo >> 16) | 0;
    var sup = a.sup - b.sup + (a_hihi >> 16) | 0;
    a.lo = a_lolo & 0xFFFF | a_lohi << 16;
    a.hi = a_hilo & 0xFFFF | a_hihi << 16;
    a.sup = sup;
}
function LongInt_add(a, b) {
    var a_lolo = a.lo & 0xFFFF;
    var a_lohi = a.lo >>> 16;
    var a_hilo = a.hi & 0xFFFF;
    var a_hihi = a.hi >>> 16;
    var b_lolo = b.lo & 0xFFFF;
    var b_lohi = b.lo >>> 16;
    var b_hilo = b.hi & 0xFFFF;
    var b_hihi = b.hi >>> 16;
    a_lolo = a_lolo + b_lolo | 0;
    a_lohi = a_lohi + b_lohi + (a_lolo >> 16) | 0;
    a_hilo = a_hilo + b_hilo + (a_lohi >> 16) | 0;
    a_hihi = a_hihi + b_hihi + (a_hilo >> 16) | 0;
    var sup = a.sup + b.sup + (a_hihi >> 16) | 0;
    a.lo = a_lolo & 0xFFFF | a_lohi << 16;
    a.hi = a_hilo & 0xFFFF | a_hihi << 16;
    a.sup = sup;
}
function LongInt_inc(a) {
    a.lo = a.lo + 1 | 0;
    if (a.lo === 0) {
        a.hi = a.hi + 1 | 0;
        if (a.hi === 0) {
            a.sup = a.sup + 1 & 0xFFFF;
        }
    }
}
function LongInt_dec(a) {
    a.lo = a.lo - 1 | 0;
    if (a.lo ===  -1) {
        a.hi = a.hi - 1 | 0;
        if (a.hi ===  -1) {
            a.sup = a.sup - 1 & 0xFFFF;
        }
    }
}
function LongInt_ucompare(a, b) {
    var r = a.sup - b.sup;
    if (r !== 0) {
        return r;
    }
    r = (a.hi >>> 1) - (b.hi >>> 1);
    if (r !== 0) {
        return r;
    }
    r = (a.hi & 1) - (b.hi & 1);
    if (r !== 0) {
        return r;
    }
    r = (a.lo >>> 1) - (b.lo >>> 1);
    if (r !== 0) {
        return r;
    }
    return (a.lo & 1) - (b.lo & 1);
}
function LongInt_numOfLeadingZeroBits(a) {
    var n = 0;
    var d = 16;
    while (d > 0) {
        if (a >>> d !== 0) {
            a >>>= d;
            n = n + d | 0;
        }
        d = d / 2 | 0;
    }
    return 31 - n;
}
function LongInt_shl(a, b) {
    if (b === 0) {
        return;
    }
    if (b < 32) {
        a.sup = (a.hi >>> 32 - b | a.sup << b) & 0xFFFF;
        a.hi = a.lo >>> 32 - b | a.hi << b;
        a.lo <<= b;
    } else if (b === 32) {
        a.sup = a.hi & 0xFFFF;
        a.hi = a.lo;
        a.lo = 0;
    } else if (b < 64) {
        a.sup = (a.lo >>> 64 - b | a.hi << b - 32) & 0xFFFF;
        a.hi = a.lo << b;
        a.lo = 0;
    } else if (b === 64) {
        a.sup = a.lo & 0xFFFF;
        a.hi = 0;
        a.lo = 0;
    } else {
        a.sup = a.lo << b - 64 & 0xFFFF;
        a.hi = 0;
        a.lo = 0;
    }
}
function LongInt_shr(a, b) {
    if (b === 0) {
        return;
    }
    if (b === 32) {
        a.lo = a.hi;
        a.hi = a.sup;
        a.sup = 0;
    } else if (b < 32) {
        a.lo = a.lo >>> b | a.hi << 32 - b;
        a.hi = a.hi >>> b | a.sup << 32 - b;
        a.sup >>>= b;
    } else if (b === 64) {
        a.lo = a.sup;
        a.hi = 0;
        a.sup = 0;
    } else if (b < 64) {
        a.lo = a.hi >>> b - 32 | a.sup << 64 - b;
        a.hi = a.sup >>> b - 32;
        a.sup = 0;
    } else {
        a.lo = a.sup >>> b - 64;
        a.hi = 0;
        a.sup = 0;
    }
}
function LongInt_copy(a) {
    return new LongInt(a.lo, a.hi, a.sup);
}
function LongInt_div(a, b) {
    var bits = b.hi !== 0 ? LongInt_numOfLeadingZeroBits(b.hi) : LongInt_numOfLeadingZeroBits(b.lo) + 32;
    var sz = 1 + (bits / 16 | 0);
    var dividentBits = bits % 16;
    LongInt_shl(b, bits);
    LongInt_shl(a, dividentBits);
    var q = new LongInt(0, 0, 0);
    while (sz-- > 0) {
        LongInt_shl(q, 16);
        var digitA = (a.hi >>> 16) + 0x10000 * a.sup;
        var digitB = b.hi >>> 16;
        var digit = digitA / digitB | 0;
        var t = LongInt_copy(b);
        LongInt_mul(t, digit);
        if (LongInt_ucompare(t, a) >= 0) {
            while (LongInt_ucompare(t, a) > 0) {
                LongInt_sub(t, b);
                 --digit;
            }
        } else {
            while (true) {
                var nextT = LongInt_copy(t);
                LongInt_add(nextT, b);
                if (LongInt_ucompare(nextT, a) > 0) {
                    break;
                }
                t = nextT;
                ++digit;
            }
        }
        LongInt_sub(a, t);
        q.lo |= digit;
        LongInt_shl(a, 16);
    }
    LongInt_shr(a, bits + 16);
    return q;
}
function TeaVMThread(runner) {
    this.status = 3;
    this.stack = [];
    this.suspendCallback = null;
    this.runner = runner;
    this.attribute = null;
    this.completeCallback = null;
}
TeaVMThread.prototype.push = function() {
    for (var i = 0;i < arguments.length;++i) {
        this.stack.push(arguments[i]);
    }
    return this;
};
TeaVMThread.prototype.s = TeaVMThread.prototype.push;
TeaVMThread.prototype.pop = function() {
    return this.stack.pop();
};
TeaVMThread.prototype.l = TeaVMThread.prototype.pop;
TeaVMThread.prototype.isResuming = function() {
    return this.status === 2;
};
TeaVMThread.prototype.isSuspending = function() {
    return this.status === 1;
};
TeaVMThread.prototype.suspend = function(callback) {
    this.suspendCallback = callback;
    this.status = 1;
};
TeaVMThread.prototype.start = function(callback) {
    if (this.status !== 3) {
        throw new Error("Thread already started");
    }
    if ($rt_currentNativeThread !== null) {
        throw new Error("Another thread is running");
    }
    this.status = 0;
    this.completeCallback = callback ? callback : function(result) {
        if (result instanceof Error) {
            throw result;
        }
    };
    this.run();
};
TeaVMThread.prototype.resume = function() {
    if ($rt_currentNativeThread !== null) {
        throw new Error("Another thread is running");
    }
    this.status = 2;
    this.run();
};
TeaVMThread.prototype.run = function() {
    $rt_currentNativeThread = this;
    var result;
    try {
        result = this.runner();
    } catch (e){
        result = e;
    } finally {
        $rt_currentNativeThread = null;
    }
    if (this.suspendCallback !== null) {
        var self = this;
        var callback = this.suspendCallback;
        this.suspendCallback = null;
        callback(function() {
            self.resume();
        });
    } else if (this.status === 0) {
        this.completeCallback(result);
    }
};
function $rt_suspending() {
    var thread = $rt_nativeThread();
    return thread != null && thread.isSuspending();
}
function $rt_resuming() {
    var thread = $rt_nativeThread();
    return thread != null && thread.isResuming();
}
function $rt_suspend(callback) {
    var nativeThread = $rt_nativeThread();
    if (nativeThread === null) {
        throw new Error("Suspension point reached from non-threading context (perhaps, from native JS method).");
    }
    return nativeThread.suspend(callback);
}
function $rt_startThread(runner, callback) {
    (new TeaVMThread(runner)).start(callback);
}
var $rt_currentNativeThread = null;
function $rt_nativeThread() {
    return $rt_currentNativeThread;
}
function $rt_invalidPointer() {
    throw new Error("Invalid recorded state");
}
main = $rt_mainStarter(it_TeaVMLauncher_main);
(function() {
    var c;
    c = iaabt_TeaFileLoader$LoadImageTask.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = iaabt_TeaInput.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = iaabt_TeaApplication$delayedStep$lambda$_3_0.prototype;
    c.onAnimationFrame = c.$onAnimationFrame$exported$0;
    c = iaabt_TeaFileLoader$LoadFileTask.prototype;
    c.stateChanged = c.$stateChanged$exported$0;
    c = iaabt_TeaFileLoader$loadFiles$lambda$_1_0.prototype;
    c.stateChanged = c.$stateChanged$exported$0;
    c = otjb_Window.prototype;
    c.dispatchEvent = c.$dispatchEvent$exported$4;
    c.addEventListener = c.$addEventListener$exported$0;
    c.removeEventListener = c.$removeEventListener$exported$1;
    c.getLength = c.$getLength$exported$5;
    c.get = c.$get$exported$2;
    c.addEventListener = c.$addEventListener$exported$6;
    c.removeEventListener = c.$removeEventListener$exported$3;
})();
})();
